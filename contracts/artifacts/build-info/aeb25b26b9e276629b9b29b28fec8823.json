{
	"id": "aeb25b26b9e276629b9b29b28fec8823",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/DTiket_flattened.sol": {
				"content": "\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/access/Ownable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n\n// File: @openzeppelin/contracts/security/Pausable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Address.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Address.sol)\n\npragma solidity ^0.8.1;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     *\n     * Furthermore, `isContract` will also return true if the target contract within\n     * the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n     * which only has an effect at the end of a transaction.\n     * ====\n     *\n     * [IMPORTANT]\n     * ====\n     * You shouldn't rely on `isContract` to protect against flash loan attacks!\n     *\n     * Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n     * like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n     * constructor.\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize/address.code.length, which returns 0\n        // for contracts in construction, since the code is only stored at the end\n        // of the constructor execution.\n\n        return account.code.length > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(\n        address target,\n        bytes memory data,\n        uint256 value,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(\n        address target,\n        bytes memory data,\n        string memory errorMessage\n    ) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n     * the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n     *\n     * _Available since v4.8._\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal view returns (bytes memory) {\n        if (success) {\n            if (returndata.length == 0) {\n                // only check isContract if the call was successful and the return data is empty\n                // otherwise we already know that it was a contract\n                require(isContract(target), \"Address: call to non-contract\");\n            }\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n     * revert reason or using the provided one.\n     *\n     * _Available since v4.3._\n     */\n    function verifyCallResult(\n        bool success,\n        bytes memory returndata,\n        string memory errorMessage\n    ) internal pure returns (bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            _revert(returndata, errorMessage);\n        }\n    }\n\n    function _revert(bytes memory returndata, string memory errorMessage) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert(errorMessage);\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v4.5.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev _Available since v3.1._\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts v4.4.1 (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.0;\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n *\n * _Available since v3.1._\n */\ncontract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {\n    using Address for address;\n\n    // Mapping from token ID to account balances\n    mapping(uint256 => mapping(address => uint256)) private _balances;\n\n    // Mapping from account to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256) public view virtual override returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {\n        require(account != address(0), \"ERC1155: address zero is not a valid owner\");\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual override returns (uint256[] memory) {\n        require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\");\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts[i], ids[i]);\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeTransferFrom(from, to, id, amount, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) public virtual override {\n        require(\n            from == _msgSender() || isApprovedForAll(from, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n        _safeBatchTransferFrom(from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n        _balances[id][to] += amount;\n\n        emit TransferSingle(operator, from, to, id, amount);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n        require(to != address(0), \"ERC1155: transfer to the zero address\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n            _balances[id][to] += amount;\n        }\n\n        emit TransferBatch(operator, from, to, ids, amounts);\n\n        _afterTokenTransfer(operator, from, to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the amounts in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _balances[id][to] += amount;\n        emit TransferSingle(operator, address(0), to, id, amount);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {\n        require(to != address(0), \"ERC1155: mint to the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            _balances[ids[i]][to] += amounts[i];\n        }\n\n        emit TransferBatch(operator, address(0), to, ids, amounts);\n\n        _afterTokenTransfer(operator, address(0), to, ids, amounts, data);\n\n        _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens of token type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `amount` tokens of token type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 amount) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n\n        address operator = _msgSender();\n        uint256[] memory ids = _asSingletonArray(id);\n        uint256[] memory amounts = _asSingletonArray(amount);\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        uint256 fromBalance = _balances[id][from];\n        require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n        unchecked {\n            _balances[id][from] = fromBalance - amount;\n        }\n\n        emit TransferSingle(operator, from, address(0), id, amount);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {\n        require(from != address(0), \"ERC1155: burn from the zero address\");\n        require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\");\n\n        address operator = _msgSender();\n\n        _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n\n        for (uint256 i = 0; i < ids.length; i++) {\n            uint256 id = ids[i];\n            uint256 amount = amounts[i];\n\n            uint256 fromBalance = _balances[id][from];\n            require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\");\n            unchecked {\n                _balances[id][from] = fromBalance - amount;\n            }\n        }\n\n        emit TransferBatch(operator, from, address(0), ids, amounts);\n\n        _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        require(owner != operator, \"ERC1155: setting approval status for self\");\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Hook that is called before any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `ids` and `amounts` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any token transfer. This includes minting\n     * and burning, as well as batched variants.\n     *\n     * The same hook is called on both single and batched variants. For single\n     * transfers, the length of the `id` and `amount` arrays will be 1.\n     *\n     * Calling conditions (for each `id` and `amount` pair):\n     *\n     * - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * of token type `id` will be  transferred to `to`.\n     * - When `from` is zero, `amount` tokens of token type `id` will be minted\n     * for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n     * will be burned.\n     * - `from` and `to` are never both zero.\n     * - `ids` and `amounts` have the same, non-zero length.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) internal virtual {}\n\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 amount,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory amounts,\n        bytes memory data\n    ) private {\n        if (to.isContract()) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    revert(\"ERC1155: ERC1155Receiver rejected tokens\");\n                }\n            } catch Error(string memory reason) {\n                revert(reason);\n            } catch {\n                revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\");\n            }\n        }\n    }\n\n    function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {\n        uint256[] memory array = new uint256[](1);\n        array[0] = element;\n\n        return array;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/ERC1155Burnable.sol\n\n\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/extensions/ERC1155Burnable.sol)\n\npragma solidity ^0.8.0;\n\n\n/**\n * @dev Extension of {ERC1155} that allows token holders to destroy both their\n * own tokens and those that they have been approved to use.\n *\n * _Available since v3.1._\n */\nabstract contract ERC1155Burnable is ERC1155 {\n    function burn(address account, uint256 id, uint256 value) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burn(account, id, value);\n    }\n\n    function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {\n        require(\n            account == _msgSender() || isApprovedForAll(account, _msgSender()),\n            \"ERC1155: caller is not token owner or approved\"\n        );\n\n        _burnBatch(account, ids, values);\n    }\n}\n\n// File: contracts/DTiket.sol\n\n\npragma solidity ^0.8.9;\n\n\n\n\n\ncontract DTiket is ERC1155, Pausable, Ownable, ERC1155Burnable {\n    constructor() ERC1155(\"DT\") {}\n\n    function pause() public onlyOwner {\n        _pause();\n    }\n\n    function unpause() public onlyOwner {\n        _unpause();\n    }\n    function burn(address _ticketUser, uint96 tokenId, uint256 amount) public onlyOwner {\n        _burn(_ticketUser, tokenId, amount);\n    }\n    function mint(address account, uint256 id, uint256 amount, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mint(account, id, amount, data);\n    }\n\n    function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        public\n        onlyOwner\n    {\n        _mintBatch(to, ids, amounts, data);\n    }\n\n    function _beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)\n        internal\n        whenNotPaused\n        override\n    {\n        super._beforeTokenTransfer(operator, from, to, ids, amounts, data);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/DTiket_flattened.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DTiket_flattened.sol\":6238:15407  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DTiket_flattened.sol\":6238:15407  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203aaf08fdd4312735c095b59586b47e336c2f737baebc934bc95c467ce404a75964736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203aaf08fdd4312735c095b59586b47e336c2f737baebc934bc95c467ce404a75964736f6c63430008120033",
							"opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xAF ADDMOD REVERT 0xD4 BALANCE 0x27 CALLDATALOAD 0xC0 SWAP6 0xB5 SWAP6 DUP7 0xB4 PUSH31 0x336C2F737BAEBC934BC95C467CE404A75964736F6C63430008120033000000 ",
							"sourceMap": "6238:9169:0:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;6238:9169:0;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203aaf08fdd4312735c095b59586b47e336c2f737baebc934bc95c467ce404a75964736f6c63430008120033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE 0xAF ADDMOD REVERT 0xD4 BALANCE 0x27 CALLDATALOAD 0xC0 SWAP6 0xB5 SWAP6 DUP7 0xB4 PUSH31 0x336C2F737BAEBC934BC95C467CE404A75964736F6C63430008120033000000 ",
							"sourceMap": "6238:9169:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "103",
								"totalCost": "17303"
							},
							"internal": {
								"_revert(bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionDelegateCall(address,bytes memory,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 6238,
									"end": 15407,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203aaf08fdd4312735c095b59586b47e336c2f737baebc934bc95c467ce404a75964736f6c63430008120033",
									".code": [
										{
											"begin": 6238,
											"end": 15407,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6238,
											"end": 15407,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/DTiket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"Address\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"DTiket": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_ticketUser",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "tokenId",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "mintBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DTiket_flattened.sol\":42529:43556  contract DTiket is ERC1155, Pausable, Ownable, ERC1155Burnable {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DTiket_flattened.sol\":42598:42628  constructor() ERC1155(\"DT\") {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/DTiket_flattened.sol\":25421:25483  constructor(string memory uri_) {... */\n  0x40\n  dup1\n  mload\n  dup1\n  dup3\n  add\n  swap1\n  swap2\n  mstore\n  0x02\n  dup2\n  mstore\n  shl(0xf2, 0x1115)\n  0x20\n  dup3\n  add\n  mstore\n    /* \"contracts/DTiket_flattened.sol\":25463:25476  _setURI(uri_) */\n  tag_7\n    /* \"contracts/DTiket_flattened.sol\":25421:25483  constructor(string memory uri_) {... */\n  dup2\n    /* \"contracts/DTiket_flattened.sol\":25463:25470  _setURI */\n  tag_8\n    /* \"contracts/DTiket_flattened.sol\":25463:25476  _setURI(uri_) */\n  jump\t// in\ntag_7:\n  pop\n    /* \"contracts/DTiket_flattened.sol\":4465:4472  _paused */\n  0x03\n    /* \"contracts/DTiket_flattened.sol\":4465:4480  _paused = false */\n  dup1\n  sload\n  not(0xff)\n  and\n  swap1\n  sstore\n    /* \"contracts/DTiket_flattened.sol\":1794:1826  _transferOwnership(_msgSender()) */\n  tag_11\n    /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n  caller\n    /* \"contracts/DTiket_flattened.sol\":1794:1812  _transferOwnership */\n  tag_14\n    /* \"contracts/DTiket_flattened.sol\":1794:1826  _transferOwnership(_msgSender()) */\n  jump\t// in\ntag_11:\n    /* \"contracts/DTiket_flattened.sol\":42529:43556  contract DTiket is ERC1155, Pausable, Ownable, ERC1155Burnable {... */\n  jump(tag_27)\n    /* \"contracts/DTiket_flattened.sol\":32463:32549  function _setURI(string memory newuri) internal virtual {... */\ntag_8:\n    /* \"contracts/DTiket_flattened.sol\":32529:32533  _uri */\n  0x02\n    /* \"contracts/DTiket_flattened.sol\":32529:32542  _uri = newuri */\n  tag_18\n    /* \"contracts/DTiket_flattened.sol\":32536:32542  newuri */\n  dup3\n    /* \"contracts/DTiket_flattened.sol\":32529:32533  _uri */\n  dup3\n    /* \"contracts/DTiket_flattened.sol\":32529:32542  _uri = newuri */\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n    /* \"contracts/DTiket_flattened.sol\":32463:32549  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/DTiket_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\ntag_14:\n    /* \"contracts/DTiket_flattened.sol\":3376:3382  _owner */\n  0x03\n  dup1\n  sload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"contracts/DTiket_flattened.sol\":3392:3409  _owner = newOwner */\n  dup4\n  dup2\n  and\n    /* \"contracts/DTiket_flattened.sol\":3376:3382  _owner */\n  0x0100\n    /* \"contracts/DTiket_flattened.sol\":3392:3409  _owner = newOwner */\n  dup2\n  dup2\n  mul\n  not(sub(shl(0xa8, 0x01), 0x0100))\n  dup6\n  and\n  or\n  swap1\n  swap5\n  sstore\n    /* \"contracts/DTiket_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n  mload(0x40)\n    /* \"contracts/DTiket_flattened.sol\":3376:3382  _owner */\n  swap4\n  swap1\n  swap3\n  div\n  and\n  swap2\n  dup3\n  swap1\n    /* \"contracts/DTiket_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"contracts/DTiket_flattened.sol\":3357:3373  address oldOwner */\n  0x00\n  swap1\n    /* \"contracts/DTiket_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n  log3\n    /* \"contracts/DTiket_flattened.sol\":3347:3471  {... */\n  pop\n    /* \"contracts/DTiket_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_22:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:526   */\ntag_23:\n    /* \"#utility.yul\":225:226   */\n  0x01\n    /* \"#utility.yul\":221:233   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":268:280   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":289:350   */\n  tag_30\n  jumpi\n    /* \"#utility.yul\":343:347   */\n  0x7f\n    /* \"#utility.yul\":335:341   */\n  dup3\n    /* \"#utility.yul\":331:348   */\n  and\n    /* \"#utility.yul\":321:348   */\n  swap2\n  pop\n    /* \"#utility.yul\":289:350   */\ntag_30:\n    /* \"#utility.yul\":396:398   */\n  0x20\n    /* \"#utility.yul\":388:394   */\n  dup3\n    /* \"#utility.yul\":385:399   */\n  lt\n    /* \"#utility.yul\":365:383   */\n  dup2\n    /* \"#utility.yul\":362:400   */\n  sub\n    /* \"#utility.yul\":359:520   */\n  tag_31\n  jumpi\n    /* \"#utility.yul\":442:452   */\n  0x4e487b71\n    /* \"#utility.yul\":437:440   */\n  0xe0\n    /* \"#utility.yul\":433:453   */\n  shl\n    /* \"#utility.yul\":430:431   */\n  0x00\n    /* \"#utility.yul\":423:454   */\n  mstore\n    /* \"#utility.yul\":477:481   */\n  0x22\n    /* \"#utility.yul\":474:475   */\n  0x04\n    /* \"#utility.yul\":467:482   */\n  mstore\n    /* \"#utility.yul\":505:509   */\n  0x24\n    /* \"#utility.yul\":502:503   */\n  0x00\n    /* \"#utility.yul\":495:510   */\n  revert\n    /* \"#utility.yul\":359:520   */\ntag_31:\n  pop\n    /* \"#utility.yul\":146:526   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":657:1202   */\ntag_25:\n    /* \"#utility.yul\":759:761   */\n  0x1f\n    /* \"#utility.yul\":754:757   */\n  dup3\n    /* \"#utility.yul\":751:762   */\n  gt\n    /* \"#utility.yul\":748:1196   */\n  iszero\n  tag_34\n  jumpi\n    /* \"#utility.yul\":795:796   */\n  0x00\n    /* \"#utility.yul\":820:825   */\n  dup2\n    /* \"#utility.yul\":816:818   */\n  dup2\n    /* \"#utility.yul\":809:826   */\n  mstore\n    /* \"#utility.yul\":865:869   */\n  0x20\n    /* \"#utility.yul\":861:863   */\n  dup2\n    /* \"#utility.yul\":851:870   */\n  keccak256\n    /* \"#utility.yul\":935:937   */\n  0x1f\n    /* \"#utility.yul\":923:933   */\n  dup6\n    /* \"#utility.yul\":919:938   */\n  add\n    /* \"#utility.yul\":916:917   */\n  0x05\n    /* \"#utility.yul\":912:939   */\n  shr\n    /* \"#utility.yul\":906:910   */\n  dup2\n    /* \"#utility.yul\":902:940   */\n  add\n    /* \"#utility.yul\":971:975   */\n  0x20\n    /* \"#utility.yul\":959:969   */\n  dup7\n    /* \"#utility.yul\":956:976   */\n  lt\n    /* \"#utility.yul\":953:1000   */\n  iszero\n  tag_35\n  jumpi\n  pop\n    /* \"#utility.yul\":994:998   */\n  dup1\n    /* \"#utility.yul\":953:1000   */\ntag_35:\n    /* \"#utility.yul\":1049:1051   */\n  0x1f\n    /* \"#utility.yul\":1044:1047   */\n  dup6\n    /* \"#utility.yul\":1040:1052   */\n  add\n    /* \"#utility.yul\":1037:1038   */\n  0x05\n    /* \"#utility.yul\":1033:1053   */\n  shr\n    /* \"#utility.yul\":1027:1031   */\n  dup3\n    /* \"#utility.yul\":1023:1054   */\n  add\n    /* \"#utility.yul\":1013:1054   */\n  swap2\n  pop\n    /* \"#utility.yul\":1104:1186   */\ntag_36:\n    /* \"#utility.yul\":1122:1124   */\n  dup2\n    /* \"#utility.yul\":1115:1120   */\n  dup2\n    /* \"#utility.yul\":1112:1125   */\n  lt\n    /* \"#utility.yul\":1104:1186   */\n  iszero\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1167:1184   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":1148:1149   */\n  0x01\n    /* \"#utility.yul\":1137:1150   */\n  add\n    /* \"#utility.yul\":1104:1186   */\n  jump(tag_36)\ntag_38:\n    /* \"#utility.yul\":1108:1111   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":748:1196   */\ntag_34:\n    /* \"#utility.yul\":657:1202   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1378:2730   */\ntag_19:\n    /* \"#utility.yul\":1498:1508   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1520:1550   */\n  dup2\n  gt\n    /* \"#utility.yul\":1517:1573   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":1553:1571   */\n  tag_42\n  tag_22\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":1582:1679   */\n  tag_43\n    /* \"#utility.yul\":1672:1678   */\n  dup2\n    /* \"#utility.yul\":1632:1670   */\n  tag_44\n    /* \"#utility.yul\":1664:1668   */\n  dup5\n    /* \"#utility.yul\":1658:1669   */\n  sload\n    /* \"#utility.yul\":1632:1670   */\n  tag_23\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":1626:1630   */\n  dup5\n    /* \"#utility.yul\":1582:1679   */\n  tag_25\n  jump\t// in\ntag_43:\n    /* \"#utility.yul\":1734:1738   */\n  0x20\n  dup1\n    /* \"#utility.yul\":1798:1800   */\n  0x1f\n    /* \"#utility.yul\":1787:1801   */\n  dup4\n  gt\n    /* \"#utility.yul\":1815:1816   */\n  0x01\n    /* \"#utility.yul\":1810:2473   */\n  dup2\n  eq\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2517:2518   */\n  0x00\n    /* \"#utility.yul\":2534:2540   */\n  dup5\n    /* \"#utility.yul\":2531:2620   */\n  iszero\n  tag_47\n  jumpi\n  pop\n    /* \"#utility.yul\":2586:2605   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":2580:2606   */\n  mload\n    /* \"#utility.yul\":2531:2620   */\ntag_47:\n  not(0x00)\n    /* \"#utility.yul\":1335:1336   */\n  0x03\n    /* \"#utility.yul\":1331:1342   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":1327:1351   */\n  shr\n    /* \"#utility.yul\":1323:1352   */\n  not\n    /* \"#utility.yul\":1313:1353   */\n  and\n    /* \"#utility.yul\":1359:1360   */\n  0x01\n    /* \"#utility.yul\":1355:1366   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":1310:1367   */\n  or\n    /* \"#utility.yul\":2633:2714   */\n  dup6\n  sstore\n    /* \"#utility.yul\":1780:2724   */\n  jump(tag_38)\n    /* \"#utility.yul\":1810:2473   */\ntag_46:\n    /* \"#utility.yul\":604:605   */\n  0x00\n    /* \"#utility.yul\":597:611   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":641:645   */\n  0x20\n    /* \"#utility.yul\":628:646   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":1846:1866   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":1964:2200   */\ntag_50:\n    /* \"#utility.yul\":1978:1985   */\n  dup3\n    /* \"#utility.yul\":1975:1976   */\n  dup2\n    /* \"#utility.yul\":1972:1986   */\n  lt\n    /* \"#utility.yul\":1964:2200   */\n  iszero\n  tag_52\n  jumpi\n    /* \"#utility.yul\":2067:2086   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":2061:2087   */\n  mload\n    /* \"#utility.yul\":2046:2088   */\n  dup3\n  sstore\n    /* \"#utility.yul\":2159:2186   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":2127:2128   */\n  0x01\n    /* \"#utility.yul\":2115:2129   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":1994:2013   */\n  dup5\n  add\n    /* \"#utility.yul\":1964:2200   */\n  jump(tag_50)\ntag_52:\n    /* \"#utility.yul\":1968:1971   */\n  pop\n    /* \"#utility.yul\":2228:2234   */\n  dup6\n    /* \"#utility.yul\":2219:2226   */\n  dup3\n    /* \"#utility.yul\":2216:2235   */\n  lt\n    /* \"#utility.yul\":2213:2414   */\n  iszero\n  tag_53\n  jumpi\n    /* \"#utility.yul\":2289:2308   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":2283:2309   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":2372:2373   */\n  0x03\n    /* \"#utility.yul\":2368:2382   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":2384:2387   */\n  0xf8\n    /* \"#utility.yul\":2364:2388   */\n  and\n    /* \"#utility.yul\":2360:2397   */\n  shr\n    /* \"#utility.yul\":2356:2398   */\n  not\n    /* \"#utility.yul\":2341:2399   */\n  and\n    /* \"#utility.yul\":2326:2400   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2213:2414   */\ntag_53:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":2460:2461   */\n  0x01\n    /* \"#utility.yul\":2444:2458   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":2440:2462   */\n  add\n    /* \"#utility.yul\":2427:2463   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":1378:2730   */\n  jump\t// out\ntag_27:\n    /* \"contracts/DTiket_flattened.sol\":42529:43556  contract DTiket is ERC1155, Pausable, Ownable, ERC1155Burnable {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DTiket_flattened.sol\":42529:43556  contract DTiket is ERC1155, Pausable, Ownable, ERC1155Burnable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x715018a6\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd501dc37\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd501dc37\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf5298aca\n      eq\n      tag_21\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x715018a6\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x731133e9\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0x2eb2c2d6\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6b20c454\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_24:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x1f7fdffa\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_25\n      tag_26\n      calldatasize\n      0x04\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DTiket_flattened.sol\":25550:25855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_31\n      tag_32\n      calldatasize\n      0x04\n      tag_33\n      jump\t// in\n    tag_32:\n      tag_34\n      jump\t// in\n    tag_31:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":25550:25855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_29\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":26254:26357  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_37\n      tag_38\n      calldatasize\n      0x04\n      tag_39\n      jump\t// in\n    tag_38:\n      tag_40\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":43078:43264  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_6:\n      tag_43\n      tag_44\n      calldatasize\n      0x04\n      tag_45\n      jump\t// in\n    tag_44:\n      tag_46\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/DTiket_flattened.sol\":28356:28782  function safeBatchTransferFrom(... */\n    tag_7:\n      tag_43\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42699:42762  function unpause() public onlyOwner {... */\n    tag_8:\n      tag_43\n      tag_52\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":26883:27369  function balanceOfBatch(... */\n    tag_9:\n      tag_53\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":5084:5168  function paused() public view virtual returns (bool) {... */\n    tag_10:\n        /* \"contracts/DTiket_flattened.sol\":5154:5161  _paused */\n      and(0xff, sload(0x03))\n        /* \"contracts/DTiket_flattened.sol\":5084:5168  function paused() public view virtual returns (bool) {... */\n      jump(tag_31)\n        /* \"contracts/DTiket_flattened.sol\":42147:42464  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_11:\n      tag_43\n      tag_63\n      calldatasize\n      0x04\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":2682:2783  function renounceOwnership() public virtual onlyOwner {... */\n    tag_12:\n      tag_43\n      tag_67\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42908:43072  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_13:\n      tag_43\n      tag_69\n      calldatasize\n      0x04\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42634:42693  function pause() public onlyOwner {... */\n    tag_14:\n      tag_43\n      tag_73\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":2059:2144  function owner() public view virtual returns (address) {... */\n    tag_15:\n        /* \"contracts/DTiket_flattened.sol\":2131:2137  _owner */\n      sload(0x03)\n      0x0100\n      swap1\n      div\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"contracts/DTiket_flattened.sol\":2059:2144  function owner() public view virtual returns (address) {... */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9026:9058   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9008:9059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"#utility.yul\":8981:8999   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":2059:2144  function owner() public view virtual returns (address) {... */\n      tag_29\n        /* \"#utility.yul\":8862:9065   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":27437:27590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_16:\n      tag_43\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42767:42903  function burn(address _ticketUser, uint96 tokenId, uint256 amount) public onlyOwner {... */\n    tag_17:\n      tag_43\n      tag_83\n      calldatasize\n      0x04\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_18:\n      tag_31\n      tag_87\n      calldatasize\n      0x04\n      tag_88\n      jump\t// in\n    tag_87:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":27779:27806  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/DTiket_flattened.sol\":27756:27760  bool */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":27779:27806  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":27779:27797  _operatorApprovals */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":27779:27806  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":27779:27816  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":27890:28284  function safeTransferFrom(... */\n    tag_19:\n      tag_43\n      tag_92\n      calldatasize\n      0x04\n      tag_93\n      jump\t// in\n    tag_92:\n      tag_94\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":2932:3130  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_20:\n      tag_43\n      tag_96\n      calldatasize\n      0x04\n      tag_97\n      jump\t// in\n    tag_96:\n      tag_98\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":41856:42141  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_21:\n      tag_43\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_28:\n        /* \"contracts/DTiket_flattened.sol\":26585:26592  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":26612:26633  account != address(0) */\n      dup4\n      and\n        /* \"contracts/DTiket_flattened.sol\":26604:26680  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11457:11459   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":26604:26680  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11439:11460   */\n      mstore\n        /* \"#utility.yul\":11496:11498   */\n      0x2a\n        /* \"#utility.yul\":11476:11494   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11469:11499   */\n      mstore\n        /* \"#utility.yul\":11535:11569   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":11515:11533   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11508:11570   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":11586:11604   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11579:11619   */\n      mstore\n        /* \"#utility.yul\":11636:11655   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":26604:26680  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":26697:26706  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":26697:26710  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":26697:26719  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_103:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":25550:25855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_34:\n        /* \"contracts/DTiket_flattened.sol\":25652:25656  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":25687:25728  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":25687:25796  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_108\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":25744:25796  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/DTiket_flattened.sol\":25687:25796  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_108:\n        /* \"contracts/DTiket_flattened.sol\":25687:25848  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_103\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":17245:17285  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/DTiket_flattened.sol\":25812:25848  super.supportsInterface(interfaceId) */\n      tag_103\n        /* \"contracts/DTiket_flattened.sol\":17137:17292  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":26254:26357  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_40:\n        /* \"contracts/DTiket_flattened.sol\":26314:26327  string memory */\n      0x60\n        /* \"contracts/DTiket_flattened.sol\":26346:26350  _uri */\n      0x02\n        /* \"contracts/DTiket_flattened.sol\":26339:26350  return _uri */\n      dup1\n      sload\n      tag_113\n      swap1\n      tag_114\n      jump\t// in\n    tag_113:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_115\n      swap1\n      tag_114\n      jump\t// in\n    tag_115:\n      dup1\n      iszero\n      tag_116\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_117\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_116)\n    tag_117:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_118:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_118\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_116:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":26254:26357  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":43078:43264  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_46:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_120\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_120:\n        /* \"contracts/DTiket_flattened.sol\":43223:43257  _mintBatch(to, ids, amounts, data) */\n      tag_123\n        /* \"contracts/DTiket_flattened.sol\":43234:43236  to */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43238:43241  ids */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43243:43250  amounts */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43252:43256  data */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43223:43233  _mintBatch */\n      tag_124\n        /* \"contracts/DTiket_flattened.sol\":43223:43257  _mintBatch(to, ids, amounts, data) */\n      jump\t// in\n    tag_123:\n        /* \"contracts/DTiket_flattened.sol\":43078:43264  function mintBatch(address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":28356:28782  function safeBatchTransferFrom(... */\n    tag_50:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":28581:28601  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":28581:28601  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":28581:28641  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_129\n      jumpi\n      pop\n        /* \"contracts/DTiket_flattened.sol\":28605:28641  isApprovedForAll(from, _msgSender()) */\n      tag_129\n        /* \"contracts/DTiket_flattened.sol\":28622:28626  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":28605:28641  isApprovedForAll(from, _msgSender()) */\n    tag_129:\n        /* \"contracts/DTiket_flattened.sol\":28560:28713  require(... */\n      tag_131\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_133\n      jump\t// in\n    tag_131:\n        /* \"contracts/DTiket_flattened.sol\":28723:28775  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_134\n        /* \"contracts/DTiket_flattened.sol\":28746:28750  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28752:28754  to */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28756:28759  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28761:28768  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28770:28774  data */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28723:28745  _safeBatchTransferFrom */\n      tag_135\n        /* \"contracts/DTiket_flattened.sol\":28723:28775  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_134:\n        /* \"contracts/DTiket_flattened.sol\":28356:28782  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":42699:42762  function unpause() public onlyOwner {... */\n    tag_52:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_137\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_137:\n        /* \"contracts/DTiket_flattened.sol\":42745:42755  _unpause() */\n      tag_139\n        /* \"contracts/DTiket_flattened.sol\":42745:42753  _unpause */\n      tag_140\n        /* \"contracts/DTiket_flattened.sol\":42745:42755  _unpause() */\n      jump\t// in\n    tag_139:\n        /* \"contracts/DTiket_flattened.sol\":42699:42762  function unpause() public onlyOwner {... */\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":26883:27369  function balanceOfBatch(... */\n    tag_56:\n        /* \"contracts/DTiket_flattened.sol\":27016:27032  uint256[] memory */\n      0x60\n        /* \"contracts/DTiket_flattened.sol\":27071:27074  ids */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":27071:27081  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27052:27060  accounts */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27052:27067  accounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27052:27081  accounts.length == ids.length */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_142\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12668:12670   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12650:12671   */\n      mstore\n        /* \"#utility.yul\":12707:12709   */\n      0x29\n        /* \"#utility.yul\":12687:12705   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12680:12710   */\n      mstore\n        /* \"#utility.yul\":12746:12780   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":12726:12744   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12719:12781   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":12797:12815   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12790:12829   */\n      mstore\n        /* \"#utility.yul\":12846:12865   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_105\n        /* \"#utility.yul\":12466:12871   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_142:\n        /* \"contracts/DTiket_flattened.sol\":27138:27168  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":27185:27193  accounts */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27185:27200  accounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27171:27201  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_146\n      jumpi\n      tag_146\n      tag_147\n      jump\t// in\n    tag_146:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_148\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_148:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27138:27201  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27217:27226  uint256 i */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":27212:27332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_149:\n        /* \"contracts/DTiket_flattened.sol\":27236:27244  accounts */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":27236:27251  accounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27232:27233  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":27232:27251  i < accounts.length */\n      lt\n        /* \"contracts/DTiket_flattened.sol\":27212:27332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":27291:27321  balanceOf(accounts[i], ids[i]) */\n      tag_152\n        /* \"contracts/DTiket_flattened.sol\":27301:27309  accounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":27310:27311  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":27301:27312  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_154\n      jumpi\n      tag_154\n      tag_155\n      jump\t// in\n    tag_154:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27314:27317  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":27318:27319  i */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27314:27320  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_157\n      jumpi\n      tag_157\n      tag_155\n      jump\t// in\n    tag_157:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27291:27300  balanceOf */\n      tag_28\n        /* \"contracts/DTiket_flattened.sol\":27291:27321  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_152:\n        /* \"contracts/DTiket_flattened.sol\":27272:27285  batchBalances */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":27286:27287  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":27272:27288  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_159\n      jumpi\n      tag_159\n      tag_155\n      jump\t// in\n    tag_159:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTiket_flattened.sol\":27272:27321  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":27253:27256  ++i */\n      tag_160\n      dup2\n      tag_161\n      jump\t// in\n    tag_160:\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27212:27332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_149)\n    tag_150:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27349:27362  batchBalances */\n      swap4\n        /* \"contracts/DTiket_flattened.sol\":26883:27369  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":42147:42464  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":42276:42299  account == _msgSender() */\n      dup4\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":42276:42299  account == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":42276:42342  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_166\n      jumpi\n      pop\n        /* \"contracts/DTiket_flattened.sol\":42303:42342  isApprovedForAll(account, _msgSender()) */\n      tag_166\n        /* \"contracts/DTiket_flattened.sol\":42320:42327  account */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42303:42342  isApprovedForAll(account, _msgSender()) */\n    tag_166:\n        /* \"contracts/DTiket_flattened.sol\":42255:42414  require(... */\n      tag_168\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_133\n      jump\t// in\n    tag_168:\n        /* \"contracts/DTiket_flattened.sol\":42425:42457  _burnBatch(account, ids, values) */\n      tag_170\n        /* \"contracts/DTiket_flattened.sol\":42436:42443  account */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42445:42448  ids */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42450:42456  values */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42425:42435  _burnBatch */\n      tag_171\n        /* \"contracts/DTiket_flattened.sol\":42425:42457  _burnBatch(account, ids, values) */\n      jump\t// in\n    tag_170:\n        /* \"contracts/DTiket_flattened.sol\":42147:42464  function burnBatch(address account, uint256[] memory ids, uint256[] memory values) public virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":2682:2783  function renounceOwnership() public virtual onlyOwner {... */\n    tag_67:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_173\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_173:\n        /* \"contracts/DTiket_flattened.sol\":2746:2776  _transferOwnership(address(0)) */\n      tag_139\n        /* \"contracts/DTiket_flattened.sol\":2773:2774  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":2746:2764  _transferOwnership */\n      tag_176\n        /* \"contracts/DTiket_flattened.sol\":2746:2776  _transferOwnership(address(0)) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42908:43072  function mint(address account, uint256 id, uint256 amount, bytes memory data)... */\n    tag_71:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_178\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_178:\n        /* \"contracts/DTiket_flattened.sol\":43033:43065  _mint(account, id, amount, data) */\n      tag_123\n        /* \"contracts/DTiket_flattened.sol\":43039:43046  account */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43048:43050  id */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43052:43058  amount */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43060:43064  data */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":43033:43038  _mint */\n      tag_181\n        /* \"contracts/DTiket_flattened.sol\":43033:43065  _mint(account, id, amount, data) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":42634:42693  function pause() public onlyOwner {... */\n    tag_73:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_183\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/DTiket_flattened.sol\":42678:42686  _pause() */\n      tag_139\n        /* \"contracts/DTiket_flattened.sol\":42678:42684  _pause */\n      tag_186\n        /* \"contracts/DTiket_flattened.sol\":42678:42686  _pause() */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":27437:27590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_81:\n        /* \"contracts/DTiket_flattened.sol\":27531:27583  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_189\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27564:27572  operator */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27574:27582  approved */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27531:27549  _setApprovalForAll */\n      tag_191\n        /* \"contracts/DTiket_flattened.sol\":27531:27583  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_189:\n        /* \"contracts/DTiket_flattened.sol\":27437:27590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":42767:42903  function burn(address _ticketUser, uint96 tokenId, uint256 amount) public onlyOwner {... */\n    tag_85:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_193\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_193:\n        /* \"contracts/DTiket_flattened.sol\":42861:42896  _burn(_ticketUser, tokenId, amount) */\n      tag_170\n        /* \"contracts/DTiket_flattened.sol\":42867:42878  _ticketUser */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42880:42887  tokenId */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42861:42896  _burn(_ticketUser, tokenId, amount) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/DTiket_flattened.sol\":42889:42895  amount */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42861:42866  _burn */\n      tag_196\n        /* \"contracts/DTiket_flattened.sol\":42861:42896  _burn(_ticketUser, tokenId, amount) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":27890:28284  function safeTransferFrom(... */\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":28090:28110  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":28090:28110  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":28090:28150  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_201\n      jumpi\n      pop\n        /* \"contracts/DTiket_flattened.sol\":28114:28150  isApprovedForAll(from, _msgSender()) */\n      tag_201\n        /* \"contracts/DTiket_flattened.sol\":28131:28135  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":28114:28150  isApprovedForAll(from, _msgSender()) */\n    tag_201:\n        /* \"contracts/DTiket_flattened.sol\":28069:28222  require(... */\n      tag_203\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_133\n      jump\t// in\n    tag_203:\n        /* \"contracts/DTiket_flattened.sol\":28232:28277  _safeTransferFrom(from, to, id, amount, data) */\n      tag_134\n        /* \"contracts/DTiket_flattened.sol\":28250:28254  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28256:28258  to */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28260:28262  id */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28264:28270  amount */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28272:28276  data */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28232:28249  _safeTransferFrom */\n      tag_206\n        /* \"contracts/DTiket_flattened.sol\":28232:28277  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":2932:3130  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_98:\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      tag_208\n        /* \"contracts/DTiket_flattened.sol\":1952:1963  _checkOwner */\n      tag_121\n        /* \"contracts/DTiket_flattened.sol\":1952:1965  _checkOwner() */\n      jump\t// in\n    tag_208:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":3020:3042  newOwner != address(0) */\n      dup2\n      and\n        /* \"contracts/DTiket_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13482:13484   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13464:13485   */\n      mstore\n        /* \"#utility.yul\":13521:13523   */\n      0x26\n        /* \"#utility.yul\":13501:13519   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13494:13524   */\n      mstore\n        /* \"#utility.yul\":13560:13594   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":13540:13558   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13533:13595   */\n      mstore\n      shl(0xd0, 0x646472657373)\n        /* \"#utility.yul\":13611:13629   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":13604:13640   */\n      mstore\n        /* \"#utility.yul\":13657:13676   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_105\n        /* \"#utility.yul\":13280:13682   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":3012:3085  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n    tag_210:\n        /* \"contracts/DTiket_flattened.sol\":3095:3123  _transferOwnership(newOwner) */\n      tag_213\n        /* \"contracts/DTiket_flattened.sol\":3114:3122  newOwner */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":3095:3113  _transferOwnership */\n      tag_176\n        /* \"contracts/DTiket_flattened.sol\":3095:3123  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/DTiket_flattened.sol\":2932:3130  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":41856:42141  function burn(address account, uint256 id, uint256 value) public virtual {... */\n    tag_102:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":41960:41983  account == _msgSender() */\n      dup4\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":41960:41983  account == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":41960:42026  account == _msgSender() || isApprovedForAll(account, _msgSender()) */\n      tag_217\n      jumpi\n      pop\n        /* \"contracts/DTiket_flattened.sol\":41987:42026  isApprovedForAll(account, _msgSender()) */\n      tag_217\n        /* \"contracts/DTiket_flattened.sol\":42004:42011  account */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_87\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":41987:42026  isApprovedForAll(account, _msgSender()) */\n    tag_217:\n        /* \"contracts/DTiket_flattened.sol\":41939:42098  require(... */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_133\n      jump\t// in\n    tag_219:\n        /* \"contracts/DTiket_flattened.sol\":42109:42134  _burn(account, id, value) */\n      tag_170\n        /* \"contracts/DTiket_flattened.sol\":42115:42122  account */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42124:42126  id */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42128:42133  value */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":42109:42114  _burn */\n      tag_196\n        /* \"contracts/DTiket_flattened.sol\":42109:42134  _burn(account, id, value) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":2217:2347  function _checkOwner() internal view virtual {... */\n    tag_121:\n        /* \"contracts/DTiket_flattened.sol\":2131:2137  _owner */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n      0x0100\n      swap1\n      swap2\n      div\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":2280:2303  owner() == _msgSender() */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":2272:2340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13889:13891   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":2272:2340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13871:13892   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":13908:13926   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13901:13931   */\n      mstore\n        /* \"#utility.yul\":13967:14001   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":13947:13965   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":13940:14002   */\n      mstore\n        /* \"#utility.yul\":14019:14037   */\n      0x64\n      add\n        /* \"contracts/DTiket_flattened.sol\":2272:2340  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_105\n        /* \"#utility.yul\":13687:14043   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":33983:34774  function _mintBatch(... */\n    tag_124:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":34155:34171  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":34147:34209  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_230\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_232\n      jump\t// in\n    tag_230:\n        /* \"contracts/DTiket_flattened.sol\":34241:34248  amounts */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":34241:34255  amounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":34227:34230  ids */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":34227:34237  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":34227:34255  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":34219:34300  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_233\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_235\n      jump\t// in\n    tag_233:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":34353:34419  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_237\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":34311:34327  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":34396:34398  to */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34400:34403  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34405:34412  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34414:34418  data */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34353:34373  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/DTiket_flattened.sol\":34353:34419  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_237:\n        /* \"contracts/DTiket_flattened.sol\":34435:34444  uint256 i */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":34430:34531  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_239:\n        /* \"contracts/DTiket_flattened.sol\":34454:34457  ids */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":34454:34464  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":34450:34451  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":34450:34464  i < ids.length */\n      lt\n        /* \"contracts/DTiket_flattened.sol\":34430:34531  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":34510:34517  amounts */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":34518:34519  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":34510:34520  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_243\n      jumpi\n      tag_243\n      tag_155\n      jump\t// in\n    tag_243:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":34485:34494  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":34485:34502  _balances[ids[i]] */\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":34495:34498  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34499:34500  i */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":34495:34501  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_245\n      jumpi\n      tag_245\n      tag_155\n      jump\t// in\n    tag_245:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":34485:34502  _balances[ids[i]] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":34485:34506  _balances[ids[i]][to] */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":34503:34505  to */\n      dup9\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":34485:34506  _balances[ids[i]][to] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":34485:34520  _balances[ids[i]][to] += amounts[i] */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      swap1\n      swap2\n      sstore\n      pop\n        /* \"contracts/DTiket_flattened.sol\":34466:34469  i++ */\n      dup2\n      swap1\n      pop\n      tag_248\n      dup2\n      tag_161\n      jump\t// in\n    tag_248:\n      swap2\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":34430:34531  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_239)\n    tag_240:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":34582:34584  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":34546:34599  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":34578:34579  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":34546:34599  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":34560:34568  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":34546:34599  TransferBatch(operator, address(0), to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTiket_flattened.sol\":34586:34589  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34591:34598  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34546:34599  TransferBatch(operator, address(0), to, ids, amounts) */\n      mload(0x40)\n      tag_249\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":34686:34767  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      tag_134\n        /* \"contracts/DTiket_flattened.sol\":34722:34730  operator */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":34740:34741  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":34744:34746  to */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34748:34751  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34753:34760  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34762:34766  data */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":34686:34721  _doSafeBatchTransferAcceptanceCheck */\n      tag_254\n        /* \"contracts/DTiket_flattened.sol\":34686:34767  _doSafeBatchTransferAcceptanceCheck(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n    tag_135:\n        /* \"contracts/DTiket_flattened.sol\":30745:30752  amounts */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":30745:30759  amounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":30731:30734  ids */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":30731:30741  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":30731:30759  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":30723:30804  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_257\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_235\n      jump\t// in\n    tag_257:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":30822:30838  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":30814:30880  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_261\n      jump\t// in\n    tag_259:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":30933:30993  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_263\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":30964:30968  from */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":30970:30972  to */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":30974:30977  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":30979:30986  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":30988:30992  data */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":30933:30953  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/DTiket_flattened.sol\":30933:30993  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_263:\n        /* \"contracts/DTiket_flattened.sol\":31009:31018  uint256 i */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31004:31415  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_264:\n        /* \"contracts/DTiket_flattened.sol\":31028:31031  ids */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":31028:31038  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":31024:31025  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":31024:31038  i < ids.length */\n      lt\n        /* \"contracts/DTiket_flattened.sol\":31004:31415  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_265\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":31059:31069  uint256 id */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31072:31075  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":31076:31077  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":31072:31078  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_268\n      jumpi\n      tag_268\n      tag_155\n      jump\t// in\n    tag_268:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":31059:31078  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31092:31106  uint256 amount */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31109:31116  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":31117:31118  i */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":31109:31119  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_270\n      jumpi\n      tag_270\n      tag_155\n      jump\t// in\n    tag_270:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":31134:31153  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31156:31169  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31156:31175  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":31109:31119  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31197:31218  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":31189:31265  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_273\n      jump\t// in\n    tag_271:\n        /* \"contracts/DTiket_flattened.sol\":31307:31316  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31307:31320  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31307:31326  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":31329:31349  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/DTiket_flattened.sol\":31307:31349  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":31377:31394  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":31377:31404  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTiket_flattened.sol\":31329:31349  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":31307:31316  _balances */\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":31377:31404  _balances[id][to] += amount */\n      tag_274\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":31329:31349  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":31377:31404  _balances[id][to] += amount */\n      tag_247\n      jump\t// in\n    tag_274:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31045:31415  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31040:31043  ++i */\n      dup1\n      tag_275\n      swap1\n      tag_161\n      jump\t// in\n    tag_275:\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31004:31415  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_264)\n    tag_265:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31460:31462  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":31454:31458  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":31444:31452  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTiket_flattened.sol\":31464:31467  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31469:31476  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_276\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_276:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":31558:31633  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_278\n        /* \"contracts/DTiket_flattened.sol\":31594:31602  operator */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":31604:31608  from */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31610:31612  to */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31614:31617  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31619:31626  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31628:31632  data */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31558:31593  _doSafeBatchTransferAcceptanceCheck */\n      tag_254\n        /* \"contracts/DTiket_flattened.sol\":31558:31633  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_278:\n        /* \"contracts/DTiket_flattened.sol\":30713:31640  {... */\n      pop\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":5902:6019  function _unpause() internal virtual whenPaused {... */\n    tag_140:\n        /* \"contracts/DTiket_flattened.sol\":4955:4971  _requirePaused() */\n      tag_280\n        /* \"contracts/DTiket_flattened.sol\":4955:4969  _requirePaused */\n      tag_281\n        /* \"contracts/DTiket_flattened.sol\":4955:4971  _requirePaused() */\n      jump\t// in\n    tag_280:\n        /* \"contracts/DTiket_flattened.sol\":5960:5967  _paused */\n      0x03\n        /* \"contracts/DTiket_flattened.sol\":5960:5975  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":5990:6012  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":5999:6011  _msgSender() */\n    tag_283:\n        /* \"contracts/DTiket_flattened.sol\":5990:6012  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9026:9058   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":9008:9059   */\n      dup2\n      mstore\n        /* \"#utility.yul\":8996:8998   */\n      0x20\n        /* \"#utility.yul\":8981:8999   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":5990:6012  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/DTiket_flattened.sol\":5902:6019  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":36055:36968  function _burnBatch(address from, uint256[] memory ids, uint256[] memory amounts) internal virtual {... */\n    tag_171:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":36172:36190  from != address(0) */\n      dup4\n      and\n        /* \"contracts/DTiket_flattened.sol\":36164:36230  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_286\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_288\n      jump\t// in\n    tag_286:\n        /* \"contracts/DTiket_flattened.sol\":36262:36269  amounts */\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":36262:36276  amounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":36248:36251  ids */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":36248:36258  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":36248:36276  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":36240:36321  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_289\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_235\n      jump\t// in\n    tag_289:\n        /* \"contracts/DTiket_flattened.sol\":36332:36348  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":36332:36363  address operator = _msgSender() */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":36374:36440  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_292\n        /* \"contracts/DTiket_flattened.sol\":36395:36403  operator */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":36405:36409  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":36419:36420  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36423:36426  ids */\n      dup7\n        /* \"contracts/DTiket_flattened.sol\":36428:36435  amounts */\n      dup7\n        /* \"contracts/DTiket_flattened.sol\":36374:36440  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/DTiket_flattened.sol\":36374:36394  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/DTiket_flattened.sol\":36374:36440  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_292:\n        /* \"contracts/DTiket_flattened.sol\":36456:36465  uint256 i */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36451:36815  for (uint256 i = 0; i < ids.length; i++) {... */\n    tag_293:\n        /* \"contracts/DTiket_flattened.sol\":36475:36478  ids */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":36475:36485  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":36471:36472  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":36471:36485  i < ids.length */\n      lt\n        /* \"contracts/DTiket_flattened.sol\":36451:36815  for (uint256 i = 0; i < ids.length; i++) {... */\n      iszero\n      tag_294\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":36506:36516  uint256 id */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36519:36522  ids */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":36523:36524  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":36519:36525  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_297\n      jumpi\n      tag_297\n      tag_155\n      jump\t// in\n    tag_297:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":36506:36525  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":36539:36553  uint256 amount */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36556:36563  amounts */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":36564:36565  i */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":36556:36566  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_299\n      jumpi\n      tag_299\n      tag_155\n      jump\t// in\n    tag_299:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":36581:36600  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36603:36616  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":36603:36622  _balances[id][from] */\n      dup13\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":36556:36566  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTiket_flattened.sol\":36644:36665  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":36636:36706  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_302\n      jump\t// in\n    tag_300:\n        /* \"contracts/DTiket_flattened.sol\":36748:36757  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36748:36761  _balances[id] */\n      swap3\n      dup4\n      mstore\n      0x20\n      dup4\n      dup2\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":36748:36767  _balances[id][from] */\n      dup12\n      and\n      dup7\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      swap3\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":36770:36790  fromBalance - amount */\n      swap2\n      sub\n        /* \"contracts/DTiket_flattened.sol\":36748:36790  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":36487:36490  i++ */\n      dup1\n      tag_303\n      dup2\n      tag_161\n      jump\t// in\n    tag_303:\n      swap2\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":36451:36815  for (uint256 i = 0; i < ids.length; i++) {... */\n      jump(tag_293)\n    tag_294:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":36868:36869  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":36830:36885  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":36854:36858  from */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":36830:36885  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":36844:36852  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":36830:36885  TransferBatch(operator, from, address(0), ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTiket_flattened.sol\":36872:36875  ids */\n      dup7\n        /* \"contracts/DTiket_flattened.sol\":36877:36884  amounts */\n      dup7\n        /* \"contracts/DTiket_flattened.sol\":36830:36885  TransferBatch(operator, from, address(0), ids, amounts) */\n      mload(0x40)\n      tag_304\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":36896:36961  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":36940:36941  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":36896:36961  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      mstore\n      tag_123\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_176:\n        /* \"contracts/DTiket_flattened.sol\":3376:3382  _owner */\n      0x03\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":3392:3409  _owner = newOwner */\n      dup4\n      dup2\n      and\n        /* \"contracts/DTiket_flattened.sol\":3376:3382  _owner */\n      0x0100\n        /* \"contracts/DTiket_flattened.sol\":3392:3409  _owner = newOwner */\n      dup2\n      dup2\n      mul\n      not(sub(shl(0xa8, 0x01), 0x0100))\n      dup6\n      and\n      or\n      swap1\n      swap5\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n      mload(0x40)\n        /* \"contracts/DTiket_flattened.sol\":3376:3382  _owner */\n      swap4\n      swap1\n      swap3\n      div\n      and\n      swap2\n      dup3\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":3357:3373  address oldOwner */\n      0x00\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":3424:3464  OwnershipTransferred(oldOwner, newOwner) */\n      log3\n        /* \"contracts/DTiket_flattened.sol\":3347:3471  {... */\n      pop\n        /* \"contracts/DTiket_flattened.sol\":3284:3471  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":32922:33593  function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n    tag_181:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":33031:33047  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":33023:33085  require(to != address(0), \"ERC1155: mint to the zero address\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_232\n      jump\t// in\n    tag_308:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":33096:33112  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":33160:33181  _asSingletonArray(id) */\n      tag_311\n        /* \"contracts/DTiket_flattened.sol\":33178:33180  id */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":33160:33177  _asSingletonArray */\n      tag_312\n        /* \"contracts/DTiket_flattened.sol\":33160:33181  _asSingletonArray(id) */\n      jump\t// in\n    tag_311:\n        /* \"contracts/DTiket_flattened.sol\":33137:33181  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":33191:33215  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":33218:33243  _asSingletonArray(amount) */\n      tag_313\n        /* \"contracts/DTiket_flattened.sol\":33236:33242  amount */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":33218:33235  _asSingletonArray */\n      tag_312\n        /* \"contracts/DTiket_flattened.sol\":33218:33243  _asSingletonArray(amount) */\n      jump\t// in\n    tag_313:\n        /* \"contracts/DTiket_flattened.sol\":33191:33243  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":33254:33320  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      tag_314\n        /* \"contracts/DTiket_flattened.sol\":33275:33283  operator */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":33293:33294  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":33297:33299  to */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":33301:33304  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":33306:33313  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":33315:33319  data */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":33254:33274  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/DTiket_flattened.sol\":33254:33320  _beforeTokenTransfer(operator, address(0), to, ids, amounts, data) */\n      jump\t// in\n    tag_314:\n        /* \"contracts/DTiket_flattened.sol\":33331:33340  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":33331:33344  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":33331:33348  _balances[id][to] */\n      dup12\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":33331:33358  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTiket_flattened.sol\":33352:33358  amount */\n      dup8\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":33331:33340  _balances */\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":33331:33358  _balances[id][to] += amount */\n      tag_315\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":33352:33358  amount */\n      dup5\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":33331:33358  _balances[id][to] += amount */\n      tag_247\n      jump\t// in\n    tag_315:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":33373:33425  TransferSingle(operator, address(0), to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17259:17284   */\n      dup8\n      dup2\n      mstore\n        /* \"#utility.yul\":17315:17317   */\n      0x20\n        /* \"#utility.yul\":17300:17318   */\n      dup2\n      add\n        /* \"#utility.yul\":17293:17327   */\n      dup8\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":33373:33425  TransferSingle(operator, address(0), to, id, amount) */\n      dup1\n      dup11\n      and\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":33406:33407  0 */\n      0x00\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":33373:33425  TransferSingle(operator, address(0), to, id, amount) */\n      swap2\n      dup8\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17232:17250   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":33373:33425  TransferSingle(operator, address(0), to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":33512:33586  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      tag_319\n        /* \"contracts/DTiket_flattened.sol\":33543:33551  operator */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":33561:33562  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":33565:33567  to */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":33569:33571  id */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":33573:33579  amount */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":33581:33585  data */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":33512:33542  _doSafeTransferAcceptanceCheck */\n      tag_320\n        /* \"contracts/DTiket_flattened.sol\":33512:33586  _doSafeTransferAcceptanceCheck(operator, address(0), to, id, amount, data) */\n      jump\t// in\n    tag_319:\n        /* \"contracts/DTiket_flattened.sol\":33013:33593  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":32922:33593  function _mint(address to, uint256 id, uint256 amount, bytes memory data) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":5655:5770  function _pause() internal virtual whenNotPaused {... */\n    tag_186:\n        /* \"contracts/DTiket_flattened.sol\":4708:4727  _requireNotPaused() */\n      tag_322\n        /* \"contracts/DTiket_flattened.sol\":4708:4725  _requireNotPaused */\n      tag_323\n        /* \"contracts/DTiket_flattened.sol\":4708:4727  _requireNotPaused() */\n      jump\t// in\n    tag_322:\n        /* \"contracts/DTiket_flattened.sol\":5714:5721  _paused */\n      0x03\n        /* \"contracts/DTiket_flattened.sol\":5714:5728  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"contracts/DTiket_flattened.sol\":5724:5728  true */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":5714:5728  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":5743:5763  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"contracts/DTiket_flattened.sol\":5750:5762  _msgSender() */\n      tag_283\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":662:758  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":37104:37397  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_191:\n        /* \"contracts/DTiket_flattened.sol\":37224:37232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":37215:37232  owner != operator */\n      and\n        /* \"contracts/DTiket_flattened.sol\":37215:37220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":37215:37232  owner != operator */\n      and\n      sub\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_328\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17540:17542   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17522:17543   */\n      mstore\n        /* \"#utility.yul\":17579:17581   */\n      0x29\n        /* \"#utility.yul\":17559:17577   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17552:17582   */\n      mstore\n        /* \"#utility.yul\":17618:17652   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":17598:17616   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17591:17653   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":17669:17687   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17662:17701   */\n      mstore\n        /* \"#utility.yul\":17718:17737   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_105\n        /* \"#utility.yul\":17338:17743   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":37288:37313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":37288:37306  _operatorApprovals */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":37288:37313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":37288:37323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":37288:37334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":37349:37390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":37349:37390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":37349:37390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DTiket_flattened.sol\":37104:37397  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":35060:35816  function _burn(address from, uint256 id, uint256 amount) internal virtual {... */\n    tag_196:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":35152:35170  from != address(0) */\n      dup4\n      and\n        /* \"contracts/DTiket_flattened.sol\":35144:35210  require(from != address(0), \"ERC1155: burn from the zero address\") */\n      tag_333\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_288\n      jump\t// in\n    tag_333:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":35221:35237  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":35285:35306  _asSingletonArray(id) */\n      tag_336\n        /* \"contracts/DTiket_flattened.sol\":35303:35305  id */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":35285:35302  _asSingletonArray */\n      tag_312\n        /* \"contracts/DTiket_flattened.sol\":35285:35306  _asSingletonArray(id) */\n      jump\t// in\n    tag_336:\n        /* \"contracts/DTiket_flattened.sol\":35262:35306  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":35316:35340  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":35343:35368  _asSingletonArray(amount) */\n      tag_337\n        /* \"contracts/DTiket_flattened.sol\":35361:35367  amount */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":35343:35360  _asSingletonArray */\n      tag_312\n        /* \"contracts/DTiket_flattened.sol\":35343:35368  _asSingletonArray(amount) */\n      jump\t// in\n    tag_337:\n        /* \"contracts/DTiket_flattened.sol\":35316:35368  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":35379:35445  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      tag_338\n        /* \"contracts/DTiket_flattened.sol\":35400:35408  operator */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":35410:35414  from */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":35424:35425  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":35428:35431  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":35433:35440  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":35379:35445  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"contracts/DTiket_flattened.sol\":35379:35399  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/DTiket_flattened.sol\":35379:35445  _beforeTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      jump\t// in\n    tag_338:\n        /* \"contracts/DTiket_flattened.sol\":35456:35475  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":35478:35491  _balances[id] */\n      dup6\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":35478:35497  _balances[id][from] */\n      dup11\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":35515:35536  fromBalance >= amount */\n      dup5\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":35507:35577  require(fromBalance >= amount, \"ERC1155: burn amount exceeds balance\") */\n      tag_339\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_302\n      jump\t// in\n    tag_339:\n        /* \"contracts/DTiket_flattened.sol\":35611:35620  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":35611:35624  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":35611:35630  _balances[id][from] */\n      dup12\n      dup2\n      and\n      dup1\n      dup7\n      mstore\n      swap2\n      dup5\n      mstore\n      dup3\n      dup6\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":35633:35653  fromBalance - amount */\n      dup11\n      dup8\n      sub\n        /* \"contracts/DTiket_flattened.sol\":35611:35653  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":35679:35733  TransferSingle(operator, from, address(0), id, amount) */\n      dup3\n      mload\n        /* \"#utility.yul\":17259:17284   */\n      dup12\n      dup2\n      mstore\n        /* \"#utility.yul\":17300:17318   */\n      swap4\n      dup5\n      add\n        /* \"#utility.yul\":17293:17327   */\n      dup11\n      swap1\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":35611:35630  _balances[id][from] */\n      swap1\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":35679:35733  TransferSingle(operator, from, address(0), id, amount) */\n      swap1\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17232:17250   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":35679:35733  TransferSingle(operator, from, address(0), id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":35744:35809  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":35788:35789  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":35744:35809  _afterTokenTransfer(operator, from, address(0), ids, amounts, \"\") */\n      swap1\n      mstore\n      tag_319\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":29232:30179  function _safeTransferFrom(... */\n    tag_206:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29413:29429  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":29405:29471  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_344\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_261\n      jump\t// in\n    tag_344:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":29482:29498  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29546:29567  _asSingletonArray(id) */\n      tag_347\n        /* \"contracts/DTiket_flattened.sol\":29564:29566  id */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":29546:29563  _asSingletonArray */\n      tag_312\n        /* \"contracts/DTiket_flattened.sol\":29546:29567  _asSingletonArray(id) */\n      jump\t// in\n    tag_347:\n        /* \"contracts/DTiket_flattened.sol\":29523:29567  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29577:29601  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29604:29629  _asSingletonArray(amount) */\n      tag_348\n        /* \"contracts/DTiket_flattened.sol\":29622:29628  amount */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":29604:29621  _asSingletonArray */\n      tag_312\n        /* \"contracts/DTiket_flattened.sol\":29604:29629  _asSingletonArray(amount) */\n      jump\t// in\n    tag_348:\n        /* \"contracts/DTiket_flattened.sol\":29577:29629  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29640:29700  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_349\n        /* \"contracts/DTiket_flattened.sol\":29661:29669  operator */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":29671:29675  from */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":29677:29679  to */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":29681:29684  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":29686:29693  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":29695:29699  data */\n      dup10\n        /* \"contracts/DTiket_flattened.sol\":29640:29660  _beforeTokenTransfer */\n      tag_238\n        /* \"contracts/DTiket_flattened.sol\":29640:29700  _beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_349:\n        /* \"contracts/DTiket_flattened.sol\":29711:29730  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29733:29746  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29733:29752  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":29770:29791  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":29762:29838  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_350\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_273\n      jump\t// in\n    tag_350:\n        /* \"contracts/DTiket_flattened.sol\":29872:29881  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29872:29885  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29872:29891  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":29894:29914  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/DTiket_flattened.sol\":29872:29914  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":29934:29951  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":29934:29961  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTiket_flattened.sol\":29894:29914  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":29872:29881  _balances */\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":29934:29961  _balances[id][to] += amount */\n      tag_352\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":29894:29914  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":29934:29961  _balances[id][to] += amount */\n      tag_247\n      jump\t// in\n    tag_352:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29977:30023  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":17259:17284   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":17315:17317   */\n      0x20\n        /* \"#utility.yul\":17300:17318   */\n      dup2\n      add\n        /* \"#utility.yul\":17293:17327   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29977:30023  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":17232:17250   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":29977:30023  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":30104:30172  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_355\n        /* \"contracts/DTiket_flattened.sol\":30135:30143  operator */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":30145:30149  from */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30151:30153  to */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30155:30157  id */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30159:30165  amount */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30167:30171  data */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30104:30134  _doSafeTransferAcceptanceCheck */\n      tag_320\n        /* \"contracts/DTiket_flattened.sol\":30104:30172  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_355:\n        /* \"contracts/DTiket_flattened.sol\":29395:30179  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29232:30179  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":43270:43554  function _beforeTokenTransfer(address operator, address from, address to, uint256[] memory ids, uint256[] memory amounts, bytes memory data)... */\n    tag_238:\n        /* \"contracts/DTiket_flattened.sol\":4708:4727  _requireNotPaused() */\n      tag_357\n        /* \"contracts/DTiket_flattened.sol\":4708:4725  _requireNotPaused */\n      tag_323\n        /* \"contracts/DTiket_flattened.sol\":4708:4727  _requireNotPaused() */\n      jump\t// in\n    tag_357:\n        /* \"contracts/DTiket_flattened.sol\":43481:43547  super._beforeTokenTransfer(operator, from, to, ids, amounts, data) */\n      tag_278\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":40430:41222  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_254:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":40662:40675  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":7746:7765  account.code.length */\n      extcodesize\n        /* \"contracts/DTiket_flattened.sol\":7746:7769  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":40658:41216  if (to.isContract()) {... */\n      tag_278\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":40697:40776  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":40697:40740  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40697:40776  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_366\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40741:40749  operator */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40751:40755  from */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40757:40760  ids */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40762:40769  amounts */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40771:40775  data */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40697:40776  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_367\n      jump\t// in\n    tag_366:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_368\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_369\n      swap2\n      dup2\n      add\n      swap1\n      tag_370\n      jump\t// in\n    tag_369:\n      0x01\n    tag_368:\n        /* \"contracts/DTiket_flattened.sol\":40693:41206  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_371\n      jumpi\n      tag_375\n      tag_376\n      jump\t// in\n    tag_375:\n      dup1\n      0x08c379a0\n      sub\n      tag_374\n      jumpi\n      pop\n      tag_377\n      tag_378\n      jump\t// in\n    tag_377:\n      dup1\n      tag_379\n      jumpi\n      pop\n      jump(tag_373)\n    tag_379:\n        /* \"contracts/DTiket_flattened.sol\":41082:41088  reason */\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":41075:41089  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":40693:41206  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_374:\n      pop\n    tag_373:\n        /* \"contracts/DTiket_flattened.sol\":41129:41191  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":19896:19898   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":41129:41191  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":19878:19899   */\n      mstore\n        /* \"#utility.yul\":19935:19937   */\n      0x34\n        /* \"#utility.yul\":19915:19933   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":19908:19938   */\n      mstore\n        /* \"#utility.yul\":19974:20008   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":19954:19972   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":19947:20009   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":20025:20043   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":20018:20068   */\n      mstore\n        /* \"#utility.yul\":20085:20104   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":41129:41191  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      tag_105\n        /* \"#utility.yul\":19694:20110   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":40693:41206  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_371:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":40855:40915  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/DTiket_flattened.sol\":40851:41008  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_319\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":40939:40989  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_386\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":5414:5520  function _requirePaused() internal view virtual {... */\n    tag_281:\n        /* \"contracts/DTiket_flattened.sol\":5154:5161  _paused */\n      and(0xff, sload(0x03))\n        /* \"contracts/DTiket_flattened.sol\":5472:5513  require(paused(), \"Pausable: not paused\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":20726:20728   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":5472:5513  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":20708:20729   */\n      mstore\n        /* \"#utility.yul\":20765:20767   */\n      0x14\n        /* \"#utility.yul\":20745:20763   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":20738:20768   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":20784:20802   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":20777:20827   */\n      mstore\n        /* \"#utility.yul\":20844:20862   */\n      0x64\n      add\n        /* \"contracts/DTiket_flattened.sol\":5472:5513  require(paused(), \"Pausable: not paused\") */\n      tag_105\n        /* \"#utility.yul\":20524:20868   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":41228:41421  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_312:\n        /* \"contracts/DTiket_flattened.sol\":41347:41363  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/DTiket_flattened.sol\":41361:41362  1 */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":41347:41363  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":41294:41310  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/DTiket_flattened.sol\":41322:41344  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/DTiket_flattened.sol\":41347:41363  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":41322:41363  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":41384:41391  element */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":41373:41378  array */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":41379:41380  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":41373:41381  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_397\n      jumpi\n      tag_397\n      tag_155\n      jump\t// in\n    tag_397:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTiket_flattened.sol\":41373:41391  array[0] = element */\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":41409:41414  array */\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":41228:41421  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":39699:40424  function _doSafeTransferAcceptanceCheck(... */\n    tag_320:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":39906:39919  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":7746:7765  account.code.length */\n      extcodesize\n        /* \"contracts/DTiket_flattened.sol\":7746:7769  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":39902:40418  if (to.isContract()) {... */\n      tag_278\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":39941:40013  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":39941:39979  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39941:40013  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_401\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39980:39988  operator */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39990:39994  from */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39996:39998  id */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40000:40006  amount */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40008:40012  data */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39941:40013  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_402\n      jump\t// in\n    tag_401:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_403\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_404\n      swap2\n      dup2\n      add\n      swap1\n      tag_370\n      jump\t// in\n    tag_404:\n      0x01\n    tag_403:\n        /* \"contracts/DTiket_flattened.sol\":39937:40408  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_405\n      jumpi\n      tag_375\n      tag_376\n      jump\t// in\n    tag_405:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":40062:40117  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/DTiket_flattened.sol\":40058:40210  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_319\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":40141:40191  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_386\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":5236:5342  function _requireNotPaused() internal view virtual {... */\n    tag_323:\n        /* \"contracts/DTiket_flattened.sol\":5154:5161  _paused */\n      and(0xff, sload(0x03))\n        /* \"contracts/DTiket_flattened.sol\":5305:5314  !paused() */\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":5297:5335  require(!paused(), \"Pausable: paused\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":21641:21643   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":5297:5335  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":21623:21644   */\n      mstore\n        /* \"#utility.yul\":21680:21682   */\n      0x10\n        /* \"#utility.yul\":21660:21678   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":21653:21683   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":21699:21717   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":21692:21738   */\n      mstore\n        /* \"#utility.yul\":21755:21773   */\n      0x64\n      add\n        /* \"contracts/DTiket_flattened.sol\":5297:5335  require(!paused(), \"Pausable: paused\") */\n      tag_105\n        /* \"#utility.yul\":21439:21779   */\n      jump\n        /* \"#utility.yul\":14:187   */\n    tag_424:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_435\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_435:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_27:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_437:\n        /* \"#utility.yul\":360:389   */\n      tag_438\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_424\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_425:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":769:1014   */\n    tag_33:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_443\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_443:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_444\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_425\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_39:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_447:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_426:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_449:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_449)\n    tag_451:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_42:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_444\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_426\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_147:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_427:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_457\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_457\n      tag_147\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_428:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_460\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_460\n      tag_147\n      jump\t// in\n    tag_460:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_429:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_462\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_462:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_463\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_428\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_464\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_427\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_465\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_465:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_466:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_468\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_466)\n    tag_468:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_430:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_470:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_472\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_472\n      tag_147\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_473\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_427\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_474:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4780   */\n    tag_45:\n        /* \"#utility.yul\":4057:4063   */\n      0x00\n        /* \"#utility.yul\":4065:4071   */\n      dup1\n        /* \"#utility.yul\":4073:4079   */\n      0x00\n        /* \"#utility.yul\":4081:4087   */\n      dup1\n        /* \"#utility.yul\":4134:4137   */\n      0x80\n        /* \"#utility.yul\":4122:4131   */\n      dup6\n        /* \"#utility.yul\":4113:4120   */\n      dup8\n        /* \"#utility.yul\":4109:4132   */\n      sub\n        /* \"#utility.yul\":4105:4138   */\n      slt\n        /* \"#utility.yul\":4102:4155   */\n      iszero\n      tag_476\n      jumpi\n        /* \"#utility.yul\":4151:4152   */\n      0x00\n        /* \"#utility.yul\":4148:4149   */\n      dup1\n        /* \"#utility.yul\":4141:4153   */\n      revert\n        /* \"#utility.yul\":4102:4155   */\n    tag_476:\n        /* \"#utility.yul\":4174:4203   */\n      tag_477\n        /* \"#utility.yul\":4193:4202   */\n      dup6\n        /* \"#utility.yul\":4174:4203   */\n      tag_424\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":4164:4203   */\n      swap4\n      pop\n        /* \"#utility.yul\":4254:4256   */\n      0x20\n        /* \"#utility.yul\":4243:4252   */\n      dup6\n        /* \"#utility.yul\":4239:4257   */\n      add\n        /* \"#utility.yul\":4226:4258   */\n      calldataload\n        /* \"#utility.yul\":4277:4295   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4318:4320   */\n      dup1\n        /* \"#utility.yul\":4310:4316   */\n      dup3\n        /* \"#utility.yul\":4307:4321   */\n      gt\n        /* \"#utility.yul\":4304:4338   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":4334:4335   */\n      0x00\n        /* \"#utility.yul\":4331:4332   */\n      dup1\n        /* \"#utility.yul\":4324:4336   */\n      revert\n        /* \"#utility.yul\":4304:4338   */\n    tag_478:\n        /* \"#utility.yul\":4357:4418   */\n      tag_479\n        /* \"#utility.yul\":4410:4417   */\n      dup9\n        /* \"#utility.yul\":4401:4407   */\n      dup4\n        /* \"#utility.yul\":4390:4399   */\n      dup10\n        /* \"#utility.yul\":4386:4408   */\n      add\n        /* \"#utility.yul\":4357:4418   */\n      tag_429\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":4347:4418   */\n      swap5\n      pop\n        /* \"#utility.yul\":4471:4473   */\n      0x40\n        /* \"#utility.yul\":4460:4469   */\n      dup8\n        /* \"#utility.yul\":4456:4474   */\n      add\n        /* \"#utility.yul\":4443:4475   */\n      calldataload\n        /* \"#utility.yul\":4427:4475   */\n      swap2\n      pop\n        /* \"#utility.yul\":4500:4502   */\n      dup1\n        /* \"#utility.yul\":4490:4498   */\n      dup3\n        /* \"#utility.yul\":4487:4503   */\n      gt\n        /* \"#utility.yul\":4484:4520   */\n      iszero\n      tag_480\n      jumpi\n        /* \"#utility.yul\":4516:4517   */\n      0x00\n        /* \"#utility.yul\":4513:4514   */\n      dup1\n        /* \"#utility.yul\":4506:4518   */\n      revert\n        /* \"#utility.yul\":4484:4520   */\n    tag_480:\n        /* \"#utility.yul\":4539:4602   */\n      tag_481\n        /* \"#utility.yul\":4594:4601   */\n      dup9\n        /* \"#utility.yul\":4583:4591   */\n      dup4\n        /* \"#utility.yul\":4572:4581   */\n      dup10\n        /* \"#utility.yul\":4568:4592   */\n      add\n        /* \"#utility.yul\":4539:4602   */\n      tag_429\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":4529:4602   */\n      swap4\n      pop\n        /* \"#utility.yul\":4655:4657   */\n      0x60\n        /* \"#utility.yul\":4644:4653   */\n      dup8\n        /* \"#utility.yul\":4640:4658   */\n      add\n        /* \"#utility.yul\":4627:4659   */\n      calldataload\n        /* \"#utility.yul\":4611:4659   */\n      swap2\n      pop\n        /* \"#utility.yul\":4684:4686   */\n      dup1\n        /* \"#utility.yul\":4674:4682   */\n      dup3\n        /* \"#utility.yul\":4671:4687   */\n      gt\n        /* \"#utility.yul\":4668:4704   */\n      iszero\n      tag_482\n      jumpi\n        /* \"#utility.yul\":4700:4701   */\n      0x00\n        /* \"#utility.yul\":4697:4698   */\n      dup1\n        /* \"#utility.yul\":4690:4702   */\n      revert\n        /* \"#utility.yul\":4668:4704   */\n    tag_482:\n      pop\n        /* \"#utility.yul\":4723:4774   */\n      tag_483\n        /* \"#utility.yul\":4766:4773   */\n      dup8\n        /* \"#utility.yul\":4755:4763   */\n      dup3\n        /* \"#utility.yul\":4744:4753   */\n      dup9\n        /* \"#utility.yul\":4740:4764   */\n      add\n        /* \"#utility.yul\":4723:4774   */\n      tag_430\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":4713:4774   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4780   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4785:5728   */\n    tag_49:\n        /* \"#utility.yul\":4939:4945   */\n      0x00\n        /* \"#utility.yul\":4947:4953   */\n      dup1\n        /* \"#utility.yul\":4955:4961   */\n      0x00\n        /* \"#utility.yul\":4963:4969   */\n      dup1\n        /* \"#utility.yul\":4971:4977   */\n      0x00\n        /* \"#utility.yul\":5024:5027   */\n      0xa0\n        /* \"#utility.yul\":5012:5021   */\n      dup7\n        /* \"#utility.yul\":5003:5010   */\n      dup9\n        /* \"#utility.yul\":4999:5022   */\n      sub\n        /* \"#utility.yul\":4995:5028   */\n      slt\n        /* \"#utility.yul\":4992:5045   */\n      iszero\n      tag_485\n      jumpi\n        /* \"#utility.yul\":5041:5042   */\n      0x00\n        /* \"#utility.yul\":5038:5039   */\n      dup1\n        /* \"#utility.yul\":5031:5043   */\n      revert\n        /* \"#utility.yul\":4992:5045   */\n    tag_485:\n        /* \"#utility.yul\":5064:5093   */\n      tag_486\n        /* \"#utility.yul\":5083:5092   */\n      dup7\n        /* \"#utility.yul\":5064:5093   */\n      tag_424\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":5054:5093   */\n      swap5\n      pop\n        /* \"#utility.yul\":5112:5150   */\n      tag_487\n        /* \"#utility.yul\":5146:5148   */\n      0x20\n        /* \"#utility.yul\":5135:5144   */\n      dup8\n        /* \"#utility.yul\":5131:5149   */\n      add\n        /* \"#utility.yul\":5112:5150   */\n      tag_424\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":5102:5150   */\n      swap4\n      pop\n        /* \"#utility.yul\":5201:5203   */\n      0x40\n        /* \"#utility.yul\":5190:5199   */\n      dup7\n        /* \"#utility.yul\":5186:5204   */\n      add\n        /* \"#utility.yul\":5173:5205   */\n      calldataload\n        /* \"#utility.yul\":5224:5242   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5265:5267   */\n      dup1\n        /* \"#utility.yul\":5257:5263   */\n      dup3\n        /* \"#utility.yul\":5254:5268   */\n      gt\n        /* \"#utility.yul\":5251:5285   */\n      iszero\n      tag_488\n      jumpi\n        /* \"#utility.yul\":5281:5282   */\n      0x00\n        /* \"#utility.yul\":5278:5279   */\n      dup1\n        /* \"#utility.yul\":5271:5283   */\n      revert\n        /* \"#utility.yul\":5251:5285   */\n    tag_488:\n        /* \"#utility.yul\":5304:5365   */\n      tag_489\n        /* \"#utility.yul\":5357:5364   */\n      dup10\n        /* \"#utility.yul\":5348:5354   */\n      dup4\n        /* \"#utility.yul\":5337:5346   */\n      dup11\n        /* \"#utility.yul\":5333:5355   */\n      add\n        /* \"#utility.yul\":5304:5365   */\n      tag_429\n      jump\t// in\n    tag_489:\n        /* \"#utility.yul\":5294:5365   */\n      swap5\n      pop\n        /* \"#utility.yul\":5418:5420   */\n      0x60\n        /* \"#utility.yul\":5407:5416   */\n      dup9\n        /* \"#utility.yul\":5403:5421   */\n      add\n        /* \"#utility.yul\":5390:5422   */\n      calldataload\n        /* \"#utility.yul\":5374:5422   */\n      swap2\n      pop\n        /* \"#utility.yul\":5447:5449   */\n      dup1\n        /* \"#utility.yul\":5437:5445   */\n      dup3\n        /* \"#utility.yul\":5434:5450   */\n      gt\n        /* \"#utility.yul\":5431:5467   */\n      iszero\n      tag_490\n      jumpi\n        /* \"#utility.yul\":5463:5464   */\n      0x00\n        /* \"#utility.yul\":5460:5461   */\n      dup1\n        /* \"#utility.yul\":5453:5465   */\n      revert\n        /* \"#utility.yul\":5431:5467   */\n    tag_490:\n        /* \"#utility.yul\":5486:5549   */\n      tag_491\n        /* \"#utility.yul\":5541:5548   */\n      dup10\n        /* \"#utility.yul\":5530:5538   */\n      dup4\n        /* \"#utility.yul\":5519:5528   */\n      dup11\n        /* \"#utility.yul\":5515:5539   */\n      add\n        /* \"#utility.yul\":5486:5549   */\n      tag_429\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":5476:5549   */\n      swap4\n      pop\n        /* \"#utility.yul\":5602:5605   */\n      0x80\n        /* \"#utility.yul\":5591:5600   */\n      dup9\n        /* \"#utility.yul\":5587:5606   */\n      add\n        /* \"#utility.yul\":5574:5607   */\n      calldataload\n        /* \"#utility.yul\":5558:5607   */\n      swap2\n      pop\n        /* \"#utility.yul\":5632:5634   */\n      dup1\n        /* \"#utility.yul\":5622:5630   */\n      dup3\n        /* \"#utility.yul\":5619:5635   */\n      gt\n        /* \"#utility.yul\":5616:5652   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":5648:5649   */\n      0x00\n        /* \"#utility.yul\":5645:5646   */\n      dup1\n        /* \"#utility.yul\":5638:5650   */\n      revert\n        /* \"#utility.yul\":5616:5652   */\n    tag_492:\n      pop\n        /* \"#utility.yul\":5671:5722   */\n      tag_493\n        /* \"#utility.yul\":5714:5721   */\n      dup9\n        /* \"#utility.yul\":5703:5711   */\n      dup3\n        /* \"#utility.yul\":5692:5701   */\n      dup10\n        /* \"#utility.yul\":5688:5712   */\n      add\n        /* \"#utility.yul\":5671:5722   */\n      tag_430\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":5661:5722   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4785:5728   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5733:6941   */\n    tag_55:\n        /* \"#utility.yul\":5851:5857   */\n      0x00\n        /* \"#utility.yul\":5859:5865   */\n      dup1\n        /* \"#utility.yul\":5912:5914   */\n      0x40\n        /* \"#utility.yul\":5900:5909   */\n      dup4\n        /* \"#utility.yul\":5891:5898   */\n      dup6\n        /* \"#utility.yul\":5887:5910   */\n      sub\n        /* \"#utility.yul\":5883:5915   */\n      slt\n        /* \"#utility.yul\":5880:5932   */\n      iszero\n      tag_495\n      jumpi\n        /* \"#utility.yul\":5928:5929   */\n      0x00\n        /* \"#utility.yul\":5925:5926   */\n      dup1\n        /* \"#utility.yul\":5918:5930   */\n      revert\n        /* \"#utility.yul\":5880:5932   */\n    tag_495:\n        /* \"#utility.yul\":5968:5977   */\n      dup3\n        /* \"#utility.yul\":5955:5978   */\n      calldataload\n        /* \"#utility.yul\":5997:6015   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6038:6040   */\n      dup1\n        /* \"#utility.yul\":6030:6036   */\n      dup3\n        /* \"#utility.yul\":6027:6041   */\n      gt\n        /* \"#utility.yul\":6024:6058   */\n      iszero\n      tag_496\n      jumpi\n        /* \"#utility.yul\":6054:6055   */\n      0x00\n        /* \"#utility.yul\":6051:6052   */\n      dup1\n        /* \"#utility.yul\":6044:6056   */\n      revert\n        /* \"#utility.yul\":6024:6058   */\n    tag_496:\n        /* \"#utility.yul\":6092:6098   */\n      dup2\n        /* \"#utility.yul\":6081:6090   */\n      dup6\n        /* \"#utility.yul\":6077:6099   */\n      add\n        /* \"#utility.yul\":6067:6099   */\n      swap2\n      pop\n        /* \"#utility.yul\":6137:6144   */\n      dup6\n        /* \"#utility.yul\":6130:6134   */\n      0x1f\n        /* \"#utility.yul\":6126:6128   */\n      dup4\n        /* \"#utility.yul\":6122:6135   */\n      add\n        /* \"#utility.yul\":6118:6145   */\n      slt\n        /* \"#utility.yul\":6108:6163   */\n      tag_497\n      jumpi\n        /* \"#utility.yul\":6159:6160   */\n      0x00\n        /* \"#utility.yul\":6156:6157   */\n      dup1\n        /* \"#utility.yul\":6149:6161   */\n      revert\n        /* \"#utility.yul\":6108:6163   */\n    tag_497:\n        /* \"#utility.yul\":6195:6197   */\n      dup2\n        /* \"#utility.yul\":6182:6198   */\n      calldataload\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6240:6283   */\n      tag_498\n        /* \"#utility.yul\":6280:6282   */\n      dup3\n        /* \"#utility.yul\":6240:6283   */\n      tag_428\n      jump\t// in\n    tag_498:\n        /* \"#utility.yul\":6312:6314   */\n      0x40\n        /* \"#utility.yul\":6306:6315   */\n      mload\n        /* \"#utility.yul\":6324:6355   */\n      tag_499\n        /* \"#utility.yul\":6352:6354   */\n      dup3\n        /* \"#utility.yul\":6344:6350   */\n      dup3\n        /* \"#utility.yul\":6324:6355   */\n      tag_427\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":6390:6408   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":6478:6479   */\n      0x05\n        /* \"#utility.yul\":6474:6484   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":6466:6485   */\n      dup6\n      add\n        /* \"#utility.yul\":6462:6490   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":6424:6439   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":6502:6521   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":6499:6538   */\n      iszero\n      tag_500\n      jumpi\n        /* \"#utility.yul\":6534:6535   */\n      0x00\n        /* \"#utility.yul\":6531:6532   */\n      dup1\n        /* \"#utility.yul\":6524:6536   */\n      revert\n        /* \"#utility.yul\":6499:6538   */\n    tag_500:\n        /* \"#utility.yul\":6558:6569   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6578:6726   */\n    tag_501:\n        /* \"#utility.yul\":6594:6600   */\n      dup4\n        /* \"#utility.yul\":6589:6592   */\n      dup7\n        /* \"#utility.yul\":6586:6601   */\n      lt\n        /* \"#utility.yul\":6578:6726   */\n      iszero\n      tag_503\n      jumpi\n        /* \"#utility.yul\":6660:6683   */\n      tag_504\n        /* \"#utility.yul\":6679:6682   */\n      dup7\n        /* \"#utility.yul\":6660:6683   */\n      tag_424\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":6648:6684   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6611:6623   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6704:6716   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6578:6726   */\n      jump(tag_501)\n    tag_503:\n        /* \"#utility.yul\":6745:6751   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":6789:6807   */\n      dup7\n      add\n        /* \"#utility.yul\":6776:6808   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":6820:6836   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":6817:6853   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":6849:6850   */\n      0x00\n        /* \"#utility.yul\":6846:6847   */\n      dup1\n        /* \"#utility.yul\":6839:6851   */\n      revert\n        /* \"#utility.yul\":6817:6853   */\n    tag_505:\n      pop\n        /* \"#utility.yul\":6872:6935   */\n      tag_506\n        /* \"#utility.yul\":6927:6934   */\n      dup6\n        /* \"#utility.yul\":6916:6924   */\n      dup3\n        /* \"#utility.yul\":6905:6914   */\n      dup7\n        /* \"#utility.yul\":6901:6925   */\n      add\n        /* \"#utility.yul\":6872:6935   */\n      tag_429\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":6862:6935   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5733:6941   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6946:7381   */\n    tag_431:\n        /* \"#utility.yul\":6999:7002   */\n      0x00\n        /* \"#utility.yul\":7037:7042   */\n      dup2\n        /* \"#utility.yul\":7031:7043   */\n      mload\n        /* \"#utility.yul\":7064:7070   */\n      dup1\n        /* \"#utility.yul\":7059:7062   */\n      dup5\n        /* \"#utility.yul\":7052:7071   */\n      mstore\n        /* \"#utility.yul\":7090:7094   */\n      0x20\n        /* \"#utility.yul\":7119:7121   */\n      dup1\n        /* \"#utility.yul\":7114:7117   */\n      dup6\n        /* \"#utility.yul\":7110:7122   */\n      add\n        /* \"#utility.yul\":7103:7122   */\n      swap5\n      pop\n        /* \"#utility.yul\":7156:7158   */\n      dup1\n        /* \"#utility.yul\":7149:7154   */\n      dup5\n        /* \"#utility.yul\":7145:7159   */\n      add\n        /* \"#utility.yul\":7177:7178   */\n      0x00\n        /* \"#utility.yul\":7187:7356   */\n    tag_508:\n        /* \"#utility.yul\":7201:7207   */\n      dup4\n        /* \"#utility.yul\":7198:7199   */\n      dup2\n        /* \"#utility.yul\":7195:7208   */\n      lt\n        /* \"#utility.yul\":7187:7356   */\n      iszero\n      tag_510\n      jumpi\n        /* \"#utility.yul\":7262:7275   */\n      dup2\n      mload\n        /* \"#utility.yul\":7250:7276   */\n      dup8\n      mstore\n        /* \"#utility.yul\":7296:7308   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":7331:7346   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":7223:7224   */\n      0x01\n        /* \"#utility.yul\":7216:7225   */\n      add\n        /* \"#utility.yul\":7187:7356   */\n      jump(tag_508)\n    tag_510:\n      pop\n        /* \"#utility.yul\":7372:7375   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6946:7381   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7386:7647   */\n    tag_58:\n        /* \"#utility.yul\":7565:7567   */\n      0x20\n        /* \"#utility.yul\":7554:7563   */\n      dup2\n        /* \"#utility.yul\":7547:7568   */\n      mstore\n        /* \"#utility.yul\":7528:7532   */\n      0x00\n        /* \"#utility.yul\":7585:7641   */\n      tag_444\n        /* \"#utility.yul\":7637:7639   */\n      0x20\n        /* \"#utility.yul\":7626:7635   */\n      dup4\n        /* \"#utility.yul\":7622:7640   */\n      add\n        /* \"#utility.yul\":7614:7620   */\n      dup5\n        /* \"#utility.yul\":7585:7641   */\n      tag_431\n      jump\t// in\n        /* \"#utility.yul\":7652:8321   */\n    tag_64:\n        /* \"#utility.yul\":7779:7785   */\n      0x00\n        /* \"#utility.yul\":7787:7793   */\n      dup1\n        /* \"#utility.yul\":7795:7801   */\n      0x00\n        /* \"#utility.yul\":7848:7850   */\n      0x60\n        /* \"#utility.yul\":7836:7845   */\n      dup5\n        /* \"#utility.yul\":7827:7834   */\n      dup7\n        /* \"#utility.yul\":7823:7846   */\n      sub\n        /* \"#utility.yul\":7819:7851   */\n      slt\n        /* \"#utility.yul\":7816:7868   */\n      iszero\n      tag_514\n      jumpi\n        /* \"#utility.yul\":7864:7865   */\n      0x00\n        /* \"#utility.yul\":7861:7862   */\n      dup1\n        /* \"#utility.yul\":7854:7866   */\n      revert\n        /* \"#utility.yul\":7816:7868   */\n    tag_514:\n        /* \"#utility.yul\":7887:7916   */\n      tag_515\n        /* \"#utility.yul\":7906:7915   */\n      dup5\n        /* \"#utility.yul\":7887:7916   */\n      tag_424\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":7877:7916   */\n      swap3\n      pop\n        /* \"#utility.yul\":7967:7969   */\n      0x20\n        /* \"#utility.yul\":7956:7965   */\n      dup5\n        /* \"#utility.yul\":7952:7970   */\n      add\n        /* \"#utility.yul\":7939:7971   */\n      calldataload\n        /* \"#utility.yul\":7990:8008   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8031:8033   */\n      dup1\n        /* \"#utility.yul\":8023:8029   */\n      dup3\n        /* \"#utility.yul\":8020:8034   */\n      gt\n        /* \"#utility.yul\":8017:8051   */\n      iszero\n      tag_516\n      jumpi\n        /* \"#utility.yul\":8047:8048   */\n      0x00\n        /* \"#utility.yul\":8044:8045   */\n      dup1\n        /* \"#utility.yul\":8037:8049   */\n      revert\n        /* \"#utility.yul\":8017:8051   */\n    tag_516:\n        /* \"#utility.yul\":8070:8131   */\n      tag_517\n        /* \"#utility.yul\":8123:8130   */\n      dup8\n        /* \"#utility.yul\":8114:8120   */\n      dup4\n        /* \"#utility.yul\":8103:8112   */\n      dup9\n        /* \"#utility.yul\":8099:8121   */\n      add\n        /* \"#utility.yul\":8070:8131   */\n      tag_429\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":8060:8131   */\n      swap4\n      pop\n        /* \"#utility.yul\":8184:8186   */\n      0x40\n        /* \"#utility.yul\":8173:8182   */\n      dup7\n        /* \"#utility.yul\":8169:8187   */\n      add\n        /* \"#utility.yul\":8156:8188   */\n      calldataload\n        /* \"#utility.yul\":8140:8188   */\n      swap2\n      pop\n        /* \"#utility.yul\":8213:8215   */\n      dup1\n        /* \"#utility.yul\":8203:8211   */\n      dup3\n        /* \"#utility.yul\":8200:8216   */\n      gt\n        /* \"#utility.yul\":8197:8233   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":8229:8230   */\n      0x00\n        /* \"#utility.yul\":8226:8227   */\n      dup1\n        /* \"#utility.yul\":8219:8231   */\n      revert\n        /* \"#utility.yul\":8197:8233   */\n    tag_518:\n      pop\n        /* \"#utility.yul\":8252:8315   */\n      tag_519\n        /* \"#utility.yul\":8307:8314   */\n      dup7\n        /* \"#utility.yul\":8296:8304   */\n      dup3\n        /* \"#utility.yul\":8285:8294   */\n      dup8\n        /* \"#utility.yul\":8281:8305   */\n      add\n        /* \"#utility.yul\":8252:8315   */\n      tag_429\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":8242:8315   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":7652:8321   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8326:8857   */\n    tag_70:\n        /* \"#utility.yul\":8421:8427   */\n      0x00\n        /* \"#utility.yul\":8429:8435   */\n      dup1\n        /* \"#utility.yul\":8437:8443   */\n      0x00\n        /* \"#utility.yul\":8445:8451   */\n      dup1\n        /* \"#utility.yul\":8498:8501   */\n      0x80\n        /* \"#utility.yul\":8486:8495   */\n      dup6\n        /* \"#utility.yul\":8477:8484   */\n      dup8\n        /* \"#utility.yul\":8473:8496   */\n      sub\n        /* \"#utility.yul\":8469:8502   */\n      slt\n        /* \"#utility.yul\":8466:8519   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":8515:8516   */\n      0x00\n        /* \"#utility.yul\":8512:8513   */\n      dup1\n        /* \"#utility.yul\":8505:8517   */\n      revert\n        /* \"#utility.yul\":8466:8519   */\n    tag_521:\n        /* \"#utility.yul\":8538:8567   */\n      tag_522\n        /* \"#utility.yul\":8557:8566   */\n      dup6\n        /* \"#utility.yul\":8538:8567   */\n      tag_424\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":8528:8567   */\n      swap4\n      pop\n        /* \"#utility.yul\":8614:8616   */\n      0x20\n        /* \"#utility.yul\":8603:8612   */\n      dup6\n        /* \"#utility.yul\":8599:8617   */\n      add\n        /* \"#utility.yul\":8586:8618   */\n      calldataload\n        /* \"#utility.yul\":8576:8618   */\n      swap3\n      pop\n        /* \"#utility.yul\":8665:8667   */\n      0x40\n        /* \"#utility.yul\":8654:8663   */\n      dup6\n        /* \"#utility.yul\":8650:8668   */\n      add\n        /* \"#utility.yul\":8637:8669   */\n      calldataload\n        /* \"#utility.yul\":8627:8669   */\n      swap2\n      pop\n        /* \"#utility.yul\":8720:8722   */\n      0x60\n        /* \"#utility.yul\":8709:8718   */\n      dup6\n        /* \"#utility.yul\":8705:8723   */\n      add\n        /* \"#utility.yul\":8692:8724   */\n      calldataload\n        /* \"#utility.yul\":8747:8765   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8739:8745   */\n      dup2\n        /* \"#utility.yul\":8736:8766   */\n      gt\n        /* \"#utility.yul\":8733:8783   */\n      iszero\n      tag_523\n      jumpi\n        /* \"#utility.yul\":8779:8780   */\n      0x00\n        /* \"#utility.yul\":8776:8777   */\n      dup1\n        /* \"#utility.yul\":8769:8781   */\n      revert\n        /* \"#utility.yul\":8733:8783   */\n    tag_523:\n        /* \"#utility.yul\":8802:8851   */\n      tag_483\n        /* \"#utility.yul\":8843:8850   */\n      dup8\n        /* \"#utility.yul\":8834:8840   */\n      dup3\n        /* \"#utility.yul\":8823:8832   */\n      dup9\n        /* \"#utility.yul\":8819:8841   */\n      add\n        /* \"#utility.yul\":8802:8851   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":9070:9417   */\n    tag_80:\n        /* \"#utility.yul\":9135:9141   */\n      0x00\n        /* \"#utility.yul\":9143:9149   */\n      dup1\n        /* \"#utility.yul\":9196:9198   */\n      0x40\n        /* \"#utility.yul\":9184:9193   */\n      dup4\n        /* \"#utility.yul\":9175:9182   */\n      dup6\n        /* \"#utility.yul\":9171:9194   */\n      sub\n        /* \"#utility.yul\":9167:9199   */\n      slt\n        /* \"#utility.yul\":9164:9216   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":9212:9213   */\n      0x00\n        /* \"#utility.yul\":9209:9210   */\n      dup1\n        /* \"#utility.yul\":9202:9214   */\n      revert\n        /* \"#utility.yul\":9164:9216   */\n    tag_527:\n        /* \"#utility.yul\":9235:9264   */\n      tag_528\n        /* \"#utility.yul\":9254:9263   */\n      dup4\n        /* \"#utility.yul\":9235:9264   */\n      tag_424\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":9225:9264   */\n      swap2\n      pop\n        /* \"#utility.yul\":9314:9316   */\n      0x20\n        /* \"#utility.yul\":9303:9312   */\n      dup4\n        /* \"#utility.yul\":9299:9317   */\n      add\n        /* \"#utility.yul\":9286:9318   */\n      calldataload\n        /* \"#utility.yul\":9361:9366   */\n      dup1\n        /* \"#utility.yul\":9354:9367   */\n      iszero\n        /* \"#utility.yul\":9347:9368   */\n      iszero\n        /* \"#utility.yul\":9340:9345   */\n      dup2\n        /* \"#utility.yul\":9337:9369   */\n      eq\n        /* \"#utility.yul\":9327:9387   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":9383:9384   */\n      0x00\n        /* \"#utility.yul\":9380:9381   */\n      dup1\n        /* \"#utility.yul\":9373:9385   */\n      revert\n        /* \"#utility.yul\":9327:9387   */\n    tag_529:\n        /* \"#utility.yul\":9406:9411   */\n      dup1\n        /* \"#utility.yul\":9396:9411   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":9070:9417   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9422:9856   */\n    tag_84:\n        /* \"#utility.yul\":9498:9504   */\n      0x00\n        /* \"#utility.yul\":9506:9512   */\n      dup1\n        /* \"#utility.yul\":9514:9520   */\n      0x00\n        /* \"#utility.yul\":9567:9569   */\n      0x60\n        /* \"#utility.yul\":9555:9564   */\n      dup5\n        /* \"#utility.yul\":9546:9553   */\n      dup7\n        /* \"#utility.yul\":9542:9565   */\n      sub\n        /* \"#utility.yul\":9538:9570   */\n      slt\n        /* \"#utility.yul\":9535:9587   */\n      iszero\n      tag_531\n      jumpi\n        /* \"#utility.yul\":9583:9584   */\n      0x00\n        /* \"#utility.yul\":9580:9581   */\n      dup1\n        /* \"#utility.yul\":9573:9585   */\n      revert\n        /* \"#utility.yul\":9535:9587   */\n    tag_531:\n        /* \"#utility.yul\":9606:9635   */\n      tag_532\n        /* \"#utility.yul\":9625:9634   */\n      dup5\n        /* \"#utility.yul\":9606:9635   */\n      tag_424\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":9596:9635   */\n      swap3\n      pop\n        /* \"#utility.yul\":9685:9687   */\n      0x20\n        /* \"#utility.yul\":9674:9683   */\n      dup5\n        /* \"#utility.yul\":9670:9688   */\n      add\n        /* \"#utility.yul\":9657:9689   */\n      calldataload\n        /* \"#utility.yul\":9729:9755   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":9722:9727   */\n      dup2\n        /* \"#utility.yul\":9718:9756   */\n      and\n        /* \"#utility.yul\":9711:9716   */\n      dup2\n        /* \"#utility.yul\":9708:9757   */\n      eq\n        /* \"#utility.yul\":9698:9775   */\n      tag_533\n      jumpi\n        /* \"#utility.yul\":9771:9772   */\n      0x00\n        /* \"#utility.yul\":9768:9769   */\n      dup1\n        /* \"#utility.yul\":9761:9773   */\n      revert\n        /* \"#utility.yul\":9698:9775   */\n    tag_533:\n        /* \"#utility.yul\":9422:9856   */\n      swap3\n      swap6\n        /* \"#utility.yul\":9794:9799   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":9846:9848   */\n      0x40\n        /* \"#utility.yul\":9831:9849   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":9818:9850   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":9422:9856   */\n      jump\t// out\n        /* \"#utility.yul\":9861:10121   */\n    tag_88:\n        /* \"#utility.yul\":9929:9935   */\n      0x00\n        /* \"#utility.yul\":9937:9943   */\n      dup1\n        /* \"#utility.yul\":9990:9992   */\n      0x40\n        /* \"#utility.yul\":9978:9987   */\n      dup4\n        /* \"#utility.yul\":9969:9976   */\n      dup6\n        /* \"#utility.yul\":9965:9988   */\n      sub\n        /* \"#utility.yul\":9961:9993   */\n      slt\n        /* \"#utility.yul\":9958:10010   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":10006:10007   */\n      0x00\n        /* \"#utility.yul\":10003:10004   */\n      dup1\n        /* \"#utility.yul\":9996:10008   */\n      revert\n        /* \"#utility.yul\":9958:10010   */\n    tag_535:\n        /* \"#utility.yul\":10029:10058   */\n      tag_536\n        /* \"#utility.yul\":10048:10057   */\n      dup4\n        /* \"#utility.yul\":10029:10058   */\n      tag_424\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":10019:10058   */\n      swap2\n      pop\n        /* \"#utility.yul\":10077:10115   */\n      tag_537\n        /* \"#utility.yul\":10111:10113   */\n      0x20\n        /* \"#utility.yul\":10100:10109   */\n      dup5\n        /* \"#utility.yul\":10096:10114   */\n      add\n        /* \"#utility.yul\":10077:10115   */\n      tag_424\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":10067:10115   */\n      swap1\n      pop\n        /* \"#utility.yul\":9861:10121   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10126:10732   */\n    tag_93:\n        /* \"#utility.yul\":10230:10236   */\n      0x00\n        /* \"#utility.yul\":10238:10244   */\n      dup1\n        /* \"#utility.yul\":10246:10252   */\n      0x00\n        /* \"#utility.yul\":10254:10260   */\n      dup1\n        /* \"#utility.yul\":10262:10268   */\n      0x00\n        /* \"#utility.yul\":10315:10318   */\n      0xa0\n        /* \"#utility.yul\":10303:10312   */\n      dup7\n        /* \"#utility.yul\":10294:10301   */\n      dup9\n        /* \"#utility.yul\":10290:10313   */\n      sub\n        /* \"#utility.yul\":10286:10319   */\n      slt\n        /* \"#utility.yul\":10283:10336   */\n      iszero\n      tag_539\n      jumpi\n        /* \"#utility.yul\":10332:10333   */\n      0x00\n        /* \"#utility.yul\":10329:10330   */\n      dup1\n        /* \"#utility.yul\":10322:10334   */\n      revert\n        /* \"#utility.yul\":10283:10336   */\n    tag_539:\n        /* \"#utility.yul\":10355:10384   */\n      tag_540\n        /* \"#utility.yul\":10374:10383   */\n      dup7\n        /* \"#utility.yul\":10355:10384   */\n      tag_424\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":10345:10384   */\n      swap5\n      pop\n        /* \"#utility.yul\":10403:10441   */\n      tag_541\n        /* \"#utility.yul\":10437:10439   */\n      0x20\n        /* \"#utility.yul\":10426:10435   */\n      dup8\n        /* \"#utility.yul\":10422:10440   */\n      add\n        /* \"#utility.yul\":10403:10441   */\n      tag_424\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":10393:10441   */\n      swap4\n      pop\n        /* \"#utility.yul\":10488:10490   */\n      0x40\n        /* \"#utility.yul\":10477:10486   */\n      dup7\n        /* \"#utility.yul\":10473:10491   */\n      add\n        /* \"#utility.yul\":10460:10492   */\n      calldataload\n        /* \"#utility.yul\":10450:10492   */\n      swap3\n      pop\n        /* \"#utility.yul\":10539:10541   */\n      0x60\n        /* \"#utility.yul\":10528:10537   */\n      dup7\n        /* \"#utility.yul\":10524:10542   */\n      add\n        /* \"#utility.yul\":10511:10543   */\n      calldataload\n        /* \"#utility.yul\":10501:10543   */\n      swap2\n      pop\n        /* \"#utility.yul\":10594:10597   */\n      0x80\n        /* \"#utility.yul\":10583:10592   */\n      dup7\n        /* \"#utility.yul\":10579:10598   */\n      add\n        /* \"#utility.yul\":10566:10599   */\n      calldataload\n        /* \"#utility.yul\":10622:10640   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":10614:10620   */\n      dup2\n        /* \"#utility.yul\":10611:10641   */\n      gt\n        /* \"#utility.yul\":10608:10658   */\n      iszero\n      tag_542\n      jumpi\n        /* \"#utility.yul\":10654:10655   */\n      0x00\n        /* \"#utility.yul\":10651:10652   */\n      dup1\n        /* \"#utility.yul\":10644:10656   */\n      revert\n        /* \"#utility.yul\":10608:10658   */\n    tag_542:\n        /* \"#utility.yul\":10677:10726   */\n      tag_493\n        /* \"#utility.yul\":10718:10725   */\n      dup9\n        /* \"#utility.yul\":10709:10715   */\n      dup3\n        /* \"#utility.yul\":10698:10707   */\n      dup10\n        /* \"#utility.yul\":10694:10716   */\n      add\n        /* \"#utility.yul\":10677:10726   */\n      tag_430\n      jump\t// in\n        /* \"#utility.yul\":10737:10923   */\n    tag_97:\n        /* \"#utility.yul\":10796:10802   */\n      0x00\n        /* \"#utility.yul\":10849:10851   */\n      0x20\n        /* \"#utility.yul\":10837:10846   */\n      dup3\n        /* \"#utility.yul\":10828:10835   */\n      dup5\n        /* \"#utility.yul\":10824:10847   */\n      sub\n        /* \"#utility.yul\":10820:10852   */\n      slt\n        /* \"#utility.yul\":10817:10869   */\n      iszero\n      tag_545\n      jumpi\n        /* \"#utility.yul\":10865:10866   */\n      0x00\n        /* \"#utility.yul\":10862:10863   */\n      dup1\n        /* \"#utility.yul\":10855:10867   */\n      revert\n        /* \"#utility.yul\":10817:10869   */\n    tag_545:\n        /* \"#utility.yul\":10888:10917   */\n      tag_444\n        /* \"#utility.yul\":10907:10916   */\n      dup3\n        /* \"#utility.yul\":10888:10917   */\n      tag_424\n      jump\t// in\n        /* \"#utility.yul\":10928:11250   */\n    tag_101:\n        /* \"#utility.yul\":11005:11011   */\n      0x00\n        /* \"#utility.yul\":11013:11019   */\n      dup1\n        /* \"#utility.yul\":11021:11027   */\n      0x00\n        /* \"#utility.yul\":11074:11076   */\n      0x60\n        /* \"#utility.yul\":11062:11071   */\n      dup5\n        /* \"#utility.yul\":11053:11060   */\n      dup7\n        /* \"#utility.yul\":11049:11072   */\n      sub\n        /* \"#utility.yul\":11045:11077   */\n      slt\n        /* \"#utility.yul\":11042:11094   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":11090:11091   */\n      0x00\n        /* \"#utility.yul\":11087:11088   */\n      dup1\n        /* \"#utility.yul\":11080:11092   */\n      revert\n        /* \"#utility.yul\":11042:11094   */\n    tag_548:\n        /* \"#utility.yul\":11113:11142   */\n      tag_549\n        /* \"#utility.yul\":11132:11141   */\n      dup5\n        /* \"#utility.yul\":11113:11142   */\n      tag_424\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":11103:11142   */\n      swap6\n        /* \"#utility.yul\":11189:11191   */\n      0x20\n        /* \"#utility.yul\":11174:11192   */\n      dup6\n      add\n        /* \"#utility.yul\":11161:11193   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":11240:11242   */\n      0x40\n        /* \"#utility.yul\":11225:11243   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":11212:11244   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":10928:11250   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11666:12046   */\n    tag_114:\n        /* \"#utility.yul\":11745:11746   */\n      0x01\n        /* \"#utility.yul\":11741:11753   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":11788:11800   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":11809:11870   */\n      tag_552\n      jumpi\n        /* \"#utility.yul\":11863:11867   */\n      0x7f\n        /* \"#utility.yul\":11855:11861   */\n      dup3\n        /* \"#utility.yul\":11851:11868   */\n      and\n        /* \"#utility.yul\":11841:11868   */\n      swap2\n      pop\n        /* \"#utility.yul\":11809:11870   */\n    tag_552:\n        /* \"#utility.yul\":11916:11918   */\n      0x20\n        /* \"#utility.yul\":11908:11914   */\n      dup3\n        /* \"#utility.yul\":11905:11919   */\n      lt\n        /* \"#utility.yul\":11885:11903   */\n      dup2\n        /* \"#utility.yul\":11882:11920   */\n      sub\n        /* \"#utility.yul\":11879:12040   */\n      tag_553\n      jumpi\n        /* \"#utility.yul\":11962:11972   */\n      0x4e487b71\n        /* \"#utility.yul\":11957:11960   */\n      0xe0\n        /* \"#utility.yul\":11953:11973   */\n      shl\n        /* \"#utility.yul\":11950:11951   */\n      0x00\n        /* \"#utility.yul\":11943:11974   */\n      mstore\n        /* \"#utility.yul\":11997:12001   */\n      0x22\n        /* \"#utility.yul\":11994:11995   */\n      0x04\n        /* \"#utility.yul\":11987:12002   */\n      mstore\n        /* \"#utility.yul\":12025:12029   */\n      0x24\n        /* \"#utility.yul\":12022:12023   */\n      0x00\n        /* \"#utility.yul\":12015:12030   */\n      revert\n        /* \"#utility.yul\":11879:12040   */\n    tag_553:\n      pop\n        /* \"#utility.yul\":11666:12046   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12051:12461   */\n    tag_133:\n        /* \"#utility.yul\":12253:12255   */\n      0x20\n        /* \"#utility.yul\":12235:12256   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":12292:12294   */\n      0x2e\n        /* \"#utility.yul\":12272:12290   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":12265:12295   */\n      mstore\n        /* \"#utility.yul\":12331:12365   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":12326:12328   */\n      0x40\n        /* \"#utility.yul\":12311:12329   */\n      dup3\n      add\n        /* \"#utility.yul\":12304:12366   */\n      mstore\n      shl(0x92, 0x195c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":12397:12399   */\n      0x60\n        /* \"#utility.yul\":12382:12400   */\n      dup3\n      add\n        /* \"#utility.yul\":12375:12419   */\n      mstore\n        /* \"#utility.yul\":12451:12454   */\n      0x80\n        /* \"#utility.yul\":12436:12455   */\n      add\n      swap1\n        /* \"#utility.yul\":12051:12461   */\n      jump\t// out\n        /* \"#utility.yul\":12876:13003   */\n    tag_155:\n        /* \"#utility.yul\":12937:12947   */\n      0x4e487b71\n        /* \"#utility.yul\":12932:12935   */\n      0xe0\n        /* \"#utility.yul\":12928:12948   */\n      shl\n        /* \"#utility.yul\":12925:12926   */\n      0x00\n        /* \"#utility.yul\":12918:12949   */\n      mstore\n        /* \"#utility.yul\":12968:12972   */\n      0x32\n        /* \"#utility.yul\":12965:12966   */\n      0x04\n        /* \"#utility.yul\":12958:12973   */\n      mstore\n        /* \"#utility.yul\":12992:12996   */\n      0x24\n        /* \"#utility.yul\":12989:12990   */\n      0x00\n        /* \"#utility.yul\":12982:12997   */\n      revert\n        /* \"#utility.yul\":13008:13135   */\n    tag_432:\n        /* \"#utility.yul\":13069:13079   */\n      0x4e487b71\n        /* \"#utility.yul\":13064:13067   */\n      0xe0\n        /* \"#utility.yul\":13060:13080   */\n      shl\n        /* \"#utility.yul\":13057:13058   */\n      0x00\n        /* \"#utility.yul\":13050:13081   */\n      mstore\n        /* \"#utility.yul\":13100:13104   */\n      0x11\n        /* \"#utility.yul\":13097:13098   */\n      0x04\n        /* \"#utility.yul\":13090:13105   */\n      mstore\n        /* \"#utility.yul\":13124:13128   */\n      0x24\n        /* \"#utility.yul\":13121:13122   */\n      0x00\n        /* \"#utility.yul\":13114:13129   */\n      revert\n        /* \"#utility.yul\":13140:13275   */\n    tag_161:\n        /* \"#utility.yul\":13179:13182   */\n      0x00\n        /* \"#utility.yul\":13200:13217   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":13197:13240   */\n      tag_560\n      jumpi\n        /* \"#utility.yul\":13220:13238   */\n      tag_560\n      tag_432\n      jump\t// in\n    tag_560:\n      pop\n        /* \"#utility.yul\":13267:13268   */\n      0x01\n        /* \"#utility.yul\":13256:13269   */\n      add\n      swap1\n        /* \"#utility.yul\":13140:13275   */\n      jump\t// out\n        /* \"#utility.yul\":14048:14445   */\n    tag_232:\n        /* \"#utility.yul\":14250:14252   */\n      0x20\n        /* \"#utility.yul\":14232:14253   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14289:14291   */\n      0x21\n        /* \"#utility.yul\":14269:14287   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14262:14292   */\n      mstore\n        /* \"#utility.yul\":14328:14362   */\n      0x455243313135353a206d696e7420746f20746865207a65726f20616464726573\n        /* \"#utility.yul\":14323:14325   */\n      0x40\n        /* \"#utility.yul\":14308:14326   */\n      dup3\n      add\n        /* \"#utility.yul\":14301:14363   */\n      mstore\n      shl(0xf8, 0x73)\n        /* \"#utility.yul\":14394:14396   */\n      0x60\n        /* \"#utility.yul\":14379:14397   */\n      dup3\n      add\n        /* \"#utility.yul\":14372:14403   */\n      mstore\n        /* \"#utility.yul\":14435:14438   */\n      0x80\n        /* \"#utility.yul\":14420:14439   */\n      add\n      swap1\n        /* \"#utility.yul\":14048:14445   */\n      jump\t// out\n        /* \"#utility.yul\":14450:14854   */\n    tag_235:\n        /* \"#utility.yul\":14652:14654   */\n      0x20\n        /* \"#utility.yul\":14634:14655   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":14691:14693   */\n      0x28\n        /* \"#utility.yul\":14671:14689   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":14664:14694   */\n      mstore\n        /* \"#utility.yul\":14730:14764   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":14725:14727   */\n      0x40\n        /* \"#utility.yul\":14710:14728   */\n      dup3\n      add\n        /* \"#utility.yul\":14703:14765   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":14796:14798   */\n      0x60\n        /* \"#utility.yul\":14781:14799   */\n      dup3\n      add\n        /* \"#utility.yul\":14774:14812   */\n      mstore\n        /* \"#utility.yul\":14844:14847   */\n      0x80\n        /* \"#utility.yul\":14829:14848   */\n      add\n      swap1\n        /* \"#utility.yul\":14450:14854   */\n      jump\t// out\n        /* \"#utility.yul\":14859:14984   */\n    tag_247:\n        /* \"#utility.yul\":14924:14933   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":14945:14955   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":14942:14978   */\n      iszero\n      tag_103\n      jumpi\n        /* \"#utility.yul\":14958:14976   */\n      tag_103\n      tag_432\n      jump\t// in\n        /* \"#utility.yul\":14989:15454   */\n    tag_250:\n        /* \"#utility.yul\":15246:15248   */\n      0x40\n        /* \"#utility.yul\":15235:15244   */\n      dup2\n        /* \"#utility.yul\":15228:15249   */\n      mstore\n        /* \"#utility.yul\":15209:15213   */\n      0x00\n        /* \"#utility.yul\":15272:15328   */\n      tag_569\n        /* \"#utility.yul\":15324:15326   */\n      0x40\n        /* \"#utility.yul\":15313:15322   */\n      dup4\n        /* \"#utility.yul\":15309:15327   */\n      add\n        /* \"#utility.yul\":15301:15307   */\n      dup6\n        /* \"#utility.yul\":15272:15328   */\n      tag_431\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":15376:15385   */\n      dup3\n        /* \"#utility.yul\":15368:15374   */\n      dup2\n        /* \"#utility.yul\":15364:15386   */\n      sub\n        /* \"#utility.yul\":15359:15361   */\n      0x20\n        /* \"#utility.yul\":15348:15357   */\n      dup5\n        /* \"#utility.yul\":15344:15362   */\n      add\n        /* \"#utility.yul\":15337:15387   */\n      mstore\n        /* \"#utility.yul\":15404:15448   */\n      tag_570\n        /* \"#utility.yul\":15441:15447   */\n      dup2\n        /* \"#utility.yul\":15433:15439   */\n      dup6\n        /* \"#utility.yul\":15404:15448   */\n      tag_431\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15396:15448   */\n      swap6\n        /* \"#utility.yul\":14989:15454   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15459:15860   */\n    tag_261:\n        /* \"#utility.yul\":15661:15663   */\n      0x20\n        /* \"#utility.yul\":15643:15664   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15700:15702   */\n      0x25\n        /* \"#utility.yul\":15680:15698   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15673:15703   */\n      mstore\n        /* \"#utility.yul\":15739:15773   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":15734:15736   */\n      0x40\n        /* \"#utility.yul\":15719:15737   */\n      dup3\n      add\n        /* \"#utility.yul\":15712:15774   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":15805:15807   */\n      0x60\n        /* \"#utility.yul\":15790:15808   */\n      dup3\n      add\n        /* \"#utility.yul\":15783:15818   */\n      mstore\n        /* \"#utility.yul\":15850:15853   */\n      0x80\n        /* \"#utility.yul\":15835:15854   */\n      add\n      swap1\n        /* \"#utility.yul\":15459:15860   */\n      jump\t// out\n        /* \"#utility.yul\":15865:16271   */\n    tag_273:\n        /* \"#utility.yul\":16067:16069   */\n      0x20\n        /* \"#utility.yul\":16049:16070   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16106:16108   */\n      0x2a\n        /* \"#utility.yul\":16086:16104   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16079:16109   */\n      mstore\n        /* \"#utility.yul\":16145:16179   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":16140:16142   */\n      0x40\n        /* \"#utility.yul\":16125:16143   */\n      dup3\n      add\n        /* \"#utility.yul\":16118:16180   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":16211:16213   */\n      0x60\n        /* \"#utility.yul\":16196:16214   */\n      dup3\n      add\n        /* \"#utility.yul\":16189:16229   */\n      mstore\n        /* \"#utility.yul\":16261:16264   */\n      0x80\n        /* \"#utility.yul\":16246:16265   */\n      add\n      swap1\n        /* \"#utility.yul\":15865:16271   */\n      jump\t// out\n        /* \"#utility.yul\":16276:16675   */\n    tag_288:\n        /* \"#utility.yul\":16478:16480   */\n      0x20\n        /* \"#utility.yul\":16460:16481   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16517:16519   */\n      0x23\n        /* \"#utility.yul\":16497:16515   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16490:16520   */\n      mstore\n        /* \"#utility.yul\":16556:16590   */\n      0x455243313135353a206275726e2066726f6d20746865207a65726f2061646472\n        /* \"#utility.yul\":16551:16553   */\n      0x40\n        /* \"#utility.yul\":16536:16554   */\n      dup3\n      add\n        /* \"#utility.yul\":16529:16591   */\n      mstore\n      shl(0xe8, 0x657373)\n        /* \"#utility.yul\":16622:16624   */\n      0x60\n        /* \"#utility.yul\":16607:16625   */\n      dup3\n      add\n        /* \"#utility.yul\":16600:16633   */\n      mstore\n        /* \"#utility.yul\":16665:16668   */\n      0x80\n        /* \"#utility.yul\":16650:16669   */\n      add\n      swap1\n        /* \"#utility.yul\":16276:16675   */\n      jump\t// out\n        /* \"#utility.yul\":16680:17080   */\n    tag_302:\n        /* \"#utility.yul\":16882:16884   */\n      0x20\n        /* \"#utility.yul\":16864:16885   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":16921:16923   */\n      0x24\n        /* \"#utility.yul\":16901:16919   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":16894:16924   */\n      mstore\n        /* \"#utility.yul\":16960:16994   */\n      0x455243313135353a206275726e20616d6f756e7420657863656564732062616c\n        /* \"#utility.yul\":16955:16957   */\n      0x40\n        /* \"#utility.yul\":16940:16958   */\n      dup3\n      add\n        /* \"#utility.yul\":16933:16995   */\n      mstore\n      shl(0xe0, 0x616e6365)\n        /* \"#utility.yul\":17026:17028   */\n      0x60\n        /* \"#utility.yul\":17011:17029   */\n      dup3\n      add\n        /* \"#utility.yul\":17004:17038   */\n      mstore\n        /* \"#utility.yul\":17070:17073   */\n      0x80\n        /* \"#utility.yul\":17055:17074   */\n      add\n      swap1\n        /* \"#utility.yul\":16680:17080   */\n      jump\t// out\n        /* \"#utility.yul\":17748:18575   */\n    tag_367:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":18145:18160   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":18127:18161   */\n      dup3\n      mstore\n        /* \"#utility.yul\":18197:18212   */\n      dup6\n      and\n        /* \"#utility.yul\":18192:18194   */\n      0x20\n        /* \"#utility.yul\":18177:18195   */\n      dup3\n      add\n        /* \"#utility.yul\":18170:18213   */\n      mstore\n        /* \"#utility.yul\":18107:18110   */\n      0xa0\n        /* \"#utility.yul\":18244:18246   */\n      0x40\n        /* \"#utility.yul\":18229:18247   */\n      dup3\n      add\n        /* \"#utility.yul\":18222:18253   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":18070:18074   */\n      0x00\n      swap1\n        /* \"#utility.yul\":18276:18333   */\n      tag_578\n      swap1\n        /* \"#utility.yul\":18313:18332   */\n      dup4\n      add\n        /* \"#utility.yul\":18305:18311   */\n      dup7\n        /* \"#utility.yul\":18276:18333   */\n      tag_431\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":18381:18390   */\n      dup3\n        /* \"#utility.yul\":18373:18379   */\n      dup2\n        /* \"#utility.yul\":18369:18391   */\n      sub\n        /* \"#utility.yul\":18364:18366   */\n      0x60\n        /* \"#utility.yul\":18353:18362   */\n      dup5\n        /* \"#utility.yul\":18349:18367   */\n      add\n        /* \"#utility.yul\":18342:18392   */\n      mstore\n        /* \"#utility.yul\":18415:18459   */\n      tag_579\n        /* \"#utility.yul\":18452:18458   */\n      dup2\n        /* \"#utility.yul\":18444:18450   */\n      dup7\n        /* \"#utility.yul\":18415:18459   */\n      tag_431\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":18401:18459   */\n      swap1\n      pop\n        /* \"#utility.yul\":18508:18517   */\n      dup3\n        /* \"#utility.yul\":18500:18506   */\n      dup2\n        /* \"#utility.yul\":18496:18518   */\n      sub\n        /* \"#utility.yul\":18490:18493   */\n      0x80\n        /* \"#utility.yul\":18479:18488   */\n      dup5\n        /* \"#utility.yul\":18475:18494   */\n      add\n        /* \"#utility.yul\":18468:18519   */\n      mstore\n        /* \"#utility.yul\":18536:18569   */\n      tag_580\n        /* \"#utility.yul\":18562:18568   */\n      dup2\n        /* \"#utility.yul\":18554:18560   */\n      dup6\n        /* \"#utility.yul\":18536:18569   */\n      tag_426\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":18528:18569   */\n      swap9\n        /* \"#utility.yul\":17748:18575   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18580:18829   */\n    tag_370:\n        /* \"#utility.yul\":18649:18655   */\n      0x00\n        /* \"#utility.yul\":18702:18704   */\n      0x20\n        /* \"#utility.yul\":18690:18699   */\n      dup3\n        /* \"#utility.yul\":18681:18688   */\n      dup5\n        /* \"#utility.yul\":18677:18700   */\n      sub\n        /* \"#utility.yul\":18673:18705   */\n      slt\n        /* \"#utility.yul\":18670:18722   */\n      iszero\n      tag_582\n      jumpi\n        /* \"#utility.yul\":18718:18719   */\n      0x00\n        /* \"#utility.yul\":18715:18716   */\n      dup1\n        /* \"#utility.yul\":18708:18720   */\n      revert\n        /* \"#utility.yul\":18670:18722   */\n    tag_582:\n        /* \"#utility.yul\":18750:18759   */\n      dup2\n        /* \"#utility.yul\":18744:18760   */\n      mload\n        /* \"#utility.yul\":18769:18799   */\n      tag_444\n        /* \"#utility.yul\":18793:18798   */\n      dup2\n        /* \"#utility.yul\":18769:18799   */\n      tag_425\n      jump\t// in\n        /* \"#utility.yul\":18834:19013   */\n    tag_376:\n        /* \"#utility.yul\":18869:18872   */\n      0x00\n        /* \"#utility.yul\":18911:18912   */\n      0x03\n        /* \"#utility.yul\":18893:18909   */\n      returndatasize\n        /* \"#utility.yul\":18890:18913   */\n      gt\n        /* \"#utility.yul\":18887:19007   */\n      iszero\n      tag_585\n      jumpi\n        /* \"#utility.yul\":18957:18958   */\n      0x04\n        /* \"#utility.yul\":18954:18955   */\n      0x00\n        /* \"#utility.yul\":18951:18952   */\n      dup1\n        /* \"#utility.yul\":18936:18959   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":18994:18995   */\n      0x00\n        /* \"#utility.yul\":18988:18996   */\n      mload\n        /* \"#utility.yul\":18983:18986   */\n      0xe0\n        /* \"#utility.yul\":18979:18997   */\n      shr\n        /* \"#utility.yul\":18887:19007   */\n    tag_585:\n        /* \"#utility.yul\":18834:19013   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19018:19689   */\n    tag_378:\n        /* \"#utility.yul\":19057:19060   */\n      0x00\n        /* \"#utility.yul\":19099:19103   */\n      0x44\n        /* \"#utility.yul\":19081:19097   */\n      returndatasize\n        /* \"#utility.yul\":19078:19104   */\n      lt\n        /* \"#utility.yul\":19075:19114   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":19018:19689   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19075:19114   */\n    tag_587:\n        /* \"#utility.yul\":19141:19143   */\n      0x40\n        /* \"#utility.yul\":19135:19144   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":19206:19222   */\n      returndatasize\n        /* \"#utility.yul\":19202:19227   */\n      dup2\n      add\n        /* \"#utility.yul\":19199:19200   */\n      0x04\n        /* \"#utility.yul\":19135:19144   */\n      dup4\n        /* \"#utility.yul\":19178:19228   */\n      returndatacopy\n        /* \"#utility.yul\":19257:19261   */\n      dup2\n        /* \"#utility.yul\":19251:19262   */\n      mload\n        /* \"#utility.yul\":19281:19297   */\n      returndatasize\n        /* \"#utility.yul\":19316:19334   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":19387:19389   */\n      dup2\n        /* \"#utility.yul\":19380:19384   */\n      0x24\n        /* \"#utility.yul\":19372:19378   */\n      dup5\n        /* \"#utility.yul\":19368:19385   */\n      add\n        /* \"#utility.yul\":19365:19390   */\n      gt\n        /* \"#utility.yul\":19360:19362   */\n      dup2\n        /* \"#utility.yul\":19352:19358   */\n      dup5\n        /* \"#utility.yul\":19349:19363   */\n      gt\n        /* \"#utility.yul\":19346:19391   */\n      or\n        /* \"#utility.yul\":19343:19401   */\n      iszero\n      tag_588\n      jumpi\n        /* \"#utility.yul\":19394:19399   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19018:19689   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19343:19401   */\n    tag_588:\n        /* \"#utility.yul\":19431:19437   */\n      dup3\n        /* \"#utility.yul\":19425:19429   */\n      dup6\n        /* \"#utility.yul\":19421:19438   */\n      add\n        /* \"#utility.yul\":19410:19438   */\n      swap2\n      pop\n        /* \"#utility.yul\":19467:19470   */\n      dup2\n        /* \"#utility.yul\":19461:19471   */\n      mload\n        /* \"#utility.yul\":19494:19496   */\n      dup2\n        /* \"#utility.yul\":19486:19492   */\n      dup2\n        /* \"#utility.yul\":19483:19497   */\n      gt\n        /* \"#utility.yul\":19480:19507   */\n      iszero\n      tag_589\n      jumpi\n        /* \"#utility.yul\":19500:19505   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19018:19689   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19480:19507   */\n    tag_589:\n        /* \"#utility.yul\":19584:19586   */\n      dup5\n        /* \"#utility.yul\":19565:19581   */\n      returndatasize\n        /* \"#utility.yul\":19559:19563   */\n      dup8\n        /* \"#utility.yul\":19555:19582   */\n      add\n        /* \"#utility.yul\":19551:19587   */\n      add\n        /* \"#utility.yul\":19544:19548   */\n      0x20\n        /* \"#utility.yul\":19535:19541   */\n      dup3\n        /* \"#utility.yul\":19530:19533   */\n      dup6\n        /* \"#utility.yul\":19526:19542   */\n      add\n        /* \"#utility.yul\":19522:19549   */\n      add\n        /* \"#utility.yul\":19519:19588   */\n      gt\n        /* \"#utility.yul\":19516:19598   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":19591:19596   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":19018:19689   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":19516:19598   */\n    tag_590:\n        /* \"#utility.yul\":19607:19664   */\n      tag_591\n        /* \"#utility.yul\":19658:19662   */\n      0x20\n        /* \"#utility.yul\":19649:19655   */\n      dup3\n        /* \"#utility.yul\":19641:19647   */\n      dup7\n        /* \"#utility.yul\":19637:19656   */\n      add\n        /* \"#utility.yul\":19633:19663   */\n      add\n        /* \"#utility.yul\":19627:19631   */\n      dup8\n        /* \"#utility.yul\":19607:19664   */\n      tag_427\n      jump\t// in\n    tag_591:\n      pop\n        /* \"#utility.yul\":19680:19683   */\n      swap1\n      swap6\n        /* \"#utility.yul\":19018:19689   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20115:20519   */\n    tag_386:\n        /* \"#utility.yul\":20317:20319   */\n      0x20\n        /* \"#utility.yul\":20299:20320   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":20356:20358   */\n      0x28\n        /* \"#utility.yul\":20336:20354   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":20329:20359   */\n      mstore\n        /* \"#utility.yul\":20395:20429   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":20390:20392   */\n      0x40\n        /* \"#utility.yul\":20375:20393   */\n      dup3\n      add\n        /* \"#utility.yul\":20368:20430   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":20461:20463   */\n      0x60\n        /* \"#utility.yul\":20446:20464   */\n      dup3\n      add\n        /* \"#utility.yul\":20439:20477   */\n      mstore\n        /* \"#utility.yul\":20509:20512   */\n      0x80\n        /* \"#utility.yul\":20494:20513   */\n      add\n      swap1\n        /* \"#utility.yul\":20115:20519   */\n      jump\t// out\n        /* \"#utility.yul\":20873:21434   */\n    tag_402:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":21170:21185   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":21152:21186   */\n      dup3\n      mstore\n        /* \"#utility.yul\":21222:21237   */\n      dup6\n      and\n        /* \"#utility.yul\":21217:21219   */\n      0x20\n        /* \"#utility.yul\":21202:21220   */\n      dup3\n      add\n        /* \"#utility.yul\":21195:21238   */\n      mstore\n        /* \"#utility.yul\":21269:21271   */\n      0x40\n        /* \"#utility.yul\":21254:21272   */\n      dup2\n      add\n        /* \"#utility.yul\":21247:21281   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":21312:21314   */\n      0x60\n        /* \"#utility.yul\":21297:21315   */\n      dup2\n      add\n        /* \"#utility.yul\":21290:21324   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":21132:21135   */\n      0xa0\n        /* \"#utility.yul\":21355:21358   */\n      0x80\n        /* \"#utility.yul\":21340:21359   */\n      dup3\n      add\n        /* \"#utility.yul\":21333:21365   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":21095:21099   */\n      0x00\n      swap1\n        /* \"#utility.yul\":21382:21428   */\n      tag_596\n      swap1\n        /* \"#utility.yul\":21408:21427   */\n      dup4\n      add\n        /* \"#utility.yul\":21400:21406   */\n      dup5\n        /* \"#utility.yul\":21382:21428   */\n      tag_426\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":21374:21428   */\n      swap8\n        /* \"#utility.yul\":20873:21434   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220e4820fa1c711372149c4bfc06f86c6e696624032dec34e37a1835ec35e443f2764736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_157": {
									"entryPoint": null,
									"id": 157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2071": {
									"entryPoint": null,
									"id": 2071,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_43": {
									"entryPoint": null,
									"id": 43,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setURI_1321": {
									"entryPoint": 82,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_131": {
									"entryPoint": 100,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 272,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 212,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 190,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2732:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "201:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "211:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "225:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "228:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "221:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "221:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "211:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "242:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "272:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "278:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "268:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "246:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "319:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "321:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "335:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "343:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "331:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "299:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "292:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:26:1"
															},
															"nodeType": "YulIf",
															"src": "289:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "430:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "437:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "442:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "433:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "433:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "423:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "423:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "423:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "474:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "477:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "467:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "467:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "467:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "502:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "505:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "495:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "495:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "495:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "365:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "388:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "396:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "385:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "385:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "362:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "362:38:1"
															},
															"nodeType": "YulIf",
															"src": "359:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "181:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "190:6:1",
														"type": ""
													}
												],
												"src": "146:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "587:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "604:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "607:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "620:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "638:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "641:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "628:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "620:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "570:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "578:4:1",
														"type": ""
													}
												],
												"src": "531:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "738:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "771:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "785:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "795:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "789:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "816:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "820:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "809:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "809:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "809:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "839:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "861:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "865:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "851:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "851:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "843:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "883:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "906:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "916:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "923:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "935:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "919:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "919:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "912:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "912:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "902:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "902:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "887:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "977:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "979:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "994:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "979:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "959:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "971:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "956:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "956:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "953:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1013:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1027:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1037:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "1044:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1049:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1040:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1040:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1033:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1033:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1023:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1023:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "1017:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1067:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "1080:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "1071:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "1165:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1174:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "1181:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "1167:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1167:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "1167:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "1115:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "1122:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "1112:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1112:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "1126:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "1128:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "1141:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1148:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1137:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1137:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "1128:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "1108:3:1",
																			"statements": []
																		},
																		"src": "1104:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "754:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "759:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "751:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "751:11:1"
															},
															"nodeType": "YulIf",
															"src": "748:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "710:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "717:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "722:10:1",
														"type": ""
													}
												],
												"src": "657:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1292:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1302:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "1317:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1335:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "1338:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "1331:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1331:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "1348:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "1344:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1344:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "1327:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1327:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "1323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1323:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1359:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "1362:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "1355:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1355:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "1310:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1310:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "1302:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1269:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1275:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "1283:4:1",
														"type": ""
													}
												],
												"src": "1207:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1474:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1484:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "1504:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1498:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1498:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "1488:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1551:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "1553:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1553:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1553:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1523:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1539:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1543:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "1535:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1535:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1547:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1531:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1531:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1520:30:1"
															},
															"nodeType": "YulIf",
															"src": "1517:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "1626:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "1664:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "1658:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1658:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "1632:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1632:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1672:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "1582:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1582:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1582:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1688:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1705:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "1692:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1715:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1734:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "1719:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1747:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "1760:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "1747:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1817:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1831:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "1850:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1862:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "1858:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1858:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "1846:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1846:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "1835:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1879:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "1923:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "1893:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1893:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "1883:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "1941:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "1945:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2028:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2053:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "2071:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "2076:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "2067:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2067:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "2061:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2061:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2046:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2046:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2046:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2105:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2119:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2127:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2115:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2115:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "2105:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "2146:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "2163:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2174:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "2159:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2159:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "2146:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "1975:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "1978:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "1972:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1972:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "1987:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "1989:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "1998:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "2001:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "1994:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "1994:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1989:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "1968:3:1",
																					"statements": []
																				},
																				"src": "1964:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2248:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "2266:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2293:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2298:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2289:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2289:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2283:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2283:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "2270:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "2333:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "2345:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "2372:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "2375:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "2368:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "2368:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2384:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "2364:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2364:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "2394:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "2390:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "2390:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "2360:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "2360:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "2356:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "2356:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "2341:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2341:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "2326:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2326:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "2326:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "2219:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2228:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "2216:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2216:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2213:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2434:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "2448:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "2451:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "2444:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "2444:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2460:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2440:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2440:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2427:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2427:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2427:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "1810:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2490:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2504:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2517:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "2508:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "2553:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "2571:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "2590:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "2595:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "2586:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "2586:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "2580:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2580:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2571:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "2534:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "2531:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2640:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "2699:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "2706:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "2646:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2646:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "2633:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2633:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2633:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2482:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "1790:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1798:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1787:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1787:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "1780:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "1459:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "1465:3:1",
														"type": ""
													}
												],
												"src": "1378:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b50604080518082019091526002815261111560f21b6020820152620000368162000052565b506003805460ff191690556200004c3362000064565b6200022f565b600262000060828262000163565b5050565b600380546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b634e487b7160e01b600052604160045260246000fd5b600181811c90821680620000e957607f821691505b6020821081036200010a57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200015e57600081815260208120601f850160051c81016020861015620001395750805b601f850160051c820191505b818110156200015a5782815560010162000145565b5050505b505050565b81516001600160401b038111156200017f576200017f620000be565b6200019781620001908454620000d4565b8462000110565b602080601f831160018114620001cf5760008415620001b65750858301515b600019600386901b1c1916600185901b1785556200015a565b600085815260208120601f198616915b828110156200020057888601518255948401946001909101908401620001df565b50858210156200021f5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b612016806200023f6000396000f3fe608060405234801561001057600080fd5b50600436106101205760003560e01c8063715018a6116100ad578063d501dc3711610071578063d501dc371461025b578063e985e9c51461026e578063f242432a146102aa578063f2fde38b146102bd578063f5298aca146102d057600080fd5b8063715018a6146101fc578063731133e9146102045780638456cb59146102175780638da5cb5b1461021f578063a22cb4651461024857600080fd5b80632eb2c2d6116100f45780632eb2c2d6146101a35780633f4ba83a146101b65780634e1273f4146101be5780635c975abb146101de5780636b20c454146101e957600080fd5b8062fdd58e1461012557806301ffc9a71461014b5780630e89341c1461016e5780631f7fdffa1461018e575b600080fd5b6101386101333660046114cc565b6102e3565b6040519081526020015b60405180910390f35b61015e61015936600461150c565b61037c565b6040519015158152602001610142565b61018161017c366004611530565b6103cc565b604051610142919061158f565b6101a161019c3660046116ee565b610460565b005b6101a16101b1366004611787565b61047a565b6101a16104c6565b6101d16101cc366004611831565b6104d8565b6040516101429190611937565b60035460ff1661015e565b6101a16101f736600461194a565b610602565b6101a161064a565b6101a16102123660046119be565b61065c565b6101a1610670565b60035461010090046001600160a01b03166040516001600160a01b039091168152602001610142565b6101a1610256366004611a13565b610680565b6101a1610269366004611a4f565b61068f565b61015e61027c366004611a9f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101a16102b8366004611ad2565b6106b0565b6101a16102cb366004611b37565b6106f5565b6101a16102de366004611b52565b61076e565b60006001600160a01b0383166103535760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103ad57506001600160e01b031982166303a24d0760e21b145b8061037657506301ffc9a760e01b6001600160e01b0319831614610376565b6060600280546103db90611b85565b80601f016020809104026020016040519081016040528092919081815260200182805461040790611b85565b80156104545780601f1061042957610100808354040283529160200191610454565b820191906000526020600020905b81548152906001019060200180831161043757829003601f168201915b50505050509050919050565b6104686107b1565b61047484848484610811565b50505050565b6001600160a01b0385163314806104965750610496853361027c565b6104b25760405162461bcd60e51b815260040161034a90611bbf565b6104bf858585858561096b565b5050505050565b6104ce6107b1565b6104d6610b15565b565b6060815183511461053d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161034a565b6000835167ffffffffffffffff811115610559576105596115a2565b604051908082528060200260200182016040528015610582578160200160208202803683370190505b50905060005b84518110156105fa576105cd8582815181106105a6576105a6611c0d565b60200260200101518583815181106105c0576105c0611c0d565b60200260200101516102e3565b8282815181106105df576105df611c0d565b60209081029190910101526105f381611c39565b9050610588565b509392505050565b6001600160a01b03831633148061061e575061061e833361027c565b61063a5760405162461bcd60e51b815260040161034a90611bbf565b610645838383610b67565b505050565b6106526107b1565b6104d66000610d03565b6106646107b1565b61047484848484610d5d565b6106786107b1565b6104d6610e46565b61068b338383610e83565b5050565b6106976107b1565b61064583836bffffffffffffffffffffffff1683610f63565b6001600160a01b0385163314806106cc57506106cc853361027c565b6106e85760405162461bcd60e51b815260040161034a90611bbf565b6104bf858585858561107b565b6106fd6107b1565b6001600160a01b0381166107625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034a565b61076b81610d03565b50565b6001600160a01b03831633148061078a575061078a833361027c565b6107a65760405162461bcd60e51b815260040161034a90611bbf565b610645838383610f63565b6003546001600160a01b036101009091041633146104d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034a565b6001600160a01b0384166108375760405162461bcd60e51b815260040161034a90611c52565b81518351146108585760405162461bcd60e51b815260040161034a90611c93565b33610868816000878787876111b3565b60005b84518110156109035783818151811061088657610886611c0d565b60200260200101516000808784815181106108a3576108a3611c0d565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108eb9190611cdb565b909155508190506108fb81611c39565b91505061086b565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610954929190611cee565b60405180910390a46104bf816000878787876111c0565b815183511461098c5760405162461bcd60e51b815260040161034a90611c93565b6001600160a01b0384166109b25760405162461bcd60e51b815260040161034a90611d1c565b336109c18187878787876111b3565b60005b8451811015610aa75760008582815181106109e1576109e1611c0d565b6020026020010151905060008583815181106109ff576109ff611c0d565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a4f5760405162461bcd60e51b815260040161034a90611d61565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a8c908490611cdb565b9250508190555050505080610aa090611c39565b90506109c4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610af7929190611cee565b60405180910390a4610b0d8187878787876111c0565b505050505050565b610b1d61131b565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610b8d5760405162461bcd60e51b815260040161034a90611dab565b8051825114610bae5760405162461bcd60e51b815260040161034a90611c93565b6000339050610bd1818560008686604051806020016040528060008152506111b3565b60005b8351811015610c96576000848281518110610bf157610bf1611c0d565b602002602001015190506000848381518110610c0f57610c0f611c0d565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610c5f5760405162461bcd60e51b815260040161034a90611dee565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610c8e81611c39565b915050610bd4565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ce7929190611cee565b60405180910390a4604080516020810190915260009052610474565b600380546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610d835760405162461bcd60e51b815260040161034a90611c52565b336000610d8f85611364565b90506000610d9c85611364565b9050610dad836000898585896111b3565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610ddd908490611cdb565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e3d836000898989896113af565b50505050505050565b610e4e61146a565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b4a3390565b816001600160a01b0316836001600160a01b031603610ef65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161034a565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038316610f895760405162461bcd60e51b815260040161034a90611dab565b336000610f9584611364565b90506000610fa284611364565b9050610fc2838760008585604051806020016040528060008152506111b3565b6000858152602081815260408083206001600160a01b038a168452909152902054848110156110035760405162461bcd60e51b815260040161034a90611dee565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610e3d565b6001600160a01b0384166110a15760405162461bcd60e51b815260040161034a90611d1c565b3360006110ad85611364565b905060006110ba85611364565b90506110ca8389898585896111b3565b6000868152602081815260408083206001600160a01b038c1684529091529020548581101561110b5760405162461bcd60e51b815260040161034a90611d61565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611148908490611cdb565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111a8848a8a8a8a8a6113af565b505050505050505050565b6111bb61146a565b610b0d565b6001600160a01b0384163b15610b0d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906112049089908990889088908890600401611e32565b6020604051808303816000875af192505050801561123f575060408051601f3d908101601f1916820190925261123c91810190611e90565b60015b6112eb5761124b611ead565b806308c379a003611284575061125f611ec9565b8061126a5750611286565b8060405162461bcd60e51b815260040161034a919061158f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161034a565b6001600160e01b0319811663bc197c8160e01b14610e3d5760405162461bcd60e51b815260040161034a90611f53565b60035460ff166104d65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161034a565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061139e5761139e611c0d565b602090810291909101015292915050565b6001600160a01b0384163b15610b0d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113f39089908990889088908890600401611f9b565b6020604051808303816000875af192505050801561142e575060408051601f3d908101601f1916820190925261142b91810190611e90565b60015b61143a5761124b611ead565b6001600160e01b0319811663f23a6e6160e01b14610e3d5760405162461bcd60e51b815260040161034a90611f53565b60035460ff16156104d65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161034a565b80356001600160a01b03811681146114c757600080fd5b919050565b600080604083850312156114df57600080fd5b6114e8836114b0565b946020939093013593505050565b6001600160e01b03198116811461076b57600080fd5b60006020828403121561151e57600080fd5b8135611529816114f6565b9392505050565b60006020828403121561154257600080fd5b5035919050565b6000815180845260005b8181101561156f57602081850181015186830182015201611553565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006115296020830184611549565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156115de576115de6115a2565b6040525050565b600067ffffffffffffffff8211156115ff576115ff6115a2565b5060051b60200190565b600082601f83011261161a57600080fd5b81356020611627826115e5565b60405161163482826115b8565b83815260059390931b850182019282810191508684111561165457600080fd5b8286015b8481101561166f5780358352918301918301611658565b509695505050505050565b600082601f83011261168b57600080fd5b813567ffffffffffffffff8111156116a5576116a56115a2565b6040516116bc601f8301601f1916602001826115b8565b8181528460208386010111156116d157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561170457600080fd5b61170d856114b0565b9350602085013567ffffffffffffffff8082111561172a57600080fd5b61173688838901611609565b9450604087013591508082111561174c57600080fd5b61175888838901611609565b9350606087013591508082111561176e57600080fd5b5061177b8782880161167a565b91505092959194509250565b600080600080600060a0868803121561179f57600080fd5b6117a8866114b0565b94506117b6602087016114b0565b9350604086013567ffffffffffffffff808211156117d357600080fd5b6117df89838a01611609565b945060608801359150808211156117f557600080fd5b61180189838a01611609565b9350608088013591508082111561181757600080fd5b506118248882890161167a565b9150509295509295909350565b6000806040838503121561184457600080fd5b823567ffffffffffffffff8082111561185c57600080fd5b818501915085601f83011261187057600080fd5b8135602061187d826115e5565b60405161188a82826115b8565b83815260059390931b85018201928281019150898411156118aa57600080fd5b948201945b838610156118cf576118c0866114b0565b825294820194908201906118af565b965050860135925050808211156118e557600080fd5b506118f285828601611609565b9150509250929050565b600081518084526020808501945080840160005b8381101561192c57815187529582019590820190600101611910565b509495945050505050565b60208152600061152960208301846118fc565b60008060006060848603121561195f57600080fd5b611968846114b0565b9250602084013567ffffffffffffffff8082111561198557600080fd5b61199187838801611609565b935060408601359150808211156119a757600080fd5b506119b486828701611609565b9150509250925092565b600080600080608085870312156119d457600080fd5b6119dd856114b0565b93506020850135925060408501359150606085013567ffffffffffffffff811115611a0757600080fd5b61177b8782880161167a565b60008060408385031215611a2657600080fd5b611a2f836114b0565b915060208301358015158114611a4457600080fd5b809150509250929050565b600080600060608486031215611a6457600080fd5b611a6d846114b0565b925060208401356bffffffffffffffffffffffff81168114611a8e57600080fd5b929592945050506040919091013590565b60008060408385031215611ab257600080fd5b611abb836114b0565b9150611ac9602084016114b0565b90509250929050565b600080600080600060a08688031215611aea57600080fd5b611af3866114b0565b9450611b01602087016114b0565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b2b57600080fd5b6118248882890161167a565b600060208284031215611b4957600080fd5b611529826114b0565b600080600060608486031215611b6757600080fd5b611b70846114b0565b95602085013595506040909401359392505050565b600181811c90821680611b9957607f821691505b602082108103611bb957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c4b57611c4b611c23565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b8082018082111561037657610376611c23565b604081526000611d0160408301856118fc565b8281036020840152611d1381856118fc565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611e5e908301866118fc565b8281036060840152611e7081866118fc565b90508281036080840152611e848185611549565b98975050505050505050565b600060208284031215611ea257600080fd5b8151611529816114f6565b600060033d1115611ec65760046000803e5060005160e01c5b90565b600060443d1015611ed75790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f0757505050505090565b8285019150815181811115611f1f5750505050505090565b843d8701016020828501011115611f395750505050505090565b611f48602082860101876115b8565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611fd590830184611549565b97965050505050505056fea2646970667358221220e4820fa1c711372149c4bfc06f86c6e696624032dec34e37a1835ec35e443f2764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x2 DUP2 MSTORE PUSH2 0x1115 PUSH1 0xF2 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0x36 DUP2 PUSH3 0x52 JUMP JUMPDEST POP PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH3 0x4C CALLER PUSH3 0x64 JUMP JUMPDEST PUSH3 0x22F JUMP JUMPDEST PUSH1 0x2 PUSH3 0x60 DUP3 DUP3 PUSH3 0x163 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0xE9 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x10A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x15E JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x139 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x15A JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x145 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x17F JUMPI PUSH3 0x17F PUSH3 0xBE JUMP JUMPDEST PUSH3 0x197 DUP2 PUSH3 0x190 DUP5 SLOAD PUSH3 0xD4 JUMP JUMPDEST DUP5 PUSH3 0x110 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x1CF JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x1B6 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x15A JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x200 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x1DF JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x21F JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2016 DUP1 PUSH3 0x23F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD501DC37 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD501DC37 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x150C JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3AD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x376 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x376 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3DB SWAP1 PUSH2 0x1B85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x407 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x454 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x429 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x454 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x437 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x474 DUP5 DUP5 DUP5 DUP5 PUSH2 0x811 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x496 JUMPI POP PUSH2 0x496 DUP6 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x4BF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x96B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0xB15 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x582 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH2 0x5CD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5C0 JUMPI PUSH2 0x5C0 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH2 0x5DF PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x5F3 DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP1 POP PUSH2 0x588 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x61E JUMPI POP PUSH2 0x61E DUP4 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x645 DUP4 DUP4 DUP4 PUSH2 0xB67 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x652 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH1 0x0 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x664 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x474 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x678 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x68B CALLER DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x697 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x645 DUP4 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x6CC JUMPI POP PUSH2 0x6CC DUP6 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x4BF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x107B JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0xD03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x78A JUMPI POP PUSH2 0x78A DUP4 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x645 DUP4 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C52 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C93 JUMP JUMPDEST CALLER PUSH2 0x868 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x903 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x8FB DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x86B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4BF DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11C0 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D1C JUMP JUMPDEST CALLER PUSH2 0x9C1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA8C SWAP1 DUP5 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAA0 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C4 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xAF7 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB0D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11C0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x131B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DAB JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0xBD1 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBF1 JUMPI PUSH2 0xBF1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC0F JUMPI PUSH2 0xC0F PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xC8E DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xCE7 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x474 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C52 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xD8F DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD9C DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAD DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xDDD SWAP1 DUP5 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE3D DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x13AF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE4E PUSH2 0x146A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB4A CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DAB JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xF95 DUP5 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA2 DUP5 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH2 0xFC2 DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D1C JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x10AD DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10BA DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH2 0x10CA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1148 SWAP1 DUP5 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11A8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x13AF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11BB PUSH2 0x146A JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1204 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x123F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x123C SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12EB JUMPI PUSH2 0x124B PUSH2 0x1EAD JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1284 JUMPI POP PUSH2 0x125F PUSH2 0x1EC9 JUMP JUMPDEST DUP1 PUSH2 0x126A JUMPI POP PUSH2 0x1286 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x139E JUMPI PUSH2 0x139E PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x13F3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x142E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x142B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x143A JUMPI PUSH2 0x124B PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E8 DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1529 DUP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x156F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1553 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1529 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1549 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15DE JUMPI PUSH2 0x15DE PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FF PUSH2 0x15A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1627 DUP3 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1634 DUP3 DUP3 PUSH2 0x15B8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x166F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1658 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A5 JUMPI PUSH2 0x16A5 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16BC PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x15B8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x16D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170D DUP6 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1736 DUP9 DUP4 DUP10 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1758 DUP9 DUP4 DUP10 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177B DUP8 DUP3 DUP9 ADD PUSH2 0x167A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A8 DUP7 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 POP PUSH2 0x17B6 PUSH1 0x20 DUP8 ADD PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DF DUP10 DUP4 DUP11 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1801 DUP10 DUP4 DUP11 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1824 DUP9 DUP3 DUP10 ADD PUSH2 0x167A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x187D DUP3 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188A DUP3 DUP3 PUSH2 0x15B8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18C0 DUP7 PUSH2 0x14B0 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x192C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1910 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1529 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1968 DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1991 DUP8 DUP4 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19DD DUP6 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177B DUP8 DUP3 DUP9 ADD PUSH2 0x167A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2F DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6D DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ABB DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 PUSH1 0x20 DUP5 ADD PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AF3 DUP7 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B01 PUSH1 0x20 DUP8 ADD PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1824 DUP9 DUP3 DUP10 ADD PUSH2 0x167A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1529 DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B70 DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B99 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BB9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C4B JUMPI PUSH2 0x1C4B PUSH2 0x1C23 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x376 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D01 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D13 DUP2 DUP6 PUSH2 0x18FC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E5E SWAP1 DUP4 ADD DUP7 PUSH2 0x18FC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1E70 DUP2 DUP7 PUSH2 0x18FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1E84 DUP2 DUP6 PUSH2 0x1549 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1529 DUP2 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1ED7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1F07 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1F39 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F48 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x15B8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1FD5 SWAP1 DUP4 ADD DUP5 PUSH2 0x1549 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP3 0xF LOG1 0xC7 GT CALLDATACOPY 0x21 0x49 0xC4 0xBF 0xC0 PUSH16 0x86C6E696624032DEC34E37A1835EC35E PREVRANDAO EXTCODEHASH 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "42529:1027:0:-:0;;;42598:30;;;;;;;;;-1:-1:-1;25421:62:0;;;;;;;;;;;;-1:-1:-1;;;25421:62:0;;;;25463:13;25421:62;25463:7;:13::i;:::-;-1:-1:-1;4465:7:0;:15;;-1:-1:-1;;4465:15:0;;;1794:32;741:10;1794:18;:32::i;:::-;42529:1027;;32463:86;32529:4;:13;32536:6;32529:4;:13;:::i;:::-;;32463:86;:::o;3284:187::-;3376:6;;;-1:-1:-1;;;;;3392:17:0;;;3376:6;3392:17;;;-1:-1:-1;;;;;;3392:17:0;;;;;;3424:40;;3376:6;;;;;;;;3424:40;;3357:16;;3424:40;3347:124;3284:187;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:380;225:1;221:12;;;;268;;;289:61;;343:4;335:6;331:17;321:27;;289:61;396:2;388:6;385:14;365:18;362:38;359:161;;442:10;437:3;433:20;430:1;423:31;477:4;474:1;467:15;505:4;502:1;495:15;359:161;;146:380;;;:::o;657:545::-;759:2;754:3;751:11;748:448;;;795:1;820:5;816:2;809:17;865:4;861:2;851:19;935:2;923:10;919:19;916:1;912:27;906:4;902:38;971:4;959:10;956:20;953:47;;;-1:-1:-1;994:4:1;953:47;1049:2;1044:3;1040:12;1037:1;1033:20;1027:4;1023:31;1013:41;;1104:82;1122:2;1115:5;1112:13;1104:82;;;1167:17;;;1148:1;1137:13;1104:82;;;1108:3;;;748:448;657:545;;;:::o;1378:1352::-;1498:10;;-1:-1:-1;;;;;1520:30:1;;1517:56;;;1553:18;;:::i;:::-;1582:97;1672:6;1632:38;1664:4;1658:11;1632:38;:::i;:::-;1626:4;1582:97;:::i;:::-;1734:4;;1798:2;1787:14;;1815:1;1810:663;;;;2517:1;2534:6;2531:89;;;-1:-1:-1;2586:19:1;;;2580:26;2531:89;-1:-1:-1;;1335:1:1;1331:11;;;1327:24;1323:29;1313:40;1359:1;1355:11;;;1310:57;2633:81;;1780:944;;1810:663;604:1;597:14;;;641:4;628:18;;-1:-1:-1;;1846:20:1;;;1964:236;1978:7;1975:1;1972:14;1964:236;;;2067:19;;;2061:26;2046:42;;2159:27;;;;2127:1;2115:14;;;;1994:19;;1964:236;;;1968:3;2228:6;2219:7;2216:19;2213:201;;;2289:19;;;2283:26;-1:-1:-1;;2372:1:1;2368:14;;;2384:3;2364:24;2360:37;2356:42;2341:58;2326:74;;2213:201;-1:-1:-1;;;;;2460:1:1;2444:14;;;2440:22;2427:36;;-1:-1:-1;1378:1352:1:o;:::-;42529:1027:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1831": {
									"entryPoint": null,
									"id": 1831,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1987": {
									"entryPoint": 4964,
									"id": 1987,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1812": {
									"entryPoint": null,
									"id": 1812,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_beforeTokenTransfer_2183": {
									"entryPoint": 4531,
									"id": 2183,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_burnBatch_1761": {
									"entryPoint": 2919,
									"id": 1761,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_burn_1638": {
									"entryPoint": 3939,
									"id": 1638,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_checkOwner_74": {
									"entryPoint": 1969,
									"id": 74,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1959": {
									"entryPoint": 4544,
									"id": 1959,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1894": {
									"entryPoint": 5039,
									"id": 1894,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_mintBatch_1533": {
									"entryPoint": 2065,
									"id": 1533,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_mint_1422": {
									"entryPoint": 3421,
									"id": 1422,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_221": {
									"entryPoint": 3654,
									"id": 221,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_194": {
									"entryPoint": 5226,
									"id": 194,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_205": {
									"entryPoint": 4891,
									"id": 205,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_safeBatchTransferFrom_1310": {
									"entryPoint": 2411,
									"id": 1310,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1175": {
									"entryPoint": 4219,
									"id": 1175,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1793": {
									"entryPoint": 3715,
									"id": 1793,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_131": {
									"entryPoint": 3331,
									"id": 131,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_237": {
									"entryPoint": 2837,
									"id": 237,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@balanceOfBatch_945": {
									"entryPoint": 1240,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_881": {
									"entryPoint": 739,
									"id": 881,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@burnBatch_2054": {
									"entryPoint": 1538,
									"id": 2054,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_2022": {
									"entryPoint": 1902,
									"id": 2022,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@burn_2107": {
									"entryPoint": 1679,
									"id": 2107,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isApprovedForAll_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mintBatch_2151": {
									"entryPoint": 1120,
									"id": 2151,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@mint_2128": {
									"entryPoint": 1628,
									"id": 2128,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@owner_60": {
									"entryPoint": null,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_2080": {
									"entryPoint": 1648,
									"id": 2080,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_88": {
									"entryPoint": 1610,
									"id": 88,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@safeBatchTransferFrom_1058": {
									"entryPoint": 1146,
									"id": 1058,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_1018": {
									"entryPoint": 1712,
									"id": 1018,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_962": {
									"entryPoint": 1664,
									"id": 962,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_841": {
									"entryPoint": 892,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_111": {
									"entryPoint": 1781,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_2089": {
									"entryPoint": 1222,
									"id": 2089,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@uri_853": {
									"entryPoint": 972,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 5296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 5641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 5754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 6815,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 6023,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6866,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6474,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 5870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 6675,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 5324,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6994,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 6590,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_uint96t_uint256": {
									"entryPoint": 6735,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 6193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 5388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 7824,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 6396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 5449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 7730,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 8091,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 6455,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 7406,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 5519,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8019,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7662,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7595,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7521,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 5605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7387,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 7045,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 7225,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7203,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7181,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5538,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 7853,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 7881,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 5366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:21781:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:1"
															},
															"nodeType": "YulIf",
															"src": "2305:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:1",
														"type": ""
													}
												],
												"src": "2181:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:1"
															},
															"nodeType": "YulIf",
															"src": "2514:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:1",
														"type": ""
													}
												],
												"src": "2435:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:1"
															},
															"nodeType": "YulIf",
															"src": "2697:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:1"
															},
															"nodeType": "YulIf",
															"src": "3096:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:1",
																"statements": []
															},
															"src": "3175:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:1",
														"type": ""
													}
												],
												"src": "2623:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:1"
															},
															"nodeType": "YulIf",
															"src": "3414:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:1"
															},
															"nodeType": "YulIf",
															"src": "3517:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:1"
															},
															"nodeType": "YulIf",
															"src": "3713:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"src": "3352:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4092:688:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4139:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4148:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4151:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4141:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4141:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4141:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4113:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4122:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4109:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4134:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4105:33:1"
															},
															"nodeType": "YulIf",
															"src": "4102:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4164:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4193:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4174:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4174:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4164:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4212:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4243:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4226:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4226:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4216:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4267:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4277:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4271:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4322:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4331:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4334:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4324:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4324:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4324:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4310:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4318:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4307:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4307:14:1"
															},
															"nodeType": "YulIf",
															"src": "4304:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4347:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4390:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4401:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4386:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4386:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4410:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4357:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4357:61:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4347:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4427:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4460:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4471:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4456:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4456:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4443:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4431:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4504:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4513:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4516:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4506:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4506:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4506:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4490:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4500:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4487:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4487:16:1"
															},
															"nodeType": "YulIf",
															"src": "4484:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4529:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4572:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4583:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4568:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4568:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4594:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4539:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4539:63:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4529:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4611:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4644:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4655:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4640:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4640:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4627:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4627:32:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4615:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4688:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4697:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4700:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4690:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4690:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4690:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4674:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4684:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4671:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4671:16:1"
															},
															"nodeType": "YulIf",
															"src": "4668:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4713:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4744:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4755:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4740:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4740:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4766:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4723:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4723:51:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4713:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4034:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4045:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4057:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4065:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4073:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4081:6:1",
														"type": ""
													}
												],
												"src": "3912:868:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5029:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5038:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5041:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5031:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5031:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5031:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5003:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5012:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4999:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4999:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5024:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4995:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:33:1"
															},
															"nodeType": "YulIf",
															"src": "4992:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5054:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5083:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5064:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5064:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5054:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5102:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5135:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5146:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5131:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5131:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "5112:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5112:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5102:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5159:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5190:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5201:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5186:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5186:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5173:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5173:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5163:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5214:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5224:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5218:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5269:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5278:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5281:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5271:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5271:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5271:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5257:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5265:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5254:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5254:14:1"
															},
															"nodeType": "YulIf",
															"src": "5251:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5294:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5337:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "5348:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5333:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5333:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5357:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5304:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5304:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5374:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5407:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5418:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5403:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5403:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5390:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5390:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5378:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5451:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5460:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5463:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5453:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5453:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5453:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5437:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5447:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5434:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5434:16:1"
															},
															"nodeType": "YulIf",
															"src": "5431:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5476:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5519:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "5530:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5515:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5541:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5486:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "5476:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5558:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5591:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5602:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5587:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5587:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5574:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5574:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "5562:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5636:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5645:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5648:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5638:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5638:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5638:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "5622:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5632:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5619:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5619:16:1"
															},
															"nodeType": "YulIf",
															"src": "5616:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5661:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5692:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "5703:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5688:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5714:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "5671:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5671:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "5661:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4916:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4927:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4939:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4947:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4955:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4963:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4971:6:1",
														"type": ""
													}
												],
												"src": "4785:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5870:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5916:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5925:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5928:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5918:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5918:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5918:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5891:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5900:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5887:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5887:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5912:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5883:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5883:32:1"
															},
															"nodeType": "YulIf",
															"src": "5880:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5941:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5968:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5955:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5955:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5945:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5987:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5997:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5991:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6042:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6051:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6054:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6044:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6044:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6044:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6030:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6038:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6027:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6027:14:1"
															},
															"nodeType": "YulIf",
															"src": "6024:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6067:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6081:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "6092:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6077:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6077:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "6071:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6147:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6156:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6159:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6149:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6149:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6149:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "6126:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6130:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6122:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6122:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6137:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "6118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6118:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6111:35:1"
															},
															"nodeType": "YulIf",
															"src": "6108:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6172:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6195:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6182:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6182:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "6176:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6230:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6280:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6240:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6240:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "6234:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6292:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6312:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6306:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6306:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "6296:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6344:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "6352:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6324:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6324:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6324:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6364:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6375:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "6368:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6397:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "6405:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6390:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6390:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6390:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6417:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6428:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6436:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6424:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6424:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "6417:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6448:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "6470:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6478:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "6481:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "6474:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6474:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6466:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6466:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6487:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6462:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6462:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "6452:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6522:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6531:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6534:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6524:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6524:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6524:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6505:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6513:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6502:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6502:19:1"
															},
															"nodeType": "YulIf",
															"src": "6499:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6547:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "6562:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "6566:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6558:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6558:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "6551:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6634:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6655:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "6679:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "6660:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6660:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6648:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6648:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6648:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6697:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "6708:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6713:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6704:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6704:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6697:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6589:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6594:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6586:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6586:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6602:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6604:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "6615:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "6620:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6611:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6611:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "6604:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6582:3:1",
																"statements": []
															},
															"src": "6578:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6735:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "6745:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6735:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6760:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6793:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "6804:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6789:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6789:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6776:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6776:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "6764:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6837:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6846:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6849:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6839:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6839:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6839:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "6823:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6833:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6820:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:16:1"
															},
															"nodeType": "YulIf",
															"src": "6817:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6862:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6905:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6916:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6901:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6927:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6872:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6872:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "6862:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5828:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "5839:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5851:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5859:6:1",
														"type": ""
													}
												],
												"src": "5733:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7007:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7017:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7037:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7031:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7021:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7059:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7064:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7052:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7052:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7080:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7090:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7084:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7103:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7114:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7119:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7110:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7110:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7103:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7131:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7149:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "7156:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7145:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7145:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7135:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7168:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7177:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "7172:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7236:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7257:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "7268:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "7262:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "7262:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "7250:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7250:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7250:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7289:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7300:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7305:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7296:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7296:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7289:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7321:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7335:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "7343:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7331:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7331:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7321:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7198:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7201:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7195:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7195:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7209:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7211:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7220:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7223:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7216:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7216:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7211:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7191:3:1",
																"statements": []
															},
															"src": "7187:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7365:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "7372:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "7365:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6984:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6991:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6999:3:1",
														"type": ""
													}
												],
												"src": "6946:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7537:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7554:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7565:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7547:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7547:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7547:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7577:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7614:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "7585:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7585:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7577:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7506:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7517:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7528:4:1",
														"type": ""
													}
												],
												"src": "7386:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7806:515:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7852:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7861:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7864:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7854:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7854:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7854:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7827:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7836:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7823:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7823:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7848:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7819:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7819:32:1"
															},
															"nodeType": "YulIf",
															"src": "7816:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7877:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7906:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7887:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7887:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7877:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7925:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7956:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7967:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7952:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7952:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7939:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7939:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7929:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7980:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "7990:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "7984:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8035:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8044:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8047:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8037:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8037:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8037:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8023:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8031:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8020:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8020:14:1"
															},
															"nodeType": "YulIf",
															"src": "8017:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8060:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8114:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8099:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8123:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8070:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8070:61:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8060:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8140:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8173:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8184:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8169:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8169:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8156:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8156:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "8144:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8217:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8226:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8229:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8219:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8219:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8219:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "8203:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "8213:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8200:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8200:16:1"
															},
															"nodeType": "YulIf",
															"src": "8197:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8242:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8285:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "8296:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8281:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8281:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8307:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "8252:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8252:63:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8242:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7756:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7767:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7779:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7787:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7795:6:1",
														"type": ""
													}
												],
												"src": "7652:669:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8456:401:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8503:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8512:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8515:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8505:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8505:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8505:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8477:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8486:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8473:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8498:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8469:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8469:33:1"
															},
															"nodeType": "YulIf",
															"src": "8466:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8528:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8557:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "8538:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8538:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "8528:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8576:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8603:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8614:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8599:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8599:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8586:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8586:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "8627:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8654:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8665:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8650:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8650:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8637:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8637:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "8627:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8678:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8709:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8720:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8705:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8705:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "8692:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8692:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "8682:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8767:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8776:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8779:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8769:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8769:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8769:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "8739:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8747:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "8736:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8736:30:1"
															},
															"nodeType": "YulIf",
															"src": "8733:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8792:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8823:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "8834:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8819:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8819:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "8843:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "8802:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8802:49:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8398:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8409:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8421:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "8429:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "8437:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "8445:6:1",
														"type": ""
													}
												],
												"src": "8326:531:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8963:102:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8973:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8985:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8996:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8981:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8981:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8973:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9015:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "9030:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9046:3:1",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "9051:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "9042:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9042:11:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9055:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "9038:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9038:19:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "9026:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9026:32:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9008:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9008:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9008:51:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8932:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8943:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8954:4:1",
														"type": ""
													}
												],
												"src": "8862:203:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9154:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9200:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9209:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9212:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9202:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9202:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9202:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9175:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9184:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9171:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9171:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9196:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9167:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:32:1"
															},
															"nodeType": "YulIf",
															"src": "9164:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9225:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9254:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9235:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9235:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9225:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9273:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9303:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9314:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9299:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9299:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9286:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9286:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9277:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9371:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9380:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9383:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9373:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9373:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9373:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9340:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "9361:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "9354:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "9354:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "9347:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9347:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9337:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9337:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9330:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9330:40:1"
															},
															"nodeType": "YulIf",
															"src": "9327:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9396:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9406:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9396:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9112:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9123:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9135:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9143:6:1",
														"type": ""
													}
												],
												"src": "9070:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9525:331:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9571:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9580:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9583:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9573:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9573:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9573:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9546:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9555:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9542:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9542:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9567:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9538:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9538:32:1"
															},
															"nodeType": "YulIf",
															"src": "9535:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9596:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9625:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "9606:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9606:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "9596:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9644:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9674:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9685:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9670:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9670:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9657:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9657:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "9648:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9759:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9768:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9771:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9761:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9761:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9761:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9711:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9722:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "9729:26:1",
																						"type": "",
																						"value": "0xffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "9718:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9718:38:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9708:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9708:49:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9701:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9701:57:1"
															},
															"nodeType": "YulIf",
															"src": "9698:77:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9784:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9794:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "9784:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9808:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9835:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9846:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9831:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9831:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "9818:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9818:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "9808:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint96t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9475:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9486:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9498:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9506:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9514:6:1",
														"type": ""
													}
												],
												"src": "9422:434:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9948:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9994:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10003:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10006:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9996:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9996:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9996:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "9969:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9978:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9965:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9965:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9990:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "9961:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9961:32:1"
															},
															"nodeType": "YulIf",
															"src": "9958:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10019:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10048:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10029:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10029:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10019:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10067:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10100:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10111:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10096:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10096:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10077:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10077:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10067:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9906:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "9917:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9929:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9937:6:1",
														"type": ""
													}
												],
												"src": "9861:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10273:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10320:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10329:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10332:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10322:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10322:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10322:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10294:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10303:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10290:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10290:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10315:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10286:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10286:33:1"
															},
															"nodeType": "YulIf",
															"src": "10283:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10345:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10374:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10355:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10355:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10345:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10393:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10426:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10437:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10422:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10422:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10403:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10403:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "10393:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10450:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10477:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10488:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10473:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10473:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10460:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10460:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "10450:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "10501:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10528:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10539:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10524:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10524:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10511:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10511:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "10552:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10583:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10594:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10579:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10579:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "10566:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10566:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "10556:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10642:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10651:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10654:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10644:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10644:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10644:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "10614:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10622:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "10611:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10611:30:1"
															},
															"nodeType": "YulIf",
															"src": "10608:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10667:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10698:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "10709:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10694:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10694:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "10718:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "10677:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10677:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "10667:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10207:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10218:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10230:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10238:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "10246:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "10254:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "10262:6:1",
														"type": ""
													}
												],
												"src": "10126:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10807:116:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10853:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10862:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10865:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10855:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10855:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10855:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10828:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10837:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10824:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10824:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10849:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10820:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10820:32:1"
															},
															"nodeType": "YulIf",
															"src": "10817:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10878:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10907:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "10888:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10888:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "10878:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10773:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10784:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10796:6:1",
														"type": ""
													}
												],
												"src": "10737:186:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11032:218:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11078:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11087:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11090:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11080:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11080:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11080:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11053:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11062:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11049:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11049:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11074:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11045:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11045:32:1"
															},
															"nodeType": "YulIf",
															"src": "11042:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11103:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11132:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "11113:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11113:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "11103:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11151:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11178:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11189:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11174:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11174:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11161:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11161:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "11151:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "11202:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11229:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11240:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11225:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11225:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "11212:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11212:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "11202:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10982:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10993:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11005:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11013:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11021:6:1",
														"type": ""
													}
												],
												"src": "10928:322:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11429:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11446:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11457:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11439:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11439:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11480:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11491:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11476:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11476:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11496:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11469:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11469:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11469:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11519:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11530:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11515:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11515:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11535:34:1",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11508:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11508:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11590:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11601:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11586:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11586:18:1"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11606:12:1",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11579:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11579:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11579:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11628:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11640:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11651:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11636:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11628:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11406:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11420:4:1",
														"type": ""
													}
												],
												"src": "11255:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11721:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11731:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11745:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11748:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "11741:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11741:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "11731:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11762:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "11792:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11798:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "11788:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11788:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "11766:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11839:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "11841:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "11855:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11863:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "11851:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11851:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11841:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11819:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11812:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11812:26:1"
															},
															"nodeType": "YulIf",
															"src": "11809:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11929:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11950:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11957:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "11962:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "11953:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "11953:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11943:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11943:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11943:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11994:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11997:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "11987:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11987:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11987:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12022:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12025:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12015:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12015:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12015:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "11885:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "11908:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11916:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "11905:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11905:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "11882:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11882:38:1"
															},
															"nodeType": "YulIf",
															"src": "11879:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "11701:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "11710:6:1",
														"type": ""
													}
												],
												"src": "11666:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12225:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12242:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12253:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12235:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12235:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12235:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12276:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12287:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12272:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12292:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12265:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12265:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12265:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12315:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12326:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12311:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12311:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12331:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12304:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12304:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12304:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12386:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12397:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12382:18:1"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12402:16:1",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12375:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12375:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12375:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12428:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12440:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12451:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12436:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12436:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12428:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12202:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12216:4:1",
														"type": ""
													}
												],
												"src": "12051:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12640:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12657:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12668:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12650:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12650:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12650:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12691:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12702:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12687:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12687:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12707:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12680:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12680:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12680:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12730:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12741:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12726:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12726:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12746:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12719:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12719:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12719:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12801:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12812:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12797:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12797:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12817:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12790:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12790:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12790:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12838:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12850:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12861:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12846:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12846:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12838:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12617:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12631:4:1",
														"type": ""
													}
												],
												"src": "12466:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12908:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12925:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12932:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12937:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12928:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12928:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12918:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12918:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12918:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12965:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12968:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12958:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12958:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12958:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12989:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12992:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "12982:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12982:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12982:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "12876:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13040:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13057:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13064:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13069:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "13060:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13060:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13050:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13050:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13050:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13097:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13100:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13090:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13090:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13090:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13121:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13124:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13114:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13114:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "13008:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13187:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13218:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13220:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13220:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13220:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13203:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13214:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13210:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13210:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "13200:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13200:17:1"
															},
															"nodeType": "YulIf",
															"src": "13197:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13249:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13260:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13267:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13256:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "13249:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13169:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13179:3:1",
														"type": ""
													}
												],
												"src": "13140:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13454:228:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13471:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13482:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13464:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13464:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13464:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13505:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13516:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13501:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13501:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13521:2:1",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13494:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13494:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13494:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13544:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13555:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13540:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13540:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13560:34:1",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13533:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13533:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13533:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13615:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13626:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13611:18:1"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13631:8:1",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13604:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13604:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13649:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13661:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13672:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13657:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13657:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13649:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13431:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13445:4:1",
														"type": ""
													}
												],
												"src": "13280:402:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13861:182:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13878:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13889:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13871:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13871:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13871:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13912:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13923:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13908:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13908:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13928:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13901:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13901:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13901:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13951:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13962:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13947:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13947:18:1"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "13967:34:1",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13940:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13940:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13940:62:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14011:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14023:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14034:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14019:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14019:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14011:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13838:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13852:4:1",
														"type": ""
													}
												],
												"src": "13687:356:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14222:223:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14239:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14250:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14232:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14232:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14232:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14284:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14269:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14289:2:1",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14262:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14262:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14262:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14312:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14323:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14308:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14308:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206d696e7420746f20746865207a65726f20616464726573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14328:34:1",
																		"type": "",
																		"value": "ERC1155: mint to the zero addres"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14301:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14301:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14301:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14383:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14394:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14379:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14379:18:1"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14399:3:1",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14372:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14372:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14372:31:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14412:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14424:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14435:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14420:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14420:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14412:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14199:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14213:4:1",
														"type": ""
													}
												],
												"src": "14048:397:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14624:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14641:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14652:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14634:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14634:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14634:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14675:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14686:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14671:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14671:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14691:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14664:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14664:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14714:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14725:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14710:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14730:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14703:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14703:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14785:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14796:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14781:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14781:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14801:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14774:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14774:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14774:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14821:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14833:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14844:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14829:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14829:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14821:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14601:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14615:4:1",
														"type": ""
													}
												],
												"src": "14450:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14907:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14917:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14928:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14931:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14924:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14924:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14917:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14956:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14958:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14958:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14958:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14948:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "14951:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14945:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14945:10:1"
															},
															"nodeType": "YulIf",
															"src": "14942:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14890:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14893:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "14899:3:1",
														"type": ""
													}
												],
												"src": "14859:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15218:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15235:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15246:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15228:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15228:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15228:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15258:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "15301:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15313:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15324:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15309:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15309:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "15272:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15272:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "15262:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15348:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15359:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15344:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15344:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "15368:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15376:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "15364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15364:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15337:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15337:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15337:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15396:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "15433:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "15441:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "15404:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15404:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15396:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15179:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15190:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15198:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15209:4:1",
														"type": ""
													}
												],
												"src": "14989:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15633:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15650:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15661:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15643:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15643:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15643:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15684:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15695:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15680:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15700:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15673:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15673:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15734:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15719:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15739:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15712:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15712:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15712:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15794:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15805:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15790:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15810:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15783:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15783:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15783:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15827:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15839:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15850:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15835:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15835:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15827:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15610:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15624:4:1",
														"type": ""
													}
												],
												"src": "15459:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16039:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16056:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16067:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16049:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16049:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16049:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16090:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16101:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16086:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16106:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16079:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16079:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16079:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16140:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16125:18:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16145:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16118:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16118:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16118:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16200:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16211:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16196:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16196:18:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16216:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16189:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16189:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16189:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16238:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16250:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16261:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16246:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16246:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16238:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16016:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16030:4:1",
														"type": ""
													}
												],
												"src": "15865:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16450:225:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16467:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16478:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16460:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16460:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16460:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16501:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16512:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16497:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16497:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16517:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16490:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16490:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16490:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16540:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16551:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16536:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16536:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16556:34:1",
																		"type": "",
																		"value": "ERC1155: burn from the zero addr"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16529:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16529:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16529:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16611:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16622:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16607:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16607:18:1"
																	},
																	{
																		"hexValue": "657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16627:5:1",
																		"type": "",
																		"value": "ess"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16600:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16600:33:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "16642:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16654:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16665:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16650:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16650:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "16642:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16427:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16441:4:1",
														"type": ""
													}
												],
												"src": "16276:399:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16854:226:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "16871:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16882:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16864:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16864:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16864:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16905:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16916:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16901:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16901:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16921:2:1",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16894:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16894:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16894:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16944:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16955:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16940:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16940:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "16960:34:1",
																		"type": "",
																		"value": "ERC1155: burn amount exceeds bal"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16933:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16933:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16933:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17015:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17026:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17011:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17011:18:1"
																	},
																	{
																		"hexValue": "616e6365",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17031:6:1",
																		"type": "",
																		"value": "ance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17004:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17004:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17004:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17047:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17059:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17070:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17055:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17047:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16831:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "16845:4:1",
														"type": ""
													}
												],
												"src": "16680:400:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17214:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17224:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17236:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17247:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17232:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17232:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17224:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17266:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "17277:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17259:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17259:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17259:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17304:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17315:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17300:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "17320:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17293:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17293:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17293:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17175:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "17186:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "17194:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17205:4:1",
														"type": ""
													}
												],
												"src": "17085:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "17512:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17529:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17540:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17522:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17522:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17522:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17563:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17574:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17559:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17559:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17579:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17552:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17552:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17552:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17602:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17613:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17598:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17618:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17591:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17591:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17591:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "17673:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17684:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "17669:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17669:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "17689:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "17662:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17662:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "17662:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "17710:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "17722:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17733:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "17718:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "17718:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "17710:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "17489:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "17503:4:1",
														"type": ""
													}
												],
												"src": "17338:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18079:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18089:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18107:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18112:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "18103:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18103:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18116:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "18099:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18099:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "18093:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18134:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "18149:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18157:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18145:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18145:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18127:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18127:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18181:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18192:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18177:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18177:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "18201:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "18209:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "18197:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18197:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18170:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18170:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18170:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18233:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18244:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18229:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18229:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18249:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18222:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18222:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18222:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18262:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "18305:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18328:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18313:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "18276:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18276:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "18266:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18353:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18364:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18349:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18349:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "18373:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18381:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18369:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18369:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18342:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18342:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18342:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18401:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "18444:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "18452:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "18415:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18415:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "18405:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18479:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18490:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18475:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18475:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "18500:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18508:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18496:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18496:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18468:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18468:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18468:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18528:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "18554:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "18562:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "18536:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18536:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18528:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18016:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "18027:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18035:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18043:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18051:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18059:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18070:4:1",
														"type": ""
													}
												],
												"src": "17748:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18660:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18706:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18715:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18718:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "18708:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18708:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18708:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18681:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18690:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18677:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18677:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18702:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18673:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18673:32:1"
															},
															"nodeType": "YulIf",
															"src": "18670:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "18731:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18750:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "18744:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18744:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "18735:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "18793:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "18769:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18769:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18769:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "18808:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "18818:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "18808:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18626:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18637:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18649:6:1",
														"type": ""
													}
												],
												"src": "18580:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18877:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18922:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18951:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18954:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18957:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "18936:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18936:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18936:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "18972:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "18983:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "18994:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "18988:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18988:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "18979:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18979:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "18972:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "18893:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18893:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18911:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "18890:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18890:23:1"
															},
															"nodeType": "YulIf",
															"src": "18887:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "18869:3:1",
														"type": ""
													}
												],
												"src": "18834:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19065:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19105:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19107:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "19081:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19081:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19099:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "19078:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19078:26:1"
															},
															"nodeType": "YulIf",
															"src": "19075:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19123:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19141:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19135:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19135:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "19127:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19153:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19167:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "19163:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19163:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "19157:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19193:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19199:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "19206:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19206:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19224:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19202:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "19178:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19178:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19178:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19237:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19257:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19251:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19251:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "19241:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19271:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "19281:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19281:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "19275:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19306:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "19316:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "19310:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19392:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19394:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "19352:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "19360:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19349:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19349:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19372:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "19380:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19368:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19368:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "19387:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "19365:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19365:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "19346:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19346:45:1"
															},
															"nodeType": "YulIf",
															"src": "19343:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19410:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19425:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "19431:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "19421:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19421:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "19414:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "19447:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "19467:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "19461:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19461:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "19451:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19498:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19500:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "19486:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "19494:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19483:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19483:14:1"
															},
															"nodeType": "YulIf",
															"src": "19480:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19589:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "19591:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "19530:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19535:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19526:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19526:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19544:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19522:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19522:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "19559:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "19565:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "19565:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19555:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19555:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "19584:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19551:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19551:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "19519:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19519:69:1"
															},
															"nodeType": "YulIf",
															"src": "19516:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "19627:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19641:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "19649:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19637:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19637:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19658:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19633:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19633:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "19607:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19607:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19607:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "19673:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "19680:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "19673:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "19057:3:1",
														"type": ""
													}
												],
												"src": "19018:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19868:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "19885:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19896:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19878:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19878:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19878:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19919:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19930:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19915:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19915:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19935:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19908:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19908:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19908:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19958:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "19969:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "19954:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19954:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "19974:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "19947:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19947:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "19947:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20029:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20040:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20025:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20025:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20045:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20018:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20018:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20018:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20077:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20089:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20100:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20085:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20085:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20077:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19845:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "19859:4:1",
														"type": ""
													}
												],
												"src": "19694:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20289:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20306:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20317:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20299:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20299:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20299:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20340:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20351:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20336:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20336:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20356:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20329:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20329:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20329:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20379:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20390:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20375:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20375:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20395:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20368:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20368:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20368:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20450:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20461:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20446:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20446:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20466:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20439:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20439:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20439:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20486:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20498:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20509:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20494:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20494:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20486:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20266:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20280:4:1",
														"type": ""
													}
												],
												"src": "20115:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20698:170:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20715:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20726:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20708:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20708:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20708:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20749:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20760:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20745:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20745:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20765:2:1",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20738:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20738:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20738:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "20788:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20799:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "20784:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20784:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "20804:22:1",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20777:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20777:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20777:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "20836:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "20848:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20859:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20844:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20844:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "20836:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "20675:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "20689:4:1",
														"type": ""
													}
												],
												"src": "20524:344:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21104:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21114:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21132:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21137:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "21128:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21128:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21141:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "21124:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21124:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "21118:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21159:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "21174:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "21182:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "21170:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21170:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21152:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21152:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21152:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21206:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21217:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21202:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21202:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "21226:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "21234:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "21222:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21222:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21195:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21195:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21195:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21258:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21269:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21254:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21254:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "21274:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21247:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21247:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21247:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21301:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21312:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21297:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21297:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "21317:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21290:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21290:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21344:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21355:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21340:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21340:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21361:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21333:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21333:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21333:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21374:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "21400:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21412:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21423:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21408:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21408:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "21382:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21382:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21374:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21041:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "21052:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "21060:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "21068:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "21076:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "21084:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21095:4:1",
														"type": ""
													}
												],
												"src": "20873:561:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21613:166:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21630:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21641:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21623:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21623:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21623:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21664:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21675:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21660:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21660:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21680:2:1",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21653:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21653:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21653:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "21703:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21714:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "21699:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21699:18:1"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "21719:18:1",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21692:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21692:46:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21692:46:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21747:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "21759:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21770:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21755:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21755:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "21747:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "21590:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "21604:4:1",
														"type": ""
													}
												],
												"src": "21439:340:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 96))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 64))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value3 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint96t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffff))) { revert(0, 0) }\n        value1 := value\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC1155: mint to the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC1155: burn from the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC1155: burn amount exceeds bal\")\n        mstore(add(headStart, 96), \"ance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106101205760003560e01c8063715018a6116100ad578063d501dc3711610071578063d501dc371461025b578063e985e9c51461026e578063f242432a146102aa578063f2fde38b146102bd578063f5298aca146102d057600080fd5b8063715018a6146101fc578063731133e9146102045780638456cb59146102175780638da5cb5b1461021f578063a22cb4651461024857600080fd5b80632eb2c2d6116100f45780632eb2c2d6146101a35780633f4ba83a146101b65780634e1273f4146101be5780635c975abb146101de5780636b20c454146101e957600080fd5b8062fdd58e1461012557806301ffc9a71461014b5780630e89341c1461016e5780631f7fdffa1461018e575b600080fd5b6101386101333660046114cc565b6102e3565b6040519081526020015b60405180910390f35b61015e61015936600461150c565b61037c565b6040519015158152602001610142565b61018161017c366004611530565b6103cc565b604051610142919061158f565b6101a161019c3660046116ee565b610460565b005b6101a16101b1366004611787565b61047a565b6101a16104c6565b6101d16101cc366004611831565b6104d8565b6040516101429190611937565b60035460ff1661015e565b6101a16101f736600461194a565b610602565b6101a161064a565b6101a16102123660046119be565b61065c565b6101a1610670565b60035461010090046001600160a01b03166040516001600160a01b039091168152602001610142565b6101a1610256366004611a13565b610680565b6101a1610269366004611a4f565b61068f565b61015e61027c366004611a9f565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b6101a16102b8366004611ad2565b6106b0565b6101a16102cb366004611b37565b6106f5565b6101a16102de366004611b52565b61076e565b60006001600160a01b0383166103535760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b14806103ad57506001600160e01b031982166303a24d0760e21b145b8061037657506301ffc9a760e01b6001600160e01b0319831614610376565b6060600280546103db90611b85565b80601f016020809104026020016040519081016040528092919081815260200182805461040790611b85565b80156104545780601f1061042957610100808354040283529160200191610454565b820191906000526020600020905b81548152906001019060200180831161043757829003601f168201915b50505050509050919050565b6104686107b1565b61047484848484610811565b50505050565b6001600160a01b0385163314806104965750610496853361027c565b6104b25760405162461bcd60e51b815260040161034a90611bbf565b6104bf858585858561096b565b5050505050565b6104ce6107b1565b6104d6610b15565b565b6060815183511461053d5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b606482015260840161034a565b6000835167ffffffffffffffff811115610559576105596115a2565b604051908082528060200260200182016040528015610582578160200160208202803683370190505b50905060005b84518110156105fa576105cd8582815181106105a6576105a6611c0d565b60200260200101518583815181106105c0576105c0611c0d565b60200260200101516102e3565b8282815181106105df576105df611c0d565b60209081029190910101526105f381611c39565b9050610588565b509392505050565b6001600160a01b03831633148061061e575061061e833361027c565b61063a5760405162461bcd60e51b815260040161034a90611bbf565b610645838383610b67565b505050565b6106526107b1565b6104d66000610d03565b6106646107b1565b61047484848484610d5d565b6106786107b1565b6104d6610e46565b61068b338383610e83565b5050565b6106976107b1565b61064583836bffffffffffffffffffffffff1683610f63565b6001600160a01b0385163314806106cc57506106cc853361027c565b6106e85760405162461bcd60e51b815260040161034a90611bbf565b6104bf858585858561107b565b6106fd6107b1565b6001600160a01b0381166107625760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161034a565b61076b81610d03565b50565b6001600160a01b03831633148061078a575061078a833361027c565b6107a65760405162461bcd60e51b815260040161034a90611bbf565b610645838383610f63565b6003546001600160a01b036101009091041633146104d65760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161034a565b6001600160a01b0384166108375760405162461bcd60e51b815260040161034a90611c52565b81518351146108585760405162461bcd60e51b815260040161034a90611c93565b33610868816000878787876111b3565b60005b84518110156109035783818151811061088657610886611c0d565b60200260200101516000808784815181106108a3576108a3611c0d565b602002602001015181526020019081526020016000206000886001600160a01b03166001600160a01b0316815260200190815260200160002060008282546108eb9190611cdb565b909155508190506108fb81611c39565b91505061086b565b50846001600160a01b031660006001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610954929190611cee565b60405180910390a46104bf816000878787876111c0565b815183511461098c5760405162461bcd60e51b815260040161034a90611c93565b6001600160a01b0384166109b25760405162461bcd60e51b815260040161034a90611d1c565b336109c18187878787876111b3565b60005b8451811015610aa75760008582815181106109e1576109e1611c0d565b6020026020010151905060008583815181106109ff576109ff611c0d565b602090810291909101810151600084815280835260408082206001600160a01b038e168352909352919091205490915081811015610a4f5760405162461bcd60e51b815260040161034a90611d61565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610a8c908490611cdb565b9250508190555050505080610aa090611c39565b90506109c4565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8787604051610af7929190611cee565b60405180910390a4610b0d8187878787876111c0565b505050505050565b610b1d61131b565b6003805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b6001600160a01b038316610b8d5760405162461bcd60e51b815260040161034a90611dab565b8051825114610bae5760405162461bcd60e51b815260040161034a90611c93565b6000339050610bd1818560008686604051806020016040528060008152506111b3565b60005b8351811015610c96576000848281518110610bf157610bf1611c0d565b602002602001015190506000848381518110610c0f57610c0f611c0d565b602090810291909101810151600084815280835260408082206001600160a01b038c168352909352919091205490915081811015610c5f5760405162461bcd60e51b815260040161034a90611dee565b6000928352602083815260408085206001600160a01b038b1686529091529092209103905580610c8e81611c39565b915050610bd4565b5060006001600160a01b0316846001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb8686604051610ce7929190611cee565b60405180910390a4604080516020810190915260009052610474565b600380546001600160a01b03838116610100818102610100600160a81b031985161790945560405193909204169182907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038416610d835760405162461bcd60e51b815260040161034a90611c52565b336000610d8f85611364565b90506000610d9c85611364565b9050610dad836000898585896111b3565b6000868152602081815260408083206001600160a01b038b16845290915281208054879290610ddd908490611cdb565b909155505060408051878152602081018790526001600160a01b03808a1692600092918716917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4610e3d836000898989896113af565b50505050505050565b610e4e61146a565b6003805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610b4a3390565b816001600160a01b0316836001600160a01b031603610ef65760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b606482015260840161034a565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b038316610f895760405162461bcd60e51b815260040161034a90611dab565b336000610f9584611364565b90506000610fa284611364565b9050610fc2838760008585604051806020016040528060008152506111b3565b6000858152602081815260408083206001600160a01b038a168452909152902054848110156110035760405162461bcd60e51b815260040161034a90611dee565b6000868152602081815260408083206001600160a01b038b81168086529184528285208a8703905582518b81529384018a90529092908816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a4604080516020810190915260009052610e3d565b6001600160a01b0384166110a15760405162461bcd60e51b815260040161034a90611d1c565b3360006110ad85611364565b905060006110ba85611364565b90506110ca8389898585896111b3565b6000868152602081815260408083206001600160a01b038c1684529091529020548581101561110b5760405162461bcd60e51b815260040161034a90611d61565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a16825281208054889290611148908490611cdb565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46111a8848a8a8a8a8a6113af565b505050505050505050565b6111bb61146a565b610b0d565b6001600160a01b0384163b15610b0d5760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906112049089908990889088908890600401611e32565b6020604051808303816000875af192505050801561123f575060408051601f3d908101601f1916820190925261123c91810190611e90565b60015b6112eb5761124b611ead565b806308c379a003611284575061125f611ec9565b8061126a5750611286565b8060405162461bcd60e51b815260040161034a919061158f565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b606482015260840161034a565b6001600160e01b0319811663bc197c8160e01b14610e3d5760405162461bcd60e51b815260040161034a90611f53565b60035460ff166104d65760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b604482015260640161034a565b6040805160018082528183019092526060916000919060208083019080368337019050509050828160008151811061139e5761139e611c0d565b602090810291909101015292915050565b6001600160a01b0384163b15610b0d5760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e61906113f39089908990889088908890600401611f9b565b6020604051808303816000875af192505050801561142e575060408051601f3d908101601f1916820190925261142b91810190611e90565b60015b61143a5761124b611ead565b6001600160e01b0319811663f23a6e6160e01b14610e3d5760405162461bcd60e51b815260040161034a90611f53565b60035460ff16156104d65760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b604482015260640161034a565b80356001600160a01b03811681146114c757600080fd5b919050565b600080604083850312156114df57600080fd5b6114e8836114b0565b946020939093013593505050565b6001600160e01b03198116811461076b57600080fd5b60006020828403121561151e57600080fd5b8135611529816114f6565b9392505050565b60006020828403121561154257600080fd5b5035919050565b6000815180845260005b8181101561156f57602081850181015186830182015201611553565b506000602082860101526020601f19601f83011685010191505092915050565b6020815260006115296020830184611549565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff811182821017156115de576115de6115a2565b6040525050565b600067ffffffffffffffff8211156115ff576115ff6115a2565b5060051b60200190565b600082601f83011261161a57600080fd5b81356020611627826115e5565b60405161163482826115b8565b83815260059390931b850182019282810191508684111561165457600080fd5b8286015b8481101561166f5780358352918301918301611658565b509695505050505050565b600082601f83011261168b57600080fd5b813567ffffffffffffffff8111156116a5576116a56115a2565b6040516116bc601f8301601f1916602001826115b8565b8181528460208386010111156116d157600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561170457600080fd5b61170d856114b0565b9350602085013567ffffffffffffffff8082111561172a57600080fd5b61173688838901611609565b9450604087013591508082111561174c57600080fd5b61175888838901611609565b9350606087013591508082111561176e57600080fd5b5061177b8782880161167a565b91505092959194509250565b600080600080600060a0868803121561179f57600080fd5b6117a8866114b0565b94506117b6602087016114b0565b9350604086013567ffffffffffffffff808211156117d357600080fd5b6117df89838a01611609565b945060608801359150808211156117f557600080fd5b61180189838a01611609565b9350608088013591508082111561181757600080fd5b506118248882890161167a565b9150509295509295909350565b6000806040838503121561184457600080fd5b823567ffffffffffffffff8082111561185c57600080fd5b818501915085601f83011261187057600080fd5b8135602061187d826115e5565b60405161188a82826115b8565b83815260059390931b85018201928281019150898411156118aa57600080fd5b948201945b838610156118cf576118c0866114b0565b825294820194908201906118af565b965050860135925050808211156118e557600080fd5b506118f285828601611609565b9150509250929050565b600081518084526020808501945080840160005b8381101561192c57815187529582019590820190600101611910565b509495945050505050565b60208152600061152960208301846118fc565b60008060006060848603121561195f57600080fd5b611968846114b0565b9250602084013567ffffffffffffffff8082111561198557600080fd5b61199187838801611609565b935060408601359150808211156119a757600080fd5b506119b486828701611609565b9150509250925092565b600080600080608085870312156119d457600080fd5b6119dd856114b0565b93506020850135925060408501359150606085013567ffffffffffffffff811115611a0757600080fd5b61177b8782880161167a565b60008060408385031215611a2657600080fd5b611a2f836114b0565b915060208301358015158114611a4457600080fd5b809150509250929050565b600080600060608486031215611a6457600080fd5b611a6d846114b0565b925060208401356bffffffffffffffffffffffff81168114611a8e57600080fd5b929592945050506040919091013590565b60008060408385031215611ab257600080fd5b611abb836114b0565b9150611ac9602084016114b0565b90509250929050565b600080600080600060a08688031215611aea57600080fd5b611af3866114b0565b9450611b01602087016114b0565b93506040860135925060608601359150608086013567ffffffffffffffff811115611b2b57600080fd5b6118248882890161167a565b600060208284031215611b4957600080fd5b611529826114b0565b600080600060608486031215611b6757600080fd5b611b70846114b0565b95602085013595506040909401359392505050565b600181811c90821680611b9957607f821691505b602082108103611bb957634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b600060018201611c4b57611c4b611c23565b5060010190565b60208082526021908201527f455243313135353a206d696e7420746f20746865207a65726f206164647265736040820152607360f81b606082015260800190565b60208082526028908201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206040820152670dad2e6dac2e8c6d60c31b606082015260800190565b8082018082111561037657610376611c23565b604081526000611d0160408301856118fc565b8281036020840152611d1381856118fc565b95945050505050565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b60208082526023908201527f455243313135353a206275726e2066726f6d20746865207a65726f206164647260408201526265737360e81b606082015260800190565b60208082526024908201527f455243313135353a206275726e20616d6f756e7420657863656564732062616c604082015263616e636560e01b606082015260800190565b6001600160a01b0386811682528516602082015260a060408201819052600090611e5e908301866118fc565b8281036060840152611e7081866118fc565b90508281036080840152611e848185611549565b98975050505050505050565b600060208284031215611ea257600080fd5b8151611529816114f6565b600060033d1115611ec65760046000803e5060005160e01c5b90565b600060443d1015611ed75790565b6040516003193d81016004833e81513d67ffffffffffffffff8160248401118184111715611f0757505050505090565b8285019150815181811115611f1f5750505050505090565b843d8701016020828501011115611f395750505050505090565b611f48602082860101876115b8565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a060808201819052600090611fd590830184611549565b97965050505050505056fea2646970667358221220e4820fa1c711372149c4bfc06f86c6e696624032dec34e37a1835ec35e443f2764736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x120 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD501DC37 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD501DC37 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x26E JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x2AA JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xF5298ACA EQ PUSH2 0x2D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x731133E9 EQ PUSH2 0x204 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x217 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x248 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2EB2C2D6 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x1BE JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x6B20C454 EQ PUSH2 0x1E9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x125 JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0x16E JUMPI DUP1 PUSH4 0x1F7FDFFA EQ PUSH2 0x18E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x138 PUSH2 0x133 CALLDATASIZE PUSH1 0x4 PUSH2 0x14CC JUMP JUMPDEST PUSH2 0x2E3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15E PUSH2 0x159 CALLDATASIZE PUSH1 0x4 PUSH2 0x150C JUMP JUMPDEST PUSH2 0x37C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x181 PUSH2 0x17C CALLDATASIZE PUSH1 0x4 PUSH2 0x1530 JUMP JUMPDEST PUSH2 0x3CC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x19C CALLDATASIZE PUSH1 0x4 PUSH2 0x16EE JUMP JUMPDEST PUSH2 0x460 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x1B1 CALLDATASIZE PUSH1 0x4 PUSH2 0x1787 JUMP JUMPDEST PUSH2 0x47A JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x4C6 JUMP JUMPDEST PUSH2 0x1D1 PUSH2 0x1CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x142 SWAP2 SWAP1 PUSH2 0x1937 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x15E JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x194A JUMP JUMPDEST PUSH2 0x602 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x64A JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x212 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BE JUMP JUMPDEST PUSH2 0x65C JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x670 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x142 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x256 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A13 JUMP JUMPDEST PUSH2 0x680 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x269 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A4F JUMP JUMPDEST PUSH2 0x68F JUMP JUMPDEST PUSH2 0x15E PUSH2 0x27C CALLDATASIZE PUSH1 0x4 PUSH2 0x1A9F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2B8 CALLDATASIZE PUSH1 0x4 PUSH2 0x1AD2 JUMP JUMPDEST PUSH2 0x6B0 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2CB CALLDATASIZE PUSH1 0x4 PUSH2 0x1B37 JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x1A1 PUSH2 0x2DE CALLDATASIZE PUSH1 0x4 PUSH2 0x1B52 JUMP JUMPDEST PUSH2 0x76E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x353 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x3AD JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x376 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x376 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3DB SWAP1 PUSH2 0x1B85 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x407 SWAP1 PUSH2 0x1B85 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x454 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x429 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x454 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x437 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x468 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x474 DUP5 DUP5 DUP5 DUP5 PUSH2 0x811 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x496 JUMPI POP PUSH2 0x496 DUP6 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x4B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x4BF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x96B JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH2 0x4CE PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0xB15 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x53D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x559 JUMPI PUSH2 0x559 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x582 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x5FA JUMPI PUSH2 0x5CD DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5A6 JUMPI PUSH2 0x5A6 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x5C0 JUMPI PUSH2 0x5C0 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x2E3 JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x5DF JUMPI PUSH2 0x5DF PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x5F3 DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP1 POP PUSH2 0x588 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x61E JUMPI POP PUSH2 0x61E DUP4 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x63A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x645 DUP4 DUP4 DUP4 PUSH2 0xB67 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x652 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH1 0x0 PUSH2 0xD03 JUMP JUMPDEST PUSH2 0x664 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x474 DUP5 DUP5 DUP5 DUP5 PUSH2 0xD5D JUMP JUMPDEST PUSH2 0x678 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x4D6 PUSH2 0xE46 JUMP JUMPDEST PUSH2 0x68B CALLER DUP4 DUP4 PUSH2 0xE83 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x697 PUSH2 0x7B1 JUMP JUMPDEST PUSH2 0x645 DUP4 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x6CC JUMPI POP PUSH2 0x6CC DUP6 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x6E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x4BF DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x107B JUMP JUMPDEST PUSH2 0x6FD PUSH2 0x7B1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x762 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0xD03 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER EQ DUP1 PUSH2 0x78A JUMPI POP PUSH2 0x78A DUP4 CALLER PUSH2 0x27C JUMP JUMPDEST PUSH2 0x7A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1BBF JUMP JUMPDEST PUSH2 0x645 DUP4 DUP4 DUP4 PUSH2 0xF63 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x100 SWAP1 SWAP2 DIV AND CALLER EQ PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x837 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C52 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C93 JUMP JUMPDEST CALLER PUSH2 0x868 DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x903 JUMPI DUP4 DUP2 DUP2 MLOAD DUP2 LT PUSH2 0x886 JUMPI PUSH2 0x886 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x0 DUP1 DUP8 DUP5 DUP2 MLOAD DUP2 LT PUSH2 0x8A3 JUMPI PUSH2 0x8A3 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8EB SWAP2 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP DUP2 SWAP1 POP PUSH2 0x8FB DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x86B JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x954 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x4BF DUP2 PUSH1 0x0 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11C0 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x98C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x9B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D1C JUMP JUMPDEST CALLER PUSH2 0x9C1 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0xAA7 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x9E1 JUMPI PUSH2 0x9E1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x9FF JUMPI PUSH2 0x9FF PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xA4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA8C SWAP1 DUP5 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0xAA0 SWAP1 PUSH2 0x1C39 JUMP JUMPDEST SWAP1 POP PUSH2 0x9C4 JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0xAF7 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xB0D DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x11C0 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xB1D PUSH2 0x131B JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xB8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DAB JUMP JUMPDEST DUP1 MLOAD DUP3 MLOAD EQ PUSH2 0xBAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C93 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP PUSH2 0xBD1 DUP2 DUP6 PUSH1 0x0 DUP7 DUP7 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0xC96 JUMPI PUSH1 0x0 DUP5 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xBF1 JUMPI PUSH2 0xBF1 PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP5 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xC0F JUMPI PUSH2 0xC0F PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 DUP2 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP7 MSTORE SWAP1 SWAP2 MSTORE SWAP1 SWAP3 KECCAK256 SWAP2 SUB SWAP1 SSTORE DUP1 PUSH2 0xC8E DUP2 PUSH2 0x1C39 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xBD4 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP7 DUP7 PUSH1 0x40 MLOAD PUSH2 0xCE7 SWAP3 SWAP2 SWAP1 PUSH2 0x1CEE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0x474 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH2 0x100 DUP2 DUP2 MUL PUSH2 0x100 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT DUP6 AND OR SWAP1 SWAP5 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP1 SWAP3 DIV AND SWAP2 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xD83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1C52 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xD8F DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xD9C DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH2 0xDAD DUP4 PUSH1 0x0 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP8 SWAP3 SWAP1 PUSH2 0xDDD SWAP1 DUP5 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP8 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND SWAP3 PUSH1 0x0 SWAP3 SWAP2 DUP8 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0xE3D DUP4 PUSH1 0x0 DUP10 DUP10 DUP10 DUP10 PUSH2 0x13AF JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xE4E PUSH2 0x146A JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0xB4A CALLER SWAP1 JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0xEF6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xF89 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DAB JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0xF95 DUP5 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xFA2 DUP5 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH2 0xFC2 DUP4 DUP8 PUSH1 0x0 DUP6 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP5 DUP2 LT ISZERO PUSH2 0x1003 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1DEE JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP12 DUP2 AND DUP1 DUP7 MSTORE SWAP2 DUP5 MSTORE DUP3 DUP6 KECCAK256 DUP11 DUP8 SUB SWAP1 SSTORE DUP3 MLOAD DUP12 DUP2 MSTORE SWAP4 DUP5 ADD DUP11 SWAP1 MSTORE SWAP1 SWAP3 SWAP1 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 MSTORE PUSH2 0xE3D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x10A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D1C JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x10AD DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x10BA DUP6 PUSH2 0x1364 JUMP JUMPDEST SWAP1 POP PUSH2 0x10CA DUP4 DUP10 DUP10 DUP6 DUP6 DUP10 PUSH2 0x11B3 JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1D61 JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x1148 SWAP1 DUP5 SWAP1 PUSH2 0x1CDB JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x11A8 DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0x13AF JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x11BB PUSH2 0x146A JUMP JUMPDEST PUSH2 0xB0D JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x1204 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1E32 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x123F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x123C SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x12EB JUMPI PUSH2 0x124B PUSH2 0x1EAD JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x1284 JUMPI POP PUSH2 0x125F PUSH2 0x1EC9 JUMP JUMPDEST DUP1 PUSH2 0x126A JUMPI POP PUSH2 0x1286 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP2 SWAP1 PUSH2 0x158F JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34A JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x139E JUMPI PUSH2 0x139E PUSH2 0x1C0D JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0xB0D JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0x13F3 SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1F9B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x142E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x142B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1E90 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x143A JUMPI PUSH2 0x124B PUSH2 0x1EAD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xE3D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x34A SWAP1 PUSH2 0x1F53 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x4D6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x34A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x14C7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x14DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x14E8 DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x76B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1529 DUP2 PUSH2 0x14F6 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1542 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x156F JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x1553 JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1529 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1549 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x15DE JUMPI PUSH2 0x15DE PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x15FF JUMPI PUSH2 0x15FF PUSH2 0x15A2 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x161A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x1627 DUP3 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1634 DUP3 DUP3 PUSH2 0x15B8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0x1654 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x166F JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0x1658 JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x168B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x16A5 JUMPI PUSH2 0x16A5 PUSH2 0x15A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16BC PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x15B8 JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x16D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1704 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x170D DUP6 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x172A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1736 DUP9 DUP4 DUP10 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x174C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1758 DUP9 DUP4 DUP10 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x176E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x177B DUP8 DUP3 DUP9 ADD PUSH2 0x167A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x179F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17A8 DUP7 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 POP PUSH2 0x17B6 PUSH1 0x20 DUP8 ADD PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x17D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x17DF DUP10 DUP4 DUP11 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x17F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1801 DUP10 DUP4 DUP11 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x1817 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1824 DUP9 DUP3 DUP10 ADD PUSH2 0x167A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1844 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x185C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1870 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0x187D DUP3 PUSH2 0x15E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x188A DUP3 DUP3 PUSH2 0x15B8 JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0x18AA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0x18CF JUMPI PUSH2 0x18C0 DUP7 PUSH2 0x14B0 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x18AF JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0x18E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x18F2 DUP6 DUP3 DUP7 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x192C JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1910 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1529 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x18FC JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x195F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1968 DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1985 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1991 DUP8 DUP4 DUP9 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x19A7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x19B4 DUP7 DUP3 DUP8 ADD PUSH2 0x1609 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x19D4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x19DD DUP6 PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1A07 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x177B DUP8 DUP3 DUP9 ADD PUSH2 0x167A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1A26 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A2F DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1A44 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1A64 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1A6D DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1A8E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AB2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1ABB DUP4 PUSH2 0x14B0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1AC9 PUSH1 0x20 DUP5 ADD PUSH2 0x14B0 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1AEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1AF3 DUP7 PUSH2 0x14B0 JUMP JUMPDEST SWAP5 POP PUSH2 0x1B01 PUSH1 0x20 DUP8 ADD PUSH2 0x14B0 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1B2B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1824 DUP9 DUP3 DUP10 ADD PUSH2 0x167A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B49 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1529 DUP3 PUSH2 0x14B0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1B67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1B70 DUP5 PUSH2 0x14B0 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B99 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1BB9 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x1C4B JUMPI PUSH2 0x1C4B PUSH2 0x1C23 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x21 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206D696E7420746F20746865207A65726F20616464726573 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x376 JUMPI PUSH2 0x376 PUSH2 0x1C23 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x1D01 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x18FC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1D13 DUP2 DUP6 PUSH2 0x18FC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x23 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E2066726F6D20746865207A65726F2061646472 PUSH1 0x40 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A206275726E20616D6F756E7420657863656564732062616C PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x616E6365 PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1E5E SWAP1 DUP4 ADD DUP7 PUSH2 0x18FC JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x1E70 DUP2 DUP7 PUSH2 0x18FC JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x1E84 DUP2 DUP6 PUSH2 0x1549 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1529 DUP2 PUSH2 0x14F6 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x1EC6 JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x1ED7 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x1F07 JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1F1F JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x1F39 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x1F48 PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0x15B8 JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1FD5 SWAP1 DUP4 ADD DUP5 PUSH2 0x1549 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE4 DUP3 0xF LOG1 0xC7 GT CALLDATACOPY 0x21 0x49 0xC4 0xBF 0xC0 PUSH16 0x86C6E696624032DEC34E37A1835EC35E PREVRANDAO EXTCODEHASH 0x27 PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "42529:1027:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26499:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;26499:227:0;;;;;;;;25550:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;25550:305:0;1019:187:1;26254:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;43078:186::-;;;;;;:::i;:::-;;:::i;:::-;;28356:426;;;;;;:::i;:::-;;:::i;42699:63::-;;;:::i;26883:486::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;5084:84::-;5154:7;;;;5084:84;;42147:317;;;;;;:::i;:::-;;:::i;2682:101::-;;;:::i;42908:164::-;;;;;;:::i;:::-;;:::i;42634:59::-;;;:::i;2059:85::-;2131:6;;;;;-1:-1:-1;;;;;2131:6:0;2059:85;;-1:-1:-1;;;;;9026:32:1;;;9008:51;;8996:2;8981:18;2059:85:0;8862:203:1;27437:153:0;;;;;;:::i;:::-;;:::i;42767:136::-;;;;;;:::i;:::-;;:::i;27657:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;27779:27:0;;;27756:4;27779:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;27657:166;27890:394;;;;;;:::i;:::-;;:::i;2932:198::-;;;;;;:::i;:::-;;:::i;41856:285::-;;;;;;:::i;:::-;;:::i;26499:227::-;26585:7;-1:-1:-1;;;;;26612:21:0;;26604:76;;;;-1:-1:-1;;;26604:76:0;;11457:2:1;26604:76:0;;;11439:21:1;11496:2;11476:18;;;11469:30;11535:34;11515:18;;;11508:62;-1:-1:-1;;;11586:18:1;;;11579:40;11636:19;;26604:76:0;;;;;;;;;-1:-1:-1;26697:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;26697:22:0;;;;;;;;;;26499:227;;;;;:::o;25550:305::-;25652:4;-1:-1:-1;;;;;;25687:41:0;;-1:-1:-1;;;25687:41:0;;:109;;-1:-1:-1;;;;;;;25744:52:0;;-1:-1:-1;;;25744:52:0;25687:109;:161;;;-1:-1:-1;;;;;;;;;;17245:40:0;;;25812:36;17137:155;26254:103;26314:13;26346:4;26339:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26254:103;;;:::o;43078:186::-;1952:13;:11;:13::i;:::-;43223:34:::1;43234:2;43238:3;43243:7;43252:4;43223:10;:34::i;:::-;43078:186:::0;;;;:::o;28356:426::-;-1:-1:-1;;;;;28581:20:0;;741:10;28581:20;;:60;;-1:-1:-1;28605:36:0;28622:4;741:10;27657:166;:::i;28605:36::-;28560:153;;;;-1:-1:-1;;;28560:153:0;;;;;;;:::i;:::-;28723:52;28746:4;28752:2;28756:3;28761:7;28770:4;28723:22;:52::i;:::-;28356:426;;;;;:::o;42699:63::-;1952:13;:11;:13::i;:::-;42745:10:::1;:8;:10::i;:::-;42699:63::o:0;26883:486::-;27016:16;27071:3;:10;27052:8;:15;:29;27044:83;;;;-1:-1:-1;;;27044:83:0;;12668:2:1;27044:83:0;;;12650:21:1;12707:2;12687:18;;;12680:30;12746:34;12726:18;;;12719:62;-1:-1:-1;;;12797:18:1;;;12790:39;12846:19;;27044:83:0;12466:405:1;27044:83:0;27138:30;27185:8;:15;27171:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27171:30:0;;27138:63;;27217:9;27212:120;27236:8;:15;27232:1;:19;27212:120;;;27291:30;27301:8;27310:1;27301:11;;;;;;;;:::i;:::-;;;;;;;27314:3;27318:1;27314:6;;;;;;;;:::i;:::-;;;;;;;27291:9;:30::i;:::-;27272:13;27286:1;27272:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;27253:3;;;:::i;:::-;;;27212:120;;;-1:-1:-1;27349:13:0;26883:486;-1:-1:-1;;;26883:486:0:o;42147:317::-;-1:-1:-1;;;;;42276:23:0;;741:10;42276:23;;:66;;-1:-1:-1;42303:39:0;42320:7;741:10;27657:166;:::i;42303:39::-;42255:159;;;;-1:-1:-1;;;42255:159:0;;;;;;;:::i;:::-;42425:32;42436:7;42445:3;42450:6;42425:10;:32::i;:::-;42147:317;;;:::o;2682:101::-;1952:13;:11;:13::i;:::-;2746:30:::1;2773:1;2746:18;:30::i;42908:164::-:0;1952:13;:11;:13::i;:::-;43033:32:::1;43039:7;43048:2;43052:6;43060:4;43033:5;:32::i;42634:59::-:0;1952:13;:11;:13::i;:::-;42678:8:::1;:6;:8::i;27437:153::-:0;27531:52;741:10;27564:8;27574;27531:18;:52::i;:::-;27437:153;;:::o;42767:136::-;1952:13;:11;:13::i;:::-;42861:35:::1;42867:11;42880:7;42861:35;;42889:6;42861:5;:35::i;27890:394::-:0;-1:-1:-1;;;;;28090:20:0;;741:10;28090:20;;:60;;-1:-1:-1;28114:36:0;28131:4;741:10;27657:166;:::i;28114:36::-;28069:153;;;;-1:-1:-1;;;28069:153:0;;;;;;;:::i;:::-;28232:45;28250:4;28256:2;28260;28264:6;28272:4;28232:17;:45::i;2932:198::-;1952:13;:11;:13::i;:::-;-1:-1:-1;;;;;3020:22:0;::::1;3012:73;;;::::0;-1:-1:-1;;;3012:73:0;;13482:2:1;3012:73:0::1;::::0;::::1;13464:21:1::0;13521:2;13501:18;;;13494:30;13560:34;13540:18;;;13533:62;-1:-1:-1;;;13611:18:1;;;13604:36;13657:19;;3012:73:0::1;13280:402:1::0;3012:73:0::1;3095:28;3114:8;3095:18;:28::i;:::-;2932:198:::0;:::o;41856:285::-;-1:-1:-1;;;;;41960:23:0;;741:10;41960:23;;:66;;-1:-1:-1;41987:39:0;42004:7;741:10;27657:166;:::i;41987:39::-;41939:159;;;;-1:-1:-1;;;41939:159:0;;;;;;;:::i;:::-;42109:25;42115:7;42124:2;42128:5;42109;:25::i;2217:130::-;2131:6;;-1:-1:-1;;;;;2131:6:0;;;;;741:10;2280:23;2272:68;;;;-1:-1:-1;;;2272:68:0;;13889:2:1;2272:68:0;;;13871:21:1;;;13908:18;;;13901:30;13967:34;13947:18;;;13940:62;14019:18;;2272:68:0;13687:356:1;33983:791:0;-1:-1:-1;;;;;34155:16:0;;34147:62;;;;-1:-1:-1;;;34147:62:0;;;;;;;:::i;:::-;34241:7;:14;34227:3;:10;:28;34219:81;;;;-1:-1:-1;;;34219:81:0;;;;;;;:::i;:::-;741:10;34353:66;741:10;34311:16;34396:2;34400:3;34405:7;34414:4;34353:20;:66::i;:::-;34435:9;34430:101;34454:3;:10;34450:1;:14;34430:101;;;34510:7;34518:1;34510:10;;;;;;;;:::i;:::-;;;;;;;34485:9;:17;34495:3;34499:1;34495:6;;;;;;;;:::i;:::-;;;;;;;34485:17;;;;;;;;;;;:21;34503:2;-1:-1:-1;;;;;34485:21:0;-1:-1:-1;;;;;34485:21:0;;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;34466:3:0;;-1:-1:-1;34466:3:0;;;:::i;:::-;;;;34430:101;;;;34582:2;-1:-1:-1;;;;;34546:53:0;34578:1;-1:-1:-1;;;;;34546:53:0;34560:8;-1:-1:-1;;;;;34546:53:0;;34586:3;34591:7;34546:53;;;;;;;:::i;:::-;;;;;;;;34686:81;34722:8;34740:1;34744:2;34748:3;34753:7;34762:4;34686:35;:81::i;30525:1115::-;30745:7;:14;30731:3;:10;:28;30723:81;;;;-1:-1:-1;;;30723:81:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;30822:16:0;;30814:66;;;;-1:-1:-1;;;30814:66:0;;;;;;;:::i;:::-;741:10;30933:60;741:10;30964:4;30970:2;30974:3;30979:7;30988:4;30933:20;:60::i;:::-;31009:9;31004:411;31028:3;:10;31024:1;:14;31004:411;;;31059:10;31072:3;31076:1;31072:6;;;;;;;;:::i;:::-;;;;;;;31059:19;;31092:14;31109:7;31117:1;31109:10;;;;;;;;:::i;:::-;;;;;;;;;;;;31134:19;31156:13;;;;;;;;;;-1:-1:-1;;;;;31156:19:0;;;;;;;;;;;;31109:10;;-1:-1:-1;31197:21:0;;;;31189:76;;;;-1:-1:-1;;;31189:76:0;;;;;;;:::i;:::-;31307:9;:13;;;;;;;;;;;-1:-1:-1;;;;;31307:19:0;;;;;;;;;;31329:20;;;31307:42;;31377:17;;;;;;;:27;;31329:20;;31307:9;31377:27;;31329:20;;31377:27;:::i;:::-;;;;;;;;31045:370;;;31040:3;;;;:::i;:::-;;;31004:411;;;;31460:2;-1:-1:-1;;;;;31430:47:0;31454:4;-1:-1:-1;;;;;31430:47:0;31444:8;-1:-1:-1;;;;;31430:47:0;;31464:3;31469:7;31430:47;;;;;;;:::i;:::-;;;;;;;;31558:75;31594:8;31604:4;31610:2;31614:3;31619:7;31628:4;31558:35;:75::i;:::-;30713:927;30525:1115;;;;;:::o;5902:117::-;4955:16;:14;:16::i;:::-;5960:7:::1;:15:::0;;-1:-1:-1;;5960:15:0::1;::::0;;5990:22:::1;741:10:::0;5999:12:::1;5990:22;::::0;-1:-1:-1;;;;;9026:32:1;;;9008:51;;8996:2;8981:18;5990:22:0::1;;;;;;;5902:117::o:0;36055:913::-;-1:-1:-1;;;;;36172:18:0;;36164:66;;;;-1:-1:-1;;;36164:66:0;;;;;;;:::i;:::-;36262:7;:14;36248:3;:10;:28;36240:81;;;;-1:-1:-1;;;36240:81:0;;;;;;;:::i;:::-;36332:16;741:10;36332:31;;36374:66;36395:8;36405:4;36419:1;36423:3;36428:7;36374:66;;;;;;;;;;;;:20;:66::i;:::-;36456:9;36451:364;36475:3;:10;36471:1;:14;36451:364;;;36506:10;36519:3;36523:1;36519:6;;;;;;;;:::i;:::-;;;;;;;36506:19;;36539:14;36556:7;36564:1;36556:10;;;;;;;;:::i;:::-;;;;;;;;;;;;36581:19;36603:13;;;;;;;;;;-1:-1:-1;;;;;36603:19:0;;;;;;;;;;;;36556:10;;-1:-1:-1;36644:21:0;;;;36636:70;;;;-1:-1:-1;;;36636:70:0;;;;;;;:::i;:::-;36748:9;:13;;;;;;;;;;;-1:-1:-1;;;;;36748:19:0;;;;;;;;;;36770:20;;36748:42;;36487:3;;;;:::i;:::-;;;;36451:364;;;;36868:1;-1:-1:-1;;;;;36830:55:0;36854:4;-1:-1:-1;;;;;36830:55:0;36844:8;-1:-1:-1;;;;;36830:55:0;;36872:3;36877:7;36830:55;;;;;;;:::i;:::-;;;;;;;;36896:65;;;;;;;;;36940:1;36896:65;;;30525:1115;3284:187;3376:6;;;-1:-1:-1;;;;;3392:17:0;;;3376:6;3392:17;;;-1:-1:-1;;;;;;3392:17:0;;;;;;3424:40;;3376:6;;;;;;;;3424:40;;3357:16;;3424:40;3347:124;3284:187;:::o;32922:671::-;-1:-1:-1;;;;;33031:16:0;;33023:62;;;;-1:-1:-1;;;33023:62:0;;;;;;;:::i;:::-;741:10;33096:16;33160:21;33178:2;33160:17;:21::i;:::-;33137:44;;33191:24;33218:25;33236:6;33218:17;:25::i;:::-;33191:52;;33254:66;33275:8;33293:1;33297:2;33301:3;33306:7;33315:4;33254:20;:66::i;:::-;33331:9;:13;;;;;;;;;;;-1:-1:-1;;;;;33331:17:0;;;;;;;;;:27;;33352:6;;33331:9;:27;;33352:6;;33331:27;:::i;:::-;;;;-1:-1:-1;;33373:52:0;;;17259:25:1;;;17315:2;17300:18;;17293:34;;;-1:-1:-1;;;;;33373:52:0;;;;33406:1;;33373:52;;;;;;17232:18:1;33373:52:0;;;;;;;33512:74;33543:8;33561:1;33565:2;33569;33573:6;33581:4;33512:30;:74::i;:::-;33013:580;;;32922:671;;;;:::o;5655:115::-;4708:19;:17;:19::i;:::-;5714:7:::1;:14:::0;;-1:-1:-1;;5714:14:0::1;5724:4;5714:14;::::0;;5743:20:::1;5750:12;741:10:::0;;662:96;37104:293;37224:8;-1:-1:-1;;;;;37215:17:0;:5;-1:-1:-1;;;;;37215:17:0;;37207:71;;;;-1:-1:-1;;;37207:71:0;;17540:2:1;37207:71:0;;;17522:21:1;17579:2;17559:18;;;17552:30;17618:34;17598:18;;;17591:62;-1:-1:-1;;;17669:18:1;;;17662:39;17718:19;;37207:71:0;17338:405:1;37207:71:0;-1:-1:-1;;;;;37288:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;37288:46:0;;;;;;;;;;37349:41;;1159::1;;;37349::0;;1132:18:1;37349:41:0;;;;;;;37104:293;;;:::o;35060:756::-;-1:-1:-1;;;;;35152:18:0;;35144:66;;;;-1:-1:-1;;;35144:66:0;;;;;;;:::i;:::-;741:10;35221:16;35285:21;35303:2;35285:17;:21::i;:::-;35262:44;;35316:24;35343:25;35361:6;35343:17;:25::i;:::-;35316:52;;35379:66;35400:8;35410:4;35424:1;35428:3;35433:7;35379:66;;;;;;;;;;;;:20;:66::i;:::-;35456:19;35478:13;;;;;;;;;;;-1:-1:-1;;;;;35478:19:0;;;;;;;;;;35515:21;;;;35507:70;;;;-1:-1:-1;;;35507:70:0;;;;;;;:::i;:::-;35611:9;:13;;;;;;;;;;;-1:-1:-1;;;;;35611:19:0;;;;;;;;;;;;35633:20;;;35611:42;;35679:54;;17259:25:1;;;17300:18;;;17293:34;;;35611:19:0;;35679:54;;;;;;17232:18:1;35679:54:0;;;;;;;35744:65;;;;;;;;;35788:1;35744:65;;;30525:1115;29232:947;-1:-1:-1;;;;;29413:16:0;;29405:66;;;;-1:-1:-1;;;29405:66:0;;;;;;;:::i;:::-;741:10;29482:16;29546:21;29564:2;29546:17;:21::i;:::-;29523:44;;29577:24;29604:25;29622:6;29604:17;:25::i;:::-;29577:52;;29640:60;29661:8;29671:4;29677:2;29681:3;29686:7;29695:4;29640:20;:60::i;:::-;29711:19;29733:13;;;;;;;;;;;-1:-1:-1;;;;;29733:19:0;;;;;;;;;;29770:21;;;;29762:76;;;;-1:-1:-1;;;29762:76:0;;;;;;;:::i;:::-;29872:9;:13;;;;;;;;;;;-1:-1:-1;;;;;29872:19:0;;;;;;;;;;29894:20;;;29872:42;;29934:17;;;;;;;:27;;29894:20;;29872:9;29934:27;;29894:20;;29934:27;:::i;:::-;;;;-1:-1:-1;;29977:46:0;;;17259:25:1;;;17315:2;17300:18;;17293:34;;;-1:-1:-1;;;;;29977:46:0;;;;;;;;;;;;;;17232:18:1;29977:46:0;;;;;;;30104:68;30135:8;30145:4;30151:2;30155;30159:6;30167:4;30104:30;:68::i;:::-;29395:784;;;;29232:947;;;;;:::o;43270:284::-;4708:19;:17;:19::i;:::-;43481:66:::1;30525:1115:::0;40430:792;-1:-1:-1;;;;;40662:13:0;;7746:19;:23;40658:558;;40697:79;;-1:-1:-1;;;40697:79:0;;-1:-1:-1;;;;;40697:43:0;;;;;:79;;40741:8;;40751:4;;40757:3;;40762:7;;40771:4;;40697:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40697:79:0;;;;;;;;-1:-1:-1;;40697:79:0;;;;;;;;;;;;:::i;:::-;;;40693:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;41082:6;41075:14;;-1:-1:-1;;;41075:14:0;;;;;;;;:::i;40693:513::-;;;41129:62;;-1:-1:-1;;;41129:62:0;;19896:2:1;41129:62:0;;;19878:21:1;19935:2;19915:18;;;19908:30;19974:34;19954:18;;;19947:62;-1:-1:-1;;;20025:18:1;;;20018:50;20085:19;;41129:62:0;19694:416:1;40693:513:0;-1:-1:-1;;;;;;40855:60:0;;-1:-1:-1;;;40855:60:0;40851:157;;40939:50;;-1:-1:-1;;;40939:50:0;;;;;;;:::i;5414:106::-;5154:7;;;;5472:41;;;;-1:-1:-1;;;5472:41:0;;20726:2:1;5472:41:0;;;20708:21:1;20765:2;20745:18;;;20738:30;-1:-1:-1;;;20784:18:1;;;20777:50;20844:18;;5472:41:0;20524:344:1;41228:193:0;41347:16;;;41361:1;41347:16;;;;;;;;;41294;;41322:22;;41347:16;;;;;;;;;;;;-1:-1:-1;41347:16:0;41322:41;;41384:7;41373:5;41379:1;41373:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;41409:5;41228:193;-1:-1:-1;;41228:193:0:o;39699:725::-;-1:-1:-1;;;;;39906:13:0;;7746:19;:23;39902:516;;39941:72;;-1:-1:-1;;;39941:72:0;;-1:-1:-1;;;;;39941:38:0;;;;;:72;;39980:8;;39990:4;;39996:2;;40000:6;;40008:4;;39941:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39941:72:0;;;;;;;;-1:-1:-1;;39941:72:0;;;;;;;;;;;;:::i;:::-;;;39937:471;;;;:::i;:::-;-1:-1:-1;;;;;;40062:55:0;;-1:-1:-1;;;40062:55:0;40058:152;;40141:50;;-1:-1:-1;;;40141:50:0;;;;;;;:::i;5236:106::-;5154:7;;;;5305:9;5297:38;;;;-1:-1:-1;;;5297:38:0;;21641:2:1;5297:38:0;;;21623:21:1;21680:2;21660:18;;;21653:30;-1:-1:-1;;;21699:18:1;;;21692:46;21755:18;;5297:38:0;21439:340:1;14:173;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;769:245;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:1:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:1;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:1:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:1;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:1;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:1;2623:724;-1:-1:-1;;;;;;2623:724:1:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:1;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:1:o;3912:868::-;4057:6;4065;4073;4081;4134:3;4122:9;4113:7;4109:23;4105:33;4102:53;;;4151:1;4148;4141:12;4102:53;4174:29;4193:9;4174:29;:::i;:::-;4164:39;;4254:2;4243:9;4239:18;4226:32;4277:18;4318:2;4310:6;4307:14;4304:34;;;4334:1;4331;4324:12;4304:34;4357:61;4410:7;4401:6;4390:9;4386:22;4357:61;:::i;:::-;4347:71;;4471:2;4460:9;4456:18;4443:32;4427:48;;4500:2;4490:8;4487:16;4484:36;;;4516:1;4513;4506:12;4484:36;4539:63;4594:7;4583:8;4572:9;4568:24;4539:63;:::i;:::-;4529:73;;4655:2;4644:9;4640:18;4627:32;4611:48;;4684:2;4674:8;4671:16;4668:36;;;4700:1;4697;4690:12;4668:36;;4723:51;4766:7;4755:8;4744:9;4740:24;4723:51;:::i;:::-;4713:61;;;3912:868;;;;;;;:::o;4785:943::-;4939:6;4947;4955;4963;4971;5024:3;5012:9;5003:7;4999:23;4995:33;4992:53;;;5041:1;5038;5031:12;4992:53;5064:29;5083:9;5064:29;:::i;:::-;5054:39;;5112:38;5146:2;5135:9;5131:18;5112:38;:::i;:::-;5102:48;;5201:2;5190:9;5186:18;5173:32;5224:18;5265:2;5257:6;5254:14;5251:34;;;5281:1;5278;5271:12;5251:34;5304:61;5357:7;5348:6;5337:9;5333:22;5304:61;:::i;:::-;5294:71;;5418:2;5407:9;5403:18;5390:32;5374:48;;5447:2;5437:8;5434:16;5431:36;;;5463:1;5460;5453:12;5431:36;5486:63;5541:7;5530:8;5519:9;5515:24;5486:63;:::i;:::-;5476:73;;5602:3;5591:9;5587:19;5574:33;5558:49;;5632:2;5622:8;5619:16;5616:36;;;5648:1;5645;5638:12;5616:36;;5671:51;5714:7;5703:8;5692:9;5688:24;5671:51;:::i;:::-;5661:61;;;4785:943;;;;;;;;:::o;5733:1208::-;5851:6;5859;5912:2;5900:9;5891:7;5887:23;5883:32;5880:52;;;5928:1;5925;5918:12;5880:52;5968:9;5955:23;5997:18;6038:2;6030:6;6027:14;6024:34;;;6054:1;6051;6044:12;6024:34;6092:6;6081:9;6077:22;6067:32;;6137:7;6130:4;6126:2;6122:13;6118:27;6108:55;;6159:1;6156;6149:12;6108:55;6195:2;6182:16;6217:4;6240:43;6280:2;6240:43;:::i;:::-;6312:2;6306:9;6324:31;6352:2;6344:6;6324:31;:::i;:::-;6390:18;;;6478:1;6474:10;;;;6466:19;;6462:28;;;6424:15;;;;-1:-1:-1;6502:19:1;;;6499:39;;;6534:1;6531;6524:12;6499:39;6558:11;;;;6578:148;6594:6;6589:3;6586:15;6578:148;;;6660:23;6679:3;6660:23;:::i;:::-;6648:36;;6611:12;;;;6704;;;;6578:148;;;6745:6;-1:-1:-1;;6789:18:1;;6776:32;;-1:-1:-1;;6820:16:1;;;6817:36;;;6849:1;6846;6839:12;6817:36;;6872:63;6927:7;6916:8;6905:9;6901:24;6872:63;:::i;:::-;6862:73;;;5733:1208;;;;;:::o;6946:435::-;6999:3;7037:5;7031:12;7064:6;7059:3;7052:19;7090:4;7119:2;7114:3;7110:12;7103:19;;7156:2;7149:5;7145:14;7177:1;7187:169;7201:6;7198:1;7195:13;7187:169;;;7262:13;;7250:26;;7296:12;;;;7331:15;;;;7223:1;7216:9;7187:169;;;-1:-1:-1;7372:3:1;;6946:435;-1:-1:-1;;;;;6946:435:1:o;7386:261::-;7565:2;7554:9;7547:21;7528:4;7585:56;7637:2;7626:9;7622:18;7614:6;7585:56;:::i;7652:669::-;7779:6;7787;7795;7848:2;7836:9;7827:7;7823:23;7819:32;7816:52;;;7864:1;7861;7854:12;7816:52;7887:29;7906:9;7887:29;:::i;:::-;7877:39;;7967:2;7956:9;7952:18;7939:32;7990:18;8031:2;8023:6;8020:14;8017:34;;;8047:1;8044;8037:12;8017:34;8070:61;8123:7;8114:6;8103:9;8099:22;8070:61;:::i;:::-;8060:71;;8184:2;8173:9;8169:18;8156:32;8140:48;;8213:2;8203:8;8200:16;8197:36;;;8229:1;8226;8219:12;8197:36;;8252:63;8307:7;8296:8;8285:9;8281:24;8252:63;:::i;:::-;8242:73;;;7652:669;;;;;:::o;8326:531::-;8421:6;8429;8437;8445;8498:3;8486:9;8477:7;8473:23;8469:33;8466:53;;;8515:1;8512;8505:12;8466:53;8538:29;8557:9;8538:29;:::i;:::-;8528:39;;8614:2;8603:9;8599:18;8586:32;8576:42;;8665:2;8654:9;8650:18;8637:32;8627:42;;8720:2;8709:9;8705:18;8692:32;8747:18;8739:6;8736:30;8733:50;;;8779:1;8776;8769:12;8733:50;8802:49;8843:7;8834:6;8823:9;8819:22;8802:49;:::i;9070:347::-;9135:6;9143;9196:2;9184:9;9175:7;9171:23;9167:32;9164:52;;;9212:1;9209;9202:12;9164:52;9235:29;9254:9;9235:29;:::i;:::-;9225:39;;9314:2;9303:9;9299:18;9286:32;9361:5;9354:13;9347:21;9340:5;9337:32;9327:60;;9383:1;9380;9373:12;9327:60;9406:5;9396:15;;;9070:347;;;;;:::o;9422:434::-;9498:6;9506;9514;9567:2;9555:9;9546:7;9542:23;9538:32;9535:52;;;9583:1;9580;9573:12;9535:52;9606:29;9625:9;9606:29;:::i;:::-;9596:39;;9685:2;9674:9;9670:18;9657:32;9729:26;9722:5;9718:38;9711:5;9708:49;9698:77;;9771:1;9768;9761:12;9698:77;9422:434;;9794:5;;-1:-1:-1;;;9846:2:1;9831:18;;;;9818:32;;9422:434::o;9861:260::-;9929:6;9937;9990:2;9978:9;9969:7;9965:23;9961:32;9958:52;;;10006:1;10003;9996:12;9958:52;10029:29;10048:9;10029:29;:::i;:::-;10019:39;;10077:38;10111:2;10100:9;10096:18;10077:38;:::i;:::-;10067:48;;9861:260;;;;;:::o;10126:606::-;10230:6;10238;10246;10254;10262;10315:3;10303:9;10294:7;10290:23;10286:33;10283:53;;;10332:1;10329;10322:12;10283:53;10355:29;10374:9;10355:29;:::i;:::-;10345:39;;10403:38;10437:2;10426:9;10422:18;10403:38;:::i;:::-;10393:48;;10488:2;10477:9;10473:18;10460:32;10450:42;;10539:2;10528:9;10524:18;10511:32;10501:42;;10594:3;10583:9;10579:19;10566:33;10622:18;10614:6;10611:30;10608:50;;;10654:1;10651;10644:12;10608:50;10677:49;10718:7;10709:6;10698:9;10694:22;10677:49;:::i;10737:186::-;10796:6;10849:2;10837:9;10828:7;10824:23;10820:32;10817:52;;;10865:1;10862;10855:12;10817:52;10888:29;10907:9;10888:29;:::i;10928:322::-;11005:6;11013;11021;11074:2;11062:9;11053:7;11049:23;11045:32;11042:52;;;11090:1;11087;11080:12;11042:52;11113:29;11132:9;11113:29;:::i;:::-;11103:39;11189:2;11174:18;;11161:32;;-1:-1:-1;11240:2:1;11225:18;;;11212:32;;10928:322;-1:-1:-1;;;10928:322:1:o;11666:380::-;11745:1;11741:12;;;;11788;;;11809:61;;11863:4;11855:6;11851:17;11841:27;;11809:61;11916:2;11908:6;11905:14;11885:18;11882:38;11879:161;;11962:10;11957:3;11953:20;11950:1;11943:31;11997:4;11994:1;11987:15;12025:4;12022:1;12015:15;11879:161;;11666:380;;;:::o;12051:410::-;12253:2;12235:21;;;12292:2;12272:18;;;12265:30;12331:34;12326:2;12311:18;;12304:62;-1:-1:-1;;;12397:2:1;12382:18;;12375:44;12451:3;12436:19;;12051:410::o;12876:127::-;12937:10;12932:3;12928:20;12925:1;12918:31;12968:4;12965:1;12958:15;12992:4;12989:1;12982:15;13008:127;13069:10;13064:3;13060:20;13057:1;13050:31;13100:4;13097:1;13090:15;13124:4;13121:1;13114:15;13140:135;13179:3;13200:17;;;13197:43;;13220:18;;:::i;:::-;-1:-1:-1;13267:1:1;13256:13;;13140:135::o;14048:397::-;14250:2;14232:21;;;14289:2;14269:18;;;14262:30;14328:34;14323:2;14308:18;;14301:62;-1:-1:-1;;;14394:2:1;14379:18;;14372:31;14435:3;14420:19;;14048:397::o;14450:404::-;14652:2;14634:21;;;14691:2;14671:18;;;14664:30;14730:34;14725:2;14710:18;;14703:62;-1:-1:-1;;;14796:2:1;14781:18;;14774:38;14844:3;14829:19;;14450:404::o;14859:125::-;14924:9;;;14945:10;;;14942:36;;;14958:18;;:::i;14989:465::-;15246:2;15235:9;15228:21;15209:4;15272:56;15324:2;15313:9;15309:18;15301:6;15272:56;:::i;:::-;15376:9;15368:6;15364:22;15359:2;15348:9;15344:18;15337:50;15404:44;15441:6;15433;15404:44;:::i;:::-;15396:52;14989:465;-1:-1:-1;;;;;14989:465:1:o;15459:401::-;15661:2;15643:21;;;15700:2;15680:18;;;15673:30;15739:34;15734:2;15719:18;;15712:62;-1:-1:-1;;;15805:2:1;15790:18;;15783:35;15850:3;15835:19;;15459:401::o;15865:406::-;16067:2;16049:21;;;16106:2;16086:18;;;16079:30;16145:34;16140:2;16125:18;;16118:62;-1:-1:-1;;;16211:2:1;16196:18;;16189:40;16261:3;16246:19;;15865:406::o;16276:399::-;16478:2;16460:21;;;16517:2;16497:18;;;16490:30;16556:34;16551:2;16536:18;;16529:62;-1:-1:-1;;;16622:2:1;16607:18;;16600:33;16665:3;16650:19;;16276:399::o;16680:400::-;16882:2;16864:21;;;16921:2;16901:18;;;16894:30;16960:34;16955:2;16940:18;;16933:62;-1:-1:-1;;;17026:2:1;17011:18;;17004:34;17070:3;17055:19;;16680:400::o;17748:827::-;-1:-1:-1;;;;;18145:15:1;;;18127:34;;18197:15;;18192:2;18177:18;;18170:43;18107:3;18244:2;18229:18;;18222:31;;;18070:4;;18276:57;;18313:19;;18305:6;18276:57;:::i;:::-;18381:9;18373:6;18369:22;18364:2;18353:9;18349:18;18342:50;18415:44;18452:6;18444;18415:44;:::i;:::-;18401:58;;18508:9;18500:6;18496:22;18490:3;18479:9;18475:19;18468:51;18536:33;18562:6;18554;18536:33;:::i;:::-;18528:41;17748:827;-1:-1:-1;;;;;;;;17748:827:1:o;18580:249::-;18649:6;18702:2;18690:9;18681:7;18677:23;18673:32;18670:52;;;18718:1;18715;18708:12;18670:52;18750:9;18744:16;18769:30;18793:5;18769:30;:::i;18834:179::-;18869:3;18911:1;18893:16;18890:23;18887:120;;;18957:1;18954;18951;18936:23;-1:-1:-1;18994:1:1;18988:8;18983:3;18979:18;18887:120;18834:179;:::o;19018:671::-;19057:3;19099:4;19081:16;19078:26;19075:39;;;19018:671;:::o;19075:39::-;19141:2;19135:9;-1:-1:-1;;19206:16:1;19202:25;;19199:1;19135:9;19178:50;19257:4;19251:11;19281:16;19316:18;19387:2;19380:4;19372:6;19368:17;19365:25;19360:2;19352:6;19349:14;19346:45;19343:58;;;19394:5;;;;;19018:671;:::o;19343:58::-;19431:6;19425:4;19421:17;19410:28;;19467:3;19461:10;19494:2;19486:6;19483:14;19480:27;;;19500:5;;;;;;19018:671;:::o;19480:27::-;19584:2;19565:16;19559:4;19555:27;19551:36;19544:4;19535:6;19530:3;19526:16;19522:27;19519:69;19516:82;;;19591:5;;;;;;19018:671;:::o;19516:82::-;19607:57;19658:4;19649:6;19641;19637:19;19633:30;19627:4;19607:57;:::i;:::-;-1:-1:-1;19680:3:1;;19018:671;-1:-1:-1;;;;;19018:671:1:o;20115:404::-;20317:2;20299:21;;;20356:2;20336:18;;;20329:30;20395:34;20390:2;20375:18;;20368:62;-1:-1:-1;;;20461:2:1;20446:18;;20439:38;20509:3;20494:19;;20115:404::o;20873:561::-;-1:-1:-1;;;;;21170:15:1;;;21152:34;;21222:15;;21217:2;21202:18;;21195:43;21269:2;21254:18;;21247:34;;;21312:2;21297:18;;21290:34;;;21132:3;21355;21340:19;;21333:32;;;21095:4;;21382:46;;21408:19;;21400:6;21382:46;:::i;:::-;21374:54;20873:561;-1:-1:-1;;;;;;;20873:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1642800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2700",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"burn(address,uint256,uint256)": "infinite",
								"burn(address,uint96,uint256)": "infinite",
								"burnBatch(address,uint256[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"mint(address,uint256,uint256,bytes)": "infinite",
								"mintBatch(address,uint256[],uint256[],bytes)": "infinite",
								"owner()": "2419",
								"pause()": "infinite",
								"paused()": "2393",
								"renounceOwnership()": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26794",
								"supportsInterface(bytes4)": "578",
								"transferOwnership(address)": "28457",
								"unpause()": "infinite",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 42598,
									"end": 42628,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1115"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F2"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25463,
									"end": 25476,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25463,
									"end": 25470,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 25463,
									"end": 25476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25463,
									"end": 25476,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25463,
									"end": 25476,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 4465,
									"end": 4472,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 4465,
									"end": 4480,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 4465,
									"end": 4480,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 4465,
									"end": 4480,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 4465,
									"end": 4480,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 4465,
									"end": 4480,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 741,
									"end": 751,
									"name": "CALLER",
									"source": 0
								},
								{
									"begin": 1794,
									"end": 1812,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1794,
									"end": 1826,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1794,
									"end": 1826,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32463,
									"end": 32549,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 32463,
									"end": 32549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32533,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 32536,
									"end": 32542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32533,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 32529,
									"end": 32542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "tag",
									"source": 0,
									"value": "18"
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32463,
									"end": 32549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32463,
									"end": 32549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3471,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 3284,
									"end": 3471,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "100"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3392,
									"end": 3409,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3376,
									"end": 3382,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3357,
									"end": 3373,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3357,
									"end": 3373,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3424,
									"end": 3464,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 3347,
									"end": 3471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3471,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3284,
									"end": 3471,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 146,
									"end": 526,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 225,
									"end": 226,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 233,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 268,
									"end": 280,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 343,
									"end": 347,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 335,
									"end": 341,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 331,
									"end": 348,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 321,
									"end": 348,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 289,
									"end": 350,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 289,
									"end": 350,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 396,
									"end": 398,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 388,
									"end": 394,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 385,
									"end": 399,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 365,
									"end": 383,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 362,
									"end": 400,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 442,
									"end": 452,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 437,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 433,
									"end": 453,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 430,
									"end": 431,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 423,
									"end": 454,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 477,
									"end": 481,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 474,
									"end": 475,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 467,
									"end": 482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 505,
									"end": 509,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 502,
									"end": 503,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 495,
									"end": 510,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 359,
									"end": 520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 359,
									"end": 520,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 526,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 759,
									"end": 761,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 754,
									"end": 757,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 751,
									"end": 762,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 795,
									"end": 796,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 820,
									"end": 825,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 816,
									"end": 818,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 809,
									"end": 826,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 865,
									"end": 869,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 861,
									"end": 863,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 851,
									"end": 870,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 935,
									"end": 937,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 923,
									"end": 933,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 919,
									"end": 938,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 916,
									"end": 917,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 912,
									"end": 939,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 906,
									"end": 910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 902,
									"end": 940,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 971,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 959,
									"end": 969,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 956,
									"end": 976,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 994,
									"end": 998,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 953,
									"end": 1000,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1049,
									"end": 1051,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1044,
									"end": 1047,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1037,
									"end": 1038,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1033,
									"end": 1053,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1031,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1023,
									"end": 1054,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1013,
									"end": 1054,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1124,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1115,
									"end": 1120,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1112,
									"end": 1125,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1167,
									"end": 1184,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1148,
									"end": 1149,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1137,
									"end": 1150,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1104,
									"end": 1186,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1108,
									"end": 1111,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 748,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 657,
									"end": 1202,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1498,
									"end": 1508,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1520,
									"end": 1550,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1517,
									"end": 1573,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1553,
									"end": 1571,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 1553,
									"end": 1571,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1672,
									"end": 1678,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1664,
									"end": 1668,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1658,
									"end": 1669,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 1632,
									"end": 1670,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 1632,
									"end": 1670,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1626,
									"end": 1630,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 1582,
									"end": 1679,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 1582,
									"end": 1679,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1734,
									"end": 1738,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1800,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1787,
									"end": 1801,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2517,
									"end": 2518,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2586,
									"end": 2605,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2580,
									"end": 2606,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "tag",
									"source": 1,
									"value": "47"
								},
								{
									"begin": 2531,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1335,
									"end": 1336,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1331,
									"end": 1342,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1327,
									"end": 1351,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1323,
									"end": 1352,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1353,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1359,
									"end": 1360,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1355,
									"end": 1366,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1310,
									"end": 1367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2633,
									"end": 2714,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 1780,
									"end": 2724,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 1810,
									"end": 2473,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 604,
									"end": 605,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 597,
									"end": 611,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 641,
									"end": 645,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 628,
									"end": 646,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 628,
									"end": 646,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1846,
									"end": 1866,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1978,
									"end": 1985,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1975,
									"end": 1976,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1972,
									"end": 1986,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2067,
									"end": 2086,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2061,
									"end": 2087,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2046,
									"end": 2088,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2186,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 2127,
									"end": 2128,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2115,
									"end": 2129,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1994,
									"end": 2013,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "50"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 1964,
									"end": 2200,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1968,
									"end": 1971,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2228,
									"end": 2234,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2219,
									"end": 2226,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2216,
									"end": 2235,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2289,
									"end": 2308,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2283,
									"end": 2309,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2372,
									"end": 2373,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2368,
									"end": 2382,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2384,
									"end": 2387,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 2364,
									"end": 2388,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2397,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2356,
									"end": 2398,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2341,
									"end": 2399,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2326,
									"end": 2400,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "tag",
									"source": 1,
									"value": "53"
								},
								{
									"begin": 2213,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2460,
									"end": 2461,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2444,
									"end": 2458,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2440,
									"end": 2462,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2427,
									"end": 2463,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1378,
									"end": 2730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 1378,
									"end": 2730,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 42529,
									"end": 43556,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e4820fa1c711372149c4bfc06f86c6e696624032dec34e37a1835ec35e443f2764736f6c63430008120033",
									".code": [
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "D501DC37"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "D501DC37"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "F5298ACA"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "731133E9"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "8456CB59"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "3F4BA83A"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "5C975ABB"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "6B20C454"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "1F7FDFFA"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42529,
											"end": 43556,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26499,
											"end": 26726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26499,
											"end": 26726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 25550,
											"end": 25855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25550,
											"end": 25855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 43078,
											"end": 43264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43078,
											"end": 43264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 28356,
											"end": 28782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28356,
											"end": 28782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42699,
											"end": 42762,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 42699,
											"end": 42762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42699,
											"end": 42762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42699,
											"end": 42762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 42699,
											"end": 42762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5084,
											"end": 5168,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5084,
											"end": 5168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5084,
											"end": 5168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 5084,
											"end": 5168,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 42147,
											"end": 42464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42147,
											"end": 42464,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2682,
											"end": 2783,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 42908,
											"end": 43072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42908,
											"end": 43072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42634,
											"end": 42693,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 42634,
											"end": 42693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42634,
											"end": 42693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42634,
											"end": 42693,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 42634,
											"end": 42693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2059,
											"end": 2144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 8862,
											"end": 9065,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 27437,
											"end": 27590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27437,
											"end": 27590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 42767,
											"end": 42903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 42767,
											"end": 42903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27756,
											"end": 27760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27890,
											"end": 28284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27890,
											"end": 28284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 2932,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2932,
											"end": 3130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 41856,
											"end": 42141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 41856,
											"end": 42141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26585,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26612,
											"end": 26633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26612,
											"end": 26633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11457,
											"end": 11459,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11439,
											"end": 11460,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11496,
											"end": 11498,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11476,
											"end": 11494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11469,
											"end": 11499,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11535,
											"end": 11569,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 11515,
											"end": 11533,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 11515,
											"end": 11533,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11533,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11508,
											"end": 11570,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11586,
											"end": 11604,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11586,
											"end": 11604,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11586,
											"end": 11604,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11579,
											"end": 11619,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11636,
											"end": 11655,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 11636,
											"end": 11655,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26697,
											"end": 26706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25652,
											"end": 25656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25744,
											"end": 25796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25744,
											"end": 25796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25744,
											"end": 25796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 25687,
											"end": 25848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25812,
											"end": 25848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 17137,
											"end": 17292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26314,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26346,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26339,
											"end": 26350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 26339,
											"end": 26350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43223,
											"end": 43257,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 43234,
											"end": 43236,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43238,
											"end": 43241,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43243,
											"end": 43250,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43252,
											"end": 43256,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43223,
											"end": 43233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 43223,
											"end": 43257,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43223,
											"end": 43257,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 43223,
											"end": 43257,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 43078,
											"end": 43264,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28581,
											"end": 28641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28605,
											"end": 28641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28622,
											"end": 28626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28605,
											"end": 28641,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 28605,
											"end": 28641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28560,
											"end": 28713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28723,
											"end": 28775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28746,
											"end": 28750,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28752,
											"end": 28754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28761,
											"end": 28768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28723,
											"end": 28745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 28723,
											"end": 28775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28723,
											"end": 28775,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28723,
											"end": 28775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42699,
											"end": 42762,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 42699,
											"end": 42762,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42755,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42745,
											"end": 42753,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 42745,
											"end": 42755,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42745,
											"end": 42755,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42745,
											"end": 42755,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42699,
											"end": 42762,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27016,
											"end": 27032,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27071,
											"end": 27074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27052,
											"end": 27060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27052,
											"end": 27067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27052,
											"end": 27081,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12668,
											"end": 12670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12650,
											"end": 12671,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12707,
											"end": 12709,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12687,
											"end": 12705,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12687,
											"end": 12705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12687,
											"end": 12705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12680,
											"end": 12710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12746,
											"end": 12780,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12726,
											"end": 12744,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12719,
											"end": 12781,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12797,
											"end": 12815,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12790,
											"end": 12829,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12846,
											"end": 12865,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12846,
											"end": 12865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 12466,
											"end": 12871,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27138,
											"end": 27168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27185,
											"end": 27193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 27171,
											"end": 27201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27138,
											"end": 27201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27138,
											"end": 27201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27217,
											"end": 27226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27236,
											"end": 27244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27236,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27232,
											"end": 27233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27232,
											"end": 27251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 27301,
											"end": 27309,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27310,
											"end": 27311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27301,
											"end": 27312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27317,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27318,
											"end": 27319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27314,
											"end": 27320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 27291,
											"end": 27321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27321,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 27291,
											"end": 27321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27286,
											"end": 27287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 27272,
											"end": 27288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 27253,
											"end": 27256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27349,
											"end": 27362,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 42276,
											"end": 42299,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42276,
											"end": 42299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 42276,
											"end": 42299,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 42276,
											"end": 42299,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 42276,
											"end": 42342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42276,
											"end": 42342,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42303,
											"end": 42342,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42320,
											"end": 42327,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42303,
											"end": 42342,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 42303,
											"end": 42342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 42255,
											"end": 42414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 42255,
											"end": 42414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42425,
											"end": 42457,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42436,
											"end": 42443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42445,
											"end": 42448,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42450,
											"end": 42456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42425,
											"end": 42435,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 42425,
											"end": 42457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42425,
											"end": 42457,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42425,
											"end": 42457,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 42147,
											"end": 42464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 2682,
											"end": 2783,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2746,
											"end": 2776,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2773,
											"end": 2774,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2764,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 2746,
											"end": 2776,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 42908,
											"end": 43072,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43033,
											"end": 43065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 43039,
											"end": 43046,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43048,
											"end": 43050,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43052,
											"end": 43058,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43060,
											"end": 43064,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 43033,
											"end": 43038,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 43033,
											"end": 43065,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42634,
											"end": 42693,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 42634,
											"end": 42693,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42678,
											"end": 42686,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 42678,
											"end": 42684,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 42678,
											"end": 42686,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27574,
											"end": 27582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 27531,
											"end": 27583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27583,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 27531,
											"end": 27583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 42767,
											"end": 42903,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42896,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42867,
											"end": 42878,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42880,
											"end": 42887,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 42861,
											"end": 42896,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 42889,
											"end": 42895,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42861,
											"end": 42866,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 42861,
											"end": 42896,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28090,
											"end": 28150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28114,
											"end": 28150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28131,
											"end": 28135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28150,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 28114,
											"end": 28150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 28069,
											"end": 28222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28232,
											"end": 28277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 28250,
											"end": 28254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28256,
											"end": 28258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28260,
											"end": 28262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28264,
											"end": 28270,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28272,
											"end": 28276,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28232,
											"end": 28249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 28232,
											"end": 28277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1952,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 1952,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 1952,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3020,
											"end": 3042,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3042,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13482,
											"end": 13484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3012,
											"end": 3085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13464,
											"end": 13485,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13521,
											"end": 13523,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13501,
											"end": 13519,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13494,
											"end": 13524,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13560,
											"end": 13594,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13540,
											"end": 13558,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13533,
											"end": 13595,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13611,
											"end": 13629,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13604,
											"end": 13640,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13657,
											"end": 13676,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 13657,
											"end": 13676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13280,
											"end": 13682,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3012,
											"end": 3085,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3123,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3114,
											"end": 3122,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3113,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3095,
											"end": 3123,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3095,
											"end": 3123,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3095,
											"end": 3123,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2932,
											"end": 3130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 41856,
											"end": 42141,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 41960,
											"end": 41983,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41960,
											"end": 41983,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 41960,
											"end": 41983,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 41960,
											"end": 41983,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41960,
											"end": 42026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 41960,
											"end": 42026,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41987,
											"end": 42026,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 42004,
											"end": 42011,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41987,
											"end": 42026,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 41987,
											"end": 42026,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 41939,
											"end": 42098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "tag",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 41939,
											"end": 42098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 42109,
											"end": 42134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 42115,
											"end": 42122,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42124,
											"end": 42126,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42128,
											"end": 42133,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 42109,
											"end": 42114,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 42109,
											"end": 42134,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2217,
											"end": 2347,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 2217,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 2280,
											"end": 2303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13889,
											"end": 13891,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13871,
											"end": 13892,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13871,
											"end": 13892,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13871,
											"end": 13892,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13908,
											"end": 13926,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13901,
											"end": 13931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13967,
											"end": 14001,
											"name": "PUSH",
											"source": 1,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13947,
											"end": 13965,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13940,
											"end": 14002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2340,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 13687,
											"end": 14043,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33983,
											"end": 34774,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 33983,
											"end": 34774,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34155,
											"end": 34171,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34155,
											"end": 34171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 34147,
											"end": 34209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "tag",
											"source": 0,
											"value": "230"
										},
										{
											"begin": 34147,
											"end": 34209,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34248,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34241,
											"end": 34255,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34230,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34237,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34227,
											"end": 34255,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 34219,
											"end": 34300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "tag",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 34219,
											"end": 34300,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34419,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34311,
											"end": 34327,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34396,
											"end": 34398,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34400,
											"end": 34403,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34405,
											"end": 34412,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34414,
											"end": 34418,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34373,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 34353,
											"end": 34419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34353,
											"end": 34419,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 34353,
											"end": 34419,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34435,
											"end": 34444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34454,
											"end": 34457,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34454,
											"end": 34464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34450,
											"end": 34451,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34450,
											"end": 34464,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34517,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 34518,
											"end": 34519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 34510,
											"end": 34520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "tag",
											"source": 0,
											"value": "243"
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34510,
											"end": 34520,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34494,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34498,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34499,
											"end": 34500,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 34495,
											"end": 34501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "tag",
											"source": 0,
											"value": "245"
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34495,
											"end": 34501,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34485,
											"end": 34502,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34503,
											"end": 34505,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 34485,
											"end": 34520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34485,
											"end": 34520,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 34466,
											"end": 34469,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34466,
											"end": 34469,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34430,
											"end": 34531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 34582,
											"end": 34584,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34578,
											"end": 34579,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34560,
											"end": 34568,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 34586,
											"end": 34589,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34591,
											"end": 34598,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 34546,
											"end": 34599,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "tag",
											"source": 0,
											"value": "249"
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 34546,
											"end": 34599,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 34686,
											"end": 34767,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 34722,
											"end": 34730,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 34740,
											"end": 34741,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 34744,
											"end": 34746,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34748,
											"end": 34751,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34753,
											"end": 34760,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34762,
											"end": 34766,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 34686,
											"end": 34721,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 34686,
											"end": 34767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30745,
											"end": 30752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30745,
											"end": 30759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30731,
											"end": 30734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30731,
											"end": 30741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30731,
											"end": 30759,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 30723,
											"end": 30804,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30822,
											"end": 30838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30822,
											"end": 30838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 30814,
											"end": 30880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "tag",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 30993,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30964,
											"end": 30968,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30970,
											"end": 30972,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30974,
											"end": 30977,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30979,
											"end": 30986,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30988,
											"end": 30992,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 30953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 30933,
											"end": 30993,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30933,
											"end": 30993,
											"name": "tag",
											"source": 0,
											"value": "263"
										},
										{
											"begin": 30933,
											"end": 30993,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31009,
											"end": 31018,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "tag",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31028,
											"end": 31031,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31028,
											"end": 31038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31024,
											"end": 31025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31024,
											"end": 31038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31059,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31072,
											"end": 31075,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31072,
											"end": 31078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "tag",
											"source": 0,
											"value": "268"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31059,
											"end": 31078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31059,
											"end": 31078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31109,
											"end": 31116,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31117,
											"end": 31118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 31109,
											"end": 31119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 31189,
											"end": 31265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "tag",
											"source": 0,
											"value": "271"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31349,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 31377,
											"end": 31404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "tag",
											"source": 0,
											"value": "274"
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 31040,
											"end": 31043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "tag",
											"source": 0,
											"value": "275"
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "264"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "tag",
											"source": 0,
											"value": "265"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31460,
											"end": 31462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31454,
											"end": 31458,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 31464,
											"end": 31467,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31469,
											"end": 31476,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 31430,
											"end": 31477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "tag",
											"source": 0,
											"value": "276"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 31594,
											"end": 31602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31604,
											"end": 31608,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31612,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31614,
											"end": 31617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31619,
											"end": 31626,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31628,
											"end": 31632,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 31558,
											"end": 31633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31633,
											"name": "tag",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 31558,
											"end": 31633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30713,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5902,
											"end": 6019,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 5902,
											"end": 6019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4971,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4955,
											"end": 4969,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 4955,
											"end": 4971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4955,
											"end": 4971,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 4955,
											"end": 4971,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5967,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5960,
											"end": 5975,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5975,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5960,
											"end": 5975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5975,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5960,
											"end": 5975,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 5999,
											"end": 6011,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 5999,
											"end": 6011,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6012,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9026,
											"end": 9058,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9059,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9008,
											"end": 9059,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8996,
											"end": 8998,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8981,
											"end": 8999,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5990,
											"end": 6012,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 5902,
											"end": 6019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36055,
											"end": 36968,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 36055,
											"end": 36968,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36172,
											"end": 36190,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36172,
											"end": 36190,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 36164,
											"end": 36230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "tag",
											"source": 0,
											"value": "286"
										},
										{
											"begin": 36164,
											"end": 36230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36262,
											"end": 36269,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36262,
											"end": 36276,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36251,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36258,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36248,
											"end": 36276,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 36240,
											"end": 36321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "tag",
											"source": 0,
											"value": "289"
										},
										{
											"begin": 36240,
											"end": 36321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36332,
											"end": 36348,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 36332,
											"end": 36363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36332,
											"end": 36363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 36395,
											"end": 36403,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36405,
											"end": 36409,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36419,
											"end": 36420,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36423,
											"end": 36426,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36428,
											"end": 36435,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 36374,
											"end": 36440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "tag",
											"source": 0,
											"value": "292"
										},
										{
											"begin": 36374,
											"end": 36440,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36456,
											"end": 36465,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "tag",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36475,
											"end": 36478,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36475,
											"end": 36485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36471,
											"end": 36472,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36471,
											"end": 36485,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36516,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36519,
											"end": 36522,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36523,
											"end": 36524,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 36519,
											"end": 36525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "tag",
											"source": 0,
											"value": "297"
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36519,
											"end": 36525,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36506,
											"end": 36525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36539,
											"end": 36553,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36556,
											"end": 36563,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36564,
											"end": 36565,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 36556,
											"end": 36566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "tag",
											"source": 0,
											"value": "299"
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36581,
											"end": 36600,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36603,
											"end": 36622,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36556,
											"end": 36566,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 36644,
											"end": 36665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36644,
											"end": 36665,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36644,
											"end": 36665,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 36644,
											"end": 36665,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 36636,
											"end": 36706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "tag",
											"source": 0,
											"value": "300"
										},
										{
											"begin": 36636,
											"end": 36706,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36757,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36761,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36767,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36790,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36770,
											"end": 36790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36748,
											"end": 36790,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 36487,
											"end": 36490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "tag",
											"source": 0,
											"value": "303"
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36487,
											"end": 36490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "293"
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "tag",
											"source": 0,
											"value": "294"
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36451,
											"end": 36815,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 36868,
											"end": 36869,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36854,
											"end": 36858,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36844,
											"end": 36852,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 36872,
											"end": 36875,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36877,
											"end": 36884,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 36830,
											"end": 36885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "tag",
											"source": 0,
											"value": "304"
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36830,
											"end": 36885,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36940,
											"end": 36941,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 36896,
											"end": 36961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3471,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 3284,
											"end": 3471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3392,
											"end": 3409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3376,
											"end": 3382,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3357,
											"end": 3373,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3424,
											"end": 3464,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 3347,
											"end": 3471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3284,
											"end": 3471,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 32922,
											"end": 33593,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 32922,
											"end": 33593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33031,
											"end": 33047,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33031,
											"end": 33047,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 33023,
											"end": 33085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "tag",
											"source": 0,
											"value": "308"
										},
										{
											"begin": 33023,
											"end": 33085,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 33096,
											"end": 33112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33160,
											"end": 33181,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 33178,
											"end": 33180,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33160,
											"end": 33177,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 33160,
											"end": 33181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33160,
											"end": 33181,
											"name": "tag",
											"source": 0,
											"value": "311"
										},
										{
											"begin": 33160,
											"end": 33181,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33181,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33137,
											"end": 33181,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33191,
											"end": 33215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33218,
											"end": 33243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 33236,
											"end": 33242,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33235,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 33218,
											"end": 33243,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33218,
											"end": 33243,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 33218,
											"end": 33243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33191,
											"end": 33243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33191,
											"end": 33243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33254,
											"end": 33320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 33275,
											"end": 33283,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33293,
											"end": 33294,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33297,
											"end": 33299,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33301,
											"end": 33304,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33306,
											"end": 33313,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 33315,
											"end": 33319,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33254,
											"end": 33274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 33254,
											"end": 33320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33254,
											"end": 33320,
											"name": "tag",
											"source": 0,
											"value": "314"
										},
										{
											"begin": 33254,
											"end": 33320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33344,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33348,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33358,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33358,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33340,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33358,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 33352,
											"end": 33358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 33331,
											"end": 33358,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "tag",
											"source": 0,
											"value": "315"
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33331,
											"end": 33358,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17315,
											"end": 17317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33406,
											"end": 33407,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33406,
											"end": 33407,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 33373,
											"end": 33425,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 33512,
											"end": 33586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 33543,
											"end": 33551,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 33561,
											"end": 33562,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 33565,
											"end": 33567,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33569,
											"end": 33571,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33573,
											"end": 33579,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33581,
											"end": 33585,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 33512,
											"end": 33542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 33512,
											"end": 33586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 33512,
											"end": 33586,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 33512,
											"end": 33586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 33013,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32922,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32922,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32922,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32922,
											"end": 33593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 32922,
											"end": 33593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5655,
											"end": 5770,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 5655,
											"end": 5770,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 4708,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 4708,
											"end": 4727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "tag",
											"source": 0,
											"value": "322"
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5721,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5714,
											"end": 5728,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5724,
											"end": 5728,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5714,
											"end": 5728,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5714,
											"end": 5728,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5743,
											"end": 5763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 5750,
											"end": 5762,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 758,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37224,
											"end": 37232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37215,
											"end": 37232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37215,
											"end": 37220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37215,
											"end": 37232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37215,
											"end": 37232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17540,
											"end": 17542,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17522,
											"end": 17543,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17579,
											"end": 17581,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 17559,
											"end": 17577,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 17559,
											"end": 17577,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17559,
											"end": 17577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17552,
											"end": 17582,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17618,
											"end": 17652,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 17598,
											"end": 17616,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 17598,
											"end": 17616,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17598,
											"end": 17616,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17591,
											"end": 17653,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17669,
											"end": 17687,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 17669,
											"end": 17687,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17669,
											"end": 17687,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17662,
											"end": 17701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17718,
											"end": 17737,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 17718,
											"end": 17737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 17338,
											"end": 17743,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "tag",
											"source": 0,
											"value": "328"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35060,
											"end": 35816,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 35060,
											"end": 35816,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35152,
											"end": 35170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35152,
											"end": 35170,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "288"
										},
										{
											"begin": 35144,
											"end": 35210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "tag",
											"source": 0,
											"value": "333"
										},
										{
											"begin": 35144,
											"end": 35210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 35221,
											"end": 35237,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35285,
											"end": 35306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 35303,
											"end": 35305,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35285,
											"end": 35302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 35285,
											"end": 35306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35285,
											"end": 35306,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 35285,
											"end": 35306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35262,
											"end": 35306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35262,
											"end": 35306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35316,
											"end": 35340,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35343,
											"end": 35368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 35361,
											"end": 35367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35343,
											"end": 35360,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 35343,
											"end": 35368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35343,
											"end": 35368,
											"name": "tag",
											"source": 0,
											"value": "337"
										},
										{
											"begin": 35343,
											"end": 35368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35316,
											"end": 35368,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35316,
											"end": 35368,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 35400,
											"end": 35408,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35410,
											"end": 35414,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35424,
											"end": 35425,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35428,
											"end": 35431,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35433,
											"end": 35440,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35399,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 35379,
											"end": 35445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 35379,
											"end": 35445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35456,
											"end": 35475,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35491,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35478,
											"end": 35497,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 35515,
											"end": 35536,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35515,
											"end": 35536,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35515,
											"end": 35536,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 35515,
											"end": 35536,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "302"
										},
										{
											"begin": 35507,
											"end": 35577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "tag",
											"source": 0,
											"value": "339"
										},
										{
											"begin": 35507,
											"end": 35577,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35620,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35624,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 35633,
											"end": 35653,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 35633,
											"end": 35653,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 35633,
											"end": 35653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35653,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35611,
											"end": 35630,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35679,
											"end": 35733,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35788,
											"end": 35789,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 35744,
											"end": 35809,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29413,
											"end": 29429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29413,
											"end": 29429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "261"
										},
										{
											"begin": 29405,
											"end": 29471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29546,
											"end": 29567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29564,
											"end": 29566,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 29546,
											"end": 29567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29567,
											"name": "tag",
											"source": 0,
											"value": "347"
										},
										{
											"begin": 29546,
											"end": 29567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29577,
											"end": 29601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29604,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 29622,
											"end": 29628,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 29604,
											"end": 29629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29629,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 29604,
											"end": 29629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29577,
											"end": 29629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29577,
											"end": 29629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29640,
											"end": 29700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 29661,
											"end": 29669,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29671,
											"end": 29675,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29677,
											"end": 29679,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29681,
											"end": 29684,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29686,
											"end": 29693,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29695,
											"end": 29699,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29640,
											"end": 29660,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 29640,
											"end": 29700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29640,
											"end": 29700,
											"name": "tag",
											"source": 0,
											"value": "349"
										},
										{
											"begin": 29640,
											"end": 29700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29711,
											"end": 29730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "273"
										},
										{
											"begin": 29762,
											"end": 29838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "tag",
											"source": 0,
											"value": "350"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 29934,
											"end": 29961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "tag",
											"source": 0,
											"value": "352"
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17259,
											"end": 17284,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17315,
											"end": 17317,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17300,
											"end": 17318,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 17293,
											"end": 17327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17232,
											"end": 17250,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 30104,
											"end": 30172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 30135,
											"end": 30143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30149,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30153,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30155,
											"end": 30157,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30159,
											"end": 30165,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30171,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30104,
											"end": 30134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 30104,
											"end": 30172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30104,
											"end": 30172,
											"name": "tag",
											"source": 0,
											"value": "355"
										},
										{
											"begin": 30104,
											"end": 30172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 43270,
											"end": 43554,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 43270,
											"end": 43554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4708,
											"end": 4725,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 4708,
											"end": 4727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "tag",
											"source": 0,
											"value": "357"
										},
										{
											"begin": 4708,
											"end": 4727,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 43481,
											"end": 43547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40662,
											"end": 40675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40662,
											"end": 40675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40658,
											"end": 41216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 40658,
											"end": 41216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40741,
											"end": 40749,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40741,
											"end": 40749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40751,
											"end": 40755,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40751,
											"end": 40755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40757,
											"end": 40760,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40757,
											"end": 40760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40762,
											"end": 40769,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40762,
											"end": 40769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40771,
											"end": 40775,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40771,
											"end": 40775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "367"
										},
										{
											"begin": 40697,
											"end": 40776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "tag",
											"source": 0,
											"value": "366"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 40697,
											"end": 40776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "tag",
											"source": 0,
											"value": "369"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "tag",
											"source": 0,
											"value": "368"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 40693,
											"end": 41206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 40693,
											"end": 41206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41082,
											"end": 41088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 41075,
											"end": 41089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "373"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19896,
											"end": 19898,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19878,
											"end": 19899,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19935,
											"end": 19937,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 19915,
											"end": 19933,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19915,
											"end": 19933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19915,
											"end": 19933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19908,
											"end": 19938,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 19974,
											"end": 20008,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 19954,
											"end": 19972,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19954,
											"end": 19972,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19954,
											"end": 19972,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19947,
											"end": 20009,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20025,
											"end": 20043,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20025,
											"end": 20043,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20025,
											"end": 20043,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20018,
											"end": 20068,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20085,
											"end": 20104,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 20085,
											"end": 20104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 19694,
											"end": 20110,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40855,
											"end": 40915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40855,
											"end": 40915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40855,
											"end": 40915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40851,
											"end": 41008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 40851,
											"end": 41008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 40939,
											"end": 40989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5414,
											"end": 5520,
											"name": "tag",
											"source": 0,
											"value": "281"
										},
										{
											"begin": 5414,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20726,
											"end": 20728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20708,
											"end": 20729,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20765,
											"end": 20767,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 20745,
											"end": 20763,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20745,
											"end": 20763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20745,
											"end": 20763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20738,
											"end": 20768,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20784,
											"end": 20802,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 20784,
											"end": 20802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20784,
											"end": 20802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20777,
											"end": 20827,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20844,
											"end": 20862,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 20844,
											"end": 20862,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 20524,
											"end": 20868,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 41228,
											"end": 41421,
											"name": "tag",
											"source": 0,
											"value": "312"
										},
										{
											"begin": 41228,
											"end": 41421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41361,
											"end": 41362,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41310,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41294,
											"end": 41310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41322,
											"end": 41344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41384,
											"end": 41391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41379,
											"end": 41380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 41373,
											"end": 41381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "tag",
											"source": 0,
											"value": "397"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41409,
											"end": 41414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41228,
											"end": 41421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41228,
											"end": 41421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39699,
											"end": 40424,
											"name": "tag",
											"source": 0,
											"value": "320"
										},
										{
											"begin": 39699,
											"end": 40424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39906,
											"end": 39919,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39906,
											"end": 39919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39902,
											"end": 40418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "278"
										},
										{
											"begin": 39902,
											"end": 40418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39980,
											"end": 39988,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39980,
											"end": 39988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 39994,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 39994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39996,
											"end": 39998,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39996,
											"end": 39998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40000,
											"end": 40006,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40000,
											"end": 40006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40012,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "402"
										},
										{
											"begin": 39941,
											"end": 40013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "tag",
											"source": 0,
											"value": "401"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "370"
										},
										{
											"begin": 39941,
											"end": 40013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "tag",
											"source": 0,
											"value": "404"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "tag",
											"source": 0,
											"value": "403"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "375"
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "376"
										},
										{
											"begin": 39937,
											"end": 40408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "tag",
											"source": 0,
											"value": "405"
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40062,
											"end": 40117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40062,
											"end": 40117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40062,
											"end": 40117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40058,
											"end": 40210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 40058,
											"end": 40210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "386"
										},
										{
											"begin": 40141,
											"end": 40191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5236,
											"end": 5342,
											"name": "tag",
											"source": 0,
											"value": "323"
										},
										{
											"begin": 5236,
											"end": 5342,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 5154,
											"end": 5161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21641,
											"end": 21643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21623,
											"end": 21644,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21680,
											"end": 21682,
											"name": "PUSH",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 21660,
											"end": 21678,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21660,
											"end": 21678,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21660,
											"end": 21678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21653,
											"end": 21683,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 21699,
											"end": 21717,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 21699,
											"end": 21717,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21699,
											"end": 21717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21692,
											"end": 21738,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21755,
											"end": 21773,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 21755,
											"end": 21773,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5297,
											"end": 5335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 21439,
											"end": 21779,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "437"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "213"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "443"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "457"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "462"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "463"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "147"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "473"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4057,
											"end": 4063,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4071,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4081,
											"end": 4087,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4134,
											"end": 4137,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4122,
											"end": 4131,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4113,
											"end": 4120,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4109,
											"end": 4132,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4105,
											"end": 4138,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4148,
											"end": 4149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4141,
											"end": 4153,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 4102,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 4193,
											"end": 4202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 4174,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 4174,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4203,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4164,
											"end": 4203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4254,
											"end": 4256,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4226,
											"end": 4258,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4277,
											"end": 4295,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4318,
											"end": 4320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4310,
											"end": 4316,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4307,
											"end": 4321,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4334,
											"end": 4335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4336,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 4304,
											"end": 4338,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 4410,
											"end": 4417,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4401,
											"end": 4407,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4390,
											"end": 4399,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4386,
											"end": 4408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 4357,
											"end": 4418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 4357,
											"end": 4418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4347,
											"end": 4418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4471,
											"end": 4473,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4460,
											"end": 4469,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4456,
											"end": 4474,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4475,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4475,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4427,
											"end": 4475,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4500,
											"end": 4502,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4490,
											"end": 4498,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4487,
											"end": 4503,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4516,
											"end": 4517,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4513,
											"end": 4514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4518,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 4484,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4594,
											"end": 4601,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4583,
											"end": 4591,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4572,
											"end": 4581,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 4539,
											"end": 4602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 4539,
											"end": 4602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4602,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4529,
											"end": 4602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4655,
											"end": 4657,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4644,
											"end": 4653,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4640,
											"end": 4658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4627,
											"end": 4659,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4659,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4611,
											"end": 4659,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4684,
											"end": 4686,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4674,
											"end": 4682,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4671,
											"end": 4687,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4700,
											"end": 4701,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4697,
											"end": 4698,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4690,
											"end": 4702,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4668,
											"end": 4704,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 4766,
											"end": 4773,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4755,
											"end": 4763,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4753,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4740,
											"end": 4764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 4723,
											"end": 4774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 4723,
											"end": 4774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4774,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4713,
											"end": 4774,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4939,
											"end": 4945,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4947,
											"end": 4953,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4955,
											"end": 4961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4963,
											"end": 4969,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4971,
											"end": 4977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5024,
											"end": 5027,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 5012,
											"end": 5021,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5003,
											"end": 5010,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5022,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4995,
											"end": 5028,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5041,
											"end": 5042,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5039,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5031,
											"end": 5043,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 4992,
											"end": 5045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 5083,
											"end": 5092,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 5064,
											"end": 5093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 5064,
											"end": 5093,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5093,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5054,
											"end": 5093,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 5146,
											"end": 5148,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5135,
											"end": 5144,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 5131,
											"end": 5149,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 5112,
											"end": 5150,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "tag",
											"source": 1,
											"value": "487"
										},
										{
											"begin": 5112,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5102,
											"end": 5150,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5201,
											"end": 5203,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5190,
											"end": 5199,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5186,
											"end": 5204,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5173,
											"end": 5205,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5224,
											"end": 5242,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5265,
											"end": 5267,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5263,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5254,
											"end": 5268,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5281,
											"end": 5282,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5279,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5271,
											"end": 5283,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 5251,
											"end": 5285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 5357,
											"end": 5364,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5337,
											"end": 5346,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5333,
											"end": 5355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 5304,
											"end": 5365,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "tag",
											"source": 1,
											"value": "489"
										},
										{
											"begin": 5304,
											"end": 5365,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5365,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5294,
											"end": 5365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5418,
											"end": 5420,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5407,
											"end": 5416,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5403,
											"end": 5421,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5390,
											"end": 5422,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5374,
											"end": 5422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5447,
											"end": 5449,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5437,
											"end": 5445,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5434,
											"end": 5450,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5463,
											"end": 5464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5460,
											"end": 5461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5453,
											"end": 5465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 5431,
											"end": 5467,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 5541,
											"end": 5548,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5530,
											"end": 5538,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5519,
											"end": 5528,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5539,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 5486,
											"end": 5549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "tag",
											"source": 1,
											"value": "491"
										},
										{
											"begin": 5486,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5549,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5476,
											"end": 5549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5602,
											"end": 5605,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 5591,
											"end": 5600,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5587,
											"end": 5606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5574,
											"end": 5607,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5607,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5558,
											"end": 5607,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5634,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5622,
											"end": 5630,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5619,
											"end": 5635,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5648,
											"end": 5649,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5645,
											"end": 5646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5638,
											"end": 5650,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5616,
											"end": 5652,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 5714,
											"end": 5721,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 5703,
											"end": 5711,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5692,
											"end": 5701,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5688,
											"end": 5712,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 5671,
											"end": 5722,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 5671,
											"end": 5722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5722,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5722,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4785,
											"end": 5728,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5912,
											"end": 5914,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5900,
											"end": 5909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5891,
											"end": 5898,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5887,
											"end": 5910,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5883,
											"end": 5915,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5928,
											"end": 5929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5925,
											"end": 5926,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5918,
											"end": 5930,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 5880,
											"end": 5932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5968,
											"end": 5977,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5955,
											"end": 5978,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5997,
											"end": 6015,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6038,
											"end": 6040,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6030,
											"end": 6036,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6027,
											"end": 6041,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6054,
											"end": 6055,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6051,
											"end": 6052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6044,
											"end": 6056,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6024,
											"end": 6058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6092,
											"end": 6098,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6081,
											"end": 6090,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6077,
											"end": 6099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6099,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6067,
											"end": 6099,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6137,
											"end": 6144,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6130,
											"end": 6134,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6122,
											"end": 6135,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6118,
											"end": 6145,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6156,
											"end": 6157,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6149,
											"end": 6161,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 6108,
											"end": 6163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6195,
											"end": 6197,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6182,
											"end": 6198,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6280,
											"end": 6282,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 6240,
											"end": 6283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "tag",
											"source": 1,
											"value": "498"
										},
										{
											"begin": 6240,
											"end": 6283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6312,
											"end": 6314,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6306,
											"end": 6315,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6352,
											"end": 6354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6344,
											"end": 6350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 6324,
											"end": 6355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 6324,
											"end": 6355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6390,
											"end": 6408,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6478,
											"end": 6479,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6474,
											"end": 6484,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6485,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6466,
											"end": 6485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6490,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6490,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6462,
											"end": 6490,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6424,
											"end": 6439,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6502,
											"end": 6521,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6502,
											"end": 6521,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6534,
											"end": 6535,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6531,
											"end": 6532,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6524,
											"end": 6536,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 6499,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6558,
											"end": 6569,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6594,
											"end": 6600,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6589,
											"end": 6592,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6586,
											"end": 6601,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 6679,
											"end": 6682,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 6660,
											"end": 6683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 6660,
											"end": 6683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6684,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6648,
											"end": 6684,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6611,
											"end": 6623,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6704,
											"end": 6716,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 6578,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6745,
											"end": 6751,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6808,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6776,
											"end": 6808,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6820,
											"end": 6836,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6836,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6820,
											"end": 6836,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6849,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6846,
											"end": 6847,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6839,
											"end": 6851,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6817,
											"end": 6853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6927,
											"end": 6934,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6916,
											"end": 6924,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6901,
											"end": 6925,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 6872,
											"end": 6935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 6872,
											"end": 6935,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6935,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6862,
											"end": 6935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 6941,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7381,
											"name": "tag",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 6946,
											"end": 7381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6999,
											"end": 7002,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7037,
											"end": 7042,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7031,
											"end": 7043,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7064,
											"end": 7070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7059,
											"end": 7062,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7052,
											"end": 7071,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7090,
											"end": 7094,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7119,
											"end": 7121,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7114,
											"end": 7117,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7110,
											"end": 7122,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7122,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7103,
											"end": 7122,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7156,
											"end": 7158,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7149,
											"end": 7154,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7145,
											"end": 7159,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7177,
											"end": 7178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7201,
											"end": 7207,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7195,
											"end": 7208,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7275,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7262,
											"end": 7275,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7276,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7250,
											"end": 7276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7296,
											"end": 7308,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7331,
											"end": 7346,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7223,
											"end": 7224,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7216,
											"end": 7225,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "508"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "tag",
											"source": 1,
											"value": "510"
										},
										{
											"begin": 7187,
											"end": 7356,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7372,
											"end": 7375,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6946,
											"end": 7381,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6946,
											"end": 7381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7386,
											"end": 7647,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 7386,
											"end": 7647,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7565,
											"end": 7567,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7554,
											"end": 7563,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7547,
											"end": 7568,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7528,
											"end": 7532,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 7637,
											"end": 7639,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7626,
											"end": 7635,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7622,
											"end": 7640,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7614,
											"end": 7620,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7585,
											"end": 7641,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 7585,
											"end": 7641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7779,
											"end": 7785,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7787,
											"end": 7793,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7795,
											"end": 7801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7848,
											"end": 7850,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7836,
											"end": 7845,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7827,
											"end": 7834,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7823,
											"end": 7846,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7819,
											"end": 7851,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7861,
											"end": 7862,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7854,
											"end": 7866,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 7816,
											"end": 7868,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 7906,
											"end": 7915,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 7887,
											"end": 7916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "tag",
											"source": 1,
											"value": "515"
										},
										{
											"begin": 7887,
											"end": 7916,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7916,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7877,
											"end": 7916,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7967,
											"end": 7969,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7956,
											"end": 7965,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7952,
											"end": 7970,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7939,
											"end": 7971,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7990,
											"end": 8008,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8031,
											"end": 8033,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8023,
											"end": 8029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8020,
											"end": 8034,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8047,
											"end": 8048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8037,
											"end": 8049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 8017,
											"end": 8051,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 8123,
											"end": 8130,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8114,
											"end": 8120,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8103,
											"end": 8112,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8099,
											"end": 8121,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 8070,
											"end": 8131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 8070,
											"end": 8131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8131,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8060,
											"end": 8131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8184,
											"end": 8186,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8173,
											"end": 8182,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8169,
											"end": 8187,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8156,
											"end": 8188,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8188,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8140,
											"end": 8188,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8213,
											"end": 8215,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8203,
											"end": 8211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8200,
											"end": 8216,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8229,
											"end": 8230,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8226,
											"end": 8227,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8219,
											"end": 8231,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8197,
											"end": 8233,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 8307,
											"end": 8314,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8296,
											"end": 8304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8294,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8281,
											"end": 8305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 8252,
											"end": 8315,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "tag",
											"source": 1,
											"value": "519"
										},
										{
											"begin": 8252,
											"end": 8315,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8315,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8242,
											"end": 8315,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 8321,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8326,
											"end": 8857,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 8326,
											"end": 8857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8421,
											"end": 8427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8429,
											"end": 8435,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8437,
											"end": 8443,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8445,
											"end": 8451,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8498,
											"end": 8501,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8486,
											"end": 8495,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8477,
											"end": 8484,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8473,
											"end": 8496,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8469,
											"end": 8502,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8515,
											"end": 8516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8513,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8505,
											"end": 8517,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 8466,
											"end": 8519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 8557,
											"end": 8566,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 8538,
											"end": 8567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 8538,
											"end": 8567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8528,
											"end": 8567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8614,
											"end": 8616,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8603,
											"end": 8612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8599,
											"end": 8617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8586,
											"end": 8618,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8618,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8576,
											"end": 8618,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8665,
											"end": 8667,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8654,
											"end": 8663,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8650,
											"end": 8668,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8669,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8669,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8627,
											"end": 8669,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8722,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8709,
											"end": 8718,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8705,
											"end": 8723,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8692,
											"end": 8724,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 8747,
											"end": 8765,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8739,
											"end": 8745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8736,
											"end": 8766,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8779,
											"end": 8780,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8776,
											"end": 8777,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8769,
											"end": 8781,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 8733,
											"end": 8783,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 8843,
											"end": 8850,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8834,
											"end": 8840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 8819,
											"end": 8841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8802,
											"end": 8851,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 8802,
											"end": 8851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9135,
											"end": 9141,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9143,
											"end": 9149,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9196,
											"end": 9198,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9193,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9175,
											"end": 9182,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9171,
											"end": 9194,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9199,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9212,
											"end": 9213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9209,
											"end": 9210,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9202,
											"end": 9214,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 9164,
											"end": 9216,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 9254,
											"end": 9263,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9235,
											"end": 9264,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 9235,
											"end": 9264,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9264,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9225,
											"end": 9264,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9314,
											"end": 9316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9303,
											"end": 9312,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9299,
											"end": 9317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9286,
											"end": 9318,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9361,
											"end": 9366,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9354,
											"end": 9367,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9347,
											"end": 9368,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9340,
											"end": 9345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9337,
											"end": 9369,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9383,
											"end": 9384,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9380,
											"end": 9381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9373,
											"end": 9385,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 9327,
											"end": 9387,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9406,
											"end": 9411,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9396,
											"end": 9411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9070,
											"end": 9417,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9856,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9422,
											"end": 9856,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9504,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9512,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9514,
											"end": 9520,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9567,
											"end": 9569,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9555,
											"end": 9564,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9546,
											"end": 9553,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9565,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9538,
											"end": 9570,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9583,
											"end": 9584,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9580,
											"end": 9581,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9573,
											"end": 9585,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 9535,
											"end": 9587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 9625,
											"end": 9634,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 9606,
											"end": 9635,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "tag",
											"source": 1,
											"value": "532"
										},
										{
											"begin": 9606,
											"end": 9635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9596,
											"end": 9635,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9685,
											"end": 9687,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9674,
											"end": 9683,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9670,
											"end": 9688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9657,
											"end": 9689,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9729,
											"end": 9755,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9722,
											"end": 9727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9718,
											"end": 9756,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9711,
											"end": 9716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9708,
											"end": 9757,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 9698,
											"end": 9775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9768,
											"end": 9769,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9761,
											"end": 9773,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9698,
											"end": 9775,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 9698,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9856,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9856,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9794,
											"end": 9799,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9846,
											"end": 9848,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9831,
											"end": 9849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 9850,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 9818,
											"end": 9850,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9422,
											"end": 9856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "tag",
											"source": 1,
											"value": "88"
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9929,
											"end": 9935,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9937,
											"end": 9943,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9990,
											"end": 9992,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9978,
											"end": 9987,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9969,
											"end": 9976,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9965,
											"end": 9988,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9961,
											"end": 9993,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10010,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10010,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 9958,
											"end": 10010,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10006,
											"end": 10007,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10003,
											"end": 10004,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9996,
											"end": 10008,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 10010,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 9958,
											"end": 10010,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 10048,
											"end": 10057,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10058,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10029,
											"end": 10058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10058,
											"name": "tag",
											"source": 1,
											"value": "536"
										},
										{
											"begin": 10029,
											"end": 10058,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10058,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10019,
											"end": 10058,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 10111,
											"end": 10113,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10100,
											"end": 10109,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10096,
											"end": 10114,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10115,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10077,
											"end": 10115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10077,
											"end": 10115,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 10077,
											"end": 10115,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10115,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10067,
											"end": 10115,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9861,
											"end": 10121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10126,
											"end": 10732,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10126,
											"end": 10732,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10238,
											"end": 10244,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10252,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10260,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10262,
											"end": 10268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10315,
											"end": 10318,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10294,
											"end": 10301,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10290,
											"end": 10313,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10286,
											"end": 10319,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10332,
											"end": 10333,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10329,
											"end": 10330,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10322,
											"end": 10334,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "tag",
											"source": 1,
											"value": "539"
										},
										{
											"begin": 10283,
											"end": 10336,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 10374,
											"end": 10383,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10355,
											"end": 10384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10355,
											"end": 10384,
											"name": "tag",
											"source": 1,
											"value": "540"
										},
										{
											"begin": 10355,
											"end": 10384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10384,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10345,
											"end": 10384,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 10437,
											"end": 10439,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10426,
											"end": 10435,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10422,
											"end": 10440,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10441,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10403,
											"end": 10441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10403,
											"end": 10441,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 10403,
											"end": 10441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10393,
											"end": 10441,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10393,
											"end": 10441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10488,
											"end": 10490,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10477,
											"end": 10486,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10473,
											"end": 10491,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10460,
											"end": 10492,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10492,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10450,
											"end": 10492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10541,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10528,
											"end": 10537,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10524,
											"end": 10542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10511,
											"end": 10543,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10501,
											"end": 10543,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10501,
											"end": 10543,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10594,
											"end": 10597,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10583,
											"end": 10592,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10579,
											"end": 10598,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10566,
											"end": 10599,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 10622,
											"end": 10640,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10614,
											"end": 10620,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10611,
											"end": 10641,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 10608,
											"end": 10658,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10608,
											"end": 10658,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 10608,
											"end": 10658,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10654,
											"end": 10655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10651,
											"end": 10652,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10644,
											"end": 10656,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10608,
											"end": 10658,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 10608,
											"end": 10658,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 10718,
											"end": 10725,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 10709,
											"end": 10715,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10698,
											"end": 10707,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10716,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10677,
											"end": 10726,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 10677,
											"end": 10726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10737,
											"end": 10923,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 10737,
											"end": 10923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 10802,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10849,
											"end": 10851,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10837,
											"end": 10846,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10828,
											"end": 10835,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10824,
											"end": 10847,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10820,
											"end": 10852,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10869,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 10817,
											"end": 10869,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10865,
											"end": 10866,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10862,
											"end": 10863,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10855,
											"end": 10867,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10869,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 10817,
											"end": 10869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10888,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 10907,
											"end": 10916,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10888,
											"end": 10917,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 10888,
											"end": 10917,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10928,
											"end": 11250,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10928,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11005,
											"end": 11011,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11019,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11021,
											"end": 11027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11074,
											"end": 11076,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11062,
											"end": 11071,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11053,
											"end": 11060,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11049,
											"end": 11072,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11045,
											"end": 11077,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11094,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 11042,
											"end": 11094,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11090,
											"end": 11091,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11087,
											"end": 11088,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11080,
											"end": 11092,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11042,
											"end": 11094,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 11042,
											"end": 11094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 11132,
											"end": 11141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "424"
										},
										{
											"begin": 11113,
											"end": 11142,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11113,
											"end": 11142,
											"name": "tag",
											"source": 1,
											"value": "549"
										},
										{
											"begin": 11113,
											"end": 11142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11103,
											"end": 11142,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11189,
											"end": 11191,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11174,
											"end": 11192,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11193,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11161,
											"end": 11193,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11240,
											"end": 11242,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11225,
											"end": 11243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11244,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 11212,
											"end": 11244,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 10928,
											"end": 11250,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10928,
											"end": 11250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 12046,
											"name": "tag",
											"source": 1,
											"value": "114"
										},
										{
											"begin": 11666,
											"end": 12046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11745,
											"end": 11746,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 11741,
											"end": 11753,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11788,
											"end": 11800,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11788,
											"end": 11800,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11788,
											"end": 11800,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11870,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 11809,
											"end": 11870,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11863,
											"end": 11867,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 11855,
											"end": 11861,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11851,
											"end": 11868,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11868,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11841,
											"end": 11868,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11809,
											"end": 11870,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 11809,
											"end": 11870,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11916,
											"end": 11918,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11908,
											"end": 11914,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11905,
											"end": 11919,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 11885,
											"end": 11903,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11882,
											"end": 11920,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 12040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 11879,
											"end": 12040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11962,
											"end": 11972,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 11957,
											"end": 11960,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 11953,
											"end": 11973,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 11950,
											"end": 11951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11943,
											"end": 11974,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11997,
											"end": 12001,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 11994,
											"end": 11995,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 11987,
											"end": 12002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12025,
											"end": 12029,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12022,
											"end": 12023,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12030,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 12040,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 11879,
											"end": 12040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11879,
											"end": 12040,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 12046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 12046,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 12046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11666,
											"end": 12046,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12461,
											"name": "tag",
											"source": 1,
											"value": "133"
										},
										{
											"begin": 12051,
											"end": 12461,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12253,
											"end": 12255,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12235,
											"end": 12256,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12256,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12235,
											"end": 12256,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12292,
											"end": 12294,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12272,
											"end": 12290,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12265,
											"end": 12295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12331,
											"end": 12365,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 12326,
											"end": 12328,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12311,
											"end": 12329,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12304,
											"end": 12366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12397,
											"end": 12399,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12382,
											"end": 12400,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12375,
											"end": 12419,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12451,
											"end": 12454,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 12436,
											"end": 12455,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12436,
											"end": 12455,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12051,
											"end": 12461,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12876,
											"end": 13003,
											"name": "tag",
											"source": 1,
											"value": "155"
										},
										{
											"begin": 12876,
											"end": 13003,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12937,
											"end": 12947,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 12932,
											"end": 12935,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 12928,
											"end": 12948,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 12925,
											"end": 12926,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12918,
											"end": 12949,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12968,
											"end": 12972,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 12965,
											"end": 12966,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 12958,
											"end": 12973,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12992,
											"end": 12996,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12989,
											"end": 12990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12982,
											"end": 12997,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13008,
											"end": 13135,
											"name": "tag",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 13008,
											"end": 13135,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13069,
											"end": 13079,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 13064,
											"end": 13067,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13060,
											"end": 13080,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 13057,
											"end": 13058,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13050,
											"end": 13081,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13100,
											"end": 13104,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 13097,
											"end": 13098,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13090,
											"end": 13105,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13124,
											"end": 13128,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13121,
											"end": 13122,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13114,
											"end": 13129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13275,
											"name": "tag",
											"source": 1,
											"value": "161"
										},
										{
											"begin": 13140,
											"end": 13275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13179,
											"end": 13182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13200,
											"end": 13217,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13197,
											"end": 13240,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 13197,
											"end": 13240,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 13220,
											"end": 13238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "tag",
											"source": 1,
											"value": "560"
										},
										{
											"begin": 13220,
											"end": 13238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13267,
											"end": 13268,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 13256,
											"end": 13269,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13256,
											"end": 13269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13140,
											"end": 13275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14048,
											"end": 14445,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 14048,
											"end": 14445,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14250,
											"end": 14252,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14232,
											"end": 14253,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14232,
											"end": 14253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14291,
											"name": "PUSH",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14269,
											"end": 14287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14262,
											"end": 14292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14362,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206D696E7420746F20746865207A65726F20616464726573"
										},
										{
											"begin": 14323,
											"end": 14325,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14308,
											"end": 14326,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14301,
											"end": 14363,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14394,
											"end": 14396,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14379,
											"end": 14397,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14379,
											"end": 14397,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14372,
											"end": 14403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14435,
											"end": 14438,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14420,
											"end": 14439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14420,
											"end": 14439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14048,
											"end": 14445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14854,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 14450,
											"end": 14854,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14652,
											"end": 14654,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14634,
											"end": 14655,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14634,
											"end": 14655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14634,
											"end": 14655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14691,
											"end": 14693,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14671,
											"end": 14689,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14664,
											"end": 14694,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14730,
											"end": 14764,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 14725,
											"end": 14727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14710,
											"end": 14728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14703,
											"end": 14765,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14796,
											"end": 14798,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14781,
											"end": 14799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14774,
											"end": 14812,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 14847,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 14829,
											"end": 14848,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14829,
											"end": 14848,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14450,
											"end": 14854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14859,
											"end": 14984,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 14859,
											"end": 14984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14924,
											"end": 14933,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 14955,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 14955,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14945,
											"end": 14955,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14942,
											"end": 14978,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14942,
											"end": 14978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 14942,
											"end": 14978,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14958,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 14958,
											"end": 14976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "432"
										},
										{
											"begin": 14958,
											"end": 14976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14989,
											"end": 15454,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 14989,
											"end": 15454,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15246,
											"end": 15248,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15235,
											"end": 15244,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15228,
											"end": 15249,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15209,
											"end": 15213,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15272,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 15324,
											"end": 15326,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15313,
											"end": 15322,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15309,
											"end": 15327,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15301,
											"end": 15307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15272,
											"end": 15328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 15272,
											"end": 15328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15272,
											"end": 15328,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 15272,
											"end": 15328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15376,
											"end": 15385,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15368,
											"end": 15374,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15364,
											"end": 15386,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 15359,
											"end": 15361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15348,
											"end": 15357,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15344,
											"end": 15362,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15337,
											"end": 15387,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 15441,
											"end": 15447,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15433,
											"end": 15439,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 15404,
											"end": 15448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15404,
											"end": 15448,
											"name": "tag",
											"source": 1,
											"value": "570"
										},
										{
											"begin": 15404,
											"end": 15448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15396,
											"end": 15448,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 14989,
											"end": 15454,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14989,
											"end": 15454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15459,
											"end": 15860,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 15459,
											"end": 15860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15661,
											"end": 15663,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15643,
											"end": 15664,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15643,
											"end": 15664,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15643,
											"end": 15664,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15700,
											"end": 15702,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15673,
											"end": 15703,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15739,
											"end": 15773,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 15734,
											"end": 15736,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15719,
											"end": 15737,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15719,
											"end": 15737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15712,
											"end": 15774,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15805,
											"end": 15807,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15790,
											"end": 15808,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15790,
											"end": 15808,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15783,
											"end": 15818,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15850,
											"end": 15853,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15835,
											"end": 15854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15835,
											"end": 15854,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15459,
											"end": 15860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15865,
											"end": 16271,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 15865,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16067,
											"end": 16069,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16049,
											"end": 16070,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16070,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16070,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16106,
											"end": 16108,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 16086,
											"end": 16104,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16086,
											"end": 16104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16086,
											"end": 16104,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16079,
											"end": 16109,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16145,
											"end": 16179,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 16140,
											"end": 16142,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16125,
											"end": 16143,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16125,
											"end": 16143,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16118,
											"end": 16180,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16211,
											"end": 16213,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16196,
											"end": 16214,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16196,
											"end": 16214,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16189,
											"end": 16229,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16261,
											"end": 16264,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16246,
											"end": 16265,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16246,
											"end": 16265,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15865,
											"end": 16271,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16276,
											"end": 16675,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 16276,
											"end": 16675,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16478,
											"end": 16480,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16460,
											"end": 16481,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16460,
											"end": 16481,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16517,
											"end": 16519,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16497,
											"end": 16515,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16490,
											"end": 16520,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16556,
											"end": 16590,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206275726E2066726F6D20746865207A65726F2061646472"
										},
										{
											"begin": 16551,
											"end": 16553,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16536,
											"end": 16554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16536,
											"end": 16554,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16529,
											"end": 16591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16622,
											"end": 16624,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16607,
											"end": 16625,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16600,
											"end": 16633,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16665,
											"end": 16668,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 16650,
											"end": 16669,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16650,
											"end": 16669,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16276,
											"end": 16675,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 17080,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 16680,
											"end": 17080,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16882,
											"end": 16884,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16864,
											"end": 16885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16864,
											"end": 16885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16864,
											"end": 16885,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16921,
											"end": 16923,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 16901,
											"end": 16919,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 16919,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16901,
											"end": 16919,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16894,
											"end": 16924,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16960,
											"end": 16994,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206275726E20616D6F756E7420657863656564732062616C"
										},
										{
											"begin": 16955,
											"end": 16957,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 16940,
											"end": 16958,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16940,
											"end": 16958,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16933,
											"end": 16995,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17026,
											"end": 17028,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17011,
											"end": 17029,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17011,
											"end": 17029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17004,
											"end": 17038,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 17070,
											"end": 17073,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17055,
											"end": 17074,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17055,
											"end": 17074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16680,
											"end": 17080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 18575,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 17748,
											"end": 18575,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 18145,
											"end": 18160,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18145,
											"end": 18160,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18145,
											"end": 18160,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18127,
											"end": 18161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18127,
											"end": 18161,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18212,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18197,
											"end": 18212,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 18192,
											"end": 18194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18177,
											"end": 18195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18170,
											"end": 18213,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18107,
											"end": 18110,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 18244,
											"end": 18246,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 18229,
											"end": 18247,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18229,
											"end": 18247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18253,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18253,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18222,
											"end": 18253,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18070,
											"end": 18074,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18070,
											"end": 18074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 18276,
											"end": 18333,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18313,
											"end": 18332,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18313,
											"end": 18332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18311,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18333,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 18276,
											"end": 18333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18276,
											"end": 18333,
											"name": "tag",
											"source": 1,
											"value": "578"
										},
										{
											"begin": 18276,
											"end": 18333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18381,
											"end": 18390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18373,
											"end": 18379,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18369,
											"end": 18391,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18364,
											"end": 18366,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 18353,
											"end": 18362,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18349,
											"end": 18367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18342,
											"end": 18392,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 18452,
											"end": 18458,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18444,
											"end": 18450,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18459,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "431"
										},
										{
											"begin": 18415,
											"end": 18459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18415,
											"end": 18459,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 18415,
											"end": 18459,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18401,
											"end": 18459,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18401,
											"end": 18459,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18508,
											"end": 18517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18500,
											"end": 18506,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18496,
											"end": 18518,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18490,
											"end": 18493,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18479,
											"end": 18488,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18475,
											"end": 18494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18468,
											"end": 18519,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18536,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 18562,
											"end": 18568,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18554,
											"end": 18560,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18536,
											"end": 18569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 18536,
											"end": 18569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18536,
											"end": 18569,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 18536,
											"end": 18569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18528,
											"end": 18569,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 17748,
											"end": 18575,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17748,
											"end": 18575,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18580,
											"end": 18829,
											"name": "tag",
											"source": 1,
											"value": "370"
										},
										{
											"begin": 18580,
											"end": 18829,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18649,
											"end": 18655,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18702,
											"end": 18704,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18690,
											"end": 18699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18681,
											"end": 18688,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18677,
											"end": 18700,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18673,
											"end": 18705,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 18670,
											"end": 18722,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18670,
											"end": 18722,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 18670,
											"end": 18722,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18718,
											"end": 18719,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18715,
											"end": 18716,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18708,
											"end": 18720,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 18670,
											"end": 18722,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 18670,
											"end": 18722,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18750,
											"end": 18759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18744,
											"end": 18760,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18769,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 18793,
											"end": 18798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18769,
											"end": 18799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 18769,
											"end": 18799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18834,
											"end": 19013,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 18834,
											"end": 19013,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18869,
											"end": 18872,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18911,
											"end": 18912,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 18893,
											"end": 18909,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 18890,
											"end": 18913,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 19007,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 19007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 18887,
											"end": 19007,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18957,
											"end": 18958,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 18954,
											"end": 18955,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18951,
											"end": 18952,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18936,
											"end": 18959,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18994,
											"end": 18995,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18988,
											"end": 18996,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 18983,
											"end": 18986,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 18979,
											"end": 18997,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 19007,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 18887,
											"end": 19007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18834,
											"end": 19013,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18834,
											"end": 19013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19057,
											"end": 19060,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19099,
											"end": 19103,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 19081,
											"end": 19097,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19078,
											"end": 19104,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 19075,
											"end": 19114,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19075,
											"end": 19114,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 19075,
											"end": 19114,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19075,
											"end": 19114,
											"name": "tag",
											"source": 1,
											"value": "587"
										},
										{
											"begin": 19075,
											"end": 19114,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19141,
											"end": 19143,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19135,
											"end": 19144,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 19206,
											"end": 19222,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19202,
											"end": 19227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19202,
											"end": 19227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19199,
											"end": 19200,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 19135,
											"end": 19144,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 19178,
											"end": 19228,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 19257,
											"end": 19261,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19251,
											"end": 19262,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19281,
											"end": 19297,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19316,
											"end": 19334,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19387,
											"end": 19389,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19380,
											"end": 19384,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 19372,
											"end": 19378,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19368,
											"end": 19385,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19365,
											"end": 19390,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19360,
											"end": 19362,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19352,
											"end": 19358,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19349,
											"end": 19363,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 19391,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 19343,
											"end": 19401,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19343,
											"end": 19401,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 19343,
											"end": 19401,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19394,
											"end": 19399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19394,
											"end": 19399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19394,
											"end": 19399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19394,
											"end": 19399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19394,
											"end": 19399,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19343,
											"end": 19401,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 19343,
											"end": 19401,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19431,
											"end": 19437,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19425,
											"end": 19429,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19421,
											"end": 19438,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19410,
											"end": 19438,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19410,
											"end": 19438,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19467,
											"end": 19470,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19461,
											"end": 19471,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 19494,
											"end": 19496,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19486,
											"end": 19492,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 19483,
											"end": 19497,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19507,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19507,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 19480,
											"end": 19507,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19500,
											"end": 19505,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19480,
											"end": 19507,
											"name": "tag",
											"source": 1,
											"value": "589"
										},
										{
											"begin": 19480,
											"end": 19507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19584,
											"end": 19586,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 19565,
											"end": 19581,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 19559,
											"end": 19563,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19555,
											"end": 19582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19551,
											"end": 19587,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19544,
											"end": 19548,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19535,
											"end": 19541,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19530,
											"end": 19533,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 19526,
											"end": 19542,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19522,
											"end": 19549,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19519,
											"end": 19588,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 19516,
											"end": 19598,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19516,
											"end": 19598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 19516,
											"end": 19598,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19591,
											"end": 19596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19591,
											"end": 19596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19591,
											"end": 19596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19591,
											"end": 19596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19591,
											"end": 19596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19591,
											"end": 19596,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19516,
											"end": 19598,
											"name": "tag",
											"source": 1,
											"value": "590"
										},
										{
											"begin": 19516,
											"end": 19598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19607,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 19658,
											"end": 19662,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19649,
											"end": 19655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19641,
											"end": 19647,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19637,
											"end": 19656,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19633,
											"end": 19663,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19627,
											"end": 19631,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19607,
											"end": 19664,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 19607,
											"end": 19664,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19607,
											"end": 19664,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 19607,
											"end": 19664,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19680,
											"end": 19683,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19680,
											"end": 19683,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 19018,
											"end": 19689,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19018,
											"end": 19689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20115,
											"end": 20519,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 20115,
											"end": 20519,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20317,
											"end": 20319,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 20299,
											"end": 20320,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20299,
											"end": 20320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20299,
											"end": 20320,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20356,
											"end": 20358,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20336,
											"end": 20354,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20329,
											"end": 20359,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20395,
											"end": 20429,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 20390,
											"end": 20392,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 20375,
											"end": 20393,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20375,
											"end": 20393,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20368,
											"end": 20430,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 20461,
											"end": 20463,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20446,
											"end": 20464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20446,
											"end": 20464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20439,
											"end": 20477,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20509,
											"end": 20512,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20494,
											"end": 20513,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20494,
											"end": 20513,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20115,
											"end": 20519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20873,
											"end": 21434,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 20873,
											"end": 21434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21170,
											"end": 21185,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 21170,
											"end": 21185,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21170,
											"end": 21185,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21152,
											"end": 21186,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21152,
											"end": 21186,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21222,
											"end": 21237,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 21222,
											"end": 21237,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 21217,
											"end": 21219,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 21202,
											"end": 21220,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21202,
											"end": 21220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21195,
											"end": 21238,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21269,
											"end": 21271,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 21254,
											"end": 21272,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21254,
											"end": 21272,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21247,
											"end": 21281,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21247,
											"end": 21281,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21247,
											"end": 21281,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21312,
											"end": 21314,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 21297,
											"end": 21315,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21297,
											"end": 21315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21290,
											"end": 21324,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21290,
											"end": 21324,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21290,
											"end": 21324,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21132,
											"end": 21135,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 21355,
											"end": 21358,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 21340,
											"end": 21359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21340,
											"end": 21359,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21365,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21365,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21333,
											"end": 21365,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21095,
											"end": 21099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21095,
											"end": 21099,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21408,
											"end": 21427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21408,
											"end": 21427,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21400,
											"end": 21406,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 21382,
											"end": 21428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "tag",
											"source": 1,
											"value": "596"
										},
										{
											"begin": 21382,
											"end": 21428,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21374,
											"end": 21428,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 20873,
											"end": 21434,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20873,
											"end": 21434,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/DTiket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burn(address,uint96,uint256)": "d501dc37",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"mint(address,uint256,uint256,bytes)": "731133e9",
							"mintBatch(address,uint256[],uint256[],bytes)": "1f7fdffa",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"renounceOwnership()": "715018a6",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ticketUser\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"tokenId\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mintBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"DTiket\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "contracts/DTiket_flattened.sol:DTiket",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 797,
								"contract": "contracts/DTiket_flattened.sol:DTiket",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 799,
								"contract": "contracts/DTiket_flattened.sol:DTiket",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 148,
								"contract": "contracts/DTiket_flattened.sol:DTiket",
								"label": "_paused",
								"offset": 0,
								"slot": "3",
								"type": "t_bool"
							},
							{
								"astId": 27,
								"contract": "contracts/DTiket_flattened.sol:DTiket",
								"label": "_owner",
								"offset": 1,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "uri_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/DTiket_flattened.sol\":24884:41423  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/DTiket_flattened.sol\":25421:25483  constructor(string memory uri_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/DTiket_flattened.sol\":25463:25476  _setURI(uri_) */\n  tag_6\n    /* \"contracts/DTiket_flattened.sol\":25471:25475  uri_ */\n  dup2\n    /* \"contracts/DTiket_flattened.sol\":25463:25470  _setURI */\n  tag_7\n    /* \"contracts/DTiket_flattened.sol\":25463:25476  _setURI(uri_) */\n  jump\t// in\ntag_6:\n    /* \"contracts/DTiket_flattened.sol\":25421:25483  constructor(string memory uri_) {... */\n  pop\n    /* \"contracts/DTiket_flattened.sol\":24884:41423  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  jump(tag_17)\n    /* \"contracts/DTiket_flattened.sol\":32463:32549  function _setURI(string memory newuri) internal virtual {... */\ntag_7:\n    /* \"contracts/DTiket_flattened.sol\":32529:32533  _uri */\n  0x02\n    /* \"contracts/DTiket_flattened.sol\":32529:32542  _uri = newuri */\n  tag_10\n    /* \"contracts/DTiket_flattened.sol\":32536:32542  newuri */\n  dup3\n    /* \"contracts/DTiket_flattened.sol\":32529:32533  _uri */\n  dup3\n    /* \"contracts/DTiket_flattened.sol\":32529:32542  _uri = newuri */\n  tag_11\n  jump\t// in\ntag_10:\n  pop\n    /* \"contracts/DTiket_flattened.sol\":32463:32549  function _setURI(string memory newuri) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":14:141   */\ntag_12:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:1188   */\ntag_3:\n    /* \"#utility.yul\":226:232   */\n  0x00\n    /* \"#utility.yul\":257:259   */\n  0x20\n    /* \"#utility.yul\":300:302   */\n  dup1\n    /* \"#utility.yul\":288:297   */\n  dup4\n    /* \"#utility.yul\":279:286   */\n  dup6\n    /* \"#utility.yul\":275:298   */\n  sub\n    /* \"#utility.yul\":271:303   */\n  slt\n    /* \"#utility.yul\":268:320   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":316:317   */\n  0x00\n    /* \"#utility.yul\":313:314   */\n  dup1\n    /* \"#utility.yul\":306:318   */\n  revert\n    /* \"#utility.yul\":268:320   */\ntag_20:\n    /* \"#utility.yul\":343:359   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":408:422   */\n  dup1\n  dup3\n  gt\n    /* \"#utility.yul\":405:439   */\n  iszero\n  tag_21\n  jumpi\n    /* \"#utility.yul\":435:436   */\n  0x00\n    /* \"#utility.yul\":432:433   */\n  dup1\n    /* \"#utility.yul\":425:437   */\n  revert\n    /* \"#utility.yul\":405:439   */\ntag_21:\n    /* \"#utility.yul\":473:479   */\n  dup2\n    /* \"#utility.yul\":462:471   */\n  dup6\n    /* \"#utility.yul\":458:480   */\n  add\n    /* \"#utility.yul\":448:480   */\n  swap2\n  pop\n    /* \"#utility.yul\":518:525   */\n  dup6\n    /* \"#utility.yul\":511:515   */\n  0x1f\n    /* \"#utility.yul\":507:509   */\n  dup4\n    /* \"#utility.yul\":503:516   */\n  add\n    /* \"#utility.yul\":499:526   */\n  slt\n    /* \"#utility.yul\":489:544   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":540:541   */\n  0x00\n    /* \"#utility.yul\":537:538   */\n  dup1\n    /* \"#utility.yul\":530:542   */\n  revert\n    /* \"#utility.yul\":489:544   */\ntag_22:\n    /* \"#utility.yul\":569:571   */\n  dup2\n    /* \"#utility.yul\":563:572   */\n  mload\n    /* \"#utility.yul\":591:593   */\n  dup2\n    /* \"#utility.yul\":587:589   */\n  dup2\n    /* \"#utility.yul\":584:594   */\n  gt\n    /* \"#utility.yul\":581:617   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":597:615   */\n  tag_24\n  tag_12\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":672:674   */\n  0x40\n    /* \"#utility.yul\":666:675   */\n  mload\n    /* \"#utility.yul\":640:642   */\n  0x1f\n    /* \"#utility.yul\":726:739   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":722:744   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":746:748   */\n  0x3f\n    /* \"#utility.yul\":718:749   */\n  add\n    /* \"#utility.yul\":714:754   */\n  and\n    /* \"#utility.yul\":702:755   */\n  dup2\n  add\n  swap1\n    /* \"#utility.yul\":770:788   */\n  dup4\n  dup3\n  gt\n    /* \"#utility.yul\":790:812   */\n  dup2\n  dup4\n  lt\n    /* \"#utility.yul\":767:813   */\n  or\n    /* \"#utility.yul\":764:836   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":816:834   */\n  tag_26\n  tag_12\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":856:866   */\n  dup2\n    /* \"#utility.yul\":852:854   */\n  0x40\n    /* \"#utility.yul\":845:867   */\n  mstore\n    /* \"#utility.yul\":891:893   */\n  dup3\n    /* \"#utility.yul\":883:889   */\n  dup2\n    /* \"#utility.yul\":876:894   */\n  mstore\n    /* \"#utility.yul\":931:938   */\n  dup9\n    /* \"#utility.yul\":926:928   */\n  dup7\n    /* \"#utility.yul\":921:923   */\n  dup5\n    /* \"#utility.yul\":917:919   */\n  dup8\n    /* \"#utility.yul\":913:924   */\n  add\n    /* \"#utility.yul\":909:929   */\n  add\n    /* \"#utility.yul\":906:939   */\n  gt\n    /* \"#utility.yul\":903:956   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":952:953   */\n  0x00\n    /* \"#utility.yul\":949:950   */\n  dup1\n    /* \"#utility.yul\":942:954   */\n  revert\n    /* \"#utility.yul\":903:956   */\ntag_27:\n    /* \"#utility.yul\":974:975   */\n  0x00\n    /* \"#utility.yul\":965:975   */\n  swap4\n  pop\n    /* \"#utility.yul\":984:1113   */\ntag_28:\n    /* \"#utility.yul\":998:1000   */\n  dup3\n    /* \"#utility.yul\":995:996   */\n  dup5\n    /* \"#utility.yul\":992:1001   */\n  lt\n    /* \"#utility.yul\":984:1113   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1086:1096   */\n  dup5\n  dup5\n  add\n    /* \"#utility.yul\":1082:1101   */\n  dup7\n  add\n    /* \"#utility.yul\":1076:1102   */\n  mload\n    /* \"#utility.yul\":1055:1069   */\n  dup2\n  dup6\n  add\n    /* \"#utility.yul\":1051:1074   */\n  dup8\n  add\n    /* \"#utility.yul\":1044:1103   */\n  mstore\n    /* \"#utility.yul\":1009:1019   */\n  swap3\n  dup6\n  add\n  swap3\n    /* \"#utility.yul\":984:1113   */\n  jump(tag_28)\ntag_30:\n    /* \"#utility.yul\":1155:1156   */\n  0x00\n    /* \"#utility.yul\":1150:1152   */\n  dup7\n    /* \"#utility.yul\":1145:1147   */\n  dup5\n    /* \"#utility.yul\":1137:1143   */\n  dup4\n    /* \"#utility.yul\":1133:1148   */\n  add\n    /* \"#utility.yul\":1129:1153   */\n  add\n    /* \"#utility.yul\":1122:1157   */\n  mstore\n    /* \"#utility.yul\":1176:1182   */\n  dup1\n    /* \"#utility.yul\":1166:1182   */\n  swap7\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":146:1188   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1193:1573   */\ntag_13:\n    /* \"#utility.yul\":1272:1273   */\n  0x01\n    /* \"#utility.yul\":1268:1280   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1315:1327   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1336:1397   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1390:1394   */\n  0x7f\n    /* \"#utility.yul\":1382:1388   */\n  dup3\n    /* \"#utility.yul\":1378:1395   */\n  and\n    /* \"#utility.yul\":1368:1395   */\n  swap2\n  pop\n    /* \"#utility.yul\":1336:1397   */\ntag_32:\n    /* \"#utility.yul\":1443:1445   */\n  0x20\n    /* \"#utility.yul\":1435:1441   */\n  dup3\n    /* \"#utility.yul\":1432:1446   */\n  lt\n    /* \"#utility.yul\":1412:1430   */\n  dup2\n    /* \"#utility.yul\":1409:1447   */\n  sub\n    /* \"#utility.yul\":1406:1567   */\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1489:1499   */\n  0x4e487b71\n    /* \"#utility.yul\":1484:1487   */\n  0xe0\n    /* \"#utility.yul\":1480:1500   */\n  shl\n    /* \"#utility.yul\":1477:1478   */\n  0x00\n    /* \"#utility.yul\":1470:1501   */\n  mstore\n    /* \"#utility.yul\":1524:1528   */\n  0x22\n    /* \"#utility.yul\":1521:1522   */\n  0x04\n    /* \"#utility.yul\":1514:1529   */\n  mstore\n    /* \"#utility.yul\":1552:1556   */\n  0x24\n    /* \"#utility.yul\":1549:1550   */\n  0x00\n    /* \"#utility.yul\":1542:1557   */\n  revert\n    /* \"#utility.yul\":1406:1567   */\ntag_33:\n  pop\n    /* \"#utility.yul\":1193:1573   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1704:2249   */\ntag_15:\n    /* \"#utility.yul\":1806:1808   */\n  0x1f\n    /* \"#utility.yul\":1801:1804   */\n  dup3\n    /* \"#utility.yul\":1798:1809   */\n  gt\n    /* \"#utility.yul\":1795:2243   */\n  iszero\n  tag_36\n  jumpi\n    /* \"#utility.yul\":1842:1843   */\n  0x00\n    /* \"#utility.yul\":1867:1872   */\n  dup2\n    /* \"#utility.yul\":1863:1865   */\n  dup2\n    /* \"#utility.yul\":1856:1873   */\n  mstore\n    /* \"#utility.yul\":1912:1916   */\n  0x20\n    /* \"#utility.yul\":1908:1910   */\n  dup2\n    /* \"#utility.yul\":1898:1917   */\n  keccak256\n    /* \"#utility.yul\":1982:1984   */\n  0x1f\n    /* \"#utility.yul\":1970:1980   */\n  dup6\n    /* \"#utility.yul\":1966:1985   */\n  add\n    /* \"#utility.yul\":1963:1964   */\n  0x05\n    /* \"#utility.yul\":1959:1986   */\n  shr\n    /* \"#utility.yul\":1953:1957   */\n  dup2\n    /* \"#utility.yul\":1949:1987   */\n  add\n    /* \"#utility.yul\":2018:2022   */\n  0x20\n    /* \"#utility.yul\":2006:2016   */\n  dup7\n    /* \"#utility.yul\":2003:2023   */\n  lt\n    /* \"#utility.yul\":2000:2047   */\n  iszero\n  tag_37\n  jumpi\n  pop\n    /* \"#utility.yul\":2041:2045   */\n  dup1\n    /* \"#utility.yul\":2000:2047   */\ntag_37:\n    /* \"#utility.yul\":2096:2098   */\n  0x1f\n    /* \"#utility.yul\":2091:2094   */\n  dup6\n    /* \"#utility.yul\":2087:2099   */\n  add\n    /* \"#utility.yul\":2084:2085   */\n  0x05\n    /* \"#utility.yul\":2080:2100   */\n  shr\n    /* \"#utility.yul\":2074:2078   */\n  dup3\n    /* \"#utility.yul\":2070:2101   */\n  add\n    /* \"#utility.yul\":2060:2101   */\n  swap2\n  pop\n    /* \"#utility.yul\":2151:2233   */\ntag_38:\n    /* \"#utility.yul\":2169:2171   */\n  dup2\n    /* \"#utility.yul\":2162:2167   */\n  dup2\n    /* \"#utility.yul\":2159:2172   */\n  lt\n    /* \"#utility.yul\":2151:2233   */\n  iszero\n  tag_40\n  jumpi\n    /* \"#utility.yul\":2214:2231   */\n  dup3\n  dup2\n  sstore\n    /* \"#utility.yul\":2195:2196   */\n  0x01\n    /* \"#utility.yul\":2184:2197   */\n  add\n    /* \"#utility.yul\":2151:2233   */\n  jump(tag_38)\ntag_40:\n    /* \"#utility.yul\":2155:2158   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":1795:2243   */\ntag_36:\n    /* \"#utility.yul\":1704:2249   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2425:3777   */\ntag_11:\n    /* \"#utility.yul\":2545:2555   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2567:2597   */\n  dup2\n  gt\n    /* \"#utility.yul\":2564:2620   */\n  iszero\n  tag_44\n  jumpi\n    /* \"#utility.yul\":2600:2618   */\n  tag_44\n  tag_12\n  jump\t// in\ntag_44:\n    /* \"#utility.yul\":2629:2726   */\n  tag_45\n    /* \"#utility.yul\":2719:2725   */\n  dup2\n    /* \"#utility.yul\":2679:2717   */\n  tag_46\n    /* \"#utility.yul\":2711:2715   */\n  dup5\n    /* \"#utility.yul\":2705:2716   */\n  sload\n    /* \"#utility.yul\":2679:2717   */\n  tag_13\n  jump\t// in\ntag_46:\n    /* \"#utility.yul\":2673:2677   */\n  dup5\n    /* \"#utility.yul\":2629:2726   */\n  tag_15\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":2781:2785   */\n  0x20\n  dup1\n    /* \"#utility.yul\":2845:2847   */\n  0x1f\n    /* \"#utility.yul\":2834:2848   */\n  dup4\n  gt\n    /* \"#utility.yul\":2862:2863   */\n  0x01\n    /* \"#utility.yul\":2857:3520   */\n  dup2\n  eq\n  tag_48\n  jumpi\n    /* \"#utility.yul\":3564:3565   */\n  0x00\n    /* \"#utility.yul\":3581:3587   */\n  dup5\n    /* \"#utility.yul\":3578:3667   */\n  iszero\n  tag_49\n  jumpi\n  pop\n    /* \"#utility.yul\":3633:3652   */\n  dup6\n  dup4\n  add\n    /* \"#utility.yul\":3627:3653   */\n  mload\n    /* \"#utility.yul\":3578:3667   */\ntag_49:\n  not(0x00)\n    /* \"#utility.yul\":2382:2383   */\n  0x03\n    /* \"#utility.yul\":2378:2389   */\n  dup7\n  swap1\n  shl\n    /* \"#utility.yul\":2374:2398   */\n  shr\n    /* \"#utility.yul\":2370:2399   */\n  not\n    /* \"#utility.yul\":2360:2400   */\n  and\n    /* \"#utility.yul\":2406:2407   */\n  0x01\n    /* \"#utility.yul\":2402:2413   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2357:2414   */\n  or\n    /* \"#utility.yul\":3680:3761   */\n  dup6\n  sstore\n    /* \"#utility.yul\":2827:3771   */\n  jump(tag_40)\n    /* \"#utility.yul\":2857:3520   */\ntag_48:\n    /* \"#utility.yul\":1651:1652   */\n  0x00\n    /* \"#utility.yul\":1644:1658   */\n  dup6\n  dup2\n  mstore\n    /* \"#utility.yul\":1688:1692   */\n  0x20\n    /* \"#utility.yul\":1675:1693   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":2893:2913   */\n  dup7\n  and\n  swap2\n    /* \"#utility.yul\":3011:3247   */\ntag_52:\n    /* \"#utility.yul\":3025:3032   */\n  dup3\n    /* \"#utility.yul\":3022:3023   */\n  dup2\n    /* \"#utility.yul\":3019:3033   */\n  lt\n    /* \"#utility.yul\":3011:3247   */\n  iszero\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3114:3133   */\n  dup9\n  dup7\n  add\n    /* \"#utility.yul\":3108:3134   */\n  mload\n    /* \"#utility.yul\":3093:3135   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3206:3233   */\n  swap5\n  dup5\n  add\n  swap5\n    /* \"#utility.yul\":3174:3175   */\n  0x01\n    /* \"#utility.yul\":3162:3176   */\n  swap1\n  swap2\n  add\n  swap1\n    /* \"#utility.yul\":3041:3060   */\n  dup5\n  add\n    /* \"#utility.yul\":3011:3247   */\n  jump(tag_52)\ntag_54:\n    /* \"#utility.yul\":3015:3018   */\n  pop\n    /* \"#utility.yul\":3275:3281   */\n  dup6\n    /* \"#utility.yul\":3266:3273   */\n  dup3\n    /* \"#utility.yul\":3263:3282   */\n  lt\n    /* \"#utility.yul\":3260:3461   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":3336:3355   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3330:3356   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3419:3420   */\n  0x03\n    /* \"#utility.yul\":3415:3429   */\n  dup9\n  swap1\n  shl\n    /* \"#utility.yul\":3431:3434   */\n  0xf8\n    /* \"#utility.yul\":3411:3435   */\n  and\n    /* \"#utility.yul\":3407:3444   */\n  shr\n    /* \"#utility.yul\":3403:3445   */\n  not\n    /* \"#utility.yul\":3388:3446   */\n  and\n    /* \"#utility.yul\":3373:3447   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3260:3461   */\ntag_55:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3507:3508   */\n  0x01\n    /* \"#utility.yul\":3491:3505   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3487:3509   */\n  add\n    /* \"#utility.yul\":3474:3510   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2425:3777   */\n  jump\t// out\ntag_17:\n    /* \"contracts/DTiket_flattened.sol\":24884:41423  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/DTiket_flattened.sol\":24884:41423  contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x4e1273f4\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x4e1273f4\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xf242432a\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      dup1\n      0xfdd58e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x01ffc9a7\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x0e89341c\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2eb2c2d6\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_3:\n      tag_12\n      tag_13\n      calldatasize\n      0x04\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n        /* \"#utility.yul\":597:622   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":585:587   */\n      0x20\n        /* \"#utility.yul\":570:588   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/DTiket_flattened.sol\":25550:25855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_4:\n      tag_18\n      tag_19\n      calldatasize\n      0x04\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n        /* \"#utility.yul\":1184:1198   */\n      swap1\n      iszero\n        /* \"#utility.yul\":1177:1199   */\n      iszero\n        /* \"#utility.yul\":1159:1200   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1147:1149   */\n      0x20\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":25550:25855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      tag_16\n        /* \"#utility.yul\":1019:1206   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":26254:26357  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_5:\n      tag_24\n      tag_25\n      calldatasize\n      0x04\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":28356:28782  function safeBatchTransferFrom(... */\n    tag_6:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/DTiket_flattened.sol\":26883:27369  function balanceOfBatch(... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":27437:27590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_8:\n      tag_30\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n    tag_9:\n      tag_18\n      tag_45\n      calldatasize\n      0x04\n      tag_46\n      jump\t// in\n    tag_45:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":27779:27806  _operatorApprovals[account] */\n      swap2\n      dup3\n      and\n        /* \"contracts/DTiket_flattened.sol\":27756:27760  bool */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":27779:27806  _operatorApprovals[account] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":27779:27797  _operatorApprovals */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":27779:27806  _operatorApprovals[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":27779:27816  _operatorApprovals[account][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":27890:28284  function safeTransferFrom(... */\n    tag_10:\n      tag_30\n      tag_50\n      calldatasize\n      0x04\n      tag_51\n      jump\t// in\n    tag_50:\n      tag_52\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_15:\n        /* \"contracts/DTiket_flattened.sol\":26585:26592  uint256 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":26612:26633  account != address(0) */\n      dup4\n      and\n        /* \"contracts/DTiket_flattened.sol\":26604:26680  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      tag_54\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8209:8211   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":26604:26680  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8191:8212   */\n      mstore\n        /* \"#utility.yul\":8248:8250   */\n      0x2a\n        /* \"#utility.yul\":8228:8246   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8221:8251   */\n      mstore\n        /* \"#utility.yul\":8287:8321   */\n      0x455243313135353a2061646472657373207a65726f206973206e6f7420612076\n        /* \"#utility.yul\":8267:8285   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8260:8322   */\n      mstore\n      shl(0xb1, 0x30b634b21037bbb732b9)\n        /* \"#utility.yul\":8338:8356   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8331:8371   */\n      mstore\n        /* \"#utility.yul\":8388:8407   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":26604:26680  require(account != address(0), \"ERC1155: address zero is not a valid owner\") */\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_54:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":26697:26706  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":26697:26710  _balances[id] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":26697:26719  _balances[id][account] */\n      dup7\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":26499:26726  function balanceOf(address account, uint256 id) public view virtual override returns (uint256) {... */\n    tag_53:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":25550:25855  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_21:\n        /* \"contracts/DTiket_flattened.sol\":25652:25656  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":25687:25728  interfaceId == type(IERC1155).interfaceId */\n      dup3\n      and\n      shl(0xe1, 0x6cdb3d13)\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":25687:25796  interfaceId == type(IERC1155).interfaceId ||... */\n      tag_58\n      jumpi\n      pop\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":25744:25796  interfaceId == type(IERC1155MetadataURI).interfaceId */\n      dup3\n      and\n      shl(0xe2, 0x03a24d07)\n      eq\n        /* \"contracts/DTiket_flattened.sol\":25687:25796  interfaceId == type(IERC1155).interfaceId ||... */\n    tag_58:\n        /* \"contracts/DTiket_flattened.sol\":25687:25848  interfaceId == type(IERC1155).interfaceId ||... */\n      dup1\n      tag_53\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":17245:17285  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"contracts/DTiket_flattened.sol\":25812:25848  super.supportsInterface(interfaceId) */\n      tag_53\n        /* \"contracts/DTiket_flattened.sol\":17137:17292  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":26254:26357  function uri(uint256) public view virtual override returns (string memory) {... */\n    tag_27:\n        /* \"contracts/DTiket_flattened.sol\":26314:26327  string memory */\n      0x60\n        /* \"contracts/DTiket_flattened.sol\":26346:26350  _uri */\n      0x02\n        /* \"contracts/DTiket_flattened.sol\":26339:26350  return _uri */\n      dup1\n      sload\n      tag_63\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_65\n      swap1\n      tag_64\n      jump\t// in\n    tag_65:\n      dup1\n      iszero\n      tag_66\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_67\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_66)\n    tag_67:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_68:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_68\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_66:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":26254:26357  function uri(uint256) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":28356:28782  function safeBatchTransferFrom(... */\n    tag_33:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":28581:28601  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":28581:28601  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":28581:28641  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_73\n      jumpi\n      pop\n        /* \"contracts/DTiket_flattened.sol\":28605:28641  isApprovedForAll(from, _msgSender()) */\n      tag_73\n        /* \"contracts/DTiket_flattened.sol\":28622:28626  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":28605:28641  isApprovedForAll(from, _msgSender()) */\n    tag_73:\n        /* \"contracts/DTiket_flattened.sol\":28560:28713  require(... */\n      tag_75\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_75:\n        /* \"contracts/DTiket_flattened.sol\":28723:28775  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      tag_78\n        /* \"contracts/DTiket_flattened.sol\":28746:28750  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28752:28754  to */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28756:28759  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28761:28768  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28770:28774  data */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28723:28745  _safeBatchTransferFrom */\n      tag_79\n        /* \"contracts/DTiket_flattened.sol\":28723:28775  _safeBatchTransferFrom(from, to, ids, amounts, data) */\n      jump\t// in\n    tag_78:\n        /* \"contracts/DTiket_flattened.sol\":28356:28782  function safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":26883:27369  function balanceOfBatch(... */\n    tag_37:\n        /* \"contracts/DTiket_flattened.sol\":27016:27032  uint256[] memory */\n      0x60\n        /* \"contracts/DTiket_flattened.sol\":27071:27074  ids */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":27071:27081  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27052:27060  accounts */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27052:27067  accounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27052:27081  accounts.length == ids.length */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_81\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9420:9422   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9402:9423   */\n      mstore\n        /* \"#utility.yul\":9459:9461   */\n      0x29\n        /* \"#utility.yul\":9439:9457   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9432:9462   */\n      mstore\n        /* \"#utility.yul\":9498:9532   */\n      0x455243313135353a206163636f756e747320616e6420696473206c656e677468\n        /* \"#utility.yul\":9478:9496   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9471:9533   */\n      mstore\n      shl(0xbb, 0x040dad2e6dac2e8c6d)\n        /* \"#utility.yul\":9549:9567   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9542:9581   */\n      mstore\n        /* \"#utility.yul\":9598:9617   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":9218:9623   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":27044:27127  require(accounts.length == ids.length, \"ERC1155: accounts and ids length mismatch\") */\n    tag_81:\n        /* \"contracts/DTiket_flattened.sol\":27138:27168  uint256[] memory batchBalances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":27185:27193  accounts */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27185:27200  accounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27171:27201  new uint256[](accounts.length) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_85\n      jumpi\n      tag_85\n      tag_86\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_87\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_87:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27138:27201  uint256[] memory batchBalances = new uint256[](accounts.length) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27217:27226  uint256 i */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":27212:27332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n    tag_88:\n        /* \"contracts/DTiket_flattened.sol\":27236:27244  accounts */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":27236:27251  accounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27232:27233  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":27232:27251  i < accounts.length */\n      lt\n        /* \"contracts/DTiket_flattened.sol\":27212:27332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":27291:27321  balanceOf(accounts[i], ids[i]) */\n      tag_91\n        /* \"contracts/DTiket_flattened.sol\":27301:27309  accounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":27310:27311  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":27301:27312  accounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_93\n      jumpi\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27314:27317  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":27318:27319  i */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27314:27320  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_96\n      jumpi\n      tag_96\n      tag_94\n      jump\t// in\n    tag_96:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":27291:27300  balanceOf */\n      tag_15\n        /* \"contracts/DTiket_flattened.sol\":27291:27321  balanceOf(accounts[i], ids[i]) */\n      jump\t// in\n    tag_91:\n        /* \"contracts/DTiket_flattened.sol\":27272:27285  batchBalances */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":27286:27287  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":27272:27288  batchBalances[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_98\n      jumpi\n      tag_98\n      tag_94\n      jump\t// in\n    tag_98:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTiket_flattened.sol\":27272:27321  batchBalances[i] = balanceOf(accounts[i], ids[i]) */\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":27253:27256  ++i */\n      tag_99\n      dup2\n      tag_100\n      jump\t// in\n    tag_99:\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27212:27332  for (uint256 i = 0; i < accounts.length; ++i) {... */\n      jump(tag_88)\n    tag_89:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":27349:27362  batchBalances */\n      swap4\n        /* \"contracts/DTiket_flattened.sol\":26883:27369  function balanceOfBatch(... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":27437:27590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_43:\n        /* \"contracts/DTiket_flattened.sol\":27531:27583  _setApprovalForAll(_msgSender(), operator, approved) */\n      tag_102\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27564:27572  operator */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27574:27582  approved */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":27531:27549  _setApprovalForAll */\n      tag_104\n        /* \"contracts/DTiket_flattened.sol\":27531:27583  _setApprovalForAll(_msgSender(), operator, approved) */\n      jump\t// in\n    tag_102:\n        /* \"contracts/DTiket_flattened.sol\":27437:27590  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":27890:28284  function safeTransferFrom(... */\n    tag_52:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":28090:28110  from == _msgSender() */\n      dup6\n      and\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":28090:28110  from == _msgSender() */\n      eq\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":28090:28150  from == _msgSender() || isApprovedForAll(from, _msgSender()) */\n      tag_109\n      jumpi\n      pop\n        /* \"contracts/DTiket_flattened.sol\":28114:28150  isApprovedForAll(from, _msgSender()) */\n      tag_109\n        /* \"contracts/DTiket_flattened.sol\":28131:28135  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":27657:27823  function isApprovedForAll(address account, address operator) public view virtual override returns (bool) {... */\n      tag_45\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":28114:28150  isApprovedForAll(from, _msgSender()) */\n    tag_109:\n        /* \"contracts/DTiket_flattened.sol\":28069:28222  require(... */\n      tag_111\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_77\n      jump\t// in\n    tag_111:\n        /* \"contracts/DTiket_flattened.sol\":28232:28277  _safeTransferFrom(from, to, id, amount, data) */\n      tag_78\n        /* \"contracts/DTiket_flattened.sol\":28250:28254  from */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28256:28258  to */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28260:28262  id */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28264:28270  amount */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28272:28276  data */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":28232:28249  _safeTransferFrom */\n      tag_114\n        /* \"contracts/DTiket_flattened.sol\":28232:28277  _safeTransferFrom(from, to, id, amount, data) */\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n    tag_79:\n        /* \"contracts/DTiket_flattened.sol\":30745:30752  amounts */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":30745:30759  amounts.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":30731:30734  ids */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":30731:30741  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":30731:30759  ids.length == amounts.length */\n      eq\n        /* \"contracts/DTiket_flattened.sol\":30723:30804  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_118\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10234:10236   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":30723:30804  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10216:10237   */\n      mstore\n        /* \"#utility.yul\":10273:10275   */\n      0x28\n        /* \"#utility.yul\":10253:10271   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10246:10276   */\n      mstore\n        /* \"#utility.yul\":10312:10346   */\n      0x455243313135353a2069647320616e6420616d6f756e7473206c656e67746820\n        /* \"#utility.yul\":10292:10310   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10285:10347   */\n      mstore\n      shl(0xc3, 0x0dad2e6dac2e8c6d)\n        /* \"#utility.yul\":10363:10381   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10356:10394   */\n      mstore\n        /* \"#utility.yul\":10411:10430   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":30723:30804  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n      tag_55\n        /* \"#utility.yul\":10032:10436   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":30723:30804  require(ids.length == amounts.length, \"ERC1155: ids and amounts length mismatch\") */\n    tag_118:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":30822:30838  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":30814:30880  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_121\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_123\n      jump\t// in\n    tag_121:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":30891:30907  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31004:31415  for (uint256 i = 0; i < ids.length; ++i) {... */\n    tag_127:\n        /* \"contracts/DTiket_flattened.sol\":31028:31031  ids */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":31028:31038  ids.length */\n      mload\n        /* \"contracts/DTiket_flattened.sol\":31024:31025  i */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":31024:31038  i < ids.length */\n      lt\n        /* \"contracts/DTiket_flattened.sol\":31004:31415  for (uint256 i = 0; i < ids.length; ++i) {... */\n      iszero\n      tag_128\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":31059:31069  uint256 id */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31072:31075  ids */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":31076:31077  i */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":31072:31078  ids[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_131\n      jumpi\n      tag_131\n      tag_94\n      jump\t// in\n    tag_131:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":31059:31078  uint256 id = ids[i] */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31092:31106  uint256 amount */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31109:31116  amounts */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":31117:31118  i */\n      dup4\n        /* \"contracts/DTiket_flattened.sol\":31109:31119  amounts[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_133\n      jumpi\n      tag_133\n      tag_94\n      jump\t// in\n    tag_133:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      dup2\n      add\n      mload\n        /* \"contracts/DTiket_flattened.sol\":31134:31153  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31156:31169  _balances[id] */\n      dup5\n      dup2\n      mstore\n      dup1\n      dup4\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31156:31175  _balances[id][from] */\n      dup15\n      and\n      dup4\n      mstore\n      swap1\n      swap4\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":31109:31119  amounts[i] */\n      swap1\n      swap2\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31197:31218  fromBalance >= amount */\n      dup2\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":31189:31265  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_136\n      jump\t// in\n    tag_134:\n        /* \"contracts/DTiket_flattened.sol\":31307:31316  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":31307:31320  _balances[id] */\n      dup4\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31307:31326  _balances[id][from] */\n      dup15\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":31329:31349  fromBalance - amount */\n      dup6\n      dup6\n      sub\n        /* \"contracts/DTiket_flattened.sol\":31307:31349  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":31377:31394  _balances[id][to] */\n      swap1\n      dup12\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":31377:31404  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTiket_flattened.sol\":31329:31349  fromBalance - amount */\n      dup5\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":31307:31316  _balances */\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":31377:31404  _balances[id][to] += amount */\n      tag_137\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":31329:31349  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":31377:31404  _balances[id][to] += amount */\n      tag_138\n      jump\t// in\n    tag_137:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31045:31415  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31040:31043  ++i */\n      dup1\n      tag_139\n      swap1\n      tag_100\n      jump\t// in\n    tag_139:\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31004:31415  for (uint256 i = 0; i < ids.length; ++i) {... */\n      jump(tag_127)\n    tag_128:\n      pop\n        /* \"contracts/DTiket_flattened.sol\":31460:31462  to */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":31454:31458  from */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      and\n        /* \"contracts/DTiket_flattened.sol\":31444:31452  operator */\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      and\n      0x4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb\n        /* \"contracts/DTiket_flattened.sol\":31464:31467  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31469:31476  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31430:31477  TransferBatch(operator, from, to, ids, amounts) */\n      mload(0x40)\n      tag_140\n      swap3\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":31558:31633  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      tag_144\n        /* \"contracts/DTiket_flattened.sol\":31594:31602  operator */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":31604:31608  from */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31610:31612  to */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31614:31617  ids */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31619:31626  amounts */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31628:31632  data */\n      dup8\n        /* \"contracts/DTiket_flattened.sol\":31558:31593  _doSafeBatchTransferAcceptanceCheck */\n      tag_145\n        /* \"contracts/DTiket_flattened.sol\":31558:31633  _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, amounts, data) */\n      jump\t// in\n    tag_144:\n        /* \"contracts/DTiket_flattened.sol\":30713:31640  {... */\n      pop\n        /* \"contracts/DTiket_flattened.sol\":30525:31640  function _safeBatchTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":37104:37397  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n    tag_104:\n        /* \"contracts/DTiket_flattened.sol\":37224:37232  operator */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":37215:37232  owner != operator */\n      and\n        /* \"contracts/DTiket_flattened.sol\":37215:37220  owner */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":37215:37232  owner != operator */\n      and\n      sub\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_147\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12060:12062   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12042:12063   */\n      mstore\n        /* \"#utility.yul\":12099:12101   */\n      0x29\n        /* \"#utility.yul\":12079:12097   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12072:12102   */\n      mstore\n        /* \"#utility.yul\":12138:12172   */\n      0x455243313135353a2073657474696e6720617070726f76616c20737461747573\n        /* \"#utility.yul\":12118:12136   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12111:12173   */\n      mstore\n      shl(0xb9, 0x103337b91039b2b633)\n        /* \"#utility.yul\":12189:12207   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12182:12221   */\n      mstore\n        /* \"#utility.yul\":12238:12257   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n      tag_55\n        /* \"#utility.yul\":11858:12263   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":37207:37278  require(owner != operator, \"ERC1155: setting approval status for self\") */\n    tag_147:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":37288:37313  _operatorApprovals[owner] */\n      dup4\n      dup2\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":37288:37306  _operatorApprovals */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":37288:37313  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":37288:37323  _operatorApprovals[owner][operator] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":37288:37334  _operatorApprovals[owner][operator] = approved */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":37349:37390  ApprovalForAll(owner, operator, approved) */\n      swap2\n      mload\n        /* \"#utility.yul\":1159:1200   */\n      swap2\n      dup3\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":37349:37390  ApprovalForAll(owner, operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":1132:1150   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":37349:37390  ApprovalForAll(owner, operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/DTiket_flattened.sol\":37104:37397  function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":29232:30179  function _safeTransferFrom(... */\n    tag_114:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29413:29429  to != address(0) */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":29405:29471  require(to != address(0), \"ERC1155: transfer to the zero address\") */\n      tag_152\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_123\n      jump\t// in\n    tag_152:\n        /* \"contracts/DTiket_flattened.sol\":741:751  msg.sender */\n      caller\n        /* \"contracts/DTiket_flattened.sol\":29482:29498  address operator */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29546:29567  _asSingletonArray(id) */\n      tag_155\n        /* \"contracts/DTiket_flattened.sol\":29564:29566  id */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":29546:29563  _asSingletonArray */\n      tag_156\n        /* \"contracts/DTiket_flattened.sol\":29546:29567  _asSingletonArray(id) */\n      jump\t// in\n    tag_155:\n        /* \"contracts/DTiket_flattened.sol\":29523:29567  uint256[] memory ids = _asSingletonArray(id) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29577:29601  uint256[] memory amounts */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29604:29629  _asSingletonArray(amount) */\n      tag_157\n        /* \"contracts/DTiket_flattened.sol\":29622:29628  amount */\n      dup6\n        /* \"contracts/DTiket_flattened.sol\":29604:29621  _asSingletonArray */\n      tag_156\n        /* \"contracts/DTiket_flattened.sol\":29604:29629  _asSingletonArray(amount) */\n      jump\t// in\n    tag_157:\n        /* \"contracts/DTiket_flattened.sol\":29577:29629  uint256[] memory amounts = _asSingletonArray(amount) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29711:29730  uint256 fromBalance */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29733:29746  _balances[id] */\n      dup7\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29733:29752  _balances[id][from] */\n      dup13\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/DTiket_flattened.sol\":29770:29791  fromBalance >= amount */\n      dup6\n      dup2\n      lt\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":29762:29838  require(fromBalance >= amount, \"ERC1155: insufficient balance for transfer\") */\n      tag_159\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_136\n      jump\t// in\n    tag_159:\n        /* \"contracts/DTiket_flattened.sol\":29872:29881  _balances */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":29872:29885  _balances[id] */\n      dup8\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29872:29891  _balances[id][from] */\n      dup14\n      dup2\n      and\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":29894:29914  fromBalance - amount */\n      dup10\n      dup6\n      sub\n        /* \"contracts/DTiket_flattened.sol\":29872:29914  _balances[id][from] = fromBalance - amount */\n      swap1\n      sstore\n        /* \"contracts/DTiket_flattened.sol\":29934:29951  _balances[id][to] */\n      swap1\n      dup11\n      and\n      dup3\n      mstore\n      dup2\n      keccak256\n        /* \"contracts/DTiket_flattened.sol\":29934:29961  _balances[id][to] += amount */\n      dup1\n      sload\n        /* \"contracts/DTiket_flattened.sol\":29894:29914  fromBalance - amount */\n      dup9\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":29872:29881  _balances */\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":29934:29961  _balances[id][to] += amount */\n      tag_161\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":29894:29914  fromBalance - amount */\n      dup5\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":29934:29961  _balances[id][to] += amount */\n      tag_138\n      jump\t// in\n    tag_161:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29977:30023  TransferSingle(operator, from, to, id, amount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":12442:12467   */\n      dup9\n      dup2\n      mstore\n        /* \"#utility.yul\":12498:12500   */\n      0x20\n        /* \"#utility.yul\":12483:12501   */\n      dup2\n      add\n        /* \"#utility.yul\":12476:12510   */\n      dup9\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":29977:30023  TransferSingle(operator, from, to, id, amount) */\n      dup1\n      dup12\n      and\n      swap3\n      dup13\n      dup3\n      and\n      swap3\n      swap2\n      dup9\n      and\n      swap2\n      0xc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62\n      swap2\n        /* \"#utility.yul\":12415:12433   */\n      add\n        /* \"contracts/DTiket_flattened.sol\":29977:30023  TransferSingle(operator, from, to, id, amount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/DTiket_flattened.sol\":30104:30172  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      tag_165\n        /* \"contracts/DTiket_flattened.sol\":30135:30143  operator */\n      dup5\n        /* \"contracts/DTiket_flattened.sol\":30145:30149  from */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30151:30153  to */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30155:30157  id */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30159:30165  amount */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30167:30171  data */\n      dup11\n        /* \"contracts/DTiket_flattened.sol\":30104:30134  _doSafeTransferAcceptanceCheck */\n      tag_166\n        /* \"contracts/DTiket_flattened.sol\":30104:30172  _doSafeTransferAcceptanceCheck(operator, from, to, id, amount, data) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/DTiket_flattened.sol\":29395:30179  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":29232:30179  function _safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":40430:41222  function _doSafeBatchTransferAcceptanceCheck(... */\n    tag_145:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":40662:40675  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":7746:7765  account.code.length */\n      extcodesize\n        /* \"contracts/DTiket_flattened.sol\":7746:7769  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":40658:41216  if (to.isContract()) {... */\n      tag_144\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":40697:40776  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      mload(0x40)\n      shl(0xe0, 0xbc197c81)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":40697:40740  IERC1155Receiver(to).onERC1155BatchReceived */\n      dup6\n      and\n      swap1\n      0xbc197c81\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40697:40776  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      tag_173\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40741:40749  operator */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40751:40755  from */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40757:40760  ids */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40762:40769  amounts */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40771:40775  data */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40697:40776  IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) */\n      0x04\n      add\n      tag_174\n      jump\t// in\n    tag_173:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_175\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_176\n      swap2\n      dup2\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x01\n    tag_175:\n        /* \"contracts/DTiket_flattened.sol\":40693:41206  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n      tag_178\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_182:\n      dup1\n      0x08c379a0\n      sub\n      tag_181\n      jumpi\n      pop\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      dup1\n      tag_186\n      jumpi\n      pop\n      jump(tag_180)\n    tag_186:\n        /* \"contracts/DTiket_flattened.sol\":41082:41088  reason */\n      dup1\n        /* \"contracts/DTiket_flattened.sol\":41075:41089  revert(reason) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_29\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":40693:41206  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_181:\n      pop\n    tag_180:\n        /* \"contracts/DTiket_flattened.sol\":41129:41191  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14669:14671   */\n      0x20\n        /* \"contracts/DTiket_flattened.sol\":41129:41191  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14651:14672   */\n      mstore\n        /* \"#utility.yul\":14708:14710   */\n      0x34\n        /* \"#utility.yul\":14688:14706   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14681:14711   */\n      mstore\n        /* \"#utility.yul\":14747:14781   */\n      0x455243313135353a207472616e7366657220746f206e6f6e2d45524331313535\n        /* \"#utility.yul\":14727:14745   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14720:14782   */\n      mstore\n      shl(0x61, 0x2932b1b2b4bb32b91034b6b83632b6b2b73a32b9)\n        /* \"#utility.yul\":14798:14816   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":14791:14841   */\n      mstore\n        /* \"#utility.yul\":14858:14877   */\n      0x84\n      add\n        /* \"contracts/DTiket_flattened.sol\":41129:41191  revert(\"ERC1155: transfer to non-ERC1155Receiver implementer\") */\n      tag_55\n        /* \"#utility.yul\":14467:14883   */\n      jump\n        /* \"contracts/DTiket_flattened.sol\":40693:41206  try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, amounts, data) returns (... */\n    tag_178:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":40855:40915  response != IERC1155Receiver.onERC1155BatchReceived.selector */\n      dup2\n      and\n      shl(0xe0, 0xbc197c81)\n      eq\n        /* \"contracts/DTiket_flattened.sol\":40851:41008  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n      tag_191\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":40939:40989  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_193\n      jump\t// in\n        /* \"contracts/DTiket_flattened.sol\":40851:41008  if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {... */\n    tag_191:\n        /* \"contracts/DTiket_flattened.sol\":40777:41022  returns (... */\n      pop\n        /* \"contracts/DTiket_flattened.sol\":40430:41222  function _doSafeBatchTransferAcceptanceCheck(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":41228:41421  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n    tag_156:\n        /* \"contracts/DTiket_flattened.sol\":41347:41363  new uint256[](1) */\n      0x40\n      dup1\n      mload\n        /* \"contracts/DTiket_flattened.sol\":41361:41362  1 */\n      0x01\n        /* \"contracts/DTiket_flattened.sol\":41347:41363  new uint256[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup4\n      add\n      swap1\n      swap3\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":41294:41310  uint256[] memory */\n      0x60\n      swap2\n        /* \"contracts/DTiket_flattened.sol\":41322:41344  uint256[] memory array */\n      0x00\n      swap2\n        /* \"contracts/DTiket_flattened.sol\":41347:41363  new uint256[](1) */\n      swap1\n      0x20\n      dup1\n      dup4\n      add\n      swap1\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n      pop\n        /* \"contracts/DTiket_flattened.sol\":41322:41363  uint256[] memory array = new uint256[](1) */\n      swap1\n      pop\n        /* \"contracts/DTiket_flattened.sol\":41384:41391  element */\n      dup3\n        /* \"contracts/DTiket_flattened.sol\":41373:41378  array */\n      dup2\n        /* \"contracts/DTiket_flattened.sol\":41379:41380  0 */\n      0x00\n        /* \"contracts/DTiket_flattened.sol\":41373:41381  array[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_199\n      jumpi\n      tag_199\n      tag_94\n      jump\t// in\n    tag_199:\n      0x20\n      swap1\n      dup2\n      mul\n      swap2\n      swap1\n      swap2\n      add\n      add\n        /* \"contracts/DTiket_flattened.sol\":41373:41391  array[0] = element */\n      mstore\n        /* \"contracts/DTiket_flattened.sol\":41409:41414  array */\n      swap3\n        /* \"contracts/DTiket_flattened.sol\":41228:41421  function _asSingletonArray(uint256 element) private pure returns (uint256[] memory) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/DTiket_flattened.sol\":39699:40424  function _doSafeTransferAcceptanceCheck(... */\n    tag_166:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":39906:39919  to.isContract */\n      dup5\n      and\n        /* \"contracts/DTiket_flattened.sol\":7746:7765  account.code.length */\n      extcodesize\n        /* \"contracts/DTiket_flattened.sol\":7746:7769  account.code.length > 0 */\n      iszero\n        /* \"contracts/DTiket_flattened.sol\":39902:40418  if (to.isContract()) {... */\n      tag_144\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":39941:40013  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      mload(0x40)\n      shl(0xe0, 0xf23a6e61)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/DTiket_flattened.sol\":39941:39979  IERC1155Receiver(to).onERC1155Received */\n      dup6\n      and\n      swap1\n      0xf23a6e61\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39941:40013  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      tag_203\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39980:39988  operator */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39990:39994  from */\n      dup10\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39996:39998  id */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40000:40006  amount */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":40008:40012  data */\n      dup9\n      swap1\n        /* \"contracts/DTiket_flattened.sol\":39941:40013  IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) */\n      0x04\n      add\n      tag_204\n      jump\t// in\n    tag_203:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_205\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_206\n      swap2\n      dup2\n      add\n      swap1\n      tag_177\n      jump\t// in\n    tag_206:\n      0x01\n    tag_205:\n        /* \"contracts/DTiket_flattened.sol\":39937:40408  try IERC1155Receiver(to).onERC1155Received(operator, from, id, amount, data) returns (bytes4 response) {... */\n      tag_207\n      jumpi\n      tag_182\n      tag_183\n      jump\t// in\n    tag_207:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"contracts/DTiket_flattened.sol\":40062:40117  response != IERC1155Receiver.onERC1155Received.selector */\n      dup2\n      and\n      shl(0xe0, 0xf23a6e61)\n      eq\n        /* \"contracts/DTiket_flattened.sol\":40058:40210  if (response != IERC1155Receiver.onERC1155Received.selector) {... */\n      tag_191\n      jumpi\n        /* \"contracts/DTiket_flattened.sol\":40141:40191  revert(\"ERC1155: ERC1155Receiver rejected tokens\") */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap1\n      tag_193\n      jump\t// in\n        /* \"#utility.yul\":14:187   */\n    tag_220:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_231\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      dup1\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_231:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:446   */\n    tag_14:\n        /* \"#utility.yul\":260:266   */\n      0x00\n        /* \"#utility.yul\":268:274   */\n      dup1\n        /* \"#utility.yul\":321:323   */\n      0x40\n        /* \"#utility.yul\":309:318   */\n      dup4\n        /* \"#utility.yul\":300:307   */\n      dup6\n        /* \"#utility.yul\":296:319   */\n      sub\n        /* \"#utility.yul\":292:324   */\n      slt\n        /* \"#utility.yul\":289:341   */\n      iszero\n      tag_233\n      jumpi\n        /* \"#utility.yul\":337:338   */\n      0x00\n        /* \"#utility.yul\":334:335   */\n      dup1\n        /* \"#utility.yul\":327:339   */\n      revert\n        /* \"#utility.yul\":289:341   */\n    tag_233:\n        /* \"#utility.yul\":360:389   */\n      tag_234\n        /* \"#utility.yul\":379:388   */\n      dup4\n        /* \"#utility.yul\":360:389   */\n      tag_220\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":350:389   */\n      swap5\n        /* \"#utility.yul\":436:438   */\n      0x20\n        /* \"#utility.yul\":421:439   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":408:440   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":192:446   */\n      jump\t// out\n        /* \"#utility.yul\":633:764   */\n    tag_221:\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":707:739   */\n      dup2\n      and\n        /* \"#utility.yul\":697:740   */\n      dup2\n      eq\n        /* \"#utility.yul\":687:758   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":754:755   */\n      0x00\n        /* \"#utility.yul\":751:752   */\n      dup1\n        /* \"#utility.yul\":744:756   */\n      revert\n        /* \"#utility.yul\":687:758   */\n    tag_237:\n        /* \"#utility.yul\":633:764   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":769:1014   */\n    tag_20:\n        /* \"#utility.yul\":827:833   */\n      0x00\n        /* \"#utility.yul\":880:882   */\n      0x20\n        /* \"#utility.yul\":868:877   */\n      dup3\n        /* \"#utility.yul\":859:866   */\n      dup5\n        /* \"#utility.yul\":855:878   */\n      sub\n        /* \"#utility.yul\":851:883   */\n      slt\n        /* \"#utility.yul\":848:900   */\n      iszero\n      tag_239\n      jumpi\n        /* \"#utility.yul\":896:897   */\n      0x00\n        /* \"#utility.yul\":893:894   */\n      dup1\n        /* \"#utility.yul\":886:898   */\n      revert\n        /* \"#utility.yul\":848:900   */\n    tag_239:\n        /* \"#utility.yul\":935:944   */\n      dup2\n        /* \"#utility.yul\":922:945   */\n      calldataload\n        /* \"#utility.yul\":954:984   */\n      tag_240\n        /* \"#utility.yul\":978:983   */\n      dup2\n        /* \"#utility.yul\":954:984   */\n      tag_221\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":1003:1008   */\n      swap4\n        /* \"#utility.yul\":769:1014   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1211:1391   */\n    tag_26:\n        /* \"#utility.yul\":1270:1276   */\n      0x00\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1311:1320   */\n      dup3\n        /* \"#utility.yul\":1302:1309   */\n      dup5\n        /* \"#utility.yul\":1298:1321   */\n      sub\n        /* \"#utility.yul\":1294:1326   */\n      slt\n        /* \"#utility.yul\":1291:1343   */\n      iszero\n      tag_243\n      jumpi\n        /* \"#utility.yul\":1339:1340   */\n      0x00\n        /* \"#utility.yul\":1336:1337   */\n      dup1\n        /* \"#utility.yul\":1329:1341   */\n      revert\n        /* \"#utility.yul\":1291:1343   */\n    tag_243:\n      pop\n        /* \"#utility.yul\":1362:1385   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1211:1391   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1396:1819   */\n    tag_222:\n        /* \"#utility.yul\":1438:1441   */\n      0x00\n        /* \"#utility.yul\":1476:1481   */\n      dup2\n        /* \"#utility.yul\":1470:1482   */\n      mload\n        /* \"#utility.yul\":1503:1509   */\n      dup1\n        /* \"#utility.yul\":1498:1501   */\n      dup5\n        /* \"#utility.yul\":1491:1510   */\n      mstore\n        /* \"#utility.yul\":1528:1529   */\n      0x00\n        /* \"#utility.yul\":1538:1700   */\n    tag_245:\n        /* \"#utility.yul\":1552:1558   */\n      dup2\n        /* \"#utility.yul\":1549:1550   */\n      dup2\n        /* \"#utility.yul\":1546:1559   */\n      lt\n        /* \"#utility.yul\":1538:1700   */\n      iszero\n      tag_247\n      jumpi\n        /* \"#utility.yul\":1614:1618   */\n      0x20\n        /* \"#utility.yul\":1670:1683   */\n      dup2\n      dup6\n      add\n        /* \"#utility.yul\":1666:1688   */\n      dup2\n      add\n        /* \"#utility.yul\":1660:1689   */\n      mload\n        /* \"#utility.yul\":1642:1653   */\n      dup7\n      dup4\n      add\n        /* \"#utility.yul\":1638:1658   */\n      dup3\n      add\n        /* \"#utility.yul\":1631:1690   */\n      mstore\n        /* \"#utility.yul\":1567:1579   */\n      add\n        /* \"#utility.yul\":1538:1700   */\n      jump(tag_245)\n    tag_247:\n        /* \"#utility.yul\":1542:1545   */\n      pop\n        /* \"#utility.yul\":1745:1746   */\n      0x00\n        /* \"#utility.yul\":1738:1742   */\n      0x20\n        /* \"#utility.yul\":1729:1735   */\n      dup3\n        /* \"#utility.yul\":1724:1727   */\n      dup7\n        /* \"#utility.yul\":1720:1736   */\n      add\n        /* \"#utility.yul\":1716:1743   */\n      add\n        /* \"#utility.yul\":1709:1747   */\n      mstore\n        /* \"#utility.yul\":1808:1812   */\n      0x20\n        /* \"#utility.yul\":1801:1803   */\n      0x1f\n        /* \"#utility.yul\":1797:1804   */\n      not\n        /* \"#utility.yul\":1792:1794   */\n      0x1f\n        /* \"#utility.yul\":1784:1790   */\n      dup4\n        /* \"#utility.yul\":1780:1795   */\n      add\n        /* \"#utility.yul\":1776:1805   */\n      and\n        /* \"#utility.yul\":1771:1774   */\n      dup6\n        /* \"#utility.yul\":1767:1806   */\n      add\n        /* \"#utility.yul\":1763:1813   */\n      add\n        /* \"#utility.yul\":1756:1813   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1396:1819   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1824:2044   */\n    tag_29:\n        /* \"#utility.yul\":1973:1975   */\n      0x20\n        /* \"#utility.yul\":1962:1971   */\n      dup2\n        /* \"#utility.yul\":1955:1976   */\n      mstore\n        /* \"#utility.yul\":1936:1940   */\n      0x00\n        /* \"#utility.yul\":1993:2038   */\n      tag_240\n        /* \"#utility.yul\":2034:2036   */\n      0x20\n        /* \"#utility.yul\":2023:2032   */\n      dup4\n        /* \"#utility.yul\":2019:2037   */\n      add\n        /* \"#utility.yul\":2011:2017   */\n      dup5\n        /* \"#utility.yul\":1993:2038   */\n      tag_222\n      jump\t// in\n        /* \"#utility.yul\":2049:2176   */\n    tag_86:\n        /* \"#utility.yul\":2110:2120   */\n      0x4e487b71\n        /* \"#utility.yul\":2105:2108   */\n      0xe0\n        /* \"#utility.yul\":2101:2121   */\n      shl\n        /* \"#utility.yul\":2098:2099   */\n      0x00\n        /* \"#utility.yul\":2091:2122   */\n      mstore\n        /* \"#utility.yul\":2141:2145   */\n      0x41\n        /* \"#utility.yul\":2138:2139   */\n      0x04\n        /* \"#utility.yul\":2131:2146   */\n      mstore\n        /* \"#utility.yul\":2165:2169   */\n      0x24\n        /* \"#utility.yul\":2162:2163   */\n      0x00\n        /* \"#utility.yul\":2155:2170   */\n      revert\n        /* \"#utility.yul\":2181:2430   */\n    tag_223:\n        /* \"#utility.yul\":2291:2293   */\n      0x1f\n        /* \"#utility.yul\":2272:2285   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2268:2295   */\n      and\n        /* \"#utility.yul\":2256:2296   */\n      dup2\n      add\n        /* \"#utility.yul\":2326:2344   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2311:2345   */\n      dup2\n      gt\n        /* \"#utility.yul\":2347:2369   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":2308:2370   */\n      or\n        /* \"#utility.yul\":2305:2393   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":2373:2391   */\n      tag_253\n      tag_86\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2409:2411   */\n      0x40\n        /* \"#utility.yul\":2402:2424   */\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":2181:2430   */\n      jump\t// out\n        /* \"#utility.yul\":2435:2618   */\n    tag_224:\n        /* \"#utility.yul\":2495:2499   */\n      0x00\n        /* \"#utility.yul\":2528:2546   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2520:2526   */\n      dup3\n        /* \"#utility.yul\":2517:2547   */\n      gt\n        /* \"#utility.yul\":2514:2570   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":2550:2568   */\n      tag_256\n      tag_86\n      jump\t// in\n    tag_256:\n      pop\n        /* \"#utility.yul\":2595:2596   */\n      0x05\n        /* \"#utility.yul\":2591:2605   */\n      shl\n        /* \"#utility.yul\":2607:2611   */\n      0x20\n        /* \"#utility.yul\":2587:2612   */\n      add\n      swap1\n        /* \"#utility.yul\":2435:2618   */\n      jump\t// out\n        /* \"#utility.yul\":2623:3347   */\n    tag_225:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2730:2733   */\n      dup3\n        /* \"#utility.yul\":2723:2727   */\n      0x1f\n        /* \"#utility.yul\":2715:2721   */\n      dup4\n        /* \"#utility.yul\":2711:2728   */\n      add\n        /* \"#utility.yul\":2707:2734   */\n      slt\n        /* \"#utility.yul\":2697:2752   */\n      tag_258\n      jumpi\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2745:2746   */\n      dup1\n        /* \"#utility.yul\":2738:2750   */\n      revert\n        /* \"#utility.yul\":2697:2752   */\n    tag_258:\n        /* \"#utility.yul\":2784:2790   */\n      dup2\n        /* \"#utility.yul\":2771:2791   */\n      calldataload\n        /* \"#utility.yul\":2810:2814   */\n      0x20\n        /* \"#utility.yul\":2833:2876   */\n      tag_259\n        /* \"#utility.yul\":2873:2875   */\n      dup3\n        /* \"#utility.yul\":2833:2876   */\n      tag_224\n      jump\t// in\n    tag_259:\n        /* \"#utility.yul\":2905:2907   */\n      0x40\n        /* \"#utility.yul\":2899:2908   */\n      mload\n        /* \"#utility.yul\":2917:2948   */\n      tag_260\n        /* \"#utility.yul\":2945:2947   */\n      dup3\n        /* \"#utility.yul\":2937:2943   */\n      dup3\n        /* \"#utility.yul\":2917:2948   */\n      tag_223\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":2983:3001   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":3075:3076   */\n      0x05\n        /* \"#utility.yul\":3071:3081   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":3059:3082   */\n      dup6\n      add\n        /* \"#utility.yul\":3055:3087   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":3017:3032   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":3099:3114   */\n      dup7\n      dup5\n      gt\n        /* \"#utility.yul\":3096:3131   */\n      iszero\n      tag_261\n      jumpi\n        /* \"#utility.yul\":3127:3128   */\n      0x00\n        /* \"#utility.yul\":3124:3125   */\n      dup1\n        /* \"#utility.yul\":3117:3129   */\n      revert\n        /* \"#utility.yul\":3096:3131   */\n    tag_261:\n        /* \"#utility.yul\":3163:3165   */\n      dup3\n        /* \"#utility.yul\":3155:3161   */\n      dup7\n        /* \"#utility.yul\":3151:3166   */\n      add\n        /* \"#utility.yul\":3175:3317   */\n    tag_262:\n        /* \"#utility.yul\":3191:3197   */\n      dup5\n        /* \"#utility.yul\":3186:3189   */\n      dup2\n        /* \"#utility.yul\":3183:3198   */\n      lt\n        /* \"#utility.yul\":3175:3317   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3257:3274   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":3245:3275   */\n      dup4\n      mstore\n        /* \"#utility.yul\":3295:3307   */\n      swap2\n      dup4\n      add\n      swap2\n        /* \"#utility.yul\":3208:3220   */\n      dup4\n      add\n        /* \"#utility.yul\":3175:3317   */\n      jump(tag_262)\n    tag_264:\n      pop\n        /* \"#utility.yul\":3335:3341   */\n      swap7\n        /* \"#utility.yul\":2623:3347   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3352:3907   */\n    tag_226:\n        /* \"#utility.yul\":3394:3399   */\n      0x00\n        /* \"#utility.yul\":3447:3450   */\n      dup3\n        /* \"#utility.yul\":3440:3444   */\n      0x1f\n        /* \"#utility.yul\":3432:3438   */\n      dup4\n        /* \"#utility.yul\":3428:3445   */\n      add\n        /* \"#utility.yul\":3424:3451   */\n      slt\n        /* \"#utility.yul\":3414:3469   */\n      tag_266\n      jumpi\n        /* \"#utility.yul\":3465:3466   */\n      0x00\n        /* \"#utility.yul\":3462:3463   */\n      dup1\n        /* \"#utility.yul\":3455:3467   */\n      revert\n        /* \"#utility.yul\":3414:3469   */\n    tag_266:\n        /* \"#utility.yul\":3501:3507   */\n      dup2\n        /* \"#utility.yul\":3488:3508   */\n      calldataload\n        /* \"#utility.yul\":3527:3545   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3523:3525   */\n      dup2\n        /* \"#utility.yul\":3520:3546   */\n      gt\n        /* \"#utility.yul\":3517:3569   */\n      iszero\n      tag_268\n      jumpi\n        /* \"#utility.yul\":3549:3567   */\n      tag_268\n      tag_86\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":3598:3600   */\n      0x40\n        /* \"#utility.yul\":3592:3601   */\n      mload\n        /* \"#utility.yul\":3610:3677   */\n      tag_269\n        /* \"#utility.yul\":3665:3667   */\n      0x1f\n        /* \"#utility.yul\":3646:3659   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":3642:3669   */\n      and\n        /* \"#utility.yul\":3671:3675   */\n      0x20\n        /* \"#utility.yul\":3638:3676   */\n      add\n        /* \"#utility.yul\":3592:3601   */\n      dup3\n        /* \"#utility.yul\":3610:3677   */\n      tag_223\n      jump\t// in\n    tag_269:\n        /* \"#utility.yul\":3701:3703   */\n      dup2\n        /* \"#utility.yul\":3693:3699   */\n      dup2\n        /* \"#utility.yul\":3686:3704   */\n      mstore\n        /* \"#utility.yul\":3747:3750   */\n      dup5\n        /* \"#utility.yul\":3740:3744   */\n      0x20\n        /* \"#utility.yul\":3735:3737   */\n      dup4\n        /* \"#utility.yul\":3727:3733   */\n      dup7\n        /* \"#utility.yul\":3723:3738   */\n      add\n        /* \"#utility.yul\":3719:3745   */\n      add\n        /* \"#utility.yul\":3716:3751   */\n      gt\n        /* \"#utility.yul\":3713:3768   */\n      iszero\n      tag_270\n      jumpi\n        /* \"#utility.yul\":3764:3765   */\n      0x00\n        /* \"#utility.yul\":3761:3762   */\n      dup1\n        /* \"#utility.yul\":3754:3766   */\n      revert\n        /* \"#utility.yul\":3713:3768   */\n    tag_270:\n        /* \"#utility.yul\":3828:3830   */\n      dup2\n        /* \"#utility.yul\":3821:3825   */\n      0x20\n        /* \"#utility.yul\":3813:3819   */\n      dup6\n        /* \"#utility.yul\":3809:3826   */\n      add\n        /* \"#utility.yul\":3802:3806   */\n      0x20\n        /* \"#utility.yul\":3794:3800   */\n      dup4\n        /* \"#utility.yul\":3790:3807   */\n      add\n        /* \"#utility.yul\":3777:3831   */\n      calldatacopy\n        /* \"#utility.yul\":3875:3876   */\n      0x00\n        /* \"#utility.yul\":3851:3866   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":3868:3872   */\n      0x20\n        /* \"#utility.yul\":3847:3873   */\n      add\n        /* \"#utility.yul\":3840:3877   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":3855:3861   */\n      swap4\n        /* \"#utility.yul\":3352:3907   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3912:4855   */\n    tag_32:\n        /* \"#utility.yul\":4066:4072   */\n      0x00\n        /* \"#utility.yul\":4074:4080   */\n      dup1\n        /* \"#utility.yul\":4082:4088   */\n      0x00\n        /* \"#utility.yul\":4090:4096   */\n      dup1\n        /* \"#utility.yul\":4098:4104   */\n      0x00\n        /* \"#utility.yul\":4151:4154   */\n      0xa0\n        /* \"#utility.yul\":4139:4148   */\n      dup7\n        /* \"#utility.yul\":4130:4137   */\n      dup9\n        /* \"#utility.yul\":4126:4149   */\n      sub\n        /* \"#utility.yul\":4122:4155   */\n      slt\n        /* \"#utility.yul\":4119:4172   */\n      iszero\n      tag_272\n      jumpi\n        /* \"#utility.yul\":4168:4169   */\n      0x00\n        /* \"#utility.yul\":4165:4166   */\n      dup1\n        /* \"#utility.yul\":4158:4170   */\n      revert\n        /* \"#utility.yul\":4119:4172   */\n    tag_272:\n        /* \"#utility.yul\":4191:4220   */\n      tag_273\n        /* \"#utility.yul\":4210:4219   */\n      dup7\n        /* \"#utility.yul\":4191:4220   */\n      tag_220\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4181:4220   */\n      swap5\n      pop\n        /* \"#utility.yul\":4239:4277   */\n      tag_274\n        /* \"#utility.yul\":4273:4275   */\n      0x20\n        /* \"#utility.yul\":4262:4271   */\n      dup8\n        /* \"#utility.yul\":4258:4276   */\n      add\n        /* \"#utility.yul\":4239:4277   */\n      tag_220\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":4229:4277   */\n      swap4\n      pop\n        /* \"#utility.yul\":4328:4330   */\n      0x40\n        /* \"#utility.yul\":4317:4326   */\n      dup7\n        /* \"#utility.yul\":4313:4331   */\n      add\n        /* \"#utility.yul\":4300:4332   */\n      calldataload\n        /* \"#utility.yul\":4351:4369   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4392:4394   */\n      dup1\n        /* \"#utility.yul\":4384:4390   */\n      dup3\n        /* \"#utility.yul\":4381:4395   */\n      gt\n        /* \"#utility.yul\":4378:4412   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4408:4409   */\n      0x00\n        /* \"#utility.yul\":4405:4406   */\n      dup1\n        /* \"#utility.yul\":4398:4410   */\n      revert\n        /* \"#utility.yul\":4378:4412   */\n    tag_275:\n        /* \"#utility.yul\":4431:4492   */\n      tag_276\n        /* \"#utility.yul\":4484:4491   */\n      dup10\n        /* \"#utility.yul\":4475:4481   */\n      dup4\n        /* \"#utility.yul\":4464:4473   */\n      dup11\n        /* \"#utility.yul\":4460:4482   */\n      add\n        /* \"#utility.yul\":4431:4492   */\n      tag_225\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4421:4492   */\n      swap5\n      pop\n        /* \"#utility.yul\":4545:4547   */\n      0x60\n        /* \"#utility.yul\":4534:4543   */\n      dup9\n        /* \"#utility.yul\":4530:4548   */\n      add\n        /* \"#utility.yul\":4517:4549   */\n      calldataload\n        /* \"#utility.yul\":4501:4549   */\n      swap2\n      pop\n        /* \"#utility.yul\":4574:4576   */\n      dup1\n        /* \"#utility.yul\":4564:4572   */\n      dup3\n        /* \"#utility.yul\":4561:4577   */\n      gt\n        /* \"#utility.yul\":4558:4594   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":4590:4591   */\n      0x00\n        /* \"#utility.yul\":4587:4588   */\n      dup1\n        /* \"#utility.yul\":4580:4592   */\n      revert\n        /* \"#utility.yul\":4558:4594   */\n    tag_277:\n        /* \"#utility.yul\":4613:4676   */\n      tag_278\n        /* \"#utility.yul\":4668:4675   */\n      dup10\n        /* \"#utility.yul\":4657:4665   */\n      dup4\n        /* \"#utility.yul\":4646:4655   */\n      dup11\n        /* \"#utility.yul\":4642:4666   */\n      add\n        /* \"#utility.yul\":4613:4676   */\n      tag_225\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":4603:4676   */\n      swap4\n      pop\n        /* \"#utility.yul\":4729:4732   */\n      0x80\n        /* \"#utility.yul\":4718:4727   */\n      dup9\n        /* \"#utility.yul\":4714:4733   */\n      add\n        /* \"#utility.yul\":4701:4734   */\n      calldataload\n        /* \"#utility.yul\":4685:4734   */\n      swap2\n      pop\n        /* \"#utility.yul\":4759:4761   */\n      dup1\n        /* \"#utility.yul\":4749:4757   */\n      dup3\n        /* \"#utility.yul\":4746:4762   */\n      gt\n        /* \"#utility.yul\":4743:4779   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":4775:4776   */\n      0x00\n        /* \"#utility.yul\":4772:4773   */\n      dup1\n        /* \"#utility.yul\":4765:4777   */\n      revert\n        /* \"#utility.yul\":4743:4779   */\n    tag_279:\n      pop\n        /* \"#utility.yul\":4798:4849   */\n      tag_280\n        /* \"#utility.yul\":4841:4848   */\n      dup9\n        /* \"#utility.yul\":4830:4838   */\n      dup3\n        /* \"#utility.yul\":4819:4828   */\n      dup10\n        /* \"#utility.yul\":4815:4839   */\n      add\n        /* \"#utility.yul\":4798:4849   */\n      tag_226\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":4788:4849   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3912:4855   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4860:6068   */\n    tag_36:\n        /* \"#utility.yul\":4978:4984   */\n      0x00\n        /* \"#utility.yul\":4986:4992   */\n      dup1\n        /* \"#utility.yul\":5039:5041   */\n      0x40\n        /* \"#utility.yul\":5027:5036   */\n      dup4\n        /* \"#utility.yul\":5018:5025   */\n      dup6\n        /* \"#utility.yul\":5014:5037   */\n      sub\n        /* \"#utility.yul\":5010:5042   */\n      slt\n        /* \"#utility.yul\":5007:5059   */\n      iszero\n      tag_282\n      jumpi\n        /* \"#utility.yul\":5055:5056   */\n      0x00\n        /* \"#utility.yul\":5052:5053   */\n      dup1\n        /* \"#utility.yul\":5045:5057   */\n      revert\n        /* \"#utility.yul\":5007:5059   */\n    tag_282:\n        /* \"#utility.yul\":5095:5104   */\n      dup3\n        /* \"#utility.yul\":5082:5105   */\n      calldataload\n        /* \"#utility.yul\":5124:5142   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5165:5167   */\n      dup1\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5154:5168   */\n      gt\n        /* \"#utility.yul\":5151:5185   */\n      iszero\n      tag_283\n      jumpi\n        /* \"#utility.yul\":5181:5182   */\n      0x00\n        /* \"#utility.yul\":5178:5179   */\n      dup1\n        /* \"#utility.yul\":5171:5183   */\n      revert\n        /* \"#utility.yul\":5151:5185   */\n    tag_283:\n        /* \"#utility.yul\":5219:5225   */\n      dup2\n        /* \"#utility.yul\":5208:5217   */\n      dup6\n        /* \"#utility.yul\":5204:5226   */\n      add\n        /* \"#utility.yul\":5194:5226   */\n      swap2\n      pop\n        /* \"#utility.yul\":5264:5271   */\n      dup6\n        /* \"#utility.yul\":5257:5261   */\n      0x1f\n        /* \"#utility.yul\":5253:5255   */\n      dup4\n        /* \"#utility.yul\":5249:5262   */\n      add\n        /* \"#utility.yul\":5245:5272   */\n      slt\n        /* \"#utility.yul\":5235:5290   */\n      tag_284\n      jumpi\n        /* \"#utility.yul\":5286:5287   */\n      0x00\n        /* \"#utility.yul\":5283:5284   */\n      dup1\n        /* \"#utility.yul\":5276:5288   */\n      revert\n        /* \"#utility.yul\":5235:5290   */\n    tag_284:\n        /* \"#utility.yul\":5322:5324   */\n      dup2\n        /* \"#utility.yul\":5309:5325   */\n      calldataload\n        /* \"#utility.yul\":5344:5348   */\n      0x20\n        /* \"#utility.yul\":5367:5410   */\n      tag_285\n        /* \"#utility.yul\":5407:5409   */\n      dup3\n        /* \"#utility.yul\":5367:5410   */\n      tag_224\n      jump\t// in\n    tag_285:\n        /* \"#utility.yul\":5439:5441   */\n      0x40\n        /* \"#utility.yul\":5433:5442   */\n      mload\n        /* \"#utility.yul\":5451:5482   */\n      tag_286\n        /* \"#utility.yul\":5479:5481   */\n      dup3\n        /* \"#utility.yul\":5471:5477   */\n      dup3\n        /* \"#utility.yul\":5451:5482   */\n      tag_223\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":5517:5535   */\n      dup4\n      dup2\n      mstore\n        /* \"#utility.yul\":5605:5606   */\n      0x05\n        /* \"#utility.yul\":5601:5611   */\n      swap4\n      swap1\n      swap4\n      shl\n        /* \"#utility.yul\":5593:5612   */\n      dup6\n      add\n        /* \"#utility.yul\":5589:5617   */\n      dup3\n      add\n      swap3\n        /* \"#utility.yul\":5551:5566   */\n      dup3\n      dup2\n      add\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5648   */\n      dup10\n      dup5\n      gt\n        /* \"#utility.yul\":5626:5665   */\n      iszero\n      tag_287\n      jumpi\n        /* \"#utility.yul\":5661:5662   */\n      0x00\n        /* \"#utility.yul\":5658:5659   */\n      dup1\n        /* \"#utility.yul\":5651:5663   */\n      revert\n        /* \"#utility.yul\":5626:5665   */\n    tag_287:\n        /* \"#utility.yul\":5685:5696   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5705:5853   */\n    tag_288:\n        /* \"#utility.yul\":5721:5727   */\n      dup4\n        /* \"#utility.yul\":5716:5719   */\n      dup7\n        /* \"#utility.yul\":5713:5728   */\n      lt\n        /* \"#utility.yul\":5705:5853   */\n      iszero\n      tag_290\n      jumpi\n        /* \"#utility.yul\":5787:5810   */\n      tag_291\n        /* \"#utility.yul\":5806:5809   */\n      dup7\n        /* \"#utility.yul\":5787:5810   */\n      tag_220\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":5775:5811   */\n      dup3\n      mstore\n        /* \"#utility.yul\":5738:5750   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":5831:5843   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":5705:5853   */\n      jump(tag_288)\n    tag_290:\n        /* \"#utility.yul\":5872:5878   */\n      swap7\n      pop\n      pop\n        /* \"#utility.yul\":5916:5934   */\n      dup7\n      add\n        /* \"#utility.yul\":5903:5935   */\n      calldataload\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5947:5963   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":5944:5980   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":5976:5977   */\n      0x00\n        /* \"#utility.yul\":5973:5974   */\n      dup1\n        /* \"#utility.yul\":5966:5978   */\n      revert\n        /* \"#utility.yul\":5944:5980   */\n    tag_292:\n      pop\n        /* \"#utility.yul\":5999:6062   */\n      tag_293\n        /* \"#utility.yul\":6054:6061   */\n      dup6\n        /* \"#utility.yul\":6043:6051   */\n      dup3\n        /* \"#utility.yul\":6032:6041   */\n      dup7\n        /* \"#utility.yul\":6028:6052   */\n      add\n        /* \"#utility.yul\":5999:6062   */\n      tag_225\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":5989:6062   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4860:6068   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6508   */\n    tag_227:\n        /* \"#utility.yul\":6126:6129   */\n      0x00\n        /* \"#utility.yul\":6164:6169   */\n      dup2\n        /* \"#utility.yul\":6158:6170   */\n      mload\n        /* \"#utility.yul\":6191:6197   */\n      dup1\n        /* \"#utility.yul\":6186:6189   */\n      dup5\n        /* \"#utility.yul\":6179:6198   */\n      mstore\n        /* \"#utility.yul\":6217:6221   */\n      0x20\n        /* \"#utility.yul\":6246:6248   */\n      dup1\n        /* \"#utility.yul\":6241:6244   */\n      dup6\n        /* \"#utility.yul\":6237:6249   */\n      add\n        /* \"#utility.yul\":6230:6249   */\n      swap5\n      pop\n        /* \"#utility.yul\":6283:6285   */\n      dup1\n        /* \"#utility.yul\":6276:6281   */\n      dup5\n        /* \"#utility.yul\":6272:6286   */\n      add\n        /* \"#utility.yul\":6304:6305   */\n      0x00\n        /* \"#utility.yul\":6314:6483   */\n    tag_295:\n        /* \"#utility.yul\":6328:6334   */\n      dup4\n        /* \"#utility.yul\":6325:6326   */\n      dup2\n        /* \"#utility.yul\":6322:6335   */\n      lt\n        /* \"#utility.yul\":6314:6483   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6389:6402   */\n      dup2\n      mload\n        /* \"#utility.yul\":6377:6403   */\n      dup8\n      mstore\n        /* \"#utility.yul\":6423:6435   */\n      swap6\n      dup3\n      add\n      swap6\n        /* \"#utility.yul\":6458:6473   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6350:6351   */\n      0x01\n        /* \"#utility.yul\":6343:6352   */\n      add\n        /* \"#utility.yul\":6314:6483   */\n      jump(tag_295)\n    tag_297:\n      pop\n        /* \"#utility.yul\":6499:6502   */\n      swap5\n      swap6\n        /* \"#utility.yul\":6073:6508   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6513:6774   */\n    tag_39:\n        /* \"#utility.yul\":6692:6694   */\n      0x20\n        /* \"#utility.yul\":6681:6690   */\n      dup2\n        /* \"#utility.yul\":6674:6695   */\n      mstore\n        /* \"#utility.yul\":6655:6659   */\n      0x00\n        /* \"#utility.yul\":6712:6768   */\n      tag_240\n        /* \"#utility.yul\":6764:6766   */\n      0x20\n        /* \"#utility.yul\":6753:6762   */\n      dup4\n        /* \"#utility.yul\":6749:6767   */\n      add\n        /* \"#utility.yul\":6741:6747   */\n      dup5\n        /* \"#utility.yul\":6712:6768   */\n      tag_227\n      jump\t// in\n        /* \"#utility.yul\":6779:7126   */\n    tag_42:\n        /* \"#utility.yul\":6844:6850   */\n      0x00\n        /* \"#utility.yul\":6852:6858   */\n      dup1\n        /* \"#utility.yul\":6905:6907   */\n      0x40\n        /* \"#utility.yul\":6893:6902   */\n      dup4\n        /* \"#utility.yul\":6884:6891   */\n      dup6\n        /* \"#utility.yul\":6880:6903   */\n      sub\n        /* \"#utility.yul\":6876:6908   */\n      slt\n        /* \"#utility.yul\":6873:6925   */\n      iszero\n      tag_301\n      jumpi\n        /* \"#utility.yul\":6921:6922   */\n      0x00\n        /* \"#utility.yul\":6918:6919   */\n      dup1\n        /* \"#utility.yul\":6911:6923   */\n      revert\n        /* \"#utility.yul\":6873:6925   */\n    tag_301:\n        /* \"#utility.yul\":6944:6973   */\n      tag_302\n        /* \"#utility.yul\":6963:6972   */\n      dup4\n        /* \"#utility.yul\":6944:6973   */\n      tag_220\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6934:6973   */\n      swap2\n      pop\n        /* \"#utility.yul\":7023:7025   */\n      0x20\n        /* \"#utility.yul\":7012:7021   */\n      dup4\n        /* \"#utility.yul\":7008:7026   */\n      add\n        /* \"#utility.yul\":6995:7027   */\n      calldataload\n        /* \"#utility.yul\":7070:7075   */\n      dup1\n        /* \"#utility.yul\":7063:7076   */\n      iszero\n        /* \"#utility.yul\":7056:7077   */\n      iszero\n        /* \"#utility.yul\":7049:7054   */\n      dup2\n        /* \"#utility.yul\":7046:7078   */\n      eq\n        /* \"#utility.yul\":7036:7096   */\n      tag_303\n      jumpi\n        /* \"#utility.yul\":7092:7093   */\n      0x00\n        /* \"#utility.yul\":7089:7090   */\n      dup1\n        /* \"#utility.yul\":7082:7094   */\n      revert\n        /* \"#utility.yul\":7036:7096   */\n    tag_303:\n        /* \"#utility.yul\":7115:7120   */\n      dup1\n        /* \"#utility.yul\":7105:7120   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":6779:7126   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7131:7391   */\n    tag_46:\n        /* \"#utility.yul\":7199:7205   */\n      0x00\n        /* \"#utility.yul\":7207:7213   */\n      dup1\n        /* \"#utility.yul\":7260:7262   */\n      0x40\n        /* \"#utility.yul\":7248:7257   */\n      dup4\n        /* \"#utility.yul\":7239:7246   */\n      dup6\n        /* \"#utility.yul\":7235:7258   */\n      sub\n        /* \"#utility.yul\":7231:7263   */\n      slt\n        /* \"#utility.yul\":7228:7280   */\n      iszero\n      tag_305\n      jumpi\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7273:7274   */\n      dup1\n        /* \"#utility.yul\":7266:7278   */\n      revert\n        /* \"#utility.yul\":7228:7280   */\n    tag_305:\n        /* \"#utility.yul\":7299:7328   */\n      tag_306\n        /* \"#utility.yul\":7318:7327   */\n      dup4\n        /* \"#utility.yul\":7299:7328   */\n      tag_220\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7289:7328   */\n      swap2\n      pop\n        /* \"#utility.yul\":7347:7385   */\n      tag_307\n        /* \"#utility.yul\":7381:7383   */\n      0x20\n        /* \"#utility.yul\":7370:7379   */\n      dup5\n        /* \"#utility.yul\":7366:7384   */\n      add\n        /* \"#utility.yul\":7347:7385   */\n      tag_220\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":7337:7385   */\n      swap1\n      pop\n        /* \"#utility.yul\":7131:7391   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7396:8002   */\n    tag_51:\n        /* \"#utility.yul\":7500:7506   */\n      0x00\n        /* \"#utility.yul\":7508:7514   */\n      dup1\n        /* \"#utility.yul\":7516:7522   */\n      0x00\n        /* \"#utility.yul\":7524:7530   */\n      dup1\n        /* \"#utility.yul\":7532:7538   */\n      0x00\n        /* \"#utility.yul\":7585:7588   */\n      0xa0\n        /* \"#utility.yul\":7573:7582   */\n      dup7\n        /* \"#utility.yul\":7564:7571   */\n      dup9\n        /* \"#utility.yul\":7560:7583   */\n      sub\n        /* \"#utility.yul\":7556:7589   */\n      slt\n        /* \"#utility.yul\":7553:7606   */\n      iszero\n      tag_309\n      jumpi\n        /* \"#utility.yul\":7602:7603   */\n      0x00\n        /* \"#utility.yul\":7599:7600   */\n      dup1\n        /* \"#utility.yul\":7592:7604   */\n      revert\n        /* \"#utility.yul\":7553:7606   */\n    tag_309:\n        /* \"#utility.yul\":7625:7654   */\n      tag_310\n        /* \"#utility.yul\":7644:7653   */\n      dup7\n        /* \"#utility.yul\":7625:7654   */\n      tag_220\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":7615:7654   */\n      swap5\n      pop\n        /* \"#utility.yul\":7673:7711   */\n      tag_311\n        /* \"#utility.yul\":7707:7709   */\n      0x20\n        /* \"#utility.yul\":7696:7705   */\n      dup8\n        /* \"#utility.yul\":7692:7710   */\n      add\n        /* \"#utility.yul\":7673:7711   */\n      tag_220\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":7663:7711   */\n      swap4\n      pop\n        /* \"#utility.yul\":7758:7760   */\n      0x40\n        /* \"#utility.yul\":7747:7756   */\n      dup7\n        /* \"#utility.yul\":7743:7761   */\n      add\n        /* \"#utility.yul\":7730:7762   */\n      calldataload\n        /* \"#utility.yul\":7720:7762   */\n      swap3\n      pop\n        /* \"#utility.yul\":7809:7811   */\n      0x60\n        /* \"#utility.yul\":7798:7807   */\n      dup7\n        /* \"#utility.yul\":7794:7812   */\n      add\n        /* \"#utility.yul\":7781:7813   */\n      calldataload\n        /* \"#utility.yul\":7771:7813   */\n      swap2\n      pop\n        /* \"#utility.yul\":7864:7867   */\n      0x80\n        /* \"#utility.yul\":7853:7862   */\n      dup7\n        /* \"#utility.yul\":7849:7868   */\n      add\n        /* \"#utility.yul\":7836:7869   */\n      calldataload\n        /* \"#utility.yul\":7892:7910   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7884:7890   */\n      dup2\n        /* \"#utility.yul\":7881:7911   */\n      gt\n        /* \"#utility.yul\":7878:7928   */\n      iszero\n      tag_312\n      jumpi\n        /* \"#utility.yul\":7924:7925   */\n      0x00\n        /* \"#utility.yul\":7921:7922   */\n      dup1\n        /* \"#utility.yul\":7914:7926   */\n      revert\n        /* \"#utility.yul\":7878:7928   */\n    tag_312:\n        /* \"#utility.yul\":7947:7996   */\n      tag_280\n        /* \"#utility.yul\":7988:7995   */\n      dup9\n        /* \"#utility.yul\":7979:7985   */\n      dup3\n        /* \"#utility.yul\":7968:7977   */\n      dup10\n        /* \"#utility.yul\":7964:7986   */\n      add\n        /* \"#utility.yul\":7947:7996   */\n      tag_226\n      jump\t// in\n        /* \"#utility.yul\":8418:8798   */\n    tag_64:\n        /* \"#utility.yul\":8497:8498   */\n      0x01\n        /* \"#utility.yul\":8493:8505   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8540:8552   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8561:8622   */\n      tag_316\n      jumpi\n        /* \"#utility.yul\":8615:8619   */\n      0x7f\n        /* \"#utility.yul\":8607:8613   */\n      dup3\n        /* \"#utility.yul\":8603:8620   */\n      and\n        /* \"#utility.yul\":8593:8620   */\n      swap2\n      pop\n        /* \"#utility.yul\":8561:8622   */\n    tag_316:\n        /* \"#utility.yul\":8668:8670   */\n      0x20\n        /* \"#utility.yul\":8660:8666   */\n      dup3\n        /* \"#utility.yul\":8657:8671   */\n      lt\n        /* \"#utility.yul\":8637:8655   */\n      dup2\n        /* \"#utility.yul\":8634:8672   */\n      sub\n        /* \"#utility.yul\":8631:8792   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":8714:8724   */\n      0x4e487b71\n        /* \"#utility.yul\":8709:8712   */\n      0xe0\n        /* \"#utility.yul\":8705:8725   */\n      shl\n        /* \"#utility.yul\":8702:8703   */\n      0x00\n        /* \"#utility.yul\":8695:8726   */\n      mstore\n        /* \"#utility.yul\":8749:8753   */\n      0x22\n        /* \"#utility.yul\":8746:8747   */\n      0x04\n        /* \"#utility.yul\":8739:8754   */\n      mstore\n        /* \"#utility.yul\":8777:8781   */\n      0x24\n        /* \"#utility.yul\":8774:8775   */\n      0x00\n        /* \"#utility.yul\":8767:8782   */\n      revert\n        /* \"#utility.yul\":8631:8792   */\n    tag_317:\n      pop\n        /* \"#utility.yul\":8418:8798   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8803:9213   */\n    tag_77:\n        /* \"#utility.yul\":9005:9007   */\n      0x20\n        /* \"#utility.yul\":8987:9008   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9044:9046   */\n      0x2e\n        /* \"#utility.yul\":9024:9042   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9017:9047   */\n      mstore\n        /* \"#utility.yul\":9083:9117   */\n      0x455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e\n        /* \"#utility.yul\":9078:9080   */\n      0x40\n        /* \"#utility.yul\":9063:9081   */\n      dup3\n      add\n        /* \"#utility.yul\":9056:9118   */\n      mstore\n      shl(0x92, 0x195c881bdc88185c1c1c9bdd9959)\n        /* \"#utility.yul\":9149:9151   */\n      0x60\n        /* \"#utility.yul\":9134:9152   */\n      dup3\n      add\n        /* \"#utility.yul\":9127:9171   */\n      mstore\n        /* \"#utility.yul\":9203:9206   */\n      0x80\n        /* \"#utility.yul\":9188:9207   */\n      add\n      swap1\n        /* \"#utility.yul\":8803:9213   */\n      jump\t// out\n        /* \"#utility.yul\":9628:9755   */\n    tag_94:\n        /* \"#utility.yul\":9689:9699   */\n      0x4e487b71\n        /* \"#utility.yul\":9684:9687   */\n      0xe0\n        /* \"#utility.yul\":9680:9700   */\n      shl\n        /* \"#utility.yul\":9677:9678   */\n      0x00\n        /* \"#utility.yul\":9670:9701   */\n      mstore\n        /* \"#utility.yul\":9720:9724   */\n      0x32\n        /* \"#utility.yul\":9717:9718   */\n      0x04\n        /* \"#utility.yul\":9710:9725   */\n      mstore\n        /* \"#utility.yul\":9744:9748   */\n      0x24\n        /* \"#utility.yul\":9741:9742   */\n      0x00\n        /* \"#utility.yul\":9734:9749   */\n      revert\n        /* \"#utility.yul\":9760:9887   */\n    tag_228:\n        /* \"#utility.yul\":9821:9831   */\n      0x4e487b71\n        /* \"#utility.yul\":9816:9819   */\n      0xe0\n        /* \"#utility.yul\":9812:9832   */\n      shl\n        /* \"#utility.yul\":9809:9810   */\n      0x00\n        /* \"#utility.yul\":9802:9833   */\n      mstore\n        /* \"#utility.yul\":9852:9856   */\n      0x11\n        /* \"#utility.yul\":9849:9850   */\n      0x04\n        /* \"#utility.yul\":9842:9857   */\n      mstore\n        /* \"#utility.yul\":9876:9880   */\n      0x24\n        /* \"#utility.yul\":9873:9874   */\n      0x00\n        /* \"#utility.yul\":9866:9881   */\n      revert\n        /* \"#utility.yul\":9892:10027   */\n    tag_100:\n        /* \"#utility.yul\":9931:9934   */\n      0x00\n        /* \"#utility.yul\":9952:9969   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":9949:9992   */\n      tag_324\n      jumpi\n        /* \"#utility.yul\":9972:9990   */\n      tag_324\n      tag_228\n      jump\t// in\n    tag_324:\n      pop\n        /* \"#utility.yul\":10019:10020   */\n      0x01\n        /* \"#utility.yul\":10008:10021   */\n      add\n      swap1\n        /* \"#utility.yul\":9892:10027   */\n      jump\t// out\n        /* \"#utility.yul\":10441:10842   */\n    tag_123:\n        /* \"#utility.yul\":10643:10645   */\n      0x20\n        /* \"#utility.yul\":10625:10646   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10682:10684   */\n      0x25\n        /* \"#utility.yul\":10662:10680   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10655:10685   */\n      mstore\n        /* \"#utility.yul\":10721:10755   */\n      0x455243313135353a207472616e7366657220746f20746865207a65726f206164\n        /* \"#utility.yul\":10716:10718   */\n      0x40\n        /* \"#utility.yul\":10701:10719   */\n      dup3\n      add\n        /* \"#utility.yul\":10694:10756   */\n      mstore\n      shl(0xd8, 0x6472657373)\n        /* \"#utility.yul\":10787:10789   */\n      0x60\n        /* \"#utility.yul\":10772:10790   */\n      dup3\n      add\n        /* \"#utility.yul\":10765:10800   */\n      mstore\n        /* \"#utility.yul\":10832:10835   */\n      0x80\n        /* \"#utility.yul\":10817:10836   */\n      add\n      swap1\n        /* \"#utility.yul\":10441:10842   */\n      jump\t// out\n        /* \"#utility.yul\":10847:11253   */\n    tag_136:\n        /* \"#utility.yul\":11049:11051   */\n      0x20\n        /* \"#utility.yul\":11031:11052   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":11088:11090   */\n      0x2a\n        /* \"#utility.yul\":11068:11086   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":11061:11091   */\n      mstore\n        /* \"#utility.yul\":11127:11161   */\n      0x455243313135353a20696e73756666696369656e742062616c616e636520666f\n        /* \"#utility.yul\":11122:11124   */\n      0x40\n        /* \"#utility.yul\":11107:11125   */\n      dup3\n      add\n        /* \"#utility.yul\":11100:11162   */\n      mstore\n      shl(0xb1, 0x39103a3930b739b332b9)\n        /* \"#utility.yul\":11193:11195   */\n      0x60\n        /* \"#utility.yul\":11178:11196   */\n      dup3\n      add\n        /* \"#utility.yul\":11171:11211   */\n      mstore\n        /* \"#utility.yul\":11243:11246   */\n      0x80\n        /* \"#utility.yul\":11228:11247   */\n      add\n      swap1\n        /* \"#utility.yul\":10847:11253   */\n      jump\t// out\n        /* \"#utility.yul\":11258:11383   */\n    tag_138:\n        /* \"#utility.yul\":11323:11332   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11344:11354   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11341:11377   */\n      iszero\n      tag_53\n      jumpi\n        /* \"#utility.yul\":11357:11375   */\n      tag_53\n      tag_228\n      jump\t// in\n        /* \"#utility.yul\":11388:11853   */\n    tag_141:\n        /* \"#utility.yul\":11645:11647   */\n      0x40\n        /* \"#utility.yul\":11634:11643   */\n      dup2\n        /* \"#utility.yul\":11627:11648   */\n      mstore\n        /* \"#utility.yul\":11608:11612   */\n      0x00\n        /* \"#utility.yul\":11671:11727   */\n      tag_332\n        /* \"#utility.yul\":11723:11725   */\n      0x40\n        /* \"#utility.yul\":11712:11721   */\n      dup4\n        /* \"#utility.yul\":11708:11726   */\n      add\n        /* \"#utility.yul\":11700:11706   */\n      dup6\n        /* \"#utility.yul\":11671:11727   */\n      tag_227\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":11775:11784   */\n      dup3\n        /* \"#utility.yul\":11767:11773   */\n      dup2\n        /* \"#utility.yul\":11763:11785   */\n      sub\n        /* \"#utility.yul\":11758:11760   */\n      0x20\n        /* \"#utility.yul\":11747:11756   */\n      dup5\n        /* \"#utility.yul\":11743:11761   */\n      add\n        /* \"#utility.yul\":11736:11786   */\n      mstore\n        /* \"#utility.yul\":11803:11847   */\n      tag_333\n        /* \"#utility.yul\":11840:11846   */\n      dup2\n        /* \"#utility.yul\":11832:11838   */\n      dup6\n        /* \"#utility.yul\":11803:11847   */\n      tag_227\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":11795:11847   */\n      swap6\n        /* \"#utility.yul\":11388:11853   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12521:13348   */\n    tag_174:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":12918:12933   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":12900:12934   */\n      dup3\n      mstore\n        /* \"#utility.yul\":12970:12985   */\n      dup6\n      and\n        /* \"#utility.yul\":12965:12967   */\n      0x20\n        /* \"#utility.yul\":12950:12968   */\n      dup3\n      add\n        /* \"#utility.yul\":12943:12986   */\n      mstore\n        /* \"#utility.yul\":12880:12883   */\n      0xa0\n        /* \"#utility.yul\":13017:13019   */\n      0x40\n        /* \"#utility.yul\":13002:13020   */\n      dup3\n      add\n        /* \"#utility.yul\":12995:13026   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":12843:12847   */\n      0x00\n      swap1\n        /* \"#utility.yul\":13049:13106   */\n      tag_337\n      swap1\n        /* \"#utility.yul\":13086:13105   */\n      dup4\n      add\n        /* \"#utility.yul\":13078:13084   */\n      dup7\n        /* \"#utility.yul\":13049:13106   */\n      tag_227\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":13154:13163   */\n      dup3\n        /* \"#utility.yul\":13146:13152   */\n      dup2\n        /* \"#utility.yul\":13142:13164   */\n      sub\n        /* \"#utility.yul\":13137:13139   */\n      0x60\n        /* \"#utility.yul\":13126:13135   */\n      dup5\n        /* \"#utility.yul\":13122:13140   */\n      add\n        /* \"#utility.yul\":13115:13165   */\n      mstore\n        /* \"#utility.yul\":13188:13232   */\n      tag_338\n        /* \"#utility.yul\":13225:13231   */\n      dup2\n        /* \"#utility.yul\":13217:13223   */\n      dup7\n        /* \"#utility.yul\":13188:13232   */\n      tag_227\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":13174:13232   */\n      swap1\n      pop\n        /* \"#utility.yul\":13281:13290   */\n      dup3\n        /* \"#utility.yul\":13273:13279   */\n      dup2\n        /* \"#utility.yul\":13269:13291   */\n      sub\n        /* \"#utility.yul\":13263:13266   */\n      0x80\n        /* \"#utility.yul\":13252:13261   */\n      dup5\n        /* \"#utility.yul\":13248:13267   */\n      add\n        /* \"#utility.yul\":13241:13292   */\n      mstore\n        /* \"#utility.yul\":13309:13342   */\n      tag_339\n        /* \"#utility.yul\":13335:13341   */\n      dup2\n        /* \"#utility.yul\":13327:13333   */\n      dup6\n        /* \"#utility.yul\":13309:13342   */\n      tag_222\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":13301:13342   */\n      swap9\n        /* \"#utility.yul\":12521:13348   */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13353:13602   */\n    tag_177:\n        /* \"#utility.yul\":13422:13428   */\n      0x00\n        /* \"#utility.yul\":13475:13477   */\n      0x20\n        /* \"#utility.yul\":13463:13472   */\n      dup3\n        /* \"#utility.yul\":13454:13461   */\n      dup5\n        /* \"#utility.yul\":13450:13473   */\n      sub\n        /* \"#utility.yul\":13446:13478   */\n      slt\n        /* \"#utility.yul\":13443:13495   */\n      iszero\n      tag_341\n      jumpi\n        /* \"#utility.yul\":13491:13492   */\n      0x00\n        /* \"#utility.yul\":13488:13489   */\n      dup1\n        /* \"#utility.yul\":13481:13493   */\n      revert\n        /* \"#utility.yul\":13443:13495   */\n    tag_341:\n        /* \"#utility.yul\":13523:13532   */\n      dup2\n        /* \"#utility.yul\":13517:13533   */\n      mload\n        /* \"#utility.yul\":13542:13572   */\n      tag_240\n        /* \"#utility.yul\":13566:13571   */\n      dup2\n        /* \"#utility.yul\":13542:13572   */\n      tag_221\n      jump\t// in\n        /* \"#utility.yul\":13607:13786   */\n    tag_183:\n        /* \"#utility.yul\":13642:13645   */\n      0x00\n        /* \"#utility.yul\":13684:13685   */\n      0x03\n        /* \"#utility.yul\":13666:13682   */\n      returndatasize\n        /* \"#utility.yul\":13663:13686   */\n      gt\n        /* \"#utility.yul\":13660:13780   */\n      iszero\n      tag_344\n      jumpi\n        /* \"#utility.yul\":13730:13731   */\n      0x04\n        /* \"#utility.yul\":13727:13728   */\n      0x00\n        /* \"#utility.yul\":13724:13725   */\n      dup1\n        /* \"#utility.yul\":13709:13732   */\n      returndatacopy\n      pop\n        /* \"#utility.yul\":13767:13768   */\n      0x00\n        /* \"#utility.yul\":13761:13769   */\n      mload\n        /* \"#utility.yul\":13756:13759   */\n      0xe0\n        /* \"#utility.yul\":13752:13770   */\n      shr\n        /* \"#utility.yul\":13660:13780   */\n    tag_344:\n        /* \"#utility.yul\":13607:13786   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13791:14462   */\n    tag_185:\n        /* \"#utility.yul\":13830:13833   */\n      0x00\n        /* \"#utility.yul\":13872:13876   */\n      0x44\n        /* \"#utility.yul\":13854:13870   */\n      returndatasize\n        /* \"#utility.yul\":13851:13877   */\n      lt\n        /* \"#utility.yul\":13848:13887   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":13848:13887   */\n    tag_346:\n        /* \"#utility.yul\":13914:13916   */\n      0x40\n        /* \"#utility.yul\":13908:13917   */\n      mload\n      not(0x03)\n        /* \"#utility.yul\":13979:13995   */\n      returndatasize\n        /* \"#utility.yul\":13975:14000   */\n      dup2\n      add\n        /* \"#utility.yul\":13972:13973   */\n      0x04\n        /* \"#utility.yul\":13908:13917   */\n      dup4\n        /* \"#utility.yul\":13951:14001   */\n      returndatacopy\n        /* \"#utility.yul\":14030:14034   */\n      dup2\n        /* \"#utility.yul\":14024:14035   */\n      mload\n        /* \"#utility.yul\":14054:14070   */\n      returndatasize\n        /* \"#utility.yul\":14089:14107   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":14160:14162   */\n      dup2\n        /* \"#utility.yul\":14153:14157   */\n      0x24\n        /* \"#utility.yul\":14145:14151   */\n      dup5\n        /* \"#utility.yul\":14141:14158   */\n      add\n        /* \"#utility.yul\":14138:14163   */\n      gt\n        /* \"#utility.yul\":14133:14135   */\n      dup2\n        /* \"#utility.yul\":14125:14131   */\n      dup5\n        /* \"#utility.yul\":14122:14136   */\n      gt\n        /* \"#utility.yul\":14119:14164   */\n      or\n        /* \"#utility.yul\":14116:14174   */\n      iszero\n      tag_347\n      jumpi\n        /* \"#utility.yul\":14167:14172   */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14116:14174   */\n    tag_347:\n        /* \"#utility.yul\":14204:14210   */\n      dup3\n        /* \"#utility.yul\":14198:14202   */\n      dup6\n        /* \"#utility.yul\":14194:14211   */\n      add\n        /* \"#utility.yul\":14183:14211   */\n      swap2\n      pop\n        /* \"#utility.yul\":14240:14243   */\n      dup2\n        /* \"#utility.yul\":14234:14244   */\n      mload\n        /* \"#utility.yul\":14267:14269   */\n      dup2\n        /* \"#utility.yul\":14259:14265   */\n      dup2\n        /* \"#utility.yul\":14256:14270   */\n      gt\n        /* \"#utility.yul\":14253:14280   */\n      iszero\n      tag_348\n      jumpi\n        /* \"#utility.yul\":14273:14278   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14253:14280   */\n    tag_348:\n        /* \"#utility.yul\":14357:14359   */\n      dup5\n        /* \"#utility.yul\":14338:14354   */\n      returndatasize\n        /* \"#utility.yul\":14332:14336   */\n      dup8\n        /* \"#utility.yul\":14328:14355   */\n      add\n        /* \"#utility.yul\":14324:14360   */\n      add\n        /* \"#utility.yul\":14317:14321   */\n      0x20\n        /* \"#utility.yul\":14308:14314   */\n      dup3\n        /* \"#utility.yul\":14303:14306   */\n      dup6\n        /* \"#utility.yul\":14299:14315   */\n      add\n        /* \"#utility.yul\":14295:14322   */\n      add\n        /* \"#utility.yul\":14292:14361   */\n      gt\n        /* \"#utility.yul\":14289:14371   */\n      iszero\n      tag_349\n      jumpi\n        /* \"#utility.yul\":14364:14369   */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13791:14462   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":14289:14371   */\n    tag_349:\n        /* \"#utility.yul\":14380:14437   */\n      tag_350\n        /* \"#utility.yul\":14431:14435   */\n      0x20\n        /* \"#utility.yul\":14422:14428   */\n      dup3\n        /* \"#utility.yul\":14414:14420   */\n      dup7\n        /* \"#utility.yul\":14410:14429   */\n      add\n        /* \"#utility.yul\":14406:14436   */\n      add\n        /* \"#utility.yul\":14400:14404   */\n      dup8\n        /* \"#utility.yul\":14380:14437   */\n      tag_223\n      jump\t// in\n    tag_350:\n      pop\n        /* \"#utility.yul\":14453:14456   */\n      swap1\n      swap6\n        /* \"#utility.yul\":13791:14462   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14888:15292   */\n    tag_193:\n        /* \"#utility.yul\":15090:15092   */\n      0x20\n        /* \"#utility.yul\":15072:15093   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":15129:15131   */\n      0x28\n        /* \"#utility.yul\":15109:15127   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":15102:15132   */\n      mstore\n        /* \"#utility.yul\":15168:15202   */\n      0x455243313135353a204552433131353552656365697665722072656a65637465\n        /* \"#utility.yul\":15163:15165   */\n      0x40\n        /* \"#utility.yul\":15148:15166   */\n      dup3\n      add\n        /* \"#utility.yul\":15141:15203   */\n      mstore\n      shl(0xc0, 0x6420746f6b656e73)\n        /* \"#utility.yul\":15234:15236   */\n      0x60\n        /* \"#utility.yul\":15219:15237   */\n      dup3\n      add\n        /* \"#utility.yul\":15212:15250   */\n      mstore\n        /* \"#utility.yul\":15282:15285   */\n      0x80\n        /* \"#utility.yul\":15267:15286   */\n      add\n      swap1\n        /* \"#utility.yul\":14888:15292   */\n      jump\t// out\n        /* \"#utility.yul\":15297:15858   */\n    tag_204:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":15594:15609   */\n      dup7\n      dup2\n      and\n        /* \"#utility.yul\":15576:15610   */\n      dup3\n      mstore\n        /* \"#utility.yul\":15646:15661   */\n      dup6\n      and\n        /* \"#utility.yul\":15641:15643   */\n      0x20\n        /* \"#utility.yul\":15626:15644   */\n      dup3\n      add\n        /* \"#utility.yul\":15619:15662   */\n      mstore\n        /* \"#utility.yul\":15693:15695   */\n      0x40\n        /* \"#utility.yul\":15678:15696   */\n      dup2\n      add\n        /* \"#utility.yul\":15671:15705   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":15736:15738   */\n      0x60\n        /* \"#utility.yul\":15721:15739   */\n      dup2\n      add\n        /* \"#utility.yul\":15714:15748   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":15556:15559   */\n      0xa0\n        /* \"#utility.yul\":15779:15782   */\n      0x80\n        /* \"#utility.yul\":15764:15783   */\n      dup3\n      add\n        /* \"#utility.yul\":15757:15789   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":15519:15523   */\n      0x00\n      swap1\n        /* \"#utility.yul\":15806:15852   */\n      tag_354\n      swap1\n        /* \"#utility.yul\":15832:15851   */\n      dup4\n      add\n        /* \"#utility.yul\":15824:15830   */\n      dup5\n        /* \"#utility.yul\":15806:15852   */\n      tag_222\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":15798:15852   */\n      swap8\n        /* \"#utility.yul\":15297:15858   */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212209ff559bb852eb2337744677bdfbaf21d991147431f44d7286dd8d224a06902b064736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_810": {
									"entryPoint": null,
									"id": 810,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_setURI_1321": {
									"entryPoint": 70,
									"id": 1321,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_string_memory_ptr_fromMemory": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 383,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 88,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:3779:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "46:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "63:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "70:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "75:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "56:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "56:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "103:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "106:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "96:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "96:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "130:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "120:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "120:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "237:951:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "247:12:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "257:2:1",
																"type": "",
																"value": "32"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "251:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "304:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "313:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "316:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "306:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "306:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "306:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "279:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "288:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "275:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "275:23:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "300:2:1"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "271:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "271:32:1"
															},
															"nodeType": "YulIf",
															"src": "268:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "329:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "349:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "343:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "343:16:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "333:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "368:28:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "386:2:1",
																				"type": "",
																				"value": "64"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "390:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "382:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "382:10:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "394:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "378:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "378:18:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "372:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "423:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "432:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "435:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "425:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "425:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "425:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "411:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "419:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "408:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:14:1"
															},
															"nodeType": "YulIf",
															"src": "405:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "448:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "462:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "473:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "458:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "458:22:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "452:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "528:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "537:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "540:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "530:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "530:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "530:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "507:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "511:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "503:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "503:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "518:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "499:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "492:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "492:35:1"
															},
															"nodeType": "YulIf",
															"src": "489:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "553:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "569:2:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "563:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "563:9:1"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "557:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "595:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "597:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "597:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "597:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "587:2:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "591:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "584:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:10:1"
															},
															"nodeType": "YulIf",
															"src": "581:36:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "626:17:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "640:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "636:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "636:7:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "630:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "652:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "672:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "666:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "666:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "656:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "684:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "706:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_4",
																										"nodeType": "YulIdentifier",
																										"src": "730:2:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "734:4:1",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "726:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "726:13:1"
																							},
																							{
																								"name": "_5",
																								"nodeType": "YulIdentifier",
																								"src": "741:2:1"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nodeType": "YulIdentifier",
																							"src": "722:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "722:22:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "746:2:1",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "718:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "718:31:1"
																			},
																			{
																				"name": "_5",
																				"nodeType": "YulIdentifier",
																				"src": "751:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "714:40:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "702:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "702:53:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "688:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "814:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "816:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "816:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "816:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "773:10:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "785:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "770:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "770:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "793:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "805:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "790:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "790:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "767:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "767:46:1"
															},
															"nodeType": "YulIf",
															"src": "764:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "852:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "856:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "845:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "845:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "845:22:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "883:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "891:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "876:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "876:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "940:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "949:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "952:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "942:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "942:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "942:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "917:2:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "921:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "913:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "913:11:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "926:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "909:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "909:20:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "931:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "906:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "906:33:1"
															},
															"nodeType": "YulIf",
															"src": "903:53:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "965:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "974:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "969:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1030:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nodeType": "YulIdentifier",
																									"src": "1059:6:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1067:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1055:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1055:14:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1071:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1051:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1051:23:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "_3",
																											"nodeType": "YulIdentifier",
																											"src": "1090:2:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1094:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1086:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1086:10:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1098:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1082:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1082:19:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1076:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1076:26:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1044:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1044:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1044:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "995:1:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "998:2:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "992:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "992:9:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1002:19:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1004:15:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1013:1:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1016:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1009:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1009:10:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1004:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "988:3:1",
																"statements": []
															},
															"src": "984:129:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "1137:6:1"
																					},
																					{
																						"name": "_4",
																						"nodeType": "YulIdentifier",
																						"src": "1145:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1133:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1133:15:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "1150:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1129:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1129:24:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1122:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1122:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1122:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1166:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "1176:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1166:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "203:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "214:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "226:6:1",
														"type": ""
													}
												],
												"src": "146:1042:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1248:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1258:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1272:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1275:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "1268:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1268:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "1258:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1289:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "1319:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1325:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1315:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1315:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "1293:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1366:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1368:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "1382:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1390:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "1378:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1378:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1368:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1346:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1339:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1339:26:1"
															},
															"nodeType": "YulIf",
															"src": "1336:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1456:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1477:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1484:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1489:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1480:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1480:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1470:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1470:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1521:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1524:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1514:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1514:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1514:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1549:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1552:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1542:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1542:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1542:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "1412:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "1435:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1443:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "1432:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1432:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "1409:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1409:38:1"
															},
															"nodeType": "YulIf",
															"src": "1406:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1228:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "1237:6:1",
														"type": ""
													}
												],
												"src": "1193:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1634:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1651:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "1654:3:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1644:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1644:14:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1644:14:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1667:26:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1685:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1688:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nodeType": "YulIdentifier",
																	"src": "1675:9:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1675:18:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "1667:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "1617:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "1625:4:1",
														"type": ""
													}
												],
												"src": "1578:121:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1785:464:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1818:425:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1832:11:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1842:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1836:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1863:2:1"
																				},
																				{
																					"name": "array",
																					"nodeType": "YulIdentifier",
																					"src": "1867:5:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1856:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1856:17:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1856:17:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1886:31:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "1908:2:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1912:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nodeType": "YulIdentifier",
																				"src": "1898:9:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1898:19:1"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nodeType": "YulTypedName",
																				"src": "1890:4:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1930:57:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "1953:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1963:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nodeType": "YulIdentifier",
																									"src": "1970:10:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1982:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1966:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1966:19:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "1959:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1959:27:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1949:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1949:38:1"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nodeType": "YulTypedName",
																				"src": "1934:11:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2024:23:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2026:19:1",
																					"value": {
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "2041:4:1"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nodeType": "YulIdentifier",
																							"src": "2026:11:1"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nodeType": "YulIdentifier",
																					"src": "2006:10:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2018:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2003:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2003:20:1"
																		},
																		"nodeType": "YulIf",
																		"src": "2000:47:1"
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2060:41:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nodeType": "YulIdentifier",
																					"src": "2074:4:1"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "2084:1:1",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nodeType": "YulIdentifier",
																									"src": "2091:3:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2096:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "2087:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2087:12:1"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nodeType": "YulIdentifier",
																						"src": "2080:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2080:20:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "2070:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2070:31:1"
																		},
																		"variables": [
																			{
																				"name": "_2",
																				"nodeType": "YulTypedName",
																				"src": "2064:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "2114:24:1",
																		"value": {
																			"name": "deleteStart",
																			"nodeType": "YulIdentifier",
																			"src": "2127:11:1"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nodeType": "YulTypedName",
																				"src": "2118:5:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nodeType": "YulBlock",
																			"src": "2212:21:1",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2221:5:1"
																							},
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "2228:2:1"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nodeType": "YulIdentifier",
																							"src": "2214:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2214:17:1"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "2214:17:1"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nodeType": "YulIdentifier",
																					"src": "2162:5:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "2169:2:1"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nodeType": "YulIdentifier",
																				"src": "2159:2:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2159:13:1"
																		},
																		"nodeType": "YulForLoop",
																		"post": {
																			"nodeType": "YulBlock",
																			"src": "2173:26:1",
																			"statements": [
																				{
																					"nodeType": "YulAssignment",
																					"src": "2175:22:1",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nodeType": "YulIdentifier",
																								"src": "2188:5:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "2195:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "2184:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2184:13:1"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nodeType": "YulIdentifier",
																							"src": "2175:5:1"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nodeType": "YulBlock",
																			"src": "2155:3:1",
																			"statements": []
																		},
																		"src": "2151:82:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nodeType": "YulIdentifier",
																		"src": "1801:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1806:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1798:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1798:11:1"
															},
															"nodeType": "YulIf",
															"src": "1795:448:1"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "1757:5:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "1764:3:1",
														"type": ""
													},
													{
														"name": "startIndex",
														"nodeType": "YulTypedName",
														"src": "1769:10:1",
														"type": ""
													}
												],
												"src": "1704:545:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2339:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2349:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nodeType": "YulIdentifier",
																				"src": "2364:4:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2382:1:1",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nodeType": "YulIdentifier",
																										"src": "2385:3:1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "2378:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2378:11:1"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "2395:1:1",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nodeType": "YulIdentifier",
																									"src": "2391:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "2391:6:1"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nodeType": "YulIdentifier",
																							"src": "2374:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "2374:24:1"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2370:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2370:29:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2360:40:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2406:1:1",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nodeType": "YulIdentifier",
																				"src": "2409:3:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2402:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2402:11:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2357:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:57:1"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nodeType": "YulIdentifier",
																	"src": "2349:4:1"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "2316:4:1",
														"type": ""
													},
													{
														"name": "len",
														"nodeType": "YulTypedName",
														"src": "2322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nodeType": "YulTypedName",
														"src": "2330:4:1",
														"type": ""
													}
												],
												"src": "2254:166:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2521:1256:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2531:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "2551:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2545:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2545:10:1"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nodeType": "YulTypedName",
																	"src": "2535:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2598:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2600:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2600:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2600:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2570:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2586:2:1",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2590:1:1",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "2582:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2582:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2594:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2578:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2578:18:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2567:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2567:30:1"
															},
															"nodeType": "YulIf",
															"src": "2564:56:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nodeType": "YulIdentifier",
																		"src": "2673:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nodeType": "YulIdentifier",
																						"src": "2711:4:1"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nodeType": "YulIdentifier",
																					"src": "2705:5:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2705:11:1"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nodeType": "YulIdentifier",
																			"src": "2679:25:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2679:38:1"
																	},
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2719:6:1"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nodeType": "YulIdentifier",
																	"src": "2629:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2629:97:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2629:97:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2735:18:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2752:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulTypedName",
																	"src": "2739:9:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2762:23:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2781:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nodeType": "YulTypedName",
																	"src": "2766:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "2794:24:1",
															"value": {
																"name": "srcOffset_1",
																"nodeType": "YulIdentifier",
																"src": "2807:11:1"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nodeType": "YulIdentifier",
																	"src": "2794:9:1"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2864:656:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2878:35:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "2897:6:1"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "2909:2:1",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nodeType": "YulIdentifier",
																								"src": "2905:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "2905:7:1"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nodeType": "YulIdentifier",
																						"src": "2893:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2893:20:1"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nodeType": "YulTypedName",
																						"src": "2882:7:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2926:49:1",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "2970:4:1"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nodeType": "YulIdentifier",
																						"src": "2940:29:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2940:35:1"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nodeType": "YulTypedName",
																						"src": "2930:6:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "2988:10:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2997:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nodeType": "YulTypedName",
																						"src": "2992:1:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3075:172:1",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3100:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nodeType": "YulIdentifier",
																														"src": "3118:3:1"
																													},
																													{
																														"name": "srcOffset",
																														"nodeType": "YulIdentifier",
																														"src": "3123:9:1"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nodeType": "YulIdentifier",
																													"src": "3114:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3114:19:1"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nodeType": "YulIdentifier",
																											"src": "3108:5:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3108:26:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3093:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3093:42:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3093:42:1"
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3152:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3166:6:1"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "3174:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3162:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3162:14:1"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nodeType": "YulIdentifier",
																									"src": "3152:6:1"
																								}
																							]
																						},
																						{
																							"nodeType": "YulAssignment",
																							"src": "3193:40:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nodeType": "YulIdentifier",
																										"src": "3210:9:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3221:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3206:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3206:27:1"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nodeType": "YulIdentifier",
																									"src": "3193:9:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nodeType": "YulIdentifier",
																							"src": "3022:1:1"
																						},
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3025:7:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3019:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3019:14:1"
																				},
																				"nodeType": "YulForLoop",
																				"post": {
																					"nodeType": "YulBlock",
																					"src": "3034:28:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3036:24:1",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nodeType": "YulIdentifier",
																										"src": "3045:1:1"
																									},
																									{
																										"name": "srcOffset_1",
																										"nodeType": "YulIdentifier",
																										"src": "3048:11:1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "3041:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3041:19:1"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "3036:1:1"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nodeType": "YulBlock",
																					"src": "3015:3:1",
																					"statements": []
																				},
																				"src": "3011:236:1"
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3295:166:1",
																					"statements": [
																						{
																							"nodeType": "YulVariableDeclaration",
																							"src": "3313:43:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3340:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3345:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3336:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3336:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3330:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3330:26:1"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nodeType": "YulTypedName",
																									"src": "3317:9:1",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nodeType": "YulIdentifier",
																										"src": "3380:6:1"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nodeType": "YulIdentifier",
																												"src": "3392:9:1"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nodeType": "YulLiteral",
																																				"src": "3419:1:1",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nodeType": "YulIdentifier",
																																				"src": "3422:6:1"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nodeType": "YulIdentifier",
																																			"src": "3415:3:1"
																																		},
																																		"nodeType": "YulFunctionCall",
																																		"src": "3415:14:1"
																																	},
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3431:3:1",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nodeType": "YulIdentifier",
																																	"src": "3411:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3411:24:1"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nodeType": "YulLiteral",
																																		"src": "3441:1:1",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nodeType": "YulIdentifier",
																																	"src": "3437:3:1"
																																},
																																"nodeType": "YulFunctionCall",
																																"src": "3437:6:1"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nodeType": "YulIdentifier",
																															"src": "3407:3:1"
																														},
																														"nodeType": "YulFunctionCall",
																														"src": "3407:37:1"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nodeType": "YulIdentifier",
																													"src": "3403:3:1"
																												},
																												"nodeType": "YulFunctionCall",
																												"src": "3403:42:1"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nodeType": "YulIdentifier",
																											"src": "3388:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3388:58:1"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nodeType": "YulIdentifier",
																									"src": "3373:6:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3373:74:1"
																							},
																							"nodeType": "YulExpressionStatement",
																							"src": "3373:74:1"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nodeType": "YulIdentifier",
																							"src": "3266:7:1"
																						},
																						{
																							"name": "newLen",
																							"nodeType": "YulIdentifier",
																							"src": "3275:6:1"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nodeType": "YulIdentifier",
																						"src": "3263:2:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3263:19:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3260:201:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3481:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nodeType": "YulLiteral",
																											"src": "3495:1:1",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nodeType": "YulIdentifier",
																											"src": "3498:6:1"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nodeType": "YulIdentifier",
																										"src": "3491:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "3491:14:1"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "3507:1:1",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "3487:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3487:22:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3474:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3474:36:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3474:36:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "2857:663:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2862:1:1",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "3537:234:1",
																		"statements": [
																			{
																				"nodeType": "YulVariableDeclaration",
																				"src": "3551:14:1",
																				"value": {
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3564:1:1",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nodeType": "YulTypedName",
																						"src": "3555:5:1",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nodeType": "YulBlock",
																					"src": "3600:67:1",
																					"statements": [
																						{
																							"nodeType": "YulAssignment",
																							"src": "3618:35:1",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nodeType": "YulIdentifier",
																												"src": "3637:3:1"
																											},
																											{
																												"name": "srcOffset",
																												"nodeType": "YulIdentifier",
																												"src": "3642:9:1"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nodeType": "YulIdentifier",
																											"src": "3633:3:1"
																										},
																										"nodeType": "YulFunctionCall",
																										"src": "3633:19:1"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nodeType": "YulIdentifier",
																									"src": "3627:5:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "3627:26:1"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3618:5:1"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nodeType": "YulIdentifier",
																					"src": "3581:6:1"
																				},
																				"nodeType": "YulIf",
																				"src": "3578:89:1"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nodeType": "YulIdentifier",
																							"src": "3687:4:1"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nodeType": "YulIdentifier",
																									"src": "3746:5:1"
																								},
																								{
																									"name": "newLen",
																									"nodeType": "YulIdentifier",
																									"src": "3753:6:1"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nodeType": "YulIdentifier",
																								"src": "3693:52:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "3693:67:1"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nodeType": "YulIdentifier",
																						"src": "3680:6:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3680:81:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "3680:81:1"
																			}
																		]
																	},
																	"nodeType": "YulCase",
																	"src": "3529:242:1",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nodeType": "YulIdentifier",
																		"src": "2837:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:1",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2834:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:14:1"
															},
															"nodeType": "YulSwitch",
															"src": "2827:944:1"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nodeType": "YulTypedName",
														"src": "2506:4:1",
														"type": ""
													},
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "2512:3:1",
														"type": ""
													}
												],
												"src": "2425:1352:1"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(0, 0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(0, 0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(0, 0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        mstore(add(add(memPtr, _4), _1), 0)\n        value0 := memPtr\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            let _1 := 0\n            mstore(_1, array)\n            let data := keccak256(_1, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _2 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _2) { start := add(start, 1) }\n            { sstore(start, _1) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := srcOffset_1\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200162b3803806200162b83398101604081905262000034916200006e565b6200003f8162000046565b506200029e565b6002620000548282620001d2565b5050565b634e487b7160e01b600052604160045260246000fd5b600060208083850312156200008257600080fd5b82516001600160401b03808211156200009a57600080fd5b818501915085601f830112620000af57600080fd5b815181811115620000c457620000c462000058565b604051601f8201601f19908116603f01168101908382118183101715620000ef57620000ef62000058565b8160405282815288868487010111156200010857600080fd5b600093505b828410156200012c57848401860151818501870152928501926200010d565b600086848301015280965050505050505092915050565b600181811c908216806200015857607f821691505b6020821081036200017957634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620001cd57600081815260208120601f850160051c81016020861015620001a85750805b601f850160051c820191505b81811015620001c957828155600101620001b4565b5050505b505050565b81516001600160401b03811115620001ee57620001ee62000058565b6200020681620001ff845462000143565b846200017f565b602080601f8311600181146200023e5760008415620002255750858301515b600019600386901b1c1916600185901b178555620001c9565b600085815260208120601f198616915b828110156200026f578886015182559484019460019091019084016200024e565b50858210156200028e5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61137d80620002ae6000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b40565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b83565b610225565b60405190151581526020016100a9565b6100e86100e3366004610ba7565b610275565b6040516100a99190610c06565b610108610103366004610d65565b610309565b005b61011d610118366004610e0f565b610355565b6040516100a99190610f15565b610108610138366004610f28565b61047f565b6100c561014b366004610f64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610f97565b61048e565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061021f57506301ffc9a760e01b6001600160e01b031983161461021f565b60606002805461028490610ffc565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610ffc565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b6103415760405162461bcd60e51b81526004016101f390611036565b61034e85858585856104d3565b5050505050565b606081518351146103ba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d6576103d6610c19565b6040519080825280602002602001820160405280156103ff578160200160208202803683370190505b50905060005b84518110156104775761044a85828151811061042357610423611084565b602002602001015185838151811061043d5761043d611084565b602002602001015161018c565b82828151811061045c5761045c611084565b6020908102919091010152610470816110b0565b9050610405565b509392505050565b61048a3383836106b0565b5050565b6001600160a01b0385163314806104aa57506104aa853361014b565b6104c65760405162461bcd60e51b81526004016101f390611036565b61034e8585858585610790565b81518351146105355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055b5760405162461bcd60e51b81526004016101f3906110c9565b3360005b845181101561064257600085828151811061057c5761057c611084565b60200260200101519050600085838151811061059a5761059a611084565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105ea5760405162461bcd60e51b81526004016101f39061110e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610627908490611158565b925050819055505050508061063b906110b0565b905061055f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161069292919061116b565b60405180910390a46106a88187878787876108ba565b505050505050565b816001600160a01b0316836001600160a01b0316036107235760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107b65760405162461bcd60e51b81526004016101f3906110c9565b3360006107c285610a1e565b905060006107cf85610a1e565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108125760405162461bcd60e51b81526004016101f39061110e565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061084f908490611158565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108af848a8a8a8a8a610a69565b505050505050505050565b6001600160a01b0384163b156106a85760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108fe9089908990889088908890600401611199565b6020604051808303816000875af1925050508015610939575060408051601f3d908101601f19168201909252610936918101906111f7565b60015b6109e557610945611214565b806308c379a00361097e5750610959611230565b806109645750610980565b8060405162461bcd60e51b81526004016101f39190610c06565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a5857610a58611084565b602090810291909101015292915050565b6001600160a01b0384163b156106a85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610aad9089908990889088908890600401611302565b6020604051808303816000875af1925050508015610ae8575060408051601f3d908101601f19168201909252610ae5918101906111f7565b60015b610af457610945611214565b6001600160e01b0319811663f23a6e6160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b80356001600160a01b0381168114610b3b57600080fd5b919050565b60008060408385031215610b5357600080fd5b610b5c83610b24565b946020939093013593505050565b6001600160e01b031981168114610b8057600080fd5b50565b600060208284031215610b9557600080fd5b8135610ba081610b6a565b9392505050565b600060208284031215610bb957600080fd5b5035919050565b6000815180845260005b81811015610be657602081850181015186830182015201610bca565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ba06020830184610bc0565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5557610c55610c19565b6040525050565b600067ffffffffffffffff821115610c7657610c76610c19565b5060051b60200190565b600082601f830112610c9157600080fd5b81356020610c9e82610c5c565b604051610cab8282610c2f565b83815260059390931b8501820192828101915086841115610ccb57600080fd5b8286015b84811015610ce65780358352918301918301610ccf565b509695505050505050565b600082601f830112610d0257600080fd5b813567ffffffffffffffff811115610d1c57610d1c610c19565b604051610d33601f8301601f191660200182610c2f565b818152846020838601011115610d4857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d7d57600080fd5b610d8686610b24565b9450610d9460208701610b24565b9350604086013567ffffffffffffffff80821115610db157600080fd5b610dbd89838a01610c80565b94506060880135915080821115610dd357600080fd5b610ddf89838a01610c80565b93506080880135915080821115610df557600080fd5b50610e0288828901610cf1565b9150509295509295909350565b60008060408385031215610e2257600080fd5b823567ffffffffffffffff80821115610e3a57600080fd5b818501915085601f830112610e4e57600080fd5b81356020610e5b82610c5c565b604051610e688282610c2f565b83815260059390931b8501820192828101915089841115610e8857600080fd5b948201945b83861015610ead57610e9e86610b24565b82529482019490820190610e8d565b96505086013592505080821115610ec357600080fd5b50610ed085828601610c80565b9150509250929050565b600081518084526020808501945080840160005b83811015610f0a57815187529582019590820190600101610eee565b509495945050505050565b602081526000610ba06020830184610eda565b60008060408385031215610f3b57600080fd5b610f4483610b24565b915060208301358015158114610f5957600080fd5b809150509250929050565b60008060408385031215610f7757600080fd5b610f8083610b24565b9150610f8e60208401610b24565b90509250929050565b600080600080600060a08688031215610faf57600080fd5b610fb886610b24565b9450610fc660208701610b24565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff057600080fd5b610e0288828901610cf1565b600181811c9082168061101057607f821691505b60208210810361103057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110c2576110c261109a565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561021f5761021f61109a565b60408152600061117e6040830185610eda565b82810360208401526111908185610eda565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111c590830186610eda565b82810360608401526111d78186610eda565b905082810360808401526111eb8185610bc0565b98975050505050505050565b60006020828403121561120957600080fd5b8151610ba081610b6a565b600060033d111561122d5760046000803e5060005160e01c5b90565b600060443d101561123e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561126e57505050505090565b82850191508151818111156112865750505050505090565b843d87010160208285010111156112a05750505050505090565b6112af60208286010187610c2f565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061133c90830184610bc0565b97965050505050505056fea26469706673582212209ff559bb852eb2337744677bdfbaf21d991147431f44d7286dd8d224a06902b064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x162B CODESIZE SUB DUP1 PUSH3 0x162B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x6E JUMP JUMPDEST PUSH3 0x3F DUP2 PUSH3 0x46 JUMP JUMPDEST POP PUSH3 0x29E JUMP JUMPDEST PUSH1 0x2 PUSH3 0x54 DUP3 DUP3 PUSH3 0x1D2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x82 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x9A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0xAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0xC4 JUMPI PUSH3 0xC4 PUSH3 0x58 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0xEF JUMPI PUSH3 0xEF PUSH3 0x58 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x108 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x12C JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x10D JUMP JUMPDEST PUSH1 0x0 DUP7 DUP5 DUP4 ADD ADD MSTORE DUP1 SWAP7 POP POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x158 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x179 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x1CD JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP7 LT ISZERO PUSH3 0x1A8 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x1C9 JUMPI DUP3 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x1B4 JUMP JUMPDEST POP POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x1EE JUMPI PUSH3 0x1EE PUSH3 0x58 JUMP JUMPDEST PUSH3 0x206 DUP2 PUSH3 0x1FF DUP5 SLOAD PUSH3 0x143 JUMP JUMPDEST DUP5 PUSH3 0x17F JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x23E JUMPI PUSH1 0x0 DUP5 ISZERO PUSH3 0x225 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH3 0x1C9 JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x26F JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH3 0x24E JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH3 0x28E JUMPI DUP8 DUP6 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x137D DUP1 PUSH3 0x2AE PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x21F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x21F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3D6 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH2 0x44A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH2 0x423 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43D JUMPI PUSH2 0x43D PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x470 DUP2 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x405 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48A CALLER DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AA JUMPI POP PUSH2 0x4AA DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x790 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57C JUMPI PUSH2 0x57C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x627 SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x63B SWAP1 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x55F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x692 SWAP3 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6A8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C2 DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CF DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x84F SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8AF DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA69 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x939 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x936 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9E5 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x97E JUMPI POP PUSH2 0x959 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH2 0x964 JUMPI POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAF4 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5C DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBCA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC55 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0xC19 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC9E DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCAB DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCCF JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1C PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD33 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xD94 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBD DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDF DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE5B DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE68 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEAD JUMPI PUSH2 0xE9E DUP7 PUSH2 0xB24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE8D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED0 DUP6 DUP3 DUP7 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEEE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF44 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF80 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8E PUSH1 0x20 DUP5 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB8 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xFC6 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1010 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1030 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10C2 JUMPI PUSH2 0x10C2 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x117E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1190 DUP2 DUP6 PUSH2 0xEDA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11C5 SWAP1 DUP4 ADD DUP7 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11D7 DUP2 DUP7 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11EB DUP2 DUP6 PUSH2 0xBC0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x123E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x126E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1286 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12AF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC2F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x133C SWAP1 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 CREATE2 MSIZE 0xBB DUP6 0x2E 0xB2 CALLER PUSH24 0x44677BDFBAF21D991147431F44D7286DD8D224A06902B064 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "24884:16539:0:-:0;;;25421:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;25463:13;25471:4;25463:7;:13::i;:::-;25421:62;24884:16539;;32463:86;32529:4;:13;32536:6;32529:4;:13;:::i;:::-;;32463:86;:::o;14:127:1:-;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1042;226:6;257:2;300;288:9;279:7;275:23;271:32;268:52;;;316:1;313;306:12;268:52;343:16;;-1:-1:-1;;;;;408:14:1;;;405:34;;;435:1;432;425:12;405:34;473:6;462:9;458:22;448:32;;518:7;511:4;507:2;503:13;499:27;489:55;;540:1;537;530:12;489:55;569:2;563:9;591:2;587;584:10;581:36;;;597:18;;:::i;:::-;672:2;666:9;640:2;726:13;;-1:-1:-1;;722:22:1;;;746:2;718:31;714:40;702:53;;;770:18;;;790:22;;;767:46;764:72;;;816:18;;:::i;:::-;856:10;852:2;845:22;891:2;883:6;876:18;931:7;926:2;921;917;913:11;909:20;906:33;903:53;;;952:1;949;942:12;903:53;974:1;965:10;;984:129;998:2;995:1;992:9;984:129;;;1086:10;;;1082:19;;1076:26;1055:14;;;1051:23;;1044:59;1009:10;;;;984:129;;;1155:1;1150:2;1145;1137:6;1133:15;1129:24;1122:35;1176:6;1166:16;;;;;;;;146:1042;;;;:::o;1193:380::-;1272:1;1268:12;;;;1315;;;1336:61;;1390:4;1382:6;1378:17;1368:27;;1336:61;1443:2;1435:6;1432:14;1412:18;1409:38;1406:161;;1489:10;1484:3;1480:20;1477:1;1470:31;1524:4;1521:1;1514:15;1552:4;1549:1;1542:15;1406:161;;1193:380;;;:::o;1704:545::-;1806:2;1801:3;1798:11;1795:448;;;1842:1;1867:5;1863:2;1856:17;1912:4;1908:2;1898:19;1982:2;1970:10;1966:19;1963:1;1959:27;1953:4;1949:38;2018:4;2006:10;2003:20;2000:47;;;-1:-1:-1;2041:4:1;2000:47;2096:2;2091:3;2087:12;2084:1;2080:20;2074:4;2070:31;2060:41;;2151:82;2169:2;2162:5;2159:13;2151:82;;;2214:17;;;2195:1;2184:13;2151:82;;;2155:3;;;1795:448;1704:545;;;:::o;2425:1352::-;2545:10;;-1:-1:-1;;;;;2567:30:1;;2564:56;;;2600:18;;:::i;:::-;2629:97;2719:6;2679:38;2711:4;2705:11;2679:38;:::i;:::-;2673:4;2629:97;:::i;:::-;2781:4;;2845:2;2834:14;;2862:1;2857:663;;;;3564:1;3581:6;3578:89;;;-1:-1:-1;3633:19:1;;;3627:26;3578:89;-1:-1:-1;;2382:1:1;2378:11;;;2374:24;2370:29;2360:40;2406:1;2402:11;;;2357:57;3680:81;;2827:944;;2857:663;1651:1;1644:14;;;1688:4;1675:18;;-1:-1:-1;;2893:20:1;;;3011:236;3025:7;3022:1;3019:14;3011:236;;;3114:19;;;3108:26;3093:42;;3206:27;;;;3174:1;3162:14;;;;3041:19;;3011:236;;;3015:3;3275:6;3266:7;3263:19;3260:201;;;3336:19;;;3330:26;-1:-1:-1;;3419:1:1;3415:14;;;3431:3;3411:24;3407:37;3403:42;3388:58;3373:74;;3260:201;-1:-1:-1;;;;;3507:1:1;3491:14;;;3487:22;3474:36;;-1:-1:-1;2425:1352:1:o;:::-;24884:16539:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfer_1831": {
									"entryPoint": null,
									"id": 1831,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_asSingletonArray_1987": {
									"entryPoint": 2590,
									"id": 1987,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_beforeTokenTransfer_1812": {
									"entryPoint": null,
									"id": 1812,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeBatchTransferAcceptanceCheck_1959": {
									"entryPoint": 2234,
									"id": 1959,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_doSafeTransferAcceptanceCheck_1894": {
									"entryPoint": 2665,
									"id": 1894,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": null,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_safeBatchTransferFrom_1310": {
									"entryPoint": 1235,
									"id": 1310,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_safeTransferFrom_1175": {
									"entryPoint": 1936,
									"id": 1175,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@_setApprovalForAll_1793": {
									"entryPoint": 1712,
									"id": 1793,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@balanceOfBatch_945": {
									"entryPoint": 853,
									"id": 945,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_881": {
									"entryPoint": 396,
									"id": 881,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isApprovedForAll_980": {
									"entryPoint": null,
									"id": 980,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@isContract_255": {
									"entryPoint": null,
									"id": 255,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeBatchTransferFrom_1058": {
									"entryPoint": 777,
									"id": 1058,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@safeTransferFrom_1018": {
									"entryPoint": 1166,
									"id": 1018,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@setApprovalForAll_962": {
									"entryPoint": 1151,
									"id": 962,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_599": {
									"entryPoint": null,
									"id": 599,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_841": {
									"entryPoint": 549,
									"id": 841,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@uri_853": {
									"entryPoint": 629,
									"id": 853,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 2852,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_array_uint256_dyn": {
									"entryPoint": 3200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 3313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 3940,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 3429,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 3991,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 2880,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 3599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 2947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4599,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 2983,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_array_uint256_dyn": {
									"entryPoint": 3802,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4505,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4866,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 4459,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3078,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4297,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_allocation_size_array_uint256_dyn": {
									"entryPoint": 3164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4440,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 3119,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"increment_t_uint256": {
									"entryPoint": 4272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4250,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 4228,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 3097,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"return_data_selector": {
									"entryPoint": 4628,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"try_decode_error_message": {
									"entryPoint": 4656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"validator_revert_bytes4": {
									"entryPoint": 2922,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:15860:1",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:1",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "165:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "174:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "177:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "150:3:1",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "155:1:1",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:1"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "159:1:1",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:50:1"
															},
															"nodeType": "YulIf",
															"src": "111:70:1"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "14:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "279:167:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "325:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "334:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "337:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "327:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "327:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "327:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "300:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "309:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "296:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "296:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "321:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "292:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "292:32:1"
															},
															"nodeType": "YulIf",
															"src": "289:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "350:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "379:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "360:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "360:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "350:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "398:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "425:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "436:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "421:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "421:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "408:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "408:32:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "398:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "237:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "248:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "260:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "268:6:1",
														"type": ""
													}
												],
												"src": "192:254:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:76:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "562:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "574:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "585:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "570:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "562:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "604:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "615:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "597:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "597:25:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "521:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "532:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "543:4:1",
														"type": ""
													}
												],
												"src": "451:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "677:87:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "742:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "751:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "754:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "744:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "744:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "744:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "700:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "711:5:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "722:3:1",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "727:10:1",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nodeType": "YulIdentifier",
																							"src": "718:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "718:20:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "707:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "707:32:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "697:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "697:43:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "690:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "690:51:1"
															},
															"nodeType": "YulIf",
															"src": "687:71:1"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "666:5:1",
														"type": ""
													}
												],
												"src": "633:131:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "838:176:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "884:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "893:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "896:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "886:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "886:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "859:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "868:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "855:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "855:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "880:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "851:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "851:32:1"
															},
															"nodeType": "YulIf",
															"src": "848:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "909:36:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "935:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "922:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "922:23:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "913:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "978:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "954:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "954:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "954:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "993:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1003:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "993:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "804:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "815:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "827:6:1",
														"type": ""
													}
												],
												"src": "769:245:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1114:92:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1124:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1136:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1147:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1132:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1132:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1124:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1166:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nodeType": "YulIdentifier",
																						"src": "1191:6:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "1184:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1184:14:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1177:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1177:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1159:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1159:41:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1159:41:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1083:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1094:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1105:4:1",
														"type": ""
													}
												],
												"src": "1019:187:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1281:110:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1327:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1336:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1329:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1329:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1329:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1302:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1311:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1298:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1298:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1323:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1294:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1294:32:1"
															},
															"nodeType": "YulIf",
															"src": "1291:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1352:33:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1375:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1362:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1362:23:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1352:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1247:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1258:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1270:6:1",
														"type": ""
													}
												],
												"src": "1211:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1446:373:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1456:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1476:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1470:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1470:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1460:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1498:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1491:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1491:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1491:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1519:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1528:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "1523:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1590:110:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1604:14:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1614:4:1",
																			"type": "",
																			"value": "0x20"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nodeType": "YulTypedName",
																				"src": "1608:2:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "pos",
																									"nodeType": "YulIdentifier",
																									"src": "1646:3:1"
																								},
																								{
																									"name": "i",
																									"nodeType": "YulIdentifier",
																									"src": "1651:1:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1642:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1642:11:1"
																						},
																						{
																							"name": "_1",
																							"nodeType": "YulIdentifier",
																							"src": "1655:2:1"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "1638:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1638:20:1"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nodeType": "YulIdentifier",
																											"src": "1674:5:1"
																										},
																										{
																											"name": "i",
																											"nodeType": "YulIdentifier",
																											"src": "1681:1:1"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nodeType": "YulIdentifier",
																										"src": "1670:3:1"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1670:13:1"
																								},
																								{
																									"name": "_1",
																									"nodeType": "YulIdentifier",
																									"src": "1685:2:1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nodeType": "YulIdentifier",
																								"src": "1666:3:1"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1666:22:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "1660:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1660:29:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1631:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1631:59:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1631:59:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1549:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1552:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1546:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1546:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1560:21:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1562:17:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1571:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1574:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1567:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1567:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1562:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1542:3:1",
																"statements": []
															},
															"src": "1538:162:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "1724:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "1729:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1720:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1720:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1716:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1716:27:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1745:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1709:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1709:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1709:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1756:57:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1771:3:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nodeType": "YulIdentifier",
																								"src": "1784:6:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1792:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "1780:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1780:15:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "1801:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "1797:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "1797:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1776:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1776:29:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1767:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1767:39:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1808:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1763:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1763:50:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "1756:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1423:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1430:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1438:3:1",
														"type": ""
													}
												],
												"src": "1396:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1945:99:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1962:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1973:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1955:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1955:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1955:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1985:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "2011:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2023:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2034:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2019:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2019:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "1993:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1993:45:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1985:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1914:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1925:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1936:4:1",
														"type": ""
													}
												],
												"src": "1824:220:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2081:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2098:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2105:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2110:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2101:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2101:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2091:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2091:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2091:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2138:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2141:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2131:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2131:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2131:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2162:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2165:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2155:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2155:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2155:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "2049:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2228:202:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2238:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nodeType": "YulIdentifier",
																						"src": "2276:4:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2272:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2272:13:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2291:2:1",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "2287:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2287:7:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2268:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2268:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2256:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2256:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "2242:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2371:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2373:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2373:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2373:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2314:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2326:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2311:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2311:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "2350:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "2362:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "2347:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2347:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "2308:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2308:62:1"
															},
															"nodeType": "YulIf",
															"src": "2305:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2409:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "2413:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2402:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2402:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "2210:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2218:4:1",
														"type": ""
													}
												],
												"src": "2181:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2504:114:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2548:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "2550:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2550:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2550:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "2520:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2528:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "2517:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2517:30:1"
															},
															"nodeType": "YulIf",
															"src": "2514:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2579:33:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2595:1:1",
																				"type": "",
																				"value": "5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "2598:6:1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "2591:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2591:14:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2607:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2587:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:25:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "2579:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "2484:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "2495:4:1",
														"type": ""
													}
												],
												"src": "2435:183:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:660:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2736:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2745:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2748:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2738:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2738:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2738:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2715:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2723:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2711:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2711:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "2730:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "2707:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2707:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2700:35:1"
															},
															"nodeType": "YulIf",
															"src": "2697:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2761:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2784:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2771:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2771:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2765:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2800:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2810:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "2804:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2823:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2873:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "2833:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2833:43:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "2827:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2885:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "2899:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2899:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "2889:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2937:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "2945:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "2917:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2917:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2917:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2957:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "2968:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "2961:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "2990:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "2998:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2983:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2983:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2983:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3010:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3021:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3029:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3017:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3017:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "3010:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3041:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3063:6:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3075:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3078:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "3071:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3071:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3059:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3059:23:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3084:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3055:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3055:32:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "3045:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3115:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3124:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3127:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3117:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3117:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3117:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3102:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3110:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3099:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3099:15:1"
															},
															"nodeType": "YulIf",
															"src": "3096:35:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3140:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3155:6:1"
																	},
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "3163:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3151:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3151:15:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "3144:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3231:86:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3252:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "3270:3:1"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "3257:12:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "3257:17:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "3245:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3245:30:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3245:30:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "3288:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "3299:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3304:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3295:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3295:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "3288:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "3186:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "3191:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "3183:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3183:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "3199:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "3201:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "3212:3:1"
																				},
																				{
																					"name": "_2",
																					"nodeType": "YulIdentifier",
																					"src": "3217:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "3208:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3208:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "3201:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "3179:3:1",
																"statements": []
															},
															"src": "3175:142:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3326:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3335:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3326:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2661:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2669:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "2677:5:1",
														"type": ""
													}
												],
												"src": "2623:724:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3404:503:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3453:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3462:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3465:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3455:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3455:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3455:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3432:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "3440:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3428:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3428:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "3447:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "3424:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3424:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3417:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3417:35:1"
															},
															"nodeType": "YulIf",
															"src": "3414:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3478:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3501:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3488:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3488:20:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "3482:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3547:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "3549:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3549:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3549:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3523:2:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3527:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3520:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3520:26:1"
															},
															"nodeType": "YulIf",
															"src": "3517:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "3578:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3598:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3592:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3592:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "3582:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3630:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "_1",
																								"nodeType": "YulIdentifier",
																								"src": "3650:2:1"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3654:4:1",
																								"type": "",
																								"value": "0x1f"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nodeType": "YulIdentifier",
																							"src": "3646:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3646:13:1"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "3665:2:1",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nodeType": "YulIdentifier",
																							"src": "3661:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "3661:7:1"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "3642:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3642:27:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3671:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3638:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3638:38:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "3610:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3610:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3610:67:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "3693:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3701:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3686:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3686:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3686:18:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3752:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3761:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3764:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3754:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3754:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3754:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3727:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3735:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3723:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3723:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3740:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:26:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "3747:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "3716:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3716:35:1"
															},
															"nodeType": "YulIf",
															"src": "3713:55:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "3794:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3802:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3790:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "3813:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3821:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3809:17:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "3828:2:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "3777:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3777:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3777:54:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nodeType": "YulIdentifier",
																						"src": "3855:6:1"
																					},
																					{
																						"name": "_1",
																						"nodeType": "YulIdentifier",
																						"src": "3863:2:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3851:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3851:15:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3868:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:26:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3875:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3840:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3840:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3840:37:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3886:15:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "3895:6:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "3886:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3378:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3386:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "3394:5:1",
														"type": ""
													}
												],
												"src": "3352:555:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4109:746:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4156:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4165:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4168:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4158:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4158:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4158:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "4130:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4139:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4126:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4151:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "4122:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4122:33:1"
															},
															"nodeType": "YulIf",
															"src": "4119:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4181:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4210:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4191:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4191:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "4181:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4229:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4262:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4273:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4258:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4258:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "4239:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4239:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "4229:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4286:46:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4317:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4328:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4313:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4300:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4300:32:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "4290:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4341:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4351:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "4345:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4396:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4405:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4408:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4398:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4398:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4398:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "4384:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4392:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4381:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4381:14:1"
															},
															"nodeType": "YulIf",
															"src": "4378:34:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4421:71:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4464:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "4475:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4460:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4460:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4484:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4431:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4431:61:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "4421:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4501:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4517:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4517:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "4505:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4578:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4587:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4590:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4580:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4580:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4580:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "4564:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4574:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4561:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4561:16:1"
															},
															"nodeType": "YulIf",
															"src": "4558:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4603:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4646:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "4657:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4642:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4642:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4668:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "4613:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4613:63:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "4603:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "4685:49:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4718:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4729:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4714:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4714:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "4701:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4701:33:1"
															},
															"variables": [
																{
																	"name": "offset_2",
																	"nodeType": "YulTypedName",
																	"src": "4689:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "4763:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4772:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "4775:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "4765:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "4765:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "4765:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_2",
																		"nodeType": "YulIdentifier",
																		"src": "4749:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "4759:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "4746:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4746:16:1"
															},
															"nodeType": "YulIf",
															"src": "4743:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4788:61:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4819:9:1"
																			},
																			{
																				"name": "offset_2",
																				"nodeType": "YulIdentifier",
																				"src": "4830:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4815:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4815:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "4841:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "4798:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4798:51:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "4788:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4043:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4054:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4066:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4074:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4082:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4090:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "4098:6:1",
														"type": ""
													}
												],
												"src": "3912:943:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4997:1071:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5043:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5052:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5055:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5045:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5045:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5045:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5018:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5027:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5014:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5014:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5039:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "5010:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5010:32:1"
															},
															"nodeType": "YulIf",
															"src": "5007:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5068:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5095:9:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5082:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5082:23:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "5072:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5114:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5124:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "5118:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5169:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5178:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5181:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5171:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5171:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5171:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5157:6:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5165:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5154:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5154:14:1"
															},
															"nodeType": "YulIf",
															"src": "5151:34:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5194:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5208:9:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5219:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5204:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5204:22:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "5198:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5274:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5283:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5286:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5276:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5276:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5276:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nodeType": "YulIdentifier",
																						"src": "5253:2:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5257:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5249:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5249:13:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "5264:7:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "5238:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5238:35:1"
															},
															"nodeType": "YulIf",
															"src": "5235:55:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5299:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5322:2:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5309:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5309:16:1"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "5303:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5334:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "5344:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nodeType": "YulTypedName",
																	"src": "5338:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5357:53:1",
															"value": {
																"arguments": [
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5407:2:1"
																	}
																],
																"functionName": {
																	"name": "array_allocation_size_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5367:39:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:43:1"
															},
															"variables": [
																{
																	"name": "_5",
																	"nodeType": "YulTypedName",
																	"src": "5361:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5419:23:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5439:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5433:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5433:9:1"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nodeType": "YulTypedName",
																	"src": "5423:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5471:6:1"
																	},
																	{
																		"name": "_5",
																		"nodeType": "YulIdentifier",
																		"src": "5479:2:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5451:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5451:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5451:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5491:17:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5502:6:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "5495:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5524:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "5532:2:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5517:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5517:18:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5517:18:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5544:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5555:6:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5563:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5551:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5551:15:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "5544:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5575:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "5597:2:1"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5605:1:1",
																						"type": "",
																						"value": "5"
																					},
																					{
																						"name": "_3",
																						"nodeType": "YulIdentifier",
																						"src": "5608:2:1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nodeType": "YulIdentifier",
																					"src": "5601:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5601:10:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5593:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5593:19:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5614:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5589:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5589:28:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "5579:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5649:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5658:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5661:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5651:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5651:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5651:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5632:6:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5640:7:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5629:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5629:19:1"
															},
															"nodeType": "YulIf",
															"src": "5626:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5674:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nodeType": "YulIdentifier",
																		"src": "5689:2:1"
																	},
																	{
																		"name": "_4",
																		"nodeType": "YulIdentifier",
																		"src": "5693:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5685:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5685:11:1"
															},
															"variables": [
																{
																	"name": "src",
																	"nodeType": "YulTypedName",
																	"src": "5678:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5761:92:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5782:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nodeType": "YulIdentifier",
																							"src": "5806:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_address",
																						"nodeType": "YulIdentifier",
																						"src": "5787:18:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "5787:23:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "5775:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5775:36:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5775:36:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "5824:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "5835:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5840:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5831:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5831:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "5716:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "5721:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "5713:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5713:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "5729:23:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "5731:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "5742:3:1"
																				},
																				{
																					"name": "_4",
																					"nodeType": "YulIdentifier",
																					"src": "5747:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "5738:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5738:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "5731:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "5709:3:1",
																"statements": []
															},
															"src": "5705:148:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5862:16:1",
															"value": {
																"name": "memPtr",
																"nodeType": "YulIdentifier",
																"src": "5872:6:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "5862:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5887:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5920:9:1"
																			},
																			{
																				"name": "_4",
																				"nodeType": "YulIdentifier",
																				"src": "5931:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5916:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5916:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "5903:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5903:32:1"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nodeType": "YulTypedName",
																	"src": "5891:8:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5964:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5973:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "5976:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "5966:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5966:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5966:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nodeType": "YulIdentifier",
																		"src": "5950:8:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "5960:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5947:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5947:16:1"
															},
															"nodeType": "YulIf",
															"src": "5944:36:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5989:73:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6032:9:1"
																			},
																			{
																				"name": "offset_1",
																				"nodeType": "YulIdentifier",
																				"src": "6043:8:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6028:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6028:24:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "6054:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "5999:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5999:63:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "5989:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4955:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "4966:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4978:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4986:6:1",
														"type": ""
													}
												],
												"src": "4860:1208:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6134:374:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6144:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6164:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6158:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6158:12:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "6148:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6186:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6191:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6179:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6179:19:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6207:14:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6217:4:1",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "6211:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6230:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6241:3:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6246:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6237:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6237:12:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "6230:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6258:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6276:5:1"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "6283:2:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6272:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6272:14:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "6262:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6295:10:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "6304:1:1",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nodeType": "YulTypedName",
																	"src": "6299:1:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6363:120:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6384:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "srcPtr",
																							"nodeType": "YulIdentifier",
																							"src": "6395:6:1"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "6389:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "6389:13:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "6377:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6377:26:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6377:26:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6416:19:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "6427:3:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6432:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6423:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6423:12:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "6416:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "6448:25:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "6462:6:1"
																				},
																				{
																					"name": "_1",
																					"nodeType": "YulIdentifier",
																					"src": "6470:2:1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6458:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6458:15:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "6448:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "6325:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6328:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6322:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6322:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "6336:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "6338:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "6347:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6350:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "6343:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6343:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "6338:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "6318:3:1",
																"statements": []
															},
															"src": "6314:169:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6492:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "6499:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "6492:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_array_uint256_dyn",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6111:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6118:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "6126:3:1",
														"type": ""
													}
												],
												"src": "6073:435:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6664:110:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6681:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6692:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6674:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6674:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6674:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6704:64:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6753:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6764:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6749:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6749:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "6712:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6712:56:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6704:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6633:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6644:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6655:4:1",
														"type": ""
													}
												],
												"src": "6513:261:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6863:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6909:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6918:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "6921:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "6911:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6911:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6911:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "6884:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6893:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6880:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6905:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "6876:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6876:32:1"
															},
															"nodeType": "YulIf",
															"src": "6873:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6934:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6963:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "6944:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6944:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "6934:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6982:45:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7012:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7023:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7008:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7008:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "6995:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6995:32:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "6986:5:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7080:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7089:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7092:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7082:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7082:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7082:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7049:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "7070:5:1"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "7063:6:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "7063:13:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "7056:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7056:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7046:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7046:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7039:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7039:40:1"
															},
															"nodeType": "YulIf",
															"src": "7036:60:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7105:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7115:5:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7105:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6821:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "6832:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6844:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "6852:6:1",
														"type": ""
													}
												],
												"src": "6779:347:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7218:173:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7264:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7273:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7276:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7266:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7266:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7266:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7260:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7231:32:1"
															},
															"nodeType": "YulIf",
															"src": "7228:52:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7289:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7318:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7299:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7299:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7289:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7337:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7370:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7381:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7366:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7366:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7347:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7347:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7176:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7187:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7199:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7207:6:1",
														"type": ""
													}
												],
												"src": "7131:260:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7543:459:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7590:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7599:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7602:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7592:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7592:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7592:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "7564:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7573:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7560:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7585:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "7556:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7556:33:1"
															},
															"nodeType": "YulIf",
															"src": "7553:53:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7615:39:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7644:9:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7625:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7625:29:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "7615:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7663:48:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7696:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7707:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7692:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7692:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "7673:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7673:38:1"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "7663:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7720:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7758:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7743:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7730:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7730:32:1"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "7720:6:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7771:42:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7798:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7809:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7794:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7794:18:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7781:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7781:32:1"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "7771:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7822:47:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7853:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7864:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7849:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7849:19:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "7836:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7836:33:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "7826:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7912:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7921:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7924:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7914:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7914:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7914:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "7884:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7892:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7881:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:30:1"
															},
															"nodeType": "YulIf",
															"src": "7878:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:59:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7968:9:1"
																			},
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "7979:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7964:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7964:22:1"
																	},
																	{
																		"name": "dataEnd",
																		"nodeType": "YulIdentifier",
																		"src": "7988:7:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nodeType": "YulIdentifier",
																	"src": "7947:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7947:49:1"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "7937:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7477:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "7488:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7500:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "7508:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "7516:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "7524:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "7532:6:1",
														"type": ""
													}
												],
												"src": "7396:606:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8181:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8198:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8209:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8191:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8191:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8191:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8232:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8243:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8228:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8228:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8248:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8221:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8221:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8221:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8271:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8282:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8267:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8267:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8287:34:1",
																		"type": "",
																		"value": "ERC1155: address zero is not a v"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8260:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8260:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8260:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8353:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8338:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8338:18:1"
																	},
																	{
																		"hexValue": "616c6964206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8358:12:1",
																		"type": "",
																		"value": "alid owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8331:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8331:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8331:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8380:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8392:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8403:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8388:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8388:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8380:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8158:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8172:4:1",
														"type": ""
													}
												],
												"src": "8007:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8473:325:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8483:22:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8497:1:1",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8500:4:1"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nodeType": "YulIdentifier",
																	"src": "8493:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8493:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "8483:6:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8514:38:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "8544:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8550:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8540:12:1"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nodeType": "YulTypedName",
																	"src": "8518:18:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8591:31:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "8593:27:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nodeType": "YulIdentifier",
																					"src": "8607:6:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8615:4:1",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nodeType": "YulIdentifier",
																				"src": "8603:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8603:17:1"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8593:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8571:18:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8564:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8564:26:1"
															},
															"nodeType": "YulIf",
															"src": "8561:61:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8681:111:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8702:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8709:3:1",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "8714:10:1",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "8705:3:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "8705:20:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8695:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8695:31:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8695:31:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8746:1:1",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8749:4:1",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "8739:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8739:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8739:15:1"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8774:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8777:4:1",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8767:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8767:15:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8767:15:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nodeType": "YulIdentifier",
																		"src": "8637:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8660:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8668:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8657:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8657:14:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "8634:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8634:38:1"
															},
															"nodeType": "YulIf",
															"src": "8631:161:1"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "8453:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8462:6:1",
														"type": ""
													}
												],
												"src": "8418:380:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8977:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8994:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9005:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8987:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8987:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8987:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9028:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9039:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9024:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9024:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9044:2:1",
																		"type": "",
																		"value": "46"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9017:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9017:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9017:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9067:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9078:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9063:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9063:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9083:34:1",
																		"type": "",
																		"value": "ERC1155: caller is not token own"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9056:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9056:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9056:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9138:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9149:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9134:18:1"
																	},
																	{
																		"hexValue": "6572206f7220617070726f766564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9154:16:1",
																		"type": "",
																		"value": "er or approved"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9127:44:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9127:44:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9180:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9192:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9203:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9188:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9188:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9180:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8954:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8968:4:1",
														"type": ""
													}
												],
												"src": "8803:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9392:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9409:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9420:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9402:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9402:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9402:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9443:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9454:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9439:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9439:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9459:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9432:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9432:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9432:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9482:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9493:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9478:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9478:18:1"
																	},
																	{
																		"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9498:34:1",
																		"type": "",
																		"value": "ERC1155: accounts and ids length"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9471:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9471:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9553:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9564:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9549:18:1"
																	},
																	{
																		"hexValue": "206d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9569:11:1",
																		"type": "",
																		"value": " mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9542:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9542:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9590:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9602:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9613:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9598:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9590:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9369:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9383:4:1",
														"type": ""
													}
												],
												"src": "9218:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9660:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9677:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9684:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9689:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9680:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9680:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9670:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9670:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9670:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9717:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9720:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9710:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9710:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9710:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9741:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9744:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9734:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9734:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9734:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "9628:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9792:95:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9809:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9816:3:1",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9821:10:1",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "9812:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9812:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9802:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9802:31:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9849:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9852:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9842:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9842:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9842:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9873:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9876:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9866:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9866:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9866:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "9760:127:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9939:88:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9970:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9972:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9972:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9972:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9955:5:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9966:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9962:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9962:6:1"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "9952:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9952:17:1"
															},
															"nodeType": "YulIf",
															"src": "9949:43:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10001:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10012:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10019:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10008:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10008:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "10001:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9921:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "9931:3:1",
														"type": ""
													}
												],
												"src": "9892:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10206:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10223:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10234:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10216:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10216:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10216:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10257:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10268:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10253:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10253:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10273:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10246:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10246:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10246:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10296:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10307:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10292:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10292:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e67746820",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10312:34:1",
																		"type": "",
																		"value": "ERC1155: ids and amounts length "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10285:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10285:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10285:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10367:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10378:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10363:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10363:18:1"
																	},
																	{
																		"hexValue": "6d69736d61746368",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10383:10:1",
																		"type": "",
																		"value": "mismatch"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10356:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10356:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10356:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10403:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10415:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10426:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10411:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10411:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10403:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10183:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10197:4:1",
														"type": ""
													}
												],
												"src": "10032:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10615:227:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10632:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10643:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10625:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10625:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10666:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10677:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10662:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10682:2:1",
																		"type": "",
																		"value": "37"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10655:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10655:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10705:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10716:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10701:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10701:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f206164",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10721:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to the zero ad"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10694:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10694:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10776:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10787:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10772:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10772:18:1"
																	},
																	{
																		"hexValue": "6472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10792:7:1",
																		"type": "",
																		"value": "dress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10765:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10765:35:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10765:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10809:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10821:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10832:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10817:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10817:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10809:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10592:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10606:4:1",
														"type": ""
													}
												],
												"src": "10441:401:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11021:232:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11038:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11049:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11031:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11031:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11031:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11072:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11083:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11068:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11068:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11088:2:1",
																		"type": "",
																		"value": "42"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11061:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11061:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11061:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11111:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11122:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11107:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11107:18:1"
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11127:34:1",
																		"type": "",
																		"value": "ERC1155: insufficient balance fo"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11100:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11100:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11100:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11182:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11193:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11178:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11178:18:1"
																	},
																	{
																		"hexValue": "72207472616e73666572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11198:12:1",
																		"type": "",
																		"value": "r transfer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11171:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11171:40:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11171:40:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11220:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11232:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11243:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11228:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11228:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11220:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10998:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11012:4:1",
														"type": ""
													}
												],
												"src": "10847:406:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11306:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11316:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11327:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "11330:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11323:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11323:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "11316:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11355:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "11357:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11357:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11357:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "11347:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "11350:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "11344:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11344:10:1"
															},
															"nodeType": "YulIf",
															"src": "11341:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "11289:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "11292:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "11298:3:1",
														"type": ""
													}
												],
												"src": "11258:125:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11617:236:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11634:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11645:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11627:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11627:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "11657:70:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11700:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11712:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11723:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11708:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11708:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11671:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11671:56:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "11661:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11747:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11758:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11743:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11743:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "11767:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11775:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11763:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11763:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11736:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11736:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11736:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11795:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "11832:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "11840:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "11803:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11803:44:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11795:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11578:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11589:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11597:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11608:4:1",
														"type": ""
													}
												],
												"src": "11388:465:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12032:231:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12049:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12060:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12042:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12042:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12042:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12083:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12094:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12079:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12079:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12099:2:1",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12072:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12072:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12122:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12133:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12118:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12118:18:1"
																	},
																	{
																		"hexValue": "455243313135353a2073657474696e6720617070726f76616c20737461747573",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12138:34:1",
																		"type": "",
																		"value": "ERC1155: setting approval status"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12111:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12111:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12111:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12193:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12204:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12189:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12189:18:1"
																	},
																	{
																		"hexValue": "20666f722073656c66",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12209:11:1",
																		"type": "",
																		"value": " for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12182:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12182:39:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12182:39:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12230:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12242:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12253:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12238:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12230:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12009:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12023:4:1",
														"type": ""
													}
												],
												"src": "11858:405:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12397:119:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12407:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12419:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12430:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12415:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12415:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12407:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12449:9:1"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12460:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12442:25:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12442:25:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12487:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12498:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12483:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12483:18:1"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12503:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12476:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12476:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12476:34:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12358:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12369:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12377:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12388:4:1",
														"type": ""
													}
												],
												"src": "12268:248:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12852:496:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "12862:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12880:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12885:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "12876:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12876:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12889:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "12872:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12872:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "12866:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12907:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "12922:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12930:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12918:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12918:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12900:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12900:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12900:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12954:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12965:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12950:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12950:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "12974:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "12982:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "12970:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12970:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12943:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12943:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12943:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13006:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13017:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13002:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13002:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13022:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12995:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12995:31:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12995:31:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13035:71:1",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "13078:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13090:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13101:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13086:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13086:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13049:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13049:57:1"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nodeType": "YulTypedName",
																	"src": "13039:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13137:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13122:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nodeType": "YulIdentifier",
																				"src": "13146:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13154:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13142:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13142:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13115:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13115:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13115:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13174:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "13217:6:1"
																	},
																	{
																		"name": "tail_1",
																		"nodeType": "YulIdentifier",
																		"src": "13225:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_array_uint256_dyn",
																	"nodeType": "YulIdentifier",
																	"src": "13188:28:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13188:44:1"
															},
															"variables": [
																{
																	"name": "tail_2",
																	"nodeType": "YulTypedName",
																	"src": "13178:6:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13252:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13263:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13248:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13248:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_2",
																				"nodeType": "YulIdentifier",
																				"src": "13273:6:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13281:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13269:22:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13241:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13241:51:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13241:51:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13301:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "13327:6:1"
																	},
																	{
																		"name": "tail_2",
																		"nodeType": "YulIdentifier",
																		"src": "13335:6:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "13309:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13309:33:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13301:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12789:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "12800:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "12808:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12816:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12824:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12832:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12843:4:1",
														"type": ""
													}
												],
												"src": "12521:827:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13433:169:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13479:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13488:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13491:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "13481:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13481:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13481:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "13454:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13463:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "13450:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13450:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13475:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "13446:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13446:32:1"
															},
															"nodeType": "YulIf",
															"src": "13443:52:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13504:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13523:9:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13517:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13517:16:1"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "13508:5:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "13566:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "13542:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13542:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13542:30:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13581:15:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "13591:5:1"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "13581:6:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13399:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "13410:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13422:6:1",
														"type": ""
													}
												],
												"src": "13353:249:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13650:136:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13695:85:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13724:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13727:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13730:1:1",
																					"type": "",
																					"value": "4"
																				}
																			],
																			"functionName": {
																				"name": "returndatacopy",
																				"nodeType": "YulIdentifier",
																				"src": "13709:14:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13709:23:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13709:23:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "13745:25:1",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "13756:3:1",
																					"type": "",
																					"value": "224"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "13767:1:1",
																							"type": "",
																							"value": "0"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nodeType": "YulIdentifier",
																						"src": "13761:5:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "13761:8:1"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "13752:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13752:18:1"
																		},
																		"variableNames": [
																			{
																				"name": "sig",
																				"nodeType": "YulIdentifier",
																				"src": "13745:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13666:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13666:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13684:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13663:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13663:23:1"
															},
															"nodeType": "YulIf",
															"src": "13660:120:1"
														}
													]
												},
												"name": "return_data_selector",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "sig",
														"nodeType": "YulTypedName",
														"src": "13642:3:1",
														"type": ""
													}
												],
												"src": "13607:179:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13838:624:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13878:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "13880:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "returndatasize",
																			"nodeType": "YulIdentifier",
																			"src": "13854:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13854:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13872:4:1",
																		"type": "",
																		"value": "0x44"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "13851:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13851:26:1"
															},
															"nodeType": "YulIf",
															"src": "13848:39:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13896:21:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13914:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "13908:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13908:9:1"
															},
															"variables": [
																{
																	"name": "data",
																	"nodeType": "YulTypedName",
																	"src": "13900:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13926:16:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13940:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nodeType": "YulIdentifier",
																	"src": "13936:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13936:6:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13930:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "13966:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13972:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [],
																				"functionName": {
																					"name": "returndatasize",
																					"nodeType": "YulIdentifier",
																					"src": "13979:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "13979:16:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "13997:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13975:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13975:25:1"
																	}
																],
																"functionName": {
																	"name": "returndatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "13951:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13951:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13951:50:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14010:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14030:4:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14024:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14024:11:1"
															},
															"variables": [
																{
																	"name": "offset",
																	"nodeType": "YulTypedName",
																	"src": "14014:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14044:26:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "returndatasize",
																	"nodeType": "YulIdentifier",
																	"src": "14054:14:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14054:16:1"
															},
															"variables": [
																{
																	"name": "_2",
																	"nodeType": "YulTypedName",
																	"src": "14048:2:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14079:28:1",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "14089:18:1",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_3",
																	"nodeType": "YulTypedName",
																	"src": "14083:2:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14165:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14167:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "14125:6:1"
																			},
																			{
																				"name": "_3",
																				"nodeType": "YulIdentifier",
																				"src": "14133:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14122:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14122:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14145:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14153:4:1",
																						"type": "",
																						"value": "0x24"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14141:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14141:17:1"
																			},
																			{
																				"name": "_2",
																				"nodeType": "YulIdentifier",
																				"src": "14160:2:1"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14138:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14138:25:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "14119:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14119:45:1"
															},
															"nodeType": "YulIf",
															"src": "14116:58:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14183:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14198:4:1"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14204:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14194:17:1"
															},
															"variables": [
																{
																	"name": "msg",
																	"nodeType": "YulTypedName",
																	"src": "14187:3:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14220:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "msg",
																		"nodeType": "YulIdentifier",
																		"src": "14240:3:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "14234:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14234:10:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "14224:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14271:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14273:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14259:6:1"
																	},
																	{
																		"name": "_3",
																		"nodeType": "YulIdentifier",
																		"src": "14267:2:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14256:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14256:14:1"
															},
															"nodeType": "YulIf",
															"src": "14253:27:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14362:9:1",
																"statements": [
																	{
																		"nodeType": "YulLeave",
																		"src": "14364:5:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "msg",
																						"nodeType": "YulIdentifier",
																						"src": "14303:3:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14308:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14299:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14299:16:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14317:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14295:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14295:27:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "data",
																						"nodeType": "YulIdentifier",
																						"src": "14332:4:1"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "returndatasize",
																							"nodeType": "YulIdentifier",
																							"src": "14338:14:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "14338:16:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14328:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14328:27:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14357:2:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14324:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14324:36:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14292:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14292:69:1"
															},
															"nodeType": "YulIf",
															"src": "14289:82:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "data",
																		"nodeType": "YulIdentifier",
																		"src": "14400:4:1"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "14414:6:1"
																					},
																					{
																						"name": "length",
																						"nodeType": "YulIdentifier",
																						"src": "14422:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "14410:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14410:19:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14431:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14406:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14406:30:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "14380:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14380:57:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14380:57:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14446:10:1",
															"value": {
																"name": "msg",
																"nodeType": "YulIdentifier",
																"src": "14453:3:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "14446:3:1"
																}
															]
														}
													]
												},
												"name": "try_decode_error_message",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "13830:3:1",
														"type": ""
													}
												],
												"src": "13791:671:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14641:242:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14658:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14669:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14651:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14651:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14651:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14692:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14703:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14688:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14688:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14708:2:1",
																		"type": "",
																		"value": "52"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14681:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14681:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14681:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14731:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14742:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14727:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14727:18:1"
																	},
																	{
																		"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14747:34:1",
																		"type": "",
																		"value": "ERC1155: transfer to non-ERC1155"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14720:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14720:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14720:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "14802:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14813:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "14798:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14798:18:1"
																	},
																	{
																		"hexValue": "526563656976657220696d706c656d656e746572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "14818:22:1",
																		"type": "",
																		"value": "Receiver implementer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14791:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14791:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14791:50:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14850:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "14862:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14873:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14858:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14858:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "14850:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "14618:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "14632:4:1",
														"type": ""
													}
												],
												"src": "14467:416:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15062:230:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15079:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15090:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15072:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15072:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15072:21:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15113:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15124:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15109:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15109:18:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15129:2:1",
																		"type": "",
																		"value": "40"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15102:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15102:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15102:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15152:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15163:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15148:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15148:18:1"
																	},
																	{
																		"hexValue": "455243313135353a204552433131353552656365697665722072656a65637465",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15168:34:1",
																		"type": "",
																		"value": "ERC1155: ERC1155Receiver rejecte"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15141:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15141:62:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15141:62:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15223:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15234:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15219:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15219:18:1"
																	},
																	{
																		"hexValue": "6420746f6b656e73",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "15239:10:1",
																		"type": "",
																		"value": "d tokens"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15212:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15212:38:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15212:38:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15259:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15271:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15282:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15267:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15267:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15259:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15039:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15053:4:1",
														"type": ""
													}
												],
												"src": "14888:404:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15528:330:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15538:29:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15556:3:1",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15561:1:1",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nodeType": "YulIdentifier",
																			"src": "15552:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15552:11:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15565:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "15548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15548:19:1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "15542:2:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "15583:9:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "15598:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15606:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15594:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15594:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15576:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15576:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15630:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15641:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15626:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15626:18:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "15650:6:1"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "15658:2:1"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "15646:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15646:15:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15619:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15619:43:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15619:43:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15682:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15693:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15678:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15678:18:1"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "15698:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15671:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15671:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15671:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15725:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15736:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15721:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15721:18:1"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "15741:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15714:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15714:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15714:34:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15768:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15779:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15764:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15764:19:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15785:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15757:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15757:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15757:32:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15798:54:1",
															"value": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "15824:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "15836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15847:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15832:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nodeType": "YulIdentifier",
																	"src": "15806:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15806:46:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "15798:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "15465:9:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "15476:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "15484:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "15492:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "15500:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "15508:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "15519:4:1",
														"type": ""
													}
												],
												"src": "15297:561:1"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function finalize_allocation(memPtr, size)\n    {\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_uint256_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function abi_decode_array_uint256_dyn(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0x20\n        let _3 := array_allocation_size_array_uint256_dyn(_1)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _3)\n        let dst := memPtr\n        mstore(memPtr, _1)\n        dst := add(memPtr, _2)\n        let srcEnd := add(add(offset, shl(5, _1)), _2)\n        if gt(srcEnd, end) { revert(0, 0) }\n        let src := add(offset, _2)\n        for { } lt(src, srcEnd) { src := add(src, _2) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _2)\n        }\n        array := memPtr\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value2 := abi_decode_array_uint256_dyn(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 96))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value3 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n        let offset_2 := calldataload(add(headStart, 128))\n        if gt(offset_2, _1) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset_2), dataEnd)\n    }\n    function abi_decode_tuple_t_array$_t_address_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        let _5 := array_allocation_size_array_uint256_dyn(_3)\n        let memPtr := mload(64)\n        finalize_allocation(memPtr, _5)\n        let dst := memPtr\n        mstore(memPtr, _3)\n        dst := add(memPtr, _4)\n        let srcEnd := add(add(_2, shl(5, _3)), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, abi_decode_address(src))\n            dst := add(dst, _4)\n        }\n        value0 := memPtr\n        let offset_1 := calldataload(add(headStart, _4))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_array_uint256_dyn(add(headStart, offset_1), dataEnd)\n    }\n    function abi_encode_array_uint256_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, mload(srcPtr))\n            pos := add(pos, _1)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_uint256_dyn(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        let offset := calldataload(add(headStart, 128))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value4 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: address zero is not a v\")\n        mstore(add(headStart, 96), \"alid owner\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 46)\n        mstore(add(headStart, 64), \"ERC1155: caller is not token own\")\n        mstore(add(headStart, 96), \"er or approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: accounts and ids length\")\n        mstore(add(headStart, 96), \" mismatch\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ids and amounts length \")\n        mstore(add(headStart, 96), \"mismatch\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC1155: transfer to the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC1155: insufficient balance fo\")\n        mstore(add(headStart, 96), \"r transfer\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_array_uint256_dyn(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_array_uint256_dyn(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC1155: setting approval status\")\n        mstore(add(headStart, 96), \" for self\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__to_t_address_t_address_t_array$_t_uint256_$dyn_memory_ptr_t_array$_t_uint256_$dyn_memory_ptr_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), 160)\n        let tail_1 := abi_encode_array_uint256_dyn(value2, add(headStart, 160))\n        mstore(add(headStart, 96), sub(tail_1, headStart))\n        let tail_2 := abi_encode_array_uint256_dyn(value3, tail_1)\n        mstore(add(headStart, 128), sub(tail_2, headStart))\n        tail := abi_encode_string(value4, tail_2)\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function return_data_selector() -> sig\n    {\n        if gt(returndatasize(), 3)\n        {\n            returndatacopy(0, 0, 4)\n            sig := shr(224, mload(0))\n        }\n    }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        let data := mload(64)\n        let _1 := not(3)\n        returndatacopy(data, 4, add(returndatasize(), _1))\n        let offset := mload(data)\n        let _2 := returndatasize()\n        let _3 := 0xffffffffffffffff\n        if or(gt(offset, _3), gt(add(offset, 0x24), _2)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _3) { leave }\n        if gt(add(add(msg, length), 0x20), add(add(data, returndatasize()), _1)) { leave }\n        finalize_allocation(data, add(add(offset, length), 0x20))\n        ret := msg\n    }\n    function abi_encode_tuple_t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"ERC1155: transfer to non-ERC1155\")\n        mstore(add(headStart, 96), \"Receiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"ERC1155: ERC1155Receiver rejecte\")\n        mstore(add(headStart, 96), \"d tokens\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), 160)\n        tail := abi_encode_string(value4, add(headStart, 160))\n    }\n}",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100875760003560e01c80634e1273f41161005b5780634e1273f41461010a578063a22cb4651461012a578063e985e9c51461013d578063f242432a1461017957600080fd5b8062fdd58e1461008c57806301ffc9a7146100b25780630e89341c146100d55780632eb2c2d6146100f5575b600080fd5b61009f61009a366004610b40565b61018c565b6040519081526020015b60405180910390f35b6100c56100c0366004610b83565b610225565b60405190151581526020016100a9565b6100e86100e3366004610ba7565b610275565b6040516100a99190610c06565b610108610103366004610d65565b610309565b005b61011d610118366004610e0f565b610355565b6040516100a99190610f15565b610108610138366004610f28565b61047f565b6100c561014b366004610f64565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205460ff1690565b610108610187366004610f97565b61048e565b60006001600160a01b0383166101fc5760405162461bcd60e51b815260206004820152602a60248201527f455243313135353a2061646472657373207a65726f206973206e6f742061207660448201526930b634b21037bbb732b960b11b60648201526084015b60405180910390fd5b506000818152602081815260408083206001600160a01b03861684529091529020545b92915050565b60006001600160e01b03198216636cdb3d1360e11b148061025657506001600160e01b031982166303a24d0760e21b145b8061021f57506301ffc9a760e01b6001600160e01b031983161461021f565b60606002805461028490610ffc565b80601f01602080910402602001604051908101604052809291908181526020018280546102b090610ffc565b80156102fd5780601f106102d2576101008083540402835291602001916102fd565b820191906000526020600020905b8154815290600101906020018083116102e057829003601f168201915b50505050509050919050565b6001600160a01b0385163314806103255750610325853361014b565b6103415760405162461bcd60e51b81526004016101f390611036565b61034e85858585856104d3565b5050505050565b606081518351146103ba5760405162461bcd60e51b815260206004820152602960248201527f455243313135353a206163636f756e747320616e6420696473206c656e677468604482015268040dad2e6dac2e8c6d60bb1b60648201526084016101f3565b6000835167ffffffffffffffff8111156103d6576103d6610c19565b6040519080825280602002602001820160405280156103ff578160200160208202803683370190505b50905060005b84518110156104775761044a85828151811061042357610423611084565b602002602001015185838151811061043d5761043d611084565b602002602001015161018c565b82828151811061045c5761045c611084565b6020908102919091010152610470816110b0565b9050610405565b509392505050565b61048a3383836106b0565b5050565b6001600160a01b0385163314806104aa57506104aa853361014b565b6104c65760405162461bcd60e51b81526004016101f390611036565b61034e8585858585610790565b81518351146105355760405162461bcd60e51b815260206004820152602860248201527f455243313135353a2069647320616e6420616d6f756e7473206c656e677468206044820152670dad2e6dac2e8c6d60c31b60648201526084016101f3565b6001600160a01b03841661055b5760405162461bcd60e51b81526004016101f3906110c9565b3360005b845181101561064257600085828151811061057c5761057c611084565b60200260200101519050600085838151811061059a5761059a611084565b602090810291909101810151600084815280835260408082206001600160a01b038e1683529093529190912054909150818110156105ea5760405162461bcd60e51b81526004016101f39061110e565b6000838152602081815260408083206001600160a01b038e8116855292528083208585039055908b16825281208054849290610627908490611158565b925050819055505050508061063b906110b0565b905061055f565b50846001600160a01b0316866001600160a01b0316826001600160a01b03167f4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb878760405161069292919061116b565b60405180910390a46106a88187878787876108ba565b505050505050565b816001600160a01b0316836001600160a01b0316036107235760405162461bcd60e51b815260206004820152602960248201527f455243313135353a2073657474696e6720617070726f76616c20737461747573604482015268103337b91039b2b63360b91b60648201526084016101f3565b6001600160a01b03838116600081815260016020908152604080832094871680845294825291829020805460ff191686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b6001600160a01b0384166107b65760405162461bcd60e51b81526004016101f3906110c9565b3360006107c285610a1e565b905060006107cf85610a1e565b90506000868152602081815260408083206001600160a01b038c168452909152902054858110156108125760405162461bcd60e51b81526004016101f39061110e565b6000878152602081815260408083206001600160a01b038d8116855292528083208985039055908a1682528120805488929061084f908490611158565b909155505060408051888152602081018890526001600160a01b03808b16928c821692918816917fc3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62910160405180910390a46108af848a8a8a8a8a610a69565b505050505050505050565b6001600160a01b0384163b156106a85760405163bc197c8160e01b81526001600160a01b0385169063bc197c81906108fe9089908990889088908890600401611199565b6020604051808303816000875af1925050508015610939575060408051601f3d908101601f19168201909252610936918101906111f7565b60015b6109e557610945611214565b806308c379a00361097e5750610959611230565b806109645750610980565b8060405162461bcd60e51b81526004016101f39190610c06565b505b60405162461bcd60e51b815260206004820152603460248201527f455243313135353a207472616e7366657220746f206e6f6e2d455243313135356044820152732932b1b2b4bb32b91034b6b83632b6b2b73a32b960611b60648201526084016101f3565b6001600160e01b0319811663bc197c8160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b50505050505050565b60408051600180825281830190925260609160009190602080830190803683370190505090508281600081518110610a5857610a58611084565b602090810291909101015292915050565b6001600160a01b0384163b156106a85760405163f23a6e6160e01b81526001600160a01b0385169063f23a6e6190610aad9089908990889088908890600401611302565b6020604051808303816000875af1925050508015610ae8575060408051601f3d908101601f19168201909252610ae5918101906111f7565b60015b610af457610945611214565b6001600160e01b0319811663f23a6e6160e01b14610a155760405162461bcd60e51b81526004016101f3906112ba565b80356001600160a01b0381168114610b3b57600080fd5b919050565b60008060408385031215610b5357600080fd5b610b5c83610b24565b946020939093013593505050565b6001600160e01b031981168114610b8057600080fd5b50565b600060208284031215610b9557600080fd5b8135610ba081610b6a565b9392505050565b600060208284031215610bb957600080fd5b5035919050565b6000815180845260005b81811015610be657602081850181015186830182015201610bca565b506000602082860101526020601f19601f83011685010191505092915050565b602081526000610ba06020830184610bc0565b634e487b7160e01b600052604160045260246000fd5b601f8201601f1916810167ffffffffffffffff81118282101715610c5557610c55610c19565b6040525050565b600067ffffffffffffffff821115610c7657610c76610c19565b5060051b60200190565b600082601f830112610c9157600080fd5b81356020610c9e82610c5c565b604051610cab8282610c2f565b83815260059390931b8501820192828101915086841115610ccb57600080fd5b8286015b84811015610ce65780358352918301918301610ccf565b509695505050505050565b600082601f830112610d0257600080fd5b813567ffffffffffffffff811115610d1c57610d1c610c19565b604051610d33601f8301601f191660200182610c2f565b818152846020838601011115610d4857600080fd5b816020850160208301376000918101602001919091529392505050565b600080600080600060a08688031215610d7d57600080fd5b610d8686610b24565b9450610d9460208701610b24565b9350604086013567ffffffffffffffff80821115610db157600080fd5b610dbd89838a01610c80565b94506060880135915080821115610dd357600080fd5b610ddf89838a01610c80565b93506080880135915080821115610df557600080fd5b50610e0288828901610cf1565b9150509295509295909350565b60008060408385031215610e2257600080fd5b823567ffffffffffffffff80821115610e3a57600080fd5b818501915085601f830112610e4e57600080fd5b81356020610e5b82610c5c565b604051610e688282610c2f565b83815260059390931b8501820192828101915089841115610e8857600080fd5b948201945b83861015610ead57610e9e86610b24565b82529482019490820190610e8d565b96505086013592505080821115610ec357600080fd5b50610ed085828601610c80565b9150509250929050565b600081518084526020808501945080840160005b83811015610f0a57815187529582019590820190600101610eee565b509495945050505050565b602081526000610ba06020830184610eda565b60008060408385031215610f3b57600080fd5b610f4483610b24565b915060208301358015158114610f5957600080fd5b809150509250929050565b60008060408385031215610f7757600080fd5b610f8083610b24565b9150610f8e60208401610b24565b90509250929050565b600080600080600060a08688031215610faf57600080fd5b610fb886610b24565b9450610fc660208701610b24565b93506040860135925060608601359150608086013567ffffffffffffffff811115610ff057600080fd5b610e0288828901610cf1565b600181811c9082168061101057607f821691505b60208210810361103057634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252602e908201527f455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e60408201526d195c881bdc88185c1c1c9bdd995960921b606082015260800190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600182016110c2576110c261109a565b5060010190565b60208082526025908201527f455243313135353a207472616e7366657220746f20746865207a65726f206164604082015264647265737360d81b606082015260800190565b6020808252602a908201527f455243313135353a20696e73756666696369656e742062616c616e636520666f60408201526939103a3930b739b332b960b11b606082015260800190565b8082018082111561021f5761021f61109a565b60408152600061117e6040830185610eda565b82810360208401526111908185610eda565b95945050505050565b6001600160a01b0386811682528516602082015260a0604082018190526000906111c590830186610eda565b82810360608401526111d78186610eda565b905082810360808401526111eb8185610bc0565b98975050505050505050565b60006020828403121561120957600080fd5b8151610ba081610b6a565b600060033d111561122d5760046000803e5060005160e01c5b90565b600060443d101561123e5790565b6040516003193d81016004833e81513d67ffffffffffffffff816024840111818411171561126e57505050505090565b82850191508151818111156112865750505050505090565b843d87010160208285010111156112a05750505050505090565b6112af60208286010187610c2f565b509095945050505050565b60208082526028908201527f455243313135353a204552433131353552656365697665722072656a656374656040820152676420746f6b656e7360c01b606082015260800190565b6001600160a01b03868116825285166020820152604081018490526060810183905260a06080820181905260009061133c90830184610bc0565b97965050505050505056fea26469706673582212209ff559bb852eb2337744677bdfbaf21d991147431f44d7286dd8d224a06902b064736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x87 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x4E1273F4 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x4E1273F4 EQ PUSH2 0x10A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0xF242432A EQ PUSH2 0x179 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0xFDD58E EQ PUSH2 0x8C JUMPI DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0xE89341C EQ PUSH2 0xD5 JUMPI DUP1 PUSH4 0x2EB2C2D6 EQ PUSH2 0xF5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9F PUSH2 0x9A CALLDATASIZE PUSH1 0x4 PUSH2 0xB40 JUMP JUMPDEST PUSH2 0x18C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xC5 PUSH2 0xC0 CALLDATASIZE PUSH1 0x4 PUSH2 0xB83 JUMP JUMPDEST PUSH2 0x225 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA9 JUMP JUMPDEST PUSH2 0xE8 PUSH2 0xE3 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA7 JUMP JUMPDEST PUSH2 0x275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x103 CALLDATASIZE PUSH1 0x4 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x309 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x11D PUSH2 0x118 CALLDATASIZE PUSH1 0x4 PUSH2 0xE0F JUMP JUMPDEST PUSH2 0x355 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x138 CALLDATASIZE PUSH1 0x4 PUSH2 0xF28 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH2 0xC5 PUSH2 0x14B CALLDATASIZE PUSH1 0x4 PUSH2 0xF64 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x108 PUSH2 0x187 CALLDATASIZE PUSH1 0x4 PUSH2 0xF97 JUMP JUMPDEST PUSH2 0x48E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x1FC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2061646472657373207A65726F206973206E6F7420612076 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x30B634B21037BBB732B9 PUSH1 0xB1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x6CDB3D13 PUSH1 0xE1 SHL EQ DUP1 PUSH2 0x256 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x3A24D07 PUSH1 0xE2 SHL EQ JUMPDEST DUP1 PUSH2 0x21F JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ PUSH2 0x21F JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x284 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B0 SWAP1 PUSH2 0xFFC JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x325 JUMPI POP PUSH2 0x325 DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x341 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x4D3 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A206163636F756E747320616E6420696473206C656E677468 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x40DAD2E6DAC2E8C6D PUSH1 0xBB SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3D6 JUMPI PUSH2 0x3D6 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x3FF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x477 JUMPI PUSH2 0x44A DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x423 JUMPI PUSH2 0x423 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x43D JUMPI PUSH2 0x43D PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x18C JUMP JUMPDEST DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x45C JUMPI PUSH2 0x45C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE PUSH2 0x470 DUP2 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x405 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x48A CALLER DUP4 DUP4 PUSH2 0x6B0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ DUP1 PUSH2 0x4AA JUMPI POP PUSH2 0x4AA DUP6 CALLER PUSH2 0x14B JUMP JUMPDEST PUSH2 0x4C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x1036 JUMP JUMPDEST PUSH2 0x34E DUP6 DUP6 DUP6 DUP6 DUP6 PUSH2 0x790 JUMP JUMPDEST DUP2 MLOAD DUP4 MLOAD EQ PUSH2 0x535 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x28 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2069647320616E6420616D6F756E7473206C656E67746820 PUSH1 0x44 DUP3 ADD MSTORE PUSH8 0xDAD2E6DAC2E8C6D PUSH1 0xC3 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x55B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 JUMPDEST DUP5 MLOAD DUP2 LT ISZERO PUSH2 0x642 JUMPI PUSH1 0x0 DUP6 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x57C JUMPI PUSH2 0x57C PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD SWAP1 POP PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x59A PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD DUP2 ADD MLOAD PUSH1 0x0 DUP5 DUP2 MSTORE DUP1 DUP4 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 AND DUP4 MSTORE SWAP1 SWAP4 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD SWAP1 SWAP2 POP DUP2 DUP2 LT ISZERO PUSH2 0x5EA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP15 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP1 DUP12 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x627 SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP POP DUP1 PUSH2 0x63B SWAP1 PUSH2 0x10B0 JUMP JUMPDEST SWAP1 POP PUSH2 0x55F JUMP JUMPDEST POP DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x692 SWAP3 SWAP2 SWAP1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x6A8 DUP2 DUP8 DUP8 DUP8 DUP8 DUP8 PUSH2 0x8BA JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x723 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A2073657474696E6720617070726F76616C20737461747573 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103337B91039B2B633 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP2 MLOAD SWAP2 DUP3 MSTORE PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x7B6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x10C9 JUMP JUMPDEST CALLER PUSH1 0x0 PUSH2 0x7C2 DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x7CF DUP6 PUSH2 0xA1E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP13 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP6 DUP2 LT ISZERO PUSH2 0x812 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP14 DUP2 AND DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP10 DUP6 SUB SWAP1 SSTORE SWAP1 DUP11 AND DUP3 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP9 SWAP3 SWAP1 PUSH2 0x84F SWAP1 DUP5 SWAP1 PUSH2 0x1158 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP9 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP9 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP12 AND SWAP3 DUP13 DUP3 AND SWAP3 SWAP2 DUP9 AND SWAP2 PUSH32 0xC3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH2 0x8AF DUP5 DUP11 DUP11 DUP11 DUP11 DUP11 PUSH2 0xA69 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xBC197C81 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xBC197C81 SWAP1 PUSH2 0x8FE SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1199 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x939 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x936 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x9E5 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST DUP1 PUSH4 0x8C379A0 SUB PUSH2 0x97E JUMPI POP PUSH2 0x959 PUSH2 0x1230 JUMP JUMPDEST DUP1 PUSH2 0x964 JUMPI POP PUSH2 0x980 JUMP JUMPDEST DUP1 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP2 SWAP1 PUSH2 0xC06 JUMP JUMPDEST POP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F206E6F6E2D45524331313535 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x2932B1B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x61 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x1F3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xBC197C81 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP4 ADD SWAP1 SWAP3 MSTORE PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x20 DUP1 DUP4 ADD SWAP1 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP POP SWAP1 POP DUP3 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0xA58 JUMPI PUSH2 0xA58 PUSH2 0x1084 JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 MUL SWAP2 SWAP1 SWAP2 ADD ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF23A6E61 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xF23A6E61 SWAP1 PUSH2 0xAAD SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1302 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xAE8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xAE5 SWAP2 DUP2 ADD SWAP1 PUSH2 0x11F7 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xAF4 JUMPI PUSH2 0x945 PUSH2 0x1214 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND PUSH4 0xF23A6E61 PUSH1 0xE0 SHL EQ PUSH2 0xA15 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1F3 SWAP1 PUSH2 0x12BA JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB53 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB5C DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0xB80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xBCA JUMP JUMPDEST POP PUSH1 0x0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC55 JUMPI PUSH2 0xC55 PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0xC76 JUMPI PUSH2 0xC76 PUSH2 0xC19 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xC91 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xC9E DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCAB DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP7 DUP5 GT ISZERO PUSH2 0xCCB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 DUP7 ADD JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0xCE6 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE SWAP2 DUP4 ADD SWAP2 DUP4 ADD PUSH2 0xCCF JUMP JUMPDEST POP SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xD02 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xD1C JUMPI PUSH2 0xD1C PUSH2 0xC19 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xD33 PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0xD48 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xD7D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xD86 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xD94 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xDB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDBD DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP5 POP PUSH1 0x60 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDDF DUP10 DUP4 DUP11 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP4 POP PUSH1 0x80 DUP9 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xE22 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0xE3A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0xE4E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 PUSH2 0xE5B DUP3 PUSH2 0xC5C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE68 DUP3 DUP3 PUSH2 0xC2F JUMP JUMPDEST DUP4 DUP2 MSTORE PUSH1 0x5 SWAP4 SWAP1 SWAP4 SHL DUP6 ADD DUP3 ADD SWAP3 DUP3 DUP2 ADD SWAP2 POP DUP10 DUP5 GT ISZERO PUSH2 0xE88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP4 DUP7 LT ISZERO PUSH2 0xEAD JUMPI PUSH2 0xE9E DUP7 PUSH2 0xB24 JUMP JUMPDEST DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0xE8D JUMP JUMPDEST SWAP7 POP POP DUP7 ADD CALLDATALOAD SWAP3 POP POP DUP1 DUP3 GT ISZERO PUSH2 0xEC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xED0 DUP6 DUP3 DUP7 ADD PUSH2 0xC80 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0A JUMPI DUP2 MLOAD DUP8 MSTORE SWAP6 DUP3 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0xEEE JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0xBA0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xEDA JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF44 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF59 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF77 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF80 DUP4 PUSH2 0xB24 JUMP JUMPDEST SWAP2 POP PUSH2 0xF8E PUSH1 0x20 DUP5 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0xFAF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFB8 DUP7 PUSH2 0xB24 JUMP JUMPDEST SWAP5 POP PUSH2 0xFC6 PUSH1 0x20 DUP8 ADD PUSH2 0xB24 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD SWAP2 POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFF0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE02 DUP9 DUP3 DUP10 ADD PUSH2 0xCF1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1010 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1030 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2E SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E PUSH1 0x40 DUP3 ADD MSTORE PUSH14 0x195C881BDC88185C1C1C9BDD9959 PUSH1 0x92 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 ADD PUSH2 0x10C2 JUMPI PUSH2 0x10C2 PUSH2 0x109A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x25 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A207472616E7366657220746F20746865207A65726F206164 PUSH1 0x40 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x2A SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A20696E73756666696369656E742062616C616E636520666F PUSH1 0x40 DUP3 ADD MSTORE PUSH10 0x39103A3930B739B332B9 PUSH1 0xB1 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21F PUSH2 0x109A JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x117E PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x1190 DUP2 DUP6 PUSH2 0xEDA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x11C5 SWAP1 DUP4 ADD DUP7 PUSH2 0xEDA JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x60 DUP5 ADD MSTORE PUSH2 0x11D7 DUP2 DUP7 PUSH2 0xEDA JUMP JUMPDEST SWAP1 POP DUP3 DUP2 SUB PUSH1 0x80 DUP5 ADD MSTORE PUSH2 0x11EB DUP2 DUP6 PUSH2 0xBC0 JUMP JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xBA0 DUP2 PUSH2 0xB6A JUMP JUMPDEST PUSH1 0x0 PUSH1 0x3 RETURNDATASIZE GT ISZERO PUSH2 0x122D JUMPI PUSH1 0x4 PUSH1 0x0 DUP1 RETURNDATACOPY POP PUSH1 0x0 MLOAD PUSH1 0xE0 SHR JUMPDEST SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x123E JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x3 NOT RETURNDATASIZE DUP2 ADD PUSH1 0x4 DUP4 RETURNDATACOPY DUP2 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x126E JUMPI POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP3 DUP6 ADD SWAP2 POP DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH2 0x1286 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST DUP5 RETURNDATASIZE DUP8 ADD ADD PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x12A0 JUMPI POP POP POP POP POP POP SWAP1 JUMP JUMPDEST PUSH2 0x12AF PUSH1 0x20 DUP3 DUP7 ADD ADD DUP8 PUSH2 0xC2F JUMP JUMPDEST POP SWAP1 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x28 SWAP1 DUP3 ADD MSTORE PUSH32 0x455243313135353A204552433131353552656365697665722072656A65637465 PUSH1 0x40 DUP3 ADD MSTORE PUSH8 0x6420746F6B656E73 PUSH1 0xC0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND DUP3 MSTORE DUP6 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0xA0 PUSH1 0x80 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x133C SWAP1 DUP4 ADD DUP5 PUSH2 0xBC0 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 CREATE2 MSIZE 0xBB DUP6 0x2E 0xB2 CALLER PUSH24 0x44677BDFBAF21D991147431F44D7286DD8D224A06902B064 PUSH20 0x6F6C634300081200330000000000000000000000 ",
							"sourceMap": "24884:16539:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26499:227;;;;;;:::i;:::-;;:::i;:::-;;;597:25:1;;;585:2;570:18;26499:227:0;;;;;;;;25550:305;;;;;;:::i;:::-;;:::i;:::-;;;1184:14:1;;1177:22;1159:41;;1147:2;1132:18;25550:305:0;1019:187:1;26254:103:0;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;28356:426::-;;;;;;:::i;:::-;;:::i;:::-;;26883:486;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;27437:153::-;;;;;;:::i;:::-;;:::i;27657:166::-;;;;;;:::i;:::-;-1:-1:-1;;;;;27779:27:0;;;27756:4;27779:27;;;:18;:27;;;;;;;;:37;;;;;;;;;;;;;;;27657:166;27890:394;;;;;;:::i;:::-;;:::i;26499:227::-;26585:7;-1:-1:-1;;;;;26612:21:0;;26604:76;;;;-1:-1:-1;;;26604:76:0;;8209:2:1;26604:76:0;;;8191:21:1;8248:2;8228:18;;;8221:30;8287:34;8267:18;;;8260:62;-1:-1:-1;;;8338:18:1;;;8331:40;8388:19;;26604:76:0;;;;;;;;;-1:-1:-1;26697:9:0;:13;;;;;;;;;;;-1:-1:-1;;;;;26697:22:0;;;;;;;;;;26499:227;;;;;:::o;25550:305::-;25652:4;-1:-1:-1;;;;;;25687:41:0;;-1:-1:-1;;;25687:41:0;;:109;;-1:-1:-1;;;;;;;25744:52:0;;-1:-1:-1;;;25744:52:0;25687:109;:161;;;-1:-1:-1;;;;;;;;;;17245:40:0;;;25812:36;17137:155;26254:103;26314:13;26346:4;26339:11;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26254:103;;;:::o;28356:426::-;-1:-1:-1;;;;;28581:20:0;;741:10;28581:20;;:60;;-1:-1:-1;28605:36:0;28622:4;741:10;27657:166;:::i;28605:36::-;28560:153;;;;-1:-1:-1;;;28560:153:0;;;;;;;:::i;:::-;28723:52;28746:4;28752:2;28756:3;28761:7;28770:4;28723:22;:52::i;:::-;28356:426;;;;;:::o;26883:486::-;27016:16;27071:3;:10;27052:8;:15;:29;27044:83;;;;-1:-1:-1;;;27044:83:0;;9420:2:1;27044:83:0;;;9402:21:1;9459:2;9439:18;;;9432:30;9498:34;9478:18;;;9471:62;-1:-1:-1;;;9549:18:1;;;9542:39;9598:19;;27044:83:0;9218:405:1;27044:83:0;27138:30;27185:8;:15;27171:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;27171:30:0;;27138:63;;27217:9;27212:120;27236:8;:15;27232:1;:19;27212:120;;;27291:30;27301:8;27310:1;27301:11;;;;;;;;:::i;:::-;;;;;;;27314:3;27318:1;27314:6;;;;;;;;:::i;:::-;;;;;;;27291:9;:30::i;:::-;27272:13;27286:1;27272:16;;;;;;;;:::i;:::-;;;;;;;;;;:49;27253:3;;;:::i;:::-;;;27212:120;;;-1:-1:-1;27349:13:0;26883:486;-1:-1:-1;;;26883:486:0:o;27437:153::-;27531:52;741:10;27564:8;27574;27531:18;:52::i;:::-;27437:153;;:::o;27890:394::-;-1:-1:-1;;;;;28090:20:0;;741:10;28090:20;;:60;;-1:-1:-1;28114:36:0;28131:4;741:10;27657:166;:::i;28114:36::-;28069:153;;;;-1:-1:-1;;;28069:153:0;;;;;;;:::i;:::-;28232:45;28250:4;28256:2;28260;28264:6;28272:4;28232:17;:45::i;30525:1115::-;30745:7;:14;30731:3;:10;:28;30723:81;;;;-1:-1:-1;;;30723:81:0;;10234:2:1;30723:81:0;;;10216:21:1;10273:2;10253:18;;;10246:30;10312:34;10292:18;;;10285:62;-1:-1:-1;;;10363:18:1;;;10356:38;10411:19;;30723:81:0;10032:404:1;30723:81:0;-1:-1:-1;;;;;30822:16:0;;30814:66;;;;-1:-1:-1;;;30814:66:0;;;;;;;:::i;:::-;741:10;30891:16;31004:411;31028:3;:10;31024:1;:14;31004:411;;;31059:10;31072:3;31076:1;31072:6;;;;;;;;:::i;:::-;;;;;;;31059:19;;31092:14;31109:7;31117:1;31109:10;;;;;;;;:::i;:::-;;;;;;;;;;;;31134:19;31156:13;;;;;;;;;;-1:-1:-1;;;;;31156:19:0;;;;;;;;;;;;31109:10;;-1:-1:-1;31197:21:0;;;;31189:76;;;;-1:-1:-1;;;31189:76:0;;;;;;;:::i;:::-;31307:9;:13;;;;;;;;;;;-1:-1:-1;;;;;31307:19:0;;;;;;;;;;31329:20;;;31307:42;;31377:17;;;;;;;:27;;31329:20;;31307:9;31377:27;;31329:20;;31377:27;:::i;:::-;;;;;;;;31045:370;;;31040:3;;;;:::i;:::-;;;31004:411;;;;31460:2;-1:-1:-1;;;;;31430:47:0;31454:4;-1:-1:-1;;;;;31430:47:0;31444:8;-1:-1:-1;;;;;31430:47:0;;31464:3;31469:7;31430:47;;;;;;;:::i;:::-;;;;;;;;31558:75;31594:8;31604:4;31610:2;31614:3;31619:7;31628:4;31558:35;:75::i;:::-;30713:927;30525:1115;;;;;:::o;37104:293::-;37224:8;-1:-1:-1;;;;;37215:17:0;:5;-1:-1:-1;;;;;37215:17:0;;37207:71;;;;-1:-1:-1;;;37207:71:0;;12060:2:1;37207:71:0;;;12042:21:1;12099:2;12079:18;;;12072:30;12138:34;12118:18;;;12111:62;-1:-1:-1;;;12189:18:1;;;12182:39;12238:19;;37207:71:0;11858:405:1;37207:71:0;-1:-1:-1;;;;;37288:25:0;;;;;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;:46;;-1:-1:-1;;37288:46:0;;;;;;;;;;37349:41;;1159::1;;;37349::0;;1132:18:1;37349:41:0;;;;;;;37104:293;;;:::o;29232:947::-;-1:-1:-1;;;;;29413:16:0;;29405:66;;;;-1:-1:-1;;;29405:66:0;;;;;;;:::i;:::-;741:10;29482:16;29546:21;29564:2;29546:17;:21::i;:::-;29523:44;;29577:24;29604:25;29622:6;29604:17;:25::i;:::-;29577:52;;29711:19;29733:13;;;;;;;;;;;-1:-1:-1;;;;;29733:19:0;;;;;;;;;;29770:21;;;;29762:76;;;;-1:-1:-1;;;29762:76:0;;;;;;;:::i;:::-;29872:9;:13;;;;;;;;;;;-1:-1:-1;;;;;29872:19:0;;;;;;;;;;29894:20;;;29872:42;;29934:17;;;;;;;:27;;29894:20;;29872:9;29934:27;;29894:20;;29934:27;:::i;:::-;;;;-1:-1:-1;;29977:46:0;;;12442:25:1;;;12498:2;12483:18;;12476:34;;;-1:-1:-1;;;;;29977:46:0;;;;;;;;;;;;;;12415:18:1;29977:46:0;;;;;;;30104:68;30135:8;30145:4;30151:2;30155;30159:6;30167:4;30104:30;:68::i;:::-;29395:784;;;;29232:947;;;;;:::o;40430:792::-;-1:-1:-1;;;;;40662:13:0;;7746:19;:23;40658:558;;40697:79;;-1:-1:-1;;;40697:79:0;;-1:-1:-1;;;;;40697:43:0;;;;;:79;;40741:8;;40751:4;;40757:3;;40762:7;;40771:4;;40697:79;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;40697:79:0;;;;;;;;-1:-1:-1;;40697:79:0;;;;;;;;;;;;:::i;:::-;;;40693:513;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;41082:6;41075:14;;-1:-1:-1;;;41075:14:0;;;;;;;;:::i;40693:513::-;;;41129:62;;-1:-1:-1;;;41129:62:0;;14669:2:1;41129:62:0;;;14651:21:1;14708:2;14688:18;;;14681:30;14747:34;14727:18;;;14720:62;-1:-1:-1;;;14798:18:1;;;14791:50;14858:19;;41129:62:0;14467:416:1;40693:513:0;-1:-1:-1;;;;;;40855:60:0;;-1:-1:-1;;;40855:60:0;40851:157;;40939:50;;-1:-1:-1;;;40939:50:0;;;;;;;:::i;40851:157::-;40777:245;40430:792;;;;;;:::o;41228:193::-;41347:16;;;41361:1;41347:16;;;;;;;;;41294;;41322:22;;41347:16;;;;;;;;;;;;-1:-1:-1;41347:16:0;41322:41;;41384:7;41373:5;41379:1;41373:8;;;;;;;;:::i;:::-;;;;;;;;;;:18;41409:5;41228:193;-1:-1:-1;;41228:193:0:o;39699:725::-;-1:-1:-1;;;;;39906:13:0;;7746:19;:23;39902:516;;39941:72;;-1:-1:-1;;;39941:72:0;;-1:-1:-1;;;;;39941:38:0;;;;;:72;;39980:8;;39990:4;;39996:2;;40000:6;;40008:4;;39941:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;39941:72:0;;;;;;;;-1:-1:-1;;39941:72:0;;;;;;;;;;;;:::i;:::-;;;39937:471;;;;:::i;:::-;-1:-1:-1;;;;;;40062:55:0;;-1:-1:-1;;;40062:55:0;40058:152;;40141:50;;-1:-1:-1;;;40141:50:0;;;;;;;:::i;14:173:1:-;82:20;;-1:-1:-1;;;;;131:31:1;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:1:o;633:131::-;-1:-1:-1;;;;;;707:32:1;;697:43;;687:71;;754:1;751;744:12;687:71;633:131;:::o;769:245::-;827:6;880:2;868:9;859:7;855:23;851:32;848:52;;;896:1;893;886:12;848:52;935:9;922:23;954:30;978:5;954:30;:::i;:::-;1003:5;769:245;-1:-1:-1;;;769:245:1:o;1211:180::-;1270:6;1323:2;1311:9;1302:7;1298:23;1294:32;1291:52;;;1339:1;1336;1329:12;1291:52;-1:-1:-1;1362:23:1;;1211:180;-1:-1:-1;1211:180:1:o;1396:423::-;1438:3;1476:5;1470:12;1503:6;1498:3;1491:19;1528:1;1538:162;1552:6;1549:1;1546:13;1538:162;;;1614:4;1670:13;;;1666:22;;1660:29;1642:11;;;1638:20;;1631:59;1567:12;1538:162;;;1542:3;1745:1;1738:4;1729:6;1724:3;1720:16;1716:27;1709:38;1808:4;1801:2;1797:7;1792:2;1784:6;1780:15;1776:29;1771:3;1767:39;1763:50;1756:57;;;1396:423;;;;:::o;1824:220::-;1973:2;1962:9;1955:21;1936:4;1993:45;2034:2;2023:9;2019:18;2011:6;1993:45;:::i;2049:127::-;2110:10;2105:3;2101:20;2098:1;2091:31;2141:4;2138:1;2131:15;2165:4;2162:1;2155:15;2181:249;2291:2;2272:13;;-1:-1:-1;;2268:27:1;2256:40;;2326:18;2311:34;;2347:22;;;2308:62;2305:88;;;2373:18;;:::i;:::-;2409:2;2402:22;-1:-1:-1;;2181:249:1:o;2435:183::-;2495:4;2528:18;2520:6;2517:30;2514:56;;;2550:18;;:::i;:::-;-1:-1:-1;2595:1:1;2591:14;2607:4;2587:25;;2435:183::o;2623:724::-;2677:5;2730:3;2723:4;2715:6;2711:17;2707:27;2697:55;;2748:1;2745;2738:12;2697:55;2784:6;2771:20;2810:4;2833:43;2873:2;2833:43;:::i;:::-;2905:2;2899:9;2917:31;2945:2;2937:6;2917:31;:::i;:::-;2983:18;;;3075:1;3071:10;;;;3059:23;;3055:32;;;3017:15;;;;-1:-1:-1;3099:15:1;;;3096:35;;;3127:1;3124;3117:12;3096:35;3163:2;3155:6;3151:15;3175:142;3191:6;3186:3;3183:15;3175:142;;;3257:17;;3245:30;;3295:12;;;;3208;;3175:142;;;-1:-1:-1;3335:6:1;2623:724;-1:-1:-1;;;;;;2623:724:1:o;3352:555::-;3394:5;3447:3;3440:4;3432:6;3428:17;3424:27;3414:55;;3465:1;3462;3455:12;3414:55;3501:6;3488:20;3527:18;3523:2;3520:26;3517:52;;;3549:18;;:::i;:::-;3598:2;3592:9;3610:67;3665:2;3646:13;;-1:-1:-1;;3642:27:1;3671:4;3638:38;3592:9;3610:67;:::i;:::-;3701:2;3693:6;3686:18;3747:3;3740:4;3735:2;3727:6;3723:15;3719:26;3716:35;3713:55;;;3764:1;3761;3754:12;3713:55;3828:2;3821:4;3813:6;3809:17;3802:4;3794:6;3790:17;3777:54;3875:1;3851:15;;;3868:4;3847:26;3840:37;;;;3855:6;3352:555;-1:-1:-1;;;3352:555:1:o;3912:943::-;4066:6;4074;4082;4090;4098;4151:3;4139:9;4130:7;4126:23;4122:33;4119:53;;;4168:1;4165;4158:12;4119:53;4191:29;4210:9;4191:29;:::i;:::-;4181:39;;4239:38;4273:2;4262:9;4258:18;4239:38;:::i;:::-;4229:48;;4328:2;4317:9;4313:18;4300:32;4351:18;4392:2;4384:6;4381:14;4378:34;;;4408:1;4405;4398:12;4378:34;4431:61;4484:7;4475:6;4464:9;4460:22;4431:61;:::i;:::-;4421:71;;4545:2;4534:9;4530:18;4517:32;4501:48;;4574:2;4564:8;4561:16;4558:36;;;4590:1;4587;4580:12;4558:36;4613:63;4668:7;4657:8;4646:9;4642:24;4613:63;:::i;:::-;4603:73;;4729:3;4718:9;4714:19;4701:33;4685:49;;4759:2;4749:8;4746:16;4743:36;;;4775:1;4772;4765:12;4743:36;;4798:51;4841:7;4830:8;4819:9;4815:24;4798:51;:::i;:::-;4788:61;;;3912:943;;;;;;;;:::o;4860:1208::-;4978:6;4986;5039:2;5027:9;5018:7;5014:23;5010:32;5007:52;;;5055:1;5052;5045:12;5007:52;5095:9;5082:23;5124:18;5165:2;5157:6;5154:14;5151:34;;;5181:1;5178;5171:12;5151:34;5219:6;5208:9;5204:22;5194:32;;5264:7;5257:4;5253:2;5249:13;5245:27;5235:55;;5286:1;5283;5276:12;5235:55;5322:2;5309:16;5344:4;5367:43;5407:2;5367:43;:::i;:::-;5439:2;5433:9;5451:31;5479:2;5471:6;5451:31;:::i;:::-;5517:18;;;5605:1;5601:10;;;;5593:19;;5589:28;;;5551:15;;;;-1:-1:-1;5629:19:1;;;5626:39;;;5661:1;5658;5651:12;5626:39;5685:11;;;;5705:148;5721:6;5716:3;5713:15;5705:148;;;5787:23;5806:3;5787:23;:::i;:::-;5775:36;;5738:12;;;;5831;;;;5705:148;;;5872:6;-1:-1:-1;;5916:18:1;;5903:32;;-1:-1:-1;;5947:16:1;;;5944:36;;;5976:1;5973;5966:12;5944:36;;5999:63;6054:7;6043:8;6032:9;6028:24;5999:63;:::i;:::-;5989:73;;;4860:1208;;;;;:::o;6073:435::-;6126:3;6164:5;6158:12;6191:6;6186:3;6179:19;6217:4;6246:2;6241:3;6237:12;6230:19;;6283:2;6276:5;6272:14;6304:1;6314:169;6328:6;6325:1;6322:13;6314:169;;;6389:13;;6377:26;;6423:12;;;;6458:15;;;;6350:1;6343:9;6314:169;;;-1:-1:-1;6499:3:1;;6073:435;-1:-1:-1;;;;;6073:435:1:o;6513:261::-;6692:2;6681:9;6674:21;6655:4;6712:56;6764:2;6753:9;6749:18;6741:6;6712:56;:::i;6779:347::-;6844:6;6852;6905:2;6893:9;6884:7;6880:23;6876:32;6873:52;;;6921:1;6918;6911:12;6873:52;6944:29;6963:9;6944:29;:::i;:::-;6934:39;;7023:2;7012:9;7008:18;6995:32;7070:5;7063:13;7056:21;7049:5;7046:32;7036:60;;7092:1;7089;7082:12;7036:60;7115:5;7105:15;;;6779:347;;;;;:::o;7131:260::-;7199:6;7207;7260:2;7248:9;7239:7;7235:23;7231:32;7228:52;;;7276:1;7273;7266:12;7228:52;7299:29;7318:9;7299:29;:::i;:::-;7289:39;;7347:38;7381:2;7370:9;7366:18;7347:38;:::i;:::-;7337:48;;7131:260;;;;;:::o;7396:606::-;7500:6;7508;7516;7524;7532;7585:3;7573:9;7564:7;7560:23;7556:33;7553:53;;;7602:1;7599;7592:12;7553:53;7625:29;7644:9;7625:29;:::i;:::-;7615:39;;7673:38;7707:2;7696:9;7692:18;7673:38;:::i;:::-;7663:48;;7758:2;7747:9;7743:18;7730:32;7720:42;;7809:2;7798:9;7794:18;7781:32;7771:42;;7864:3;7853:9;7849:19;7836:33;7892:18;7884:6;7881:30;7878:50;;;7924:1;7921;7914:12;7878:50;7947:49;7988:7;7979:6;7968:9;7964:22;7947:49;:::i;8418:380::-;8497:1;8493:12;;;;8540;;;8561:61;;8615:4;8607:6;8603:17;8593:27;;8561:61;8668:2;8660:6;8657:14;8637:18;8634:38;8631:161;;8714:10;8709:3;8705:20;8702:1;8695:31;8749:4;8746:1;8739:15;8777:4;8774:1;8767:15;8631:161;;8418:380;;;:::o;8803:410::-;9005:2;8987:21;;;9044:2;9024:18;;;9017:30;9083:34;9078:2;9063:18;;9056:62;-1:-1:-1;;;9149:2:1;9134:18;;9127:44;9203:3;9188:19;;8803:410::o;9628:127::-;9689:10;9684:3;9680:20;9677:1;9670:31;9720:4;9717:1;9710:15;9744:4;9741:1;9734:15;9760:127;9821:10;9816:3;9812:20;9809:1;9802:31;9852:4;9849:1;9842:15;9876:4;9873:1;9866:15;9892:135;9931:3;9952:17;;;9949:43;;9972:18;;:::i;:::-;-1:-1:-1;10019:1:1;10008:13;;9892:135::o;10441:401::-;10643:2;10625:21;;;10682:2;10662:18;;;10655:30;10721:34;10716:2;10701:18;;10694:62;-1:-1:-1;;;10787:2:1;10772:18;;10765:35;10832:3;10817:19;;10441:401::o;10847:406::-;11049:2;11031:21;;;11088:2;11068:18;;;11061:30;11127:34;11122:2;11107:18;;11100:62;-1:-1:-1;;;11193:2:1;11178:18;;11171:40;11243:3;11228:19;;10847:406::o;11258:125::-;11323:9;;;11344:10;;;11341:36;;;11357:18;;:::i;11388:465::-;11645:2;11634:9;11627:21;11608:4;11671:56;11723:2;11712:9;11708:18;11700:6;11671:56;:::i;:::-;11775:9;11767:6;11763:22;11758:2;11747:9;11743:18;11736:50;11803:44;11840:6;11832;11803:44;:::i;:::-;11795:52;11388:465;-1:-1:-1;;;;;11388:465:1:o;12521:827::-;-1:-1:-1;;;;;12918:15:1;;;12900:34;;12970:15;;12965:2;12950:18;;12943:43;12880:3;13017:2;13002:18;;12995:31;;;12843:4;;13049:57;;13086:19;;13078:6;13049:57;:::i;:::-;13154:9;13146:6;13142:22;13137:2;13126:9;13122:18;13115:50;13188:44;13225:6;13217;13188:44;:::i;:::-;13174:58;;13281:9;13273:6;13269:22;13263:3;13252:9;13248:19;13241:51;13309:33;13335:6;13327;13309:33;:::i;:::-;13301:41;12521:827;-1:-1:-1;;;;;;;;12521:827:1:o;13353:249::-;13422:6;13475:2;13463:9;13454:7;13450:23;13446:32;13443:52;;;13491:1;13488;13481:12;13443:52;13523:9;13517:16;13542:30;13566:5;13542:30;:::i;13607:179::-;13642:3;13684:1;13666:16;13663:23;13660:120;;;13730:1;13727;13724;13709:23;-1:-1:-1;13767:1:1;13761:8;13756:3;13752:18;13660:120;13607:179;:::o;13791:671::-;13830:3;13872:4;13854:16;13851:26;13848:39;;;13791:671;:::o;13848:39::-;13914:2;13908:9;-1:-1:-1;;13979:16:1;13975:25;;13972:1;13908:9;13951:50;14030:4;14024:11;14054:16;14089:18;14160:2;14153:4;14145:6;14141:17;14138:25;14133:2;14125:6;14122:14;14119:45;14116:58;;;14167:5;;;;;13791:671;:::o;14116:58::-;14204:6;14198:4;14194:17;14183:28;;14240:3;14234:10;14267:2;14259:6;14256:14;14253:27;;;14273:5;;;;;;13791:671;:::o;14253:27::-;14357:2;14338:16;14332:4;14328:27;14324:36;14317:4;14308:6;14303:3;14299:16;14295:27;14292:69;14289:82;;;14364:5;;;;;;13791:671;:::o;14289:82::-;14380:57;14431:4;14422:6;14414;14410:19;14406:30;14400:4;14380:57;:::i;:::-;-1:-1:-1;14453:3:1;;13791:671;-1:-1:-1;;;;;13791:671:1:o;14888:404::-;15090:2;15072:21;;;15129:2;15109:18;;;15102:30;15168:34;15163:2;15148:18;;15141:62;-1:-1:-1;;;15234:2:1;15219:18;;15212:38;15282:3;15267:19;;14888:404::o;15297:561::-;-1:-1:-1;;;;;15594:15:1;;;15576:34;;15646:15;;15641:2;15626:18;;15619:43;15693:2;15678:18;;15671:34;;;15736:2;15721:18;;15714:34;;;15556:3;15779;15764:19;;15757:32;;;15519:4;;15806:46;;15832:19;;15824:6;15806:46;:::i;:::-;15798:54;15297:561;-1:-1:-1;;;;;;;15297:561:1:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "997800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"balanceOf(address,uint256)": "2677",
								"balanceOfBatch(address[],uint256[])": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "infinite",
								"safeTransferFrom(address,address,uint256,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "26705",
								"supportsInterface(bytes4)": "555",
								"uri(uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_asSingletonArray(uint256)": "infinite",
								"_beforeTokenTransfer(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_burn(address,uint256,uint256)": "infinite",
								"_burnBatch(address,uint256[] memory,uint256[] memory)": "infinite",
								"_doSafeBatchTransferAcceptanceCheck(address,address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_doSafeTransferAcceptanceCheck(address,address,address,uint256,uint256,bytes memory)": "infinite",
								"_mint(address,uint256,uint256,bytes memory)": "infinite",
								"_mintBatch(address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeBatchTransferFrom(address,address,uint256[] memory,uint256[] memory,bytes memory)": "infinite",
								"_safeTransferFrom(address,address,uint256,uint256,bytes memory)": "infinite",
								"_setApprovalForAll(address,address,bool)": "infinite",
								"_setURI(string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 25421,
									"end": 25483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25463,
									"end": 25476,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25471,
									"end": 25475,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 25463,
									"end": 25470,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 25463,
									"end": 25476,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 25463,
									"end": 25476,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 25463,
									"end": 25476,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25421,
									"end": 25483,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "17"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32463,
									"end": 32549,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 32463,
									"end": 32549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32533,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 32536,
									"end": 32542,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32533,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 32529,
									"end": 32542,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 32529,
									"end": 32542,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32463,
									"end": 32549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 32463,
									"end": 32549,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 226,
									"end": 232,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 257,
									"end": 259,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 300,
									"end": 302,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 288,
									"end": 297,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 279,
									"end": 286,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 275,
									"end": 298,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 271,
									"end": 303,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 316,
									"end": 317,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 313,
									"end": 314,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 306,
									"end": 318,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 268,
									"end": 320,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 268,
									"end": 320,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 343,
									"end": 359,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 408,
									"end": 422,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 435,
									"end": 436,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 432,
									"end": 433,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 425,
									"end": 437,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 405,
									"end": 439,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 405,
									"end": 439,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 473,
									"end": 479,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 462,
									"end": 471,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 458,
									"end": 480,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 448,
									"end": 480,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 518,
									"end": 525,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 511,
									"end": 515,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 507,
									"end": 509,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 503,
									"end": 516,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 499,
									"end": 526,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 540,
									"end": 541,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 538,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 530,
									"end": 542,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 489,
									"end": 544,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 489,
									"end": 544,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 569,
									"end": 571,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 563,
									"end": 572,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 591,
									"end": 593,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 587,
									"end": 589,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 584,
									"end": 594,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 581,
									"end": 617,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 581,
									"end": 617,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 597,
									"end": 615,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 597,
									"end": 615,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 597,
									"end": 615,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 666,
									"end": 675,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 640,
									"end": 642,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 726,
									"end": 739,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 726,
									"end": 739,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 722,
									"end": 744,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 746,
									"end": 748,
									"name": "PUSH",
									"source": 1,
									"value": "3F"
								},
								{
									"begin": 718,
									"end": 749,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 714,
									"end": 754,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 702,
									"end": 755,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 770,
									"end": 788,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 790,
									"end": 812,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 767,
									"end": 813,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 764,
									"end": 836,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 764,
									"end": 836,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 816,
									"end": 834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 816,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 816,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 856,
									"end": 866,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 852,
									"end": 854,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 845,
									"end": 867,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 891,
									"end": 893,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 883,
									"end": 889,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 876,
									"end": 894,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 931,
									"end": 938,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 926,
									"end": 928,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 921,
									"end": 923,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 917,
									"end": 919,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 913,
									"end": 924,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 909,
									"end": 929,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 906,
									"end": 939,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 952,
									"end": 953,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 949,
									"end": 950,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 942,
									"end": 954,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 903,
									"end": 956,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 903,
									"end": 956,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 974,
									"end": 975,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 975,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 965,
									"end": 975,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 998,
									"end": 1000,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 995,
									"end": 996,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 992,
									"end": 1001,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1086,
									"end": 1096,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1082,
									"end": 1101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1076,
									"end": 1102,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1055,
									"end": 1069,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 1051,
									"end": 1074,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1044,
									"end": 1103,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1009,
									"end": 1019,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 984,
									"end": 1113,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1155,
									"end": 1156,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1152,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1143,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1148,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1129,
									"end": 1153,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1122,
									"end": 1157,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1176,
									"end": 1182,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "SWAP7",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1166,
									"end": 1182,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 146,
									"end": 1188,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1272,
									"end": 1273,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1268,
									"end": 1280,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1315,
									"end": 1327,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1390,
									"end": 1394,
									"name": "PUSH",
									"source": 1,
									"value": "7F"
								},
								{
									"begin": 1382,
									"end": 1388,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1378,
									"end": 1395,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1395,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1368,
									"end": 1395,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1336,
									"end": 1397,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1443,
									"end": 1445,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1435,
									"end": 1441,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1432,
									"end": 1446,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1412,
									"end": 1430,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1409,
									"end": 1447,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1499,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B71"
								},
								{
									"begin": 1484,
									"end": 1487,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 1480,
									"end": 1500,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 1477,
									"end": 1478,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1470,
									"end": 1501,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1524,
									"end": 1528,
									"name": "PUSH",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 1521,
									"end": 1522,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1514,
									"end": 1529,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1552,
									"end": 1556,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 1549,
									"end": 1550,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1542,
									"end": 1557,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "tag",
									"source": 1,
									"value": "33"
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1406,
									"end": 1567,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1193,
									"end": 1573,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1806,
									"end": 1808,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1801,
									"end": 1804,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1798,
									"end": 1809,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1842,
									"end": 1843,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1867,
									"end": 1872,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1863,
									"end": 1865,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1856,
									"end": 1873,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1912,
									"end": 1916,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1908,
									"end": 1910,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1898,
									"end": 1917,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1982,
									"end": 1984,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1970,
									"end": 1980,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1966,
									"end": 1985,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1959,
									"end": 1986,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 1953,
									"end": 1957,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1949,
									"end": 1987,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2018,
									"end": 2022,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2006,
									"end": 2016,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2003,
									"end": 2023,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2041,
									"end": 2045,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 2000,
									"end": 2047,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2096,
									"end": 2098,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2091,
									"end": 2094,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2087,
									"end": 2099,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2084,
									"end": 2085,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 2080,
									"end": 2100,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2074,
									"end": 2078,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2070,
									"end": 2101,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2060,
									"end": 2101,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2060,
									"end": 2101,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2169,
									"end": 2171,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2162,
									"end": 2167,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2159,
									"end": 2172,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2214,
									"end": 2231,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2195,
									"end": 2196,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2184,
									"end": 2197,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "tag",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2151,
									"end": 2233,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "tag",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 1795,
									"end": 2243,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1704,
									"end": 2249,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2555,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2545,
									"end": 2555,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2567,
									"end": 2597,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2564,
									"end": 2620,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 2600,
									"end": 2618,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "tag",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 2600,
									"end": 2618,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2719,
									"end": 2725,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2711,
									"end": 2715,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 2679,
									"end": 2717,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "tag",
									"source": 1,
									"value": "46"
								},
								{
									"begin": 2679,
									"end": 2717,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2673,
									"end": 2677,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 2629,
									"end": 2726,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "tag",
									"source": 1,
									"value": "45"
								},
								{
									"begin": 2629,
									"end": 2726,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2781,
									"end": 2785,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2845,
									"end": 2847,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2834,
									"end": 2848,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2834,
									"end": 2848,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2862,
									"end": 2863,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3564,
									"end": 3565,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3581,
									"end": 3587,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3633,
									"end": 3652,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3627,
									"end": 3653,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "tag",
									"source": 1,
									"value": "49"
								},
								{
									"begin": 3578,
									"end": 3667,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2382,
									"end": 2383,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2378,
									"end": 2389,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2374,
									"end": 2398,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 2370,
									"end": 2399,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2360,
									"end": 2400,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2406,
									"end": 2407,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2402,
									"end": 2413,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2414,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3680,
									"end": 3761,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3680,
									"end": 3761,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2827,
									"end": 3771,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2827,
									"end": 3771,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "tag",
									"source": 1,
									"value": "48"
								},
								{
									"begin": 2857,
									"end": 3520,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1651,
									"end": 1652,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1644,
									"end": 1658,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1688,
									"end": 1692,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1675,
									"end": 1693,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1675,
									"end": 1693,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2893,
									"end": 2913,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "tag",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3025,
									"end": 3032,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3022,
									"end": 3023,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3019,
									"end": 3033,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 3114,
									"end": 3133,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3108,
									"end": 3134,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3135,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3093,
									"end": 3135,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3206,
									"end": 3233,
									"name": "SWAP5",
									"source": 1
								},
								{
									"begin": 3174,
									"end": 3175,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3162,
									"end": 3176,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3060,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3041,
									"end": 3060,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "52"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "tag",
									"source": 1,
									"value": "54"
								},
								{
									"begin": 3011,
									"end": 3247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3015,
									"end": 3018,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3275,
									"end": 3281,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3266,
									"end": 3273,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3263,
									"end": 3282,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3336,
									"end": 3355,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3330,
									"end": 3356,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3419,
									"end": 3420,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3415,
									"end": 3429,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3431,
									"end": 3434,
									"name": "PUSH",
									"source": 1,
									"value": "F8"
								},
								{
									"begin": 3411,
									"end": 3435,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3407,
									"end": 3444,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 3403,
									"end": 3445,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3388,
									"end": 3446,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3447,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3373,
									"end": 3447,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "tag",
									"source": 1,
									"value": "55"
								},
								{
									"begin": 3260,
									"end": 3461,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3507,
									"end": 3508,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3491,
									"end": 3505,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 3487,
									"end": 3509,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3474,
									"end": 3510,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3474,
									"end": 3510,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2425,
									"end": 3777,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "tag",
									"source": 1,
									"value": "17"
								},
								{
									"begin": 2425,
									"end": 3777,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 24884,
									"end": 41423,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ff559bb852eb2337744677bdfbaf21d991147431f44d7286dd8d224a06902b064736f6c63430008120033",
									".code": [
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "4E1273F4"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "A22CB465"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "E89341C"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "2EB2C2D6"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 24884,
											"end": 41423,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 26499,
											"end": 26726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26499,
											"end": 26726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 597,
											"end": 622,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 597,
											"end": 622,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 585,
											"end": 587,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 570,
											"end": 588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25550,
											"end": 25855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25550,
											"end": 25855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1184,
											"end": 1198,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1177,
											"end": 1199,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1149,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1019,
											"end": 1206,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 28356,
											"end": 28782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28356,
											"end": 28782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 27437,
											"end": 27590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27437,
											"end": 27590,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27756,
											"end": 27760,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27797,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27806,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 27779,
											"end": 27816,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 27890,
											"end": 28284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 27890,
											"end": 28284,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26585,
											"end": 26592,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26612,
											"end": 26633,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26612,
											"end": 26633,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8211,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8191,
											"end": 8212,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8248,
											"end": 8250,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8228,
											"end": 8246,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8221,
											"end": 8251,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8321,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2061646472657373207A65726F206973206E6F7420612076"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8267,
											"end": 8285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8260,
											"end": 8322,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "30B634B21037BBB732B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8338,
											"end": 8356,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8331,
											"end": 8371,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8388,
											"end": 8407,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 8388,
											"end": 8407,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 26604,
											"end": 26680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26697,
											"end": 26706,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26710,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26697,
											"end": 26719,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26499,
											"end": 26726,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 25550,
											"end": 25855,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25652,
											"end": 25656,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6CDB3D13"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25728,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 25744,
											"end": 25796,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25744,
											"end": 25796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3A24D07"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25744,
											"end": 25796,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 25687,
											"end": 25796,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25848,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25687,
											"end": 25848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 25687,
											"end": 25848,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17245,
											"end": 17285,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25812,
											"end": 25848,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17137,
											"end": 17292,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26314,
											"end": 26327,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 26346,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26339,
											"end": 26350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 26339,
											"end": 26350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26339,
											"end": 26350,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26254,
											"end": 26357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28601,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28581,
											"end": 28641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28581,
											"end": 28641,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28605,
											"end": 28641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28622,
											"end": 28626,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28605,
											"end": 28641,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 28605,
											"end": 28641,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28560,
											"end": 28713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 28560,
											"end": 28713,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28723,
											"end": 28775,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28746,
											"end": 28750,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28752,
											"end": 28754,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28756,
											"end": 28759,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28761,
											"end": 28768,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28770,
											"end": 28774,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28723,
											"end": 28745,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 28723,
											"end": 28775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28723,
											"end": 28775,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28723,
											"end": 28775,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28356,
											"end": 28782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27016,
											"end": 27032,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 27071,
											"end": 27074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27071,
											"end": 27081,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27052,
											"end": 27060,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27052,
											"end": 27067,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27052,
											"end": 27081,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9420,
											"end": 9422,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9402,
											"end": 9423,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9459,
											"end": 9461,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9439,
											"end": 9457,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9432,
											"end": 9462,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9498,
											"end": 9532,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A206163636F756E747320616E6420696473206C656E677468"
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9478,
											"end": 9496,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9471,
											"end": 9533,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9549,
											"end": 9567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9542,
											"end": 9581,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9598,
											"end": 9617,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 9598,
											"end": 9617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 9218,
											"end": 9623,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 27044,
											"end": 27127,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27138,
											"end": 27168,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27185,
											"end": 27193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27185,
											"end": 27200,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 27171,
											"end": 27201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27171,
											"end": 27201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27138,
											"end": 27201,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27138,
											"end": 27201,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27217,
											"end": 27226,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27236,
											"end": 27244,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 27236,
											"end": 27251,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27232,
											"end": 27233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27232,
											"end": 27251,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27321,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27301,
											"end": 27309,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27310,
											"end": 27311,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27301,
											"end": 27312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27301,
											"end": 27312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27317,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 27318,
											"end": 27319,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27314,
											"end": 27320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27314,
											"end": 27320,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27300,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 27291,
											"end": 27321,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27291,
											"end": 27321,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 27291,
											"end": 27321,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27285,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27286,
											"end": 27287,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 27272,
											"end": 27288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 27272,
											"end": 27321,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 27253,
											"end": 27256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 27253,
											"end": 27256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 27212,
											"end": 27332,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 27349,
											"end": 27362,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 26883,
											"end": 27369,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 26883,
											"end": 27369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27583,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27564,
											"end": 27572,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27574,
											"end": 27582,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27549,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 27531,
											"end": 27583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27531,
											"end": 27583,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 27531,
											"end": 27583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 27437,
											"end": 27590,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 27890,
											"end": 28284,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28110,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28090,
											"end": 28150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28090,
											"end": 28150,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28114,
											"end": 28150,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28131,
											"end": 28135,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 27657,
											"end": 27823,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 27657,
											"end": 27823,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28114,
											"end": 28150,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 28114,
											"end": 28150,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 28069,
											"end": 28222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 28069,
											"end": 28222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28232,
											"end": 28277,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 28250,
											"end": 28254,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28256,
											"end": 28258,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28260,
											"end": 28262,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28264,
											"end": 28270,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28272,
											"end": 28276,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 28232,
											"end": 28249,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 28232,
											"end": 28277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30745,
											"end": 30752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30745,
											"end": 30759,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30731,
											"end": 30734,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 30731,
											"end": 30741,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 30731,
											"end": 30759,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10234,
											"end": 10236,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10216,
											"end": 10237,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10273,
											"end": 10275,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10253,
											"end": 10271,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10276,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10312,
											"end": 10346,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2069647320616E6420616D6F756E7473206C656E67746820"
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10292,
											"end": 10310,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10347,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DAD2E6DAC2E8C6D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10363,
											"end": 10381,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10356,
											"end": 10394,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 10411,
											"end": 10430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 10032,
											"end": 10436,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 30723,
											"end": 30804,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 30822,
											"end": 30838,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30822,
											"end": 30838,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 30814,
											"end": 30880,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 30814,
											"end": 30880,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 30891,
											"end": 30907,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31028,
											"end": 31031,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31028,
											"end": 31038,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31024,
											"end": 31025,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31024,
											"end": 31038,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31059,
											"end": 31069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31072,
											"end": 31075,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31076,
											"end": 31077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31072,
											"end": 31078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31072,
											"end": 31078,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31059,
											"end": 31078,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31059,
											"end": 31078,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31092,
											"end": 31106,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31109,
											"end": 31116,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31117,
											"end": 31118,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 31109,
											"end": 31119,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31134,
											"end": 31153,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31169,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31156,
											"end": 31175,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31109,
											"end": 31119,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 31197,
											"end": 31218,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 31189,
											"end": 31265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 31189,
											"end": 31265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31320,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP15",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31326,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31349,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31394,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31307,
											"end": 31316,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 31329,
											"end": 31349,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 31377,
											"end": 31404,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 31377,
											"end": 31404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31045,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 31040,
											"end": 31043,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31040,
											"end": 31043,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31004,
											"end": 31415,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 31460,
											"end": 31462,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31454,
											"end": 31458,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31444,
											"end": 31452,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH",
											"source": 0,
											"value": "4A39DC06D4C0DBC64B70AF90FD698A233A518AA5D07E595D983B8C0526C8F7FB"
										},
										{
											"begin": 31464,
											"end": 31467,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31469,
											"end": 31476,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 31430,
											"end": 31477,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 31430,
											"end": 31477,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 31594,
											"end": 31602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 31604,
											"end": 31608,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31610,
											"end": 31612,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31614,
											"end": 31617,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31619,
											"end": 31626,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31628,
											"end": 31632,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 31558,
											"end": 31633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 31558,
											"end": 31633,
											"name": "tag",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 31558,
											"end": 31633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 30713,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 30525,
											"end": 31640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 37224,
											"end": 37232,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37215,
											"end": 37232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37215,
											"end": 37220,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37215,
											"end": 37232,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37215,
											"end": 37232,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12060,
											"end": 12062,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12042,
											"end": 12063,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12099,
											"end": 12101,
											"name": "PUSH",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12079,
											"end": 12097,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12072,
											"end": 12102,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12138,
											"end": 12172,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2073657474696E6720617070726F76616C20737461747573"
										},
										{
											"begin": 12118,
											"end": 12136,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 12118,
											"end": 12136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12118,
											"end": 12136,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12111,
											"end": 12173,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "103337B91039B2B633"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12189,
											"end": 12207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12182,
											"end": 12221,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12238,
											"end": 12257,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 12238,
											"end": 12257,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 11858,
											"end": 12263,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 37207,
											"end": 37278,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37306,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37313,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37323,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37288,
											"end": 37334,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1159,
											"end": 1200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1132,
											"end": 1150,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 37349,
											"end": 37390,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 37104,
											"end": 37397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29413,
											"end": 29429,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29413,
											"end": 29429,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 29405,
											"end": 29471,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 29405,
											"end": 29471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 741,
											"end": 751,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 29482,
											"end": 29498,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29546,
											"end": 29567,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29564,
											"end": 29566,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29546,
											"end": 29567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29546,
											"end": 29567,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 29546,
											"end": 29567,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29567,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29523,
											"end": 29567,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29577,
											"end": 29601,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29604,
											"end": 29629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29622,
											"end": 29628,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29621,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 29604,
											"end": 29629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29604,
											"end": 29629,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 29604,
											"end": 29629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29577,
											"end": 29629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29577,
											"end": 29629,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29711,
											"end": 29730,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29746,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29733,
											"end": 29752,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 29770,
											"end": 29791,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 29762,
											"end": 29838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "tag",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 29762,
											"end": 29838,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29881,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29885,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29891,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29914,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29951,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29872,
											"end": 29881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 29894,
											"end": 29914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 29934,
											"end": 29961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29934,
											"end": 29961,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12442,
											"end": 12467,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12467,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12442,
											"end": 12467,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12498,
											"end": 12500,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12483,
											"end": 12501,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12510,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12510,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12476,
											"end": 12510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "C3D58168C5AE7397731D063D5BBF3D657854427343F4C083240F7AACAA2D0F62"
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12415,
											"end": 12433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29977,
											"end": 30023,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 30104,
											"end": 30172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30135,
											"end": 30143,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 30145,
											"end": 30149,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30151,
											"end": 30153,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30155,
											"end": 30157,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30159,
											"end": 30165,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30167,
											"end": 30171,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 30104,
											"end": 30134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 30104,
											"end": 30172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 30104,
											"end": 30172,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 30104,
											"end": 30172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29395,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29232,
											"end": 30179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40662,
											"end": 40675,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 40662,
											"end": 40675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40658,
											"end": 41216,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 40658,
											"end": 41216,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 40697,
											"end": 40740,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40741,
											"end": 40749,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40741,
											"end": 40749,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40751,
											"end": 40755,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 40751,
											"end": 40755,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40757,
											"end": 40760,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40757,
											"end": 40760,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40762,
											"end": 40769,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40762,
											"end": 40769,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40771,
											"end": 40775,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40771,
											"end": 40775,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "174"
										},
										{
											"begin": 40697,
											"end": 40776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "tag",
											"source": 0,
											"value": "173"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 40697,
											"end": 40776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 40697,
											"end": 40776,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 40693,
											"end": 41206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A0"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 40693,
											"end": 41206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41082,
											"end": 41088,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41075,
											"end": 41089,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 41075,
											"end": 41089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14669,
											"end": 14671,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 14651,
											"end": 14672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14708,
											"end": 14710,
											"name": "PUSH",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14688,
											"end": 14706,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14681,
											"end": 14711,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14747,
											"end": 14781,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F206E6F6E2D45524331313535"
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14727,
											"end": 14745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14720,
											"end": 14782,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2932B1B2B4BB32B91034B6B83632B6B2B73A32B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14798,
											"end": 14816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14791,
											"end": 14841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14858,
											"end": 14877,
											"name": "PUSH",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 14858,
											"end": 14877,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 41129,
											"end": 41191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 14467,
											"end": 14883,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 40693,
											"end": 41206,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40855,
											"end": 40915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40855,
											"end": 40915,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "BC197C81"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40855,
											"end": 40915,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40851,
											"end": 41008,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40851,
											"end": 41008,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40939,
											"end": 40989,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 40939,
											"end": 40989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 40851,
											"end": 41008,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40851,
											"end": 41008,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 40777,
											"end": 41022,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 40430,
											"end": 41222,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41228,
											"end": 41421,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 41228,
											"end": 41421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41361,
											"end": 41362,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41294,
											"end": 41310,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 41294,
											"end": 41310,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41344,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41322,
											"end": 41344,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "CALLDATACOPY",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41347,
											"end": 41363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41363,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41322,
											"end": 41363,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 41384,
											"end": 41391,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41379,
											"end": 41380,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 41373,
											"end": 41381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "tag",
											"source": 0,
											"value": "199"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 41373,
											"end": 41391,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 41409,
											"end": 41414,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 41228,
											"end": 41421,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 41228,
											"end": 41421,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39699,
											"end": 40424,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 39699,
											"end": 40424,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39906,
											"end": 39919,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 39906,
											"end": 39919,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7765,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 7746,
											"end": 7769,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39902,
											"end": 40418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 39902,
											"end": 40418,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 39941,
											"end": 39979,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39980,
											"end": 39988,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39980,
											"end": 39988,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 39994,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 39990,
											"end": 39994,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39996,
											"end": 39998,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 39996,
											"end": 39998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40000,
											"end": 40006,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40000,
											"end": 40006,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40012,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 40008,
											"end": 40012,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 39941,
											"end": 40013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "tag",
											"source": 0,
											"value": "203"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 39941,
											"end": 40013,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 39941,
											"end": 40013,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 39937,
											"end": 40408,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 39937,
											"end": 40408,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 40062,
											"end": 40117,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40062,
											"end": 40117,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F23A6E61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40062,
											"end": 40117,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 40058,
											"end": 40210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 40058,
											"end": 40210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 40141,
											"end": 40191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 40141,
											"end": 40191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 192,
											"end": 446,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 192,
											"end": 446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 260,
											"end": 266,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 268,
											"end": 274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 321,
											"end": 323,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 309,
											"end": 318,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 296,
											"end": 319,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 292,
											"end": 324,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 337,
											"end": 338,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 335,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 327,
											"end": 339,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 289,
											"end": 341,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 289,
											"end": 341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 379,
											"end": 388,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 360,
											"end": 389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 360,
											"end": 389,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 360,
											"end": 389,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 350,
											"end": 389,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 436,
											"end": 438,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 421,
											"end": 439,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 408,
											"end": 440,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 446,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 633,
											"end": 764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 707,
											"end": 739,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 697,
											"end": 740,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 754,
											"end": 755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 752,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 744,
											"end": 756,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 687,
											"end": 758,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 687,
											"end": 758,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 633,
											"end": 764,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 827,
											"end": 833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 880,
											"end": 882,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 868,
											"end": 877,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 859,
											"end": 866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 855,
											"end": 878,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 851,
											"end": 883,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 896,
											"end": 897,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 886,
											"end": 898,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 848,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 848,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 935,
											"end": 944,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 922,
											"end": 945,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 978,
											"end": 983,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 954,
											"end": 984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 954,
											"end": 984,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 954,
											"end": 984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1008,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 769,
											"end": 1014,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 769,
											"end": 1014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1276,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1311,
											"end": 1320,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1309,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1298,
											"end": 1321,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1294,
											"end": 1326,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1339,
											"end": 1340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1329,
											"end": 1341,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 1291,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1362,
											"end": 1385,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1211,
											"end": 1391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1211,
											"end": 1391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1438,
											"end": 1441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1476,
											"end": 1481,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1470,
											"end": 1482,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1503,
											"end": 1509,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1510,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1528,
											"end": 1529,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1552,
											"end": 1558,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1549,
											"end": 1550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1546,
											"end": 1559,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1614,
											"end": 1618,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1670,
											"end": 1683,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1666,
											"end": 1688,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1660,
											"end": 1689,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1642,
											"end": 1653,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1638,
											"end": 1658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1631,
											"end": 1690,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1567,
											"end": 1579,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 1538,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1542,
											"end": 1545,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1745,
											"end": 1746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1729,
											"end": 1735,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1724,
											"end": 1727,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1720,
											"end": 1736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1709,
											"end": 1747,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1808,
											"end": 1812,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1801,
											"end": 1803,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1797,
											"end": 1804,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 1792,
											"end": 1794,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 1784,
											"end": 1790,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1780,
											"end": 1795,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1776,
											"end": 1805,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1771,
											"end": 1774,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1767,
											"end": 1806,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1813,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1756,
											"end": 1813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1396,
											"end": 1819,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 1824,
											"end": 2044,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1973,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1962,
											"end": 1971,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1955,
											"end": 1976,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1936,
											"end": 1940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 2034,
											"end": 2036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2023,
											"end": 2032,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2019,
											"end": 2037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2011,
											"end": 2017,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 1993,
											"end": 2038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2049,
											"end": 2176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2110,
											"end": 2120,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 2105,
											"end": 2108,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2101,
											"end": 2121,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2091,
											"end": 2122,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2141,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 2138,
											"end": 2139,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2146,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2165,
											"end": 2169,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 2162,
											"end": 2163,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2155,
											"end": 2170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2181,
											"end": 2430,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2291,
											"end": 2293,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2272,
											"end": 2285,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2268,
											"end": 2295,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2256,
											"end": 2296,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2326,
											"end": 2344,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2311,
											"end": 2345,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2347,
											"end": 2369,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2308,
											"end": 2370,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2305,
											"end": 2393,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2373,
											"end": 2391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2373,
											"end": 2391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2409,
											"end": 2411,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2402,
											"end": 2424,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2181,
											"end": 2430,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2435,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2495,
											"end": 2499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2528,
											"end": 2546,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2520,
											"end": 2526,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2517,
											"end": 2547,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2514,
											"end": 2570,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 2550,
											"end": 2568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 2550,
											"end": 2568,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2596,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2591,
											"end": 2605,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 2607,
											"end": 2611,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2587,
											"end": 2612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2435,
											"end": 2618,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2730,
											"end": 2733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2723,
											"end": 2727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2715,
											"end": 2721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2711,
											"end": 2728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2707,
											"end": 2734,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2745,
											"end": 2746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2738,
											"end": 2750,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 2697,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2771,
											"end": 2791,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2810,
											"end": 2814,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2873,
											"end": 2875,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 2833,
											"end": 2876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 2833,
											"end": 2876,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2905,
											"end": 2907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2908,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2945,
											"end": 2947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2937,
											"end": 2943,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 2917,
											"end": 2948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 2917,
											"end": 2948,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2983,
											"end": 3001,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3075,
											"end": 3076,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3071,
											"end": 3081,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3059,
											"end": 3082,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3055,
											"end": 3087,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3017,
											"end": 3032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3099,
											"end": 3114,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3127,
											"end": 3128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3124,
											"end": 3125,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3117,
											"end": 3129,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 3096,
											"end": 3131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3163,
											"end": 3165,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3155,
											"end": 3161,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3151,
											"end": 3166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3191,
											"end": 3197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3186,
											"end": 3189,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3183,
											"end": 3198,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3257,
											"end": 3274,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3245,
											"end": 3275,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3295,
											"end": 3307,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3208,
											"end": 3220,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 3175,
											"end": 3317,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3335,
											"end": 3341,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": 2623,
											"end": 3347,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2623,
											"end": 3347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3394,
											"end": 3399,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3447,
											"end": 3450,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3440,
											"end": 3444,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3432,
											"end": 3438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3428,
											"end": 3445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3424,
											"end": 3451,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3465,
											"end": 3466,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3463,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3455,
											"end": 3467,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 3414,
											"end": 3469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3501,
											"end": 3507,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3488,
											"end": 3508,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3527,
											"end": 3545,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3523,
											"end": 3525,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3520,
											"end": 3546,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3517,
											"end": 3569,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 3549,
											"end": 3567,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 3549,
											"end": 3567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3598,
											"end": 3600,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3665,
											"end": 3667,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3646,
											"end": 3659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3642,
											"end": 3669,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3638,
											"end": 3676,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3592,
											"end": 3601,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 3610,
											"end": 3677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 3610,
											"end": 3677,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3701,
											"end": 3703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3693,
											"end": 3699,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3686,
											"end": 3704,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3747,
											"end": 3750,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3740,
											"end": 3744,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3735,
											"end": 3737,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3727,
											"end": 3733,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3723,
											"end": 3738,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3719,
											"end": 3745,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3716,
											"end": 3751,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3765,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3761,
											"end": 3762,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3754,
											"end": 3766,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 3713,
											"end": 3768,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3828,
											"end": 3830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3821,
											"end": 3825,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3813,
											"end": 3819,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3809,
											"end": 3826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3802,
											"end": 3806,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3794,
											"end": 3800,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3807,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3777,
											"end": 3831,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 3875,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3868,
											"end": 3872,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3847,
											"end": 3873,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3840,
											"end": 3877,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3855,
											"end": 3861,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3352,
											"end": 3907,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3352,
											"end": 3907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4066,
											"end": 4072,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4074,
											"end": 4080,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4082,
											"end": 4088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4096,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4098,
											"end": 4104,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4151,
											"end": 4154,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 4139,
											"end": 4148,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4130,
											"end": 4137,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4126,
											"end": 4149,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4122,
											"end": 4155,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4168,
											"end": 4169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4165,
											"end": 4166,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 4119,
											"end": 4172,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4210,
											"end": 4219,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4191,
											"end": 4220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 4191,
											"end": 4220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4181,
											"end": 4220,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4273,
											"end": 4275,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4262,
											"end": 4271,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 4258,
											"end": 4276,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 4239,
											"end": 4277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 4239,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4229,
											"end": 4277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4328,
											"end": 4330,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4326,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 4313,
											"end": 4331,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4300,
											"end": 4332,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4351,
											"end": 4369,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4392,
											"end": 4394,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4384,
											"end": 4390,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4395,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4408,
											"end": 4409,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4405,
											"end": 4406,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 4378,
											"end": 4412,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4484,
											"end": 4491,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4475,
											"end": 4481,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4464,
											"end": 4473,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4460,
											"end": 4482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4431,
											"end": 4492,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 4431,
											"end": 4492,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 4421,
											"end": 4492,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4545,
											"end": 4547,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4530,
											"end": 4548,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4517,
											"end": 4549,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4501,
											"end": 4549,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4574,
											"end": 4576,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4564,
											"end": 4572,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4561,
											"end": 4577,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4590,
											"end": 4591,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4587,
											"end": 4588,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4580,
											"end": 4592,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 4558,
											"end": 4594,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4668,
											"end": 4675,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4657,
											"end": 4665,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4646,
											"end": 4655,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 4642,
											"end": 4666,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 4613,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 4613,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 4603,
											"end": 4676,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4729,
											"end": 4732,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 4718,
											"end": 4727,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4714,
											"end": 4733,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4701,
											"end": 4734,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4685,
											"end": 4734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4759,
											"end": 4761,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4749,
											"end": 4757,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4762,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4775,
											"end": 4776,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4765,
											"end": 4777,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4743,
											"end": 4779,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4841,
											"end": 4848,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 4830,
											"end": 4838,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4828,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 4815,
											"end": 4839,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 4798,
											"end": 4849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 4798,
											"end": 4849,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4788,
											"end": 4849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3912,
											"end": 4855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4978,
											"end": 4984,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4986,
											"end": 4992,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5039,
											"end": 5041,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5018,
											"end": 5025,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5014,
											"end": 5037,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5010,
											"end": 5042,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5055,
											"end": 5056,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5045,
											"end": 5057,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 5007,
											"end": 5059,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5095,
											"end": 5104,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5082,
											"end": 5105,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5165,
											"end": 5167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5154,
											"end": 5168,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5181,
											"end": 5182,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5178,
											"end": 5179,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 5151,
											"end": 5185,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5219,
											"end": 5225,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5208,
											"end": 5217,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5204,
											"end": 5226,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5194,
											"end": 5226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5264,
											"end": 5271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5257,
											"end": 5261,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 5253,
											"end": 5255,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5249,
											"end": 5262,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5245,
											"end": 5272,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5286,
											"end": 5287,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5283,
											"end": 5284,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5276,
											"end": 5288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 5235,
											"end": 5290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5322,
											"end": 5324,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5309,
											"end": 5325,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5344,
											"end": 5348,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 5367,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 5367,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5439,
											"end": 5441,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5433,
											"end": 5442,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5479,
											"end": 5481,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5471,
											"end": 5477,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 5451,
											"end": 5482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 5451,
											"end": 5482,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5517,
											"end": 5535,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5605,
											"end": 5606,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5601,
											"end": 5611,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5593,
											"end": 5612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5589,
											"end": 5617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5551,
											"end": 5566,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5629,
											"end": 5648,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5661,
											"end": 5662,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5658,
											"end": 5659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5663,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 5626,
											"end": 5665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5685,
											"end": 5696,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5721,
											"end": 5727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5716,
											"end": 5719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5713,
											"end": 5728,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5806,
											"end": 5809,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 5787,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 5787,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5775,
											"end": 5811,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5738,
											"end": 5750,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5831,
											"end": 5843,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 5705,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5872,
											"end": 5878,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 5916,
											"end": 5934,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5903,
											"end": 5935,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5947,
											"end": 5963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5976,
											"end": 5977,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5974,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5966,
											"end": 5978,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5944,
											"end": 5980,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6043,
											"end": 6051,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6032,
											"end": 6041,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6028,
											"end": 6052,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 5999,
											"end": 6062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 5999,
											"end": 6062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5989,
											"end": 6062,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4860,
											"end": 6068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6126,
											"end": 6129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6164,
											"end": 6169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6158,
											"end": 6170,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6191,
											"end": 6197,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6189,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6179,
											"end": 6198,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6217,
											"end": 6221,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6246,
											"end": 6248,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6241,
											"end": 6244,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6237,
											"end": 6249,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6230,
											"end": 6249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6283,
											"end": 6285,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6276,
											"end": 6281,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6272,
											"end": 6286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6304,
											"end": 6305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6328,
											"end": 6334,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6325,
											"end": 6326,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6322,
											"end": 6335,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6389,
											"end": 6402,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 6377,
											"end": 6403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6423,
											"end": 6435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6458,
											"end": 6473,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6350,
											"end": 6351,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6343,
											"end": 6352,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "tag",
											"source": 1,
											"value": "297"
										},
										{
											"begin": 6314,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 6073,
											"end": 6508,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6073,
											"end": 6508,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 6513,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6692,
											"end": 6694,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6681,
											"end": 6690,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6674,
											"end": 6695,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 6764,
											"end": 6766,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6753,
											"end": 6762,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6767,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6747,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6712,
											"end": 6768,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 6712,
											"end": 6768,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6844,
											"end": 6850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6852,
											"end": 6858,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6905,
											"end": 6907,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6893,
											"end": 6902,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6884,
											"end": 6891,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6880,
											"end": 6903,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6876,
											"end": 6908,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6921,
											"end": 6922,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6918,
											"end": 6919,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6923,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "tag",
											"source": 1,
											"value": "301"
										},
										{
											"begin": 6873,
											"end": 6925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6963,
											"end": 6972,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 6944,
											"end": 6973,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "tag",
											"source": 1,
											"value": "302"
										},
										{
											"begin": 6944,
											"end": 6973,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6934,
											"end": 6973,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7023,
											"end": 7025,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7012,
											"end": 7021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7008,
											"end": 7026,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6995,
											"end": 7027,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7070,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7063,
											"end": 7076,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7056,
											"end": 7077,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7049,
											"end": 7054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7046,
											"end": 7078,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7092,
											"end": 7093,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7089,
											"end": 7090,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7082,
											"end": 7094,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 7036,
											"end": 7096,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7115,
											"end": 7120,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7105,
											"end": 7120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6779,
											"end": 7126,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7199,
											"end": 7205,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7207,
											"end": 7213,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7260,
											"end": 7262,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7248,
											"end": 7257,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7239,
											"end": 7246,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7235,
											"end": 7258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7231,
											"end": 7263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7273,
											"end": 7274,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7266,
											"end": 7278,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "tag",
											"source": 1,
											"value": "305"
										},
										{
											"begin": 7228,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7318,
											"end": 7327,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7299,
											"end": 7328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 7299,
											"end": 7328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7289,
											"end": 7328,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7381,
											"end": 7383,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7370,
											"end": 7379,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7366,
											"end": 7384,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7347,
											"end": 7385,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "tag",
											"source": 1,
											"value": "307"
										},
										{
											"begin": 7347,
											"end": 7385,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7337,
											"end": 7385,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7131,
											"end": 7391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 7396,
											"end": 8002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7500,
											"end": 7506,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7508,
											"end": 7514,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7516,
											"end": 7522,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7530,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7532,
											"end": 7538,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7585,
											"end": 7588,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 7573,
											"end": 7582,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7564,
											"end": 7571,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7560,
											"end": 7583,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7556,
											"end": 7589,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7602,
											"end": 7603,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7599,
											"end": 7600,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7592,
											"end": 7604,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 7553,
											"end": 7606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7644,
											"end": 7653,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7625,
											"end": 7654,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 7625,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 7615,
											"end": 7654,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7707,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7696,
											"end": 7705,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 7692,
											"end": 7710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "220"
										},
										{
											"begin": 7673,
											"end": 7711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "tag",
											"source": 1,
											"value": "311"
										},
										{
											"begin": 7673,
											"end": 7711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7663,
											"end": 7711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7758,
											"end": 7760,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7747,
											"end": 7756,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7743,
											"end": 7761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7730,
											"end": 7762,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7720,
											"end": 7762,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7809,
											"end": 7811,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7798,
											"end": 7807,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7794,
											"end": 7812,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7781,
											"end": 7813,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7771,
											"end": 7813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7864,
											"end": 7867,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 7853,
											"end": 7862,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 7849,
											"end": 7868,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7836,
											"end": 7869,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7892,
											"end": 7910,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7884,
											"end": 7890,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7881,
											"end": 7911,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7924,
											"end": 7925,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7921,
											"end": 7922,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7914,
											"end": 7926,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "tag",
											"source": 1,
											"value": "312"
										},
										{
											"begin": 7878,
											"end": 7928,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 7988,
											"end": 7995,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7979,
											"end": 7985,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7968,
											"end": 7977,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 7964,
											"end": 7986,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7947,
											"end": 7996,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 7947,
											"end": 7996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8497,
											"end": 8498,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 8493,
											"end": 8505,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8540,
											"end": 8552,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8615,
											"end": 8619,
											"name": "PUSH",
											"source": 1,
											"value": "7F"
										},
										{
											"begin": 8607,
											"end": 8613,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8603,
											"end": 8620,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8620,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8593,
											"end": 8620,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "tag",
											"source": 1,
											"value": "316"
										},
										{
											"begin": 8561,
											"end": 8622,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8668,
											"end": 8670,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8660,
											"end": 8666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8657,
											"end": 8671,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 8637,
											"end": 8655,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8634,
											"end": 8672,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8714,
											"end": 8724,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 8709,
											"end": 8712,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 8705,
											"end": 8725,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 8702,
											"end": 8703,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8695,
											"end": 8726,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8777,
											"end": 8781,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 8774,
											"end": 8775,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8767,
											"end": 8782,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "tag",
											"source": 1,
											"value": "317"
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8631,
											"end": 8792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8418,
											"end": 8798,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 9213,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 8803,
											"end": 9213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9005,
											"end": 9007,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8987,
											"end": 9008,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9044,
											"end": 9046,
											"name": "PUSH",
											"source": 1,
											"value": "2E"
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9024,
											"end": 9042,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9017,
											"end": 9047,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9083,
											"end": 9117,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A2063616C6C6572206973206E6F7420746F6B656E206F776E"
										},
										{
											"begin": 9078,
											"end": 9080,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9063,
											"end": 9081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9056,
											"end": 9118,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "195C881BDC88185C1C1C9BDD9959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "92"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9149,
											"end": 9151,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9134,
											"end": 9152,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9127,
											"end": 9171,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9203,
											"end": 9206,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9188,
											"end": 9207,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9188,
											"end": 9207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8803,
											"end": 9213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9628,
											"end": 9755,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 9628,
											"end": 9755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9689,
											"end": 9699,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9684,
											"end": 9687,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9680,
											"end": 9700,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9670,
											"end": 9701,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9720,
											"end": 9724,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 9717,
											"end": 9718,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9710,
											"end": 9725,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9744,
											"end": 9748,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9741,
											"end": 9742,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9734,
											"end": 9749,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9760,
											"end": 9887,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9760,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9821,
											"end": 9831,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B71"
										},
										{
											"begin": 9816,
											"end": 9819,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 9812,
											"end": 9832,
											"name": "SHL",
											"source": 1
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9802,
											"end": 9833,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9852,
											"end": 9856,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 9849,
											"end": 9850,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9842,
											"end": 9857,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9876,
											"end": 9880,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9873,
											"end": 9874,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9866,
											"end": 9881,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 10027,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9892,
											"end": 10027,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9931,
											"end": 9934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9952,
											"end": 9969,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9949,
											"end": 9992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9949,
											"end": 9992,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 9972,
											"end": 9990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 9972,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10019,
											"end": 10020,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10008,
											"end": 10021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10008,
											"end": 10021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9892,
											"end": 10027,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10842,
											"name": "tag",
											"source": 1,
											"value": "123"
										},
										{
											"begin": 10441,
											"end": 10842,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10625,
											"end": 10646,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10646,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10625,
											"end": 10646,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10682,
											"end": 10684,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10655,
											"end": 10685,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10721,
											"end": 10755,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A207472616E7366657220746F20746865207A65726F206164"
										},
										{
											"begin": 10716,
											"end": 10718,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10756,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10787,
											"end": 10789,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10772,
											"end": 10790,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10765,
											"end": 10800,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10832,
											"end": 10835,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10817,
											"end": 10836,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10817,
											"end": 10836,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10441,
											"end": 10842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11253,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 10847,
											"end": 11253,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11049,
											"end": 11051,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11031,
											"end": 11052,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11031,
											"end": 11052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11031,
											"end": 11052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11088,
											"end": 11090,
											"name": "PUSH",
											"source": 1,
											"value": "2A"
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11068,
											"end": 11086,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11061,
											"end": 11091,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11127,
											"end": 11161,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A20696E73756666696369656E742062616C616E636520666F"
										},
										{
											"begin": 11122,
											"end": 11124,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11107,
											"end": 11125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11100,
											"end": 11162,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "39103A3930B739B332B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11193,
											"end": 11195,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11178,
											"end": 11196,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11178,
											"end": 11196,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11171,
											"end": 11211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11243,
											"end": 11246,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 11228,
											"end": 11247,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11228,
											"end": 11247,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10847,
											"end": 11253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11258,
											"end": 11383,
											"name": "tag",
											"source": 1,
											"value": "138"
										},
										{
											"begin": 11258,
											"end": 11383,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11323,
											"end": 11332,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11354,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11354,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11344,
											"end": 11354,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11341,
											"end": 11377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11341,
											"end": 11377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 11357,
											"end": 11375,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 11357,
											"end": 11375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11388,
											"end": 11853,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 11388,
											"end": 11853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11645,
											"end": 11647,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11634,
											"end": 11643,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11627,
											"end": 11648,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11608,
											"end": 11612,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11723,
											"end": 11725,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11712,
											"end": 11721,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11708,
											"end": 11726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11700,
											"end": 11706,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 11671,
											"end": 11727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 11671,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11775,
											"end": 11784,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11767,
											"end": 11773,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11763,
											"end": 11785,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11758,
											"end": 11760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11747,
											"end": 11756,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11743,
											"end": 11761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11736,
											"end": 11786,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11840,
											"end": 11846,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 11832,
											"end": 11838,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 11803,
											"end": 11847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "tag",
											"source": 1,
											"value": "333"
										},
										{
											"begin": 11803,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11847,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 11388,
											"end": 11853,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11388,
											"end": 11853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 13348,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 12521,
											"end": 13348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12918,
											"end": 12933,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12934,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12900,
											"end": 12934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12970,
											"end": 12985,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 12965,
											"end": 12967,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12950,
											"end": 12968,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12943,
											"end": 12986,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12880,
											"end": 12883,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 13017,
											"end": 13019,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13002,
											"end": 13020,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13026,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13026,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12995,
											"end": 13026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12843,
											"end": 12847,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13086,
											"end": 13105,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13086,
											"end": 13105,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13078,
											"end": 13084,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 13049,
											"end": 13106,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 13049,
											"end": 13106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13154,
											"end": 13163,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13146,
											"end": 13152,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13142,
											"end": 13164,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13137,
											"end": 13139,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 13126,
											"end": 13135,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13122,
											"end": 13140,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13115,
											"end": 13165,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13225,
											"end": 13231,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13223,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 13188,
											"end": 13232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 13188,
											"end": 13232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13174,
											"end": 13232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13281,
											"end": 13290,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13273,
											"end": 13279,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13269,
											"end": 13291,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13263,
											"end": 13266,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 13252,
											"end": 13261,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13248,
											"end": 13267,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13241,
											"end": 13292,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13335,
											"end": 13341,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13327,
											"end": 13333,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 13309,
											"end": 13342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "tag",
											"source": 1,
											"value": "339"
										},
										{
											"begin": 13309,
											"end": 13342,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13301,
											"end": 13342,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 12521,
											"end": 13348,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12521,
											"end": 13348,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13353,
											"end": 13602,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 13353,
											"end": 13602,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13422,
											"end": 13428,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13475,
											"end": 13477,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 13463,
											"end": 13472,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13454,
											"end": 13461,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 13450,
											"end": 13473,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 13446,
											"end": 13478,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13491,
											"end": 13492,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13488,
											"end": 13489,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13481,
											"end": 13493,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "tag",
											"source": 1,
											"value": "341"
										},
										{
											"begin": 13443,
											"end": 13495,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13523,
											"end": 13532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 13566,
											"end": 13571,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13542,
											"end": 13572,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13542,
											"end": 13572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13645,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13684,
											"end": 13685,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 13666,
											"end": 13682,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13663,
											"end": 13686,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13730,
											"end": 13731,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13727,
											"end": 13728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13724,
											"end": 13725,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13709,
											"end": 13732,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13767,
											"end": 13768,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13761,
											"end": 13769,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 13756,
											"end": 13759,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 13752,
											"end": 13770,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 13660,
											"end": 13780,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13786,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13607,
											"end": 13786,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13830,
											"end": 13833,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13872,
											"end": 13876,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 13854,
											"end": 13870,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13851,
											"end": 13877,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 13848,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13914,
											"end": 13916,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13908,
											"end": 13917,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13979,
											"end": 13995,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 13975,
											"end": 14000,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13975,
											"end": 14000,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13972,
											"end": 13973,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13908,
											"end": 13917,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13951,
											"end": 14001,
											"name": "RETURNDATACOPY",
											"source": 1
										},
										{
											"begin": 14030,
											"end": 14034,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14024,
											"end": 14035,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14054,
											"end": 14070,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14089,
											"end": 14107,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14160,
											"end": 14162,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14153,
											"end": 14157,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 14145,
											"end": 14151,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14141,
											"end": 14158,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14138,
											"end": 14163,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14133,
											"end": 14135,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14125,
											"end": 14131,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14122,
											"end": 14136,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14119,
											"end": 14164,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14167,
											"end": 14172,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "tag",
											"source": 1,
											"value": "347"
										},
										{
											"begin": 14116,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14204,
											"end": 14210,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14198,
											"end": 14202,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14194,
											"end": 14211,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14211,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14183,
											"end": 14211,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14240,
											"end": 14243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14244,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 14267,
											"end": 14269,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14259,
											"end": 14265,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14256,
											"end": 14270,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14273,
											"end": 14278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "tag",
											"source": 1,
											"value": "348"
										},
										{
											"begin": 14253,
											"end": 14280,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14357,
											"end": 14359,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14338,
											"end": 14354,
											"name": "RETURNDATASIZE",
											"source": 1
										},
										{
											"begin": 14332,
											"end": 14336,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14328,
											"end": 14355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14324,
											"end": 14360,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14317,
											"end": 14321,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14308,
											"end": 14314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14303,
											"end": 14306,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14299,
											"end": 14315,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14295,
											"end": 14322,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14292,
											"end": 14361,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14364,
											"end": 14369,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "tag",
											"source": 1,
											"value": "349"
										},
										{
											"begin": 14289,
											"end": 14371,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14431,
											"end": 14435,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14422,
											"end": 14428,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14414,
											"end": 14420,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 14410,
											"end": 14429,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14406,
											"end": 14436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14400,
											"end": 14404,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 14380,
											"end": 14437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "tag",
											"source": 1,
											"value": "350"
										},
										{
											"begin": 14380,
											"end": 14437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14453,
											"end": 14456,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14453,
											"end": 14456,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 13791,
											"end": 14462,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13791,
											"end": 14462,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15292,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 14888,
											"end": 15292,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15090,
											"end": 15092,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15072,
											"end": 15093,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15072,
											"end": 15093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15072,
											"end": 15093,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15129,
											"end": 15131,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15109,
											"end": 15127,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15102,
											"end": 15132,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15168,
											"end": 15202,
											"name": "PUSH",
											"source": 1,
											"value": "455243313135353A204552433131353552656365697665722072656A65637465"
										},
										{
											"begin": 15163,
											"end": 15165,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15148,
											"end": 15166,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15148,
											"end": 15166,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15141,
											"end": 15203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6420746F6B656E73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15234,
											"end": 15236,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15219,
											"end": 15237,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15219,
											"end": 15237,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15212,
											"end": 15250,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15282,
											"end": 15285,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15267,
											"end": 15286,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15267,
											"end": 15286,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14888,
											"end": 15292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15297,
											"end": 15858,
											"name": "tag",
											"source": 1,
											"value": "204"
										},
										{
											"begin": 15297,
											"end": 15858,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 15594,
											"end": 15609,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15594,
											"end": 15609,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15594,
											"end": 15609,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15576,
											"end": 15610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15576,
											"end": 15610,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15661,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 15646,
											"end": 15661,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 15641,
											"end": 15643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15626,
											"end": 15644,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15626,
											"end": 15644,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15619,
											"end": 15662,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15693,
											"end": 15695,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 15678,
											"end": 15696,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15678,
											"end": 15696,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15705,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15671,
											"end": 15705,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15736,
											"end": 15738,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 15721,
											"end": 15739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15721,
											"end": 15739,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15748,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15748,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15714,
											"end": 15748,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15556,
											"end": 15559,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 15779,
											"end": 15782,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15764,
											"end": 15783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15789,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15789,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15757,
											"end": 15789,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15519,
											"end": 15523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15519,
											"end": 15523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15851,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15832,
											"end": 15851,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15824,
											"end": 15830,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 15806,
											"end": 15852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 15806,
											"end": 15852,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15798,
											"end": 15852,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 15297,
											"end": 15858,
											"name": "SWAP7",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15297,
											"end": 15858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/DTiket_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155 _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"ERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "contracts/DTiket_flattened.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 797,
								"contract": "contracts/DTiket_flattened.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 799,
								"contract": "contracts/DTiket_flattened.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155Burnable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "burnBatch",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"burn(address,uint256,uint256)": "f5298aca",
							"burnBatch(address,uint256[],uint256[])": "6b20c454",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"burnBatch\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC1155} that allows token holders to destroy both their own tokens and those that they have been approved to use. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"ERC1155Burnable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 791,
								"contract": "contracts/DTiket_flattened.sol:ERC1155Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 797,
								"contract": "contracts/DTiket_flattened.sol:ERC1155Burnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 799,
								"contract": "contracts/DTiket_flattened.sol:ERC1155Burnable",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"ERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"IERC1155\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "_Available since v3.1._",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"_Available since v3.1._\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"IERC165\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 27,
								"contract": "contracts/DTiket_flattened.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/DTiket_flattened.sol\":\"Pausable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/DTiket_flattened.sol\":{\"keccak256\":\"0x1ee453b8b18151a40606643895bc4fba52ccaf670752a3695e7e11dabce91679\",\"urls\":[\"bzz-raw://b55fe0f9ac19f88a962caf24466721b8a0b7e699e84ed707a665b20777f77ebf\",\"dweb:/ipfs/QmTjPAfxDX3D9TSYRMQSuGZhxA9xhNFLnSQxU3bFGfcRh2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 148,
								"contract": "contracts/DTiket_flattened.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> contracts/DTiket_flattened.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "contracts/DTiket_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/DTiket_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/DTiket_flattened.sol",
					"exportedSymbols": {
						"Address": [
							567
						],
						"Context": [
							21
						],
						"DTiket": [
							2184
						],
						"ERC1155": [
							1988
						],
						"ERC1155Burnable": [
							2055
						],
						"ERC165": [
							600
						],
						"IERC1155": [
							759
						],
						"IERC1155MetadataURI": [
							772
						],
						"IERC1155Receiver": [
							639
						],
						"IERC165": [
							578
						],
						"Ownable": [
							132
						],
						"Pausable": [
							238
						]
					},
					"id": 2185,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "133:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 21,
							"linearizedBaseContracts": [
								21
							],
							"name": "Context",
							"nameLocation": "648:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "724:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "741:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "745:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "741:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "734:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "681:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "715:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "714:9:0"
									},
									"scope": 21,
									"src": "662:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "831:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "848:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "852:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "848:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "841:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "773:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "781:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "815:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "815:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "814:16:0"
									},
									"scope": 21,
									"src": "764:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2185,
							"src": "630:235:0",
							"usedErrors": []
						},
						{
							"id": 22,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "991:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 24,
										"name": "Context",
										"nameLocations": [
											"1541:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "1541:7:0"
									},
									"id": 25,
									"nodeType": "InheritanceSpecifier",
									"src": "1541:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 23,
								"nodeType": "StructuredDocumentation",
								"src": "1017:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 132,
							"linearizedBaseContracts": [
								132,
								21
							],
							"name": "Ownable",
							"nameLocation": "1530:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 27,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "1571:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 132,
									"src": "1555:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1555:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 33,
									"name": "OwnershipTransferred",
									"nameLocation": "1590:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1627:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1611:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1611:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 31,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1658:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "1642:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 30,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1610:57:0"
									},
									"src": "1584:84:0"
								},
								{
									"body": {
										"id": 42,
										"nodeType": "Block",
										"src": "1784:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 38,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1813:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 39,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1813:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 37,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "1794:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 40,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1794:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 41,
												"nodeType": "ExpressionStatement",
												"src": "1794:32:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "1674:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 43,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 35,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1781:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1784:0:0"
									},
									"scope": 132,
									"src": "1770:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 50,
										"nodeType": "Block",
										"src": "1942:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 46,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "1952:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1952:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1952:13:0"
											},
											{
												"id": 49,
												"nodeType": "PlaceholderStatement",
												"src": "1975:1:0"
											}
										]
									},
									"documentation": {
										"id": 44,
										"nodeType": "StructuredDocumentation",
										"src": "1839:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 51,
									"name": "onlyOwner",
									"nameLocation": "1930:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1939:2:0"
									},
									"src": "1921:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2114:30:0",
										"statements": [
											{
												"expression": {
													"id": 57,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "2131:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 56,
												"id": 58,
												"nodeType": "Return",
												"src": "2124:13:0"
											}
										]
									},
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "1989:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "2068:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2073:2:0"
									},
									"returnParameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2105:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2104:9:0"
									},
									"scope": 132,
									"src": "2059:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 73,
										"nodeType": "Block",
										"src": "2262:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 65,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 60,
																	"src": "2280:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 66,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2280:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 67,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 11,
																	"src": "2291:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 68,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2291:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2280:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 70,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2305:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 64,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 71,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2272:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 72,
												"nodeType": "ExpressionStatement",
												"src": "2272:68:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2150:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 74,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "2226:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2237:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2262:0:0"
									},
									"scope": 132,
									"src": "2217:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 87,
										"nodeType": "Block",
										"src": "2736:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 83,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2773:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 82,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2765:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 81,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2765:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2765:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 80,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "2746:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 85,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2746:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 86,
												"nodeType": "ExpressionStatement",
												"src": "2746:30:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "2353:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 88,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 78,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 77,
												"name": "onlyOwner",
												"nameLocations": [
													"2726:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2726:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2726:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2691:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2708:2:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2736:0:0"
									},
									"scope": 132,
									"src": "2682:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "3002:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 97,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "3020:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3040:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3032:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 98,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "3032:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3032:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "3020:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 103,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3044:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 96,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3012:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3012:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 105,
												"nodeType": "ExpressionStatement",
												"src": "3012:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "3114:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 106,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "3095:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3095:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "ExpressionStatement",
												"src": "3095:28:0"
											}
										]
									},
									"documentation": {
										"id": 89,
										"nodeType": "StructuredDocumentation",
										"src": "2789:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 94,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 93,
												"name": "onlyOwner",
												"nameLocations": [
													"2992:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "2992:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2992:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2941:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2967:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2959:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2958:18:0"
									},
									"returnParameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3002:0:0"
									},
									"scope": 132,
									"src": "2932:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3347:124:0",
										"statements": [
											{
												"assignments": [
													118
												],
												"declarations": [
													{
														"constant": false,
														"id": 118,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "3365:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 130,
														"src": "3357:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 117,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3357:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"id": 119,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 27,
													"src": "3376:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3357:25:0"
											},
											{
												"expression": {
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 121,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "3392:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 122,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "3401:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3392:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "3392:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 126,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 118,
															"src": "3445:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 127,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "3455:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 125,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "3424:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3424:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 129,
												"nodeType": "EmitStatement",
												"src": "3419:45:0"
											}
										]
									},
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "3136:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "3293:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3320:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3312:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3312:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3311:18:0"
									},
									"returnParameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3347:0:0"
									},
									"scope": 132,
									"src": "3284:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2185,
							"src": "1512:1961:0",
							"usedErrors": []
						},
						{
							"id": 133,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3605:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 135,
										"name": "Context",
										"nameLocations": [
											"4101:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "4101:7:0"
									},
									"id": 136,
									"nodeType": "InheritanceSpecifier",
									"src": "4101:7:0"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 134,
								"nodeType": "StructuredDocumentation",
								"src": "3631:439:0",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 238,
							"linearizedBaseContracts": [
								238,
								21
							],
							"name": "Pausable",
							"nameLocation": "4089:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 137,
										"nodeType": "StructuredDocumentation",
										"src": "4115:73:0",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 141,
									"name": "Paused",
									"nameLocation": "4199:6:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 139,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4214:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "4206:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4206:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4205:17:0"
									},
									"src": "4193:30:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "4229:70:0",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 146,
									"name": "Unpaused",
									"nameLocation": "4310:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4327:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4319:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4319:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4318:17:0"
									},
									"src": "4304:32:0"
								},
								{
									"constant": false,
									"id": 148,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "4355:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 238,
									"src": "4342:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 147,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "4342:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "4455:32:0",
										"statements": [
											{
												"expression": {
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 152,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "4465:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 153,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4475:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4465:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 155,
												"nodeType": "ExpressionStatement",
												"src": "4465:15:0"
											}
										]
									},
									"documentation": {
										"id": 149,
										"nodeType": "StructuredDocumentation",
										"src": "4369:67:0",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 157,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4452:2:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4455:0:0"
									},
									"scope": 238,
									"src": "4441:46:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "4698:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 160,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "4708:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4708:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "4708:19:0"
											},
											{
												"id": 163,
												"nodeType": "PlaceholderStatement",
												"src": "4737:1:0"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "4493:175:0",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 165,
									"name": "whenNotPaused",
									"nameLocation": "4682:13:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4695:2:0"
									},
									"src": "4673:72:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "4945:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 168,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "4955:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4955:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 170,
												"nodeType": "ExpressionStatement",
												"src": "4955:16:0"
											},
											{
												"id": 171,
												"nodeType": "PlaceholderStatement",
												"src": "4981:1:0"
											}
										]
									},
									"documentation": {
										"id": 166,
										"nodeType": "StructuredDocumentation",
										"src": "4751:167:0",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 173,
									"name": "whenPaused",
									"nameLocation": "4932:10:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4942:2:0"
									},
									"src": "4923:66:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "5137:31:0",
										"statements": [
											{
												"expression": {
													"id": 179,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 148,
													"src": "5154:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "5147:14:0"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "4995:84:0",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "5093:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5099:2:0"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "5131:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 176,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5131:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5130:6:0"
									},
									"scope": 238,
									"src": "5084:84:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 193,
										"nodeType": "Block",
										"src": "5287:55:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "5305:9:0",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 187,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "5306:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5306:8:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 190,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5316:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5297:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5297:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 192,
												"nodeType": "ExpressionStatement",
												"src": "5297:38:0"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "5174:57:0",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 194,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "5245:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5262:2:0"
									},
									"returnParameters": {
										"id": 185,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5287:0:0"
									},
									"scope": 238,
									"src": "5236:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 204,
										"nodeType": "Block",
										"src": "5462:58:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 199,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "5480:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5480:8:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 201,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5490:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5472:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 202,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5472:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 203,
												"nodeType": "ExpressionStatement",
												"src": "5472:41:0"
											}
										]
									},
									"documentation": {
										"id": 195,
										"nodeType": "StructuredDocumentation",
										"src": "5348:61:0",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 205,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "5423:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5437:2:0"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:0"
									},
									"scope": 238,
									"src": "5414:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 220,
										"nodeType": "Block",
										"src": "5704:66:0",
										"statements": [
											{
												"expression": {
													"id": 213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 211,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "5714:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 212,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5724:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "5714:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 214,
												"nodeType": "ExpressionStatement",
												"src": "5714:14:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 216,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "5750:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 217,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5750:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 215,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "5743:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5743:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "EmitStatement",
												"src": "5738:25:0"
											}
										]
									},
									"documentation": {
										"id": 206,
										"nodeType": "StructuredDocumentation",
										"src": "5526:124:0",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 221,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 209,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 208,
												"name": "whenNotPaused",
												"nameLocations": [
													"5690:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "5690:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5690:13:0"
										}
									],
									"name": "_pause",
									"nameLocation": "5664:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 207,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5670:2:0"
									},
									"returnParameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5704:0:0"
									},
									"scope": 238,
									"src": "5655:115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "5950:69:0",
										"statements": [
											{
												"expression": {
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 227,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 148,
														"src": "5960:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 228,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5970:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "5960:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "5960:15:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 232,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "5999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5999:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 231,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5990:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 234,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5990:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 235,
												"nodeType": "EmitStatement",
												"src": "5985:27:0"
											}
										]
									},
									"documentation": {
										"id": 222,
										"nodeType": "StructuredDocumentation",
										"src": "5776:121:0",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 225,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 224,
												"name": "whenPaused",
												"nameLocations": [
													"5939:10:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 173,
												"src": "5939:10:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5939:10:0"
										}
									],
									"name": "_unpause",
									"nameLocation": "5911:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5919:2:0"
									},
									"returnParameters": {
										"id": 226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5950:0:0"
									},
									"scope": 238,
									"src": "5902:117:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 2185,
							"src": "4071:1950:0",
							"usedErrors": []
						},
						{
							"id": 239,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".1"
							],
							"nodeType": "PragmaDirective",
							"src": "6145:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 240,
								"nodeType": "StructuredDocumentation",
								"src": "6170:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 567,
							"linearizedBaseContracts": [
								567
							],
							"name": "Address",
							"nameLocation": "6246:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "7522:254:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 248,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 243,
																"src": "7746:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7754:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "7746:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7759:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "7746:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 251,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7768:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "7746:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 247,
												"id": 253,
												"nodeType": "Return",
												"src": "7739:30:0"
											}
										]
									},
									"documentation": {
										"id": 241,
										"nodeType": "StructuredDocumentation",
										"src": "6260:1191:0",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n Furthermore, `isContract` will also return true if the target contract within\n the same transaction is already scheduled for destruction by `SELFDESTRUCT`,\n which only has an effect at the end of a transaction.\n ====\n [IMPORTANT]\n ====\n You shouldn't rely on `isContract` to protect against flash loan attacks!\n Preventing calls from contracts is highly discouraged. It breaks composability, breaks support for smart wallets\n like Gnosis Safe, and does not provide security since it can be circumvented by calling from a contract\n constructor.\n ===="
									},
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "7465:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7484:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7476:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 242,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7476:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7475:17:0"
									},
									"returnParameters": {
										"id": 247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 246,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "7516:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 245,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7516:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7515:6:0"
									},
									"scope": 567,
									"src": "7456:320:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "8762:241:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 266,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8788:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$567",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$567",
																				"typeString": "library Address"
																			}
																		],
																		"id": 265,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8780:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 264,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8780:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8780:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 268,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8794:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8780:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 269,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "8805:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8780:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 271,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8813:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 263,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8772:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8772:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 273,
												"nodeType": "ExpressionStatement",
												"src": "8772:73:0"
											},
											{
												"assignments": [
													275,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 275,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "8862:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 288,
														"src": "8857:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 274,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "8857:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 282,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8905:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 276,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "8875:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8885:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "8875:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 279,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 278,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 260,
																"src": "8897:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "8875:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8875:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8856:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 284,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "8926:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8935:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8918:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8918:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 287,
												"nodeType": "ExpressionStatement",
												"src": "8918:78:0"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "7782:904:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.0/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "8700:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "8726:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "8710:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8710:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8745:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "8737:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 259,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8737:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8709:43:0"
									},
									"returnParameters": {
										"id": 262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8762:0:0"
									},
									"scope": 567,
									"src": "8691:312:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 306,
										"nodeType": "Block",
										"src": "9834:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 300,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "9873:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 301,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "9881:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 302,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9887:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9890:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 299,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															347,
															391
														],
														"referencedDeclaration": 391,
														"src": "9851:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9851:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 298,
												"id": 305,
												"nodeType": "Return",
												"src": "9844:79:0"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "9009:731:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 307,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "9754:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "9775:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "9767:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9767:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "9796:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "9783:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 293,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9783:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9766:35:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 307,
												"src": "9820:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "9820:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9819:14:0"
									},
									"scope": 567,
									"src": "9745:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "10299:76:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 320,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 310,
															"src": "10338:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 321,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "10346:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10352:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 323,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "10355:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 319,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															347,
															391
														],
														"referencedDeclaration": 391,
														"src": "10316:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10316:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 318,
												"id": 325,
												"nodeType": "Return",
												"src": "10309:59:0"
											}
										]
									},
									"documentation": {
										"id": 308,
										"nodeType": "StructuredDocumentation",
										"src": "9936:211:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "10161:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10191:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10183:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 309,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10183:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10220:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10207:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 311,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10207:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "10248:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10234:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 313,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "10234:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10173:93:0"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "10285:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 316,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10285:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10284:14:0"
									},
									"scope": 567,
									"src": "10152:223:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "10850:111:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 330,
															"src": "10889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 341,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 332,
															"src": "10897:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 342,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 334,
															"src": "10903:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10910:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 339,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															347,
															391
														],
														"referencedDeclaration": 391,
														"src": "10867:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10867:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 338,
												"id": 345,
												"nodeType": "Return",
												"src": "10860:94:0"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "10381:351:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "10746:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "10776:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "10768:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10768:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "10797:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "10784:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 331,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10784:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10811:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "10803:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10767:50:0"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "10836:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 336,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "10836:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10835:14:0"
									},
									"scope": 567,
									"src": "10737:224:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "11388:267:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 364,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "11414:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$567",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$567",
																				"typeString": "library Address"
																			}
																		],
																		"id": 363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11406:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 362,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11406:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11406:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11420:7:0",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "11406:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 367,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "11431:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11406:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11438:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11398:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11398:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "11398:81:0"
											},
											{
												"assignments": [
													373,
													375
												],
												"declarations": [
													{
														"constant": false,
														"id": 373,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "11495:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "11490:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 372,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "11490:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 375,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "11517:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 390,
														"src": "11504:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 374,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "11504:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 382,
												"initialValue": {
													"arguments": [
														{
															"id": 380,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "11557:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 376,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 350,
																"src": "11531:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11538:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "11531:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 378,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 354,
																"src": "11550:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "11531:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11531:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11489:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 384,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "11606:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 385,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 373,
															"src": "11614:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 386,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 375,
															"src": "11623:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 387,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "11635:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 383,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "11579:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11579:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 360,
												"id": 389,
												"nodeType": "Return",
												"src": "11572:76:0"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "10967:237:0",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "11218:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11257:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "11249:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11249:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11286:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "11273:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 351,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11273:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11308:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "11300:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11300:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "11337:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "11323:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 355,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11323:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11239:116:0"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 391,
												"src": "11374:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 358,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11374:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11373:14:0"
									},
									"scope": 567,
									"src": "11209:446:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 407,
										"nodeType": "Block",
										"src": "11932:97:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 402,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "11968:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 403,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 396,
															"src": "11976:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11982:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 401,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															408,
															437
														],
														"referencedDeclaration": 437,
														"src": "11949:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11949:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 400,
												"id": 406,
												"nodeType": "Return",
												"src": "11942:80:0"
											}
										]
									},
									"documentation": {
										"id": 392,
										"nodeType": "StructuredDocumentation",
										"src": "11661:166:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "11841:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "11868:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "11860:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11860:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 396,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "11889:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "11876:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 395,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11876:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11859:35:0"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 408,
												"src": "11918:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "11918:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11917:14:0"
									},
									"scope": 567,
									"src": "11832:197:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "12371:168:0",
										"statements": [
											{
												"assignments": [
													421,
													423
												],
												"declarations": [
													{
														"constant": false,
														"id": 421,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "12387:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "12382:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 420,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "12382:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 423,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "12409:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 436,
														"src": "12396:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 422,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "12396:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 428,
												"initialValue": {
													"arguments": [
														{
															"id": 426,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 413,
															"src": "12441:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 424,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "12423:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12430:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "12423:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 427,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12423:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12381:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 430,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "12490:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 431,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 421,
															"src": "12498:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 432,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 423,
															"src": "12507:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 433,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 415,
															"src": "12519:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 429,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "12463:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12463:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 419,
												"id": 435,
												"nodeType": "Return",
												"src": "12456:76:0"
											}
										]
									},
									"documentation": {
										"id": 409,
										"nodeType": "StructuredDocumentation",
										"src": "12035:173:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "12222:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12258:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "12250:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12250:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 413,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12287:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "12274:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 412,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12274:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "12315:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "12301:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 414,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12301:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12240:93:0"
									},
									"returnParameters": {
										"id": 419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "12357:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 417,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12357:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12356:14:0"
									},
									"scope": 567,
									"src": "12213:326:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 453,
										"nodeType": "Block",
										"src": "12815:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 448,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 440,
															"src": "12853:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 449,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 442,
															"src": "12861:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
															"id": 450,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12867:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															},
															"value": "Address: low-level delegate call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398",
																"typeString": "literal_string \"Address: low-level delegate call failed\""
															}
														],
														"id": 447,
														"name": "functionDelegateCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															454,
															483
														],
														"referencedDeclaration": 483,
														"src": "12832:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12832:77:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 446,
												"id": 452,
												"nodeType": "Return",
												"src": "12825:84:0"
											}
										]
									},
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "12545:168:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 454,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "12727:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "12756:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12748:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "12777:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12764:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 441,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12764:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12747:35:0"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 454,
												"src": "12801:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 444,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "12801:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12800:14:0"
									},
									"scope": 567,
									"src": "12718:198:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 482,
										"nodeType": "Block",
										"src": "13257:170:0",
										"statements": [
											{
												"assignments": [
													467,
													469
												],
												"declarations": [
													{
														"constant": false,
														"id": 467,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "13273:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "13268:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 466,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "13268:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 469,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "13295:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 482,
														"src": "13282:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 468,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "13282:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 474,
												"initialValue": {
													"arguments": [
														{
															"id": 472,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 459,
															"src": "13329:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 470,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "13309:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 471,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13316:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "13309:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13309:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13267:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "13378:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 477,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 467,
															"src": "13386:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 478,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 469,
															"src": "13395:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"id": 479,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 461,
															"src": "13407:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 475,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 522,
														"src": "13351:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 480,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13351:69:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 465,
												"id": 481,
												"nodeType": "Return",
												"src": "13344:76:0"
											}
										]
									},
									"documentation": {
										"id": 455,
										"nodeType": "StructuredDocumentation",
										"src": "12922:175:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"
									},
									"id": 483,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "13111:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 462,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 457,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13149:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "13141:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13141:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 459,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "13178:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "13165:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 458,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13165:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 461,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13206:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "13192:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 460,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13192:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13131:93:0"
									},
									"returnParameters": {
										"id": 465,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 483,
												"src": "13243:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 463,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13243:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13242:14:0"
									},
									"scope": 567,
									"src": "13102:325:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 521,
										"nodeType": "Block",
										"src": "13909:434:0",
										"statements": [
											{
												"condition": {
													"id": 497,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "13923:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 519,
													"nodeType": "Block",
													"src": "14279:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 515,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "14301:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 516,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 492,
																		"src": "14313:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 514,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "14293:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14293:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 518,
															"nodeType": "ExpressionStatement",
															"src": "14293:33:0"
														}
													]
												},
												"id": 520,
												"nodeType": "IfStatement",
												"src": "13919:418:0",
												"trueBody": {
													"id": 513,
													"nodeType": "Block",
													"src": "13932:341:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 501,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 498,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 490,
																		"src": "13950:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "13961:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "13950:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 500,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13971:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "13950:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 510,
															"nodeType": "IfStatement",
															"src": "13946:286:0",
															"trueBody": {
																"id": 509,
																"nodeType": "Block",
																"src": "13974:258:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 504,
																							"name": "target",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 486,
																							"src": "14176:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 503,
																						"name": "isContract",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 255,
																						"src": "14165:10:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																							"typeString": "function (address) view returns (bool)"
																						}
																					},
																					"id": 505,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "14165:18:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				{
																					"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
																					"id": 506,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "string",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "14185:31:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					},
																					"value": "Address: call to non-contract"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					},
																					{
																						"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																						"typeString": "literal_string \"Address: call to non-contract\""
																					}
																				],
																				"id": 502,
																				"name": "require",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					4294967278,
																					4294967278
																				],
																				"referencedDeclaration": 4294967278,
																				"src": "14157:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (bool,string memory) pure"
																				}
																			},
																			"id": 507,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "14157:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 508,
																		"nodeType": "ExpressionStatement",
																		"src": "14157:60:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 511,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 490,
																"src": "14252:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 496,
															"id": 512,
															"nodeType": "Return",
															"src": "14245:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 484,
										"nodeType": "StructuredDocumentation",
										"src": "13433:277:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and revert (either by bubbling\n the revert reason or using the provided one) in case of unsuccessful call or if target was not a contract.\n _Available since v4.8._"
									},
									"id": 522,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "13724:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 486,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "13768:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "13760:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 485,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "13760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 488,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "13789:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "13784:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 487,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13784:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "13819:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "13806:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13806:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "13853:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "13839:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 491,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13839:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13750:121:0"
									},
									"returnParameters": {
										"id": 496,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "13895:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 494,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "13895:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13894:14:0"
									},
									"scope": 567,
									"src": "13715:628:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 545,
										"nodeType": "Block",
										"src": "14724:135:0",
										"statements": [
											{
												"condition": {
													"id": 534,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 525,
													"src": "14738:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 543,
													"nodeType": "Block",
													"src": "14795:58:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 539,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 527,
																		"src": "14817:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	{
																		"id": 540,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 529,
																		"src": "14829:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 538,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 566,
																	"src": "14809:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory,string memory) pure"
																	}
																},
																"id": 541,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14809:33:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 542,
															"nodeType": "ExpressionStatement",
															"src": "14809:33:0"
														}
													]
												},
												"id": 544,
												"nodeType": "IfStatement",
												"src": "14734:119:0",
												"trueBody": {
													"id": 537,
													"nodeType": "Block",
													"src": "14747:42:0",
													"statements": [
														{
															"expression": {
																"id": 535,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 527,
																"src": "14768:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 533,
															"id": 536,
															"nodeType": "Return",
															"src": "14761:17:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "14349:210:0",
										"text": " @dev Tool to verify that a low level call was successful, and revert if it wasn't, either by bubbling the\n revert reason or using the provided one.\n _Available since v4.3._"
									},
									"id": 546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "14573:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 525,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "14604:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14599:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "14599:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "14634:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14621:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 526,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14621:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14668:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14654:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 528,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14654:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14589:97:0"
									},
									"returnParameters": {
										"id": 533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 532,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "14710:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 531,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14710:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14709:14:0"
									},
									"scope": 567,
									"src": "14564:295:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 565,
										"nodeType": "Block",
										"src": "14948:457:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 553,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 548,
															"src": "15024:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 554,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15035:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "15024:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 555,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15044:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15024:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 563,
													"nodeType": "Block",
													"src": "15354:45:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 560,
																		"name": "errorMessage",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 550,
																		"src": "15375:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 559,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "15368:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 561,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15368:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 562,
															"nodeType": "ExpressionStatement",
															"src": "15368:20:0"
														}
													]
												},
												"id": 564,
												"nodeType": "IfStatement",
												"src": "15020:379:0",
												"trueBody": {
													"id": 558,
													"nodeType": "Block",
													"src": "15047:301:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "15205:133:0",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "15223:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nodeType": "YulIdentifier",
																					"src": "15252:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "15246:5:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15246:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nodeType": "YulTypedName",
																				"src": "15227:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "15291:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nodeType": "YulIdentifier",
																							"src": "15295:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nodeType": "YulIdentifier",
																						"src": "15287:3:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "15287:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nodeType": "YulIdentifier",
																					"src": "15308:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "15280:6:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15280:44:0"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15280:44:0"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "paris",
															"externalReferences": [
																{
																	"declaration": 548,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15252:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 548,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "15295:10:0",
																	"valueSize": 1
																}
															],
															"id": 557,
															"nodeType": "InlineAssembly",
															"src": "15196:142:0"
														}
													]
												}
											}
										]
									},
									"id": 566,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "14874:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "14895:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14882:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 547,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "14882:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"mutability": "mutable",
												"name": "errorMessage",
												"nameLocation": "14921:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "14907:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 549,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14907:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14881:53:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14948:0:0"
									},
									"scope": 567,
									"src": "14865:540:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2185,
							"src": "6238:9169:0",
							"usedErrors": []
						},
						{
							"id": 568,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "15544:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 569,
								"nodeType": "StructuredDocumentation",
								"src": "15569:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 578,
							"linearizedBaseContracts": [
								578
							],
							"name": "IERC165",
							"nameLocation": "15859:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 570,
										"nodeType": "StructuredDocumentation",
										"src": "15873:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "16227:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "16252:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16245:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 571,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "16245:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16244:20:0"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "16288:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 574,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "16288:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16287:6:0"
									},
									"scope": 578,
									"src": "16218:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2185,
							"src": "15849:447:0",
							"usedErrors": []
						},
						{
							"id": 579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16431:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 581,
										"name": "IERC165",
										"nameLocations": [
											"17062:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "17062:7:0"
									},
									"id": 582,
									"nodeType": "InheritanceSpecifier",
									"src": "17062:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "16457:576:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 600,
							"linearizedBaseContracts": [
								600,
								578
							],
							"name": "ERC165",
							"nameLocation": "17052:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										577
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "17228:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 591,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 585,
														"src": "17245:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 593,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 578,
																	"src": "17265:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$578_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$578_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 592,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "17260:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "17260:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$578",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "17274:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "17260:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "17245:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 590,
												"id": 597,
												"nodeType": "Return",
												"src": "17238:47:0"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "17076:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "17146:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 587,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17204:8:0"
									},
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "17171:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "17164:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 584,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "17164:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17163:20:0"
									},
									"returnParameters": {
										"id": 590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 589,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "17222:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 588,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "17222:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17221:6:0"
									},
									"scope": 600,
									"src": "17137:155:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2185,
							"src": "17034:260:0",
							"usedErrors": []
						},
						{
							"id": 601,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "17452:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 603,
										"name": "IERC165",
										"nameLocations": [
											"17548:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "17548:7:0"
									},
									"id": 604,
									"nodeType": "InheritanceSpecifier",
									"src": "17548:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 602,
								"nodeType": "StructuredDocumentation",
								"src": "17478:39:0",
								"text": " @dev _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 639,
							"linearizedBaseContracts": [
								639,
								578
							],
							"name": "IERC1155Receiver",
							"nameLocation": "17528:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 605,
										"nodeType": "StructuredDocumentation",
										"src": "17562:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 620,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "18402:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18437:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "18429:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 606,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18429:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "18463:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "18455:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 608,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18455:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "18485:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "18477:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 610,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18477:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 613,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18505:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "18497:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18497:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "18535:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "18520:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 614,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18520:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18419:126:0"
									},
									"returnParameters": {
										"id": 619,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 618,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 620,
												"src": "18564:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 617,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "18564:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18563:8:0"
									},
									"scope": 639,
									"src": "18393:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "18578:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 638,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "19586:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19626:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19618:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 622,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19618:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 625,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "19652:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19644:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 624,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19644:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "19685:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19666:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 626,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19666:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 627,
													"nodeType": "ArrayTypeName",
													"src": "19666:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 631,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "19717:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19698:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 629,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 630,
													"nodeType": "ArrayTypeName",
													"src": "19698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "19748:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19733:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 632,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "19733:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19608:150:0"
									},
									"returnParameters": {
										"id": 637,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 638,
												"src": "19777:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 635,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "19777:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19776:8:0"
									},
									"scope": 639,
									"src": "19577:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2185,
							"src": "17518:2269:0",
							"usedErrors": []
						},
						{
							"id": 640,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "19929:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 642,
										"name": "IERC165",
										"nameLocations": [
											"20143:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 578,
										"src": "20143:7:0"
									},
									"id": 643,
									"nodeType": "InheritanceSpecifier",
									"src": "20143:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 641,
								"nodeType": "StructuredDocumentation",
								"src": "19955:165:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 759,
							"linearizedBaseContracts": [
								759,
								578
							],
							"name": "IERC1155",
							"nameLocation": "20131:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "20157:121:0",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 656,
									"name": "TransferSingle",
									"nameLocation": "20289:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 655,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "20320:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "20304:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20346:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "20330:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20368:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "20352:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 649,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20352:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 652,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "20380:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "20372:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 651,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20372:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 654,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20392:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 656,
												"src": "20384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 653,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20384:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20303:95:0"
									},
									"src": "20283:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "20405:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 671,
									"name": "TransferBatch",
									"nameLocation": "20560:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 659,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "20599:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20583:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20583:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 661,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "20633:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20617:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20617:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 663,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "20663:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20647:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 666,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "20685:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20675:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 664,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20675:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 665,
													"nodeType": "ArrayTypeName",
													"src": "20675:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "20708:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 671,
												"src": "20698:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 667,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "20698:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 668,
													"nodeType": "ArrayTypeName",
													"src": "20698:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20573:147:0"
									},
									"src": "20554:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 672,
										"nodeType": "StructuredDocumentation",
										"src": "20727:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 680,
									"name": "ApprovalForAll",
									"nameLocation": "20885:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "20916:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "20900:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 676,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "20941:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "20925:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 675,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 678,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "20956:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 680,
												"src": "20951:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 677,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20951:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20899:66:0"
									},
									"src": "20879:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 681,
										"nodeType": "StructuredDocumentation",
										"src": "20972:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 687,
									"name": "URI",
									"nameLocation": "21326:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 686,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21337:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "21330:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 682,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "21330:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 685,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "21360:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 687,
												"src": "21344:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 684,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21329:34:0"
									},
									"src": "21320:44:0"
								},
								{
									"documentation": {
										"id": 688,
										"nodeType": "StructuredDocumentation",
										"src": "21370:173:0",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 697,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "21557:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "21575:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21567:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 689,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21567:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 692,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "21592:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21584:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 691,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21584:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21566:29:0"
									},
									"returnParameters": {
										"id": 696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 695,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "21619:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21618:9:0"
									},
									"scope": 759,
									"src": "21548:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "21634:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 710,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "21836:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 701,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "21879:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "21860:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 699,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "21860:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 700,
													"nodeType": "ArrayTypeName",
													"src": "21860:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "21916:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "21897:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 702,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21897:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 703,
													"nodeType": "ArrayTypeName",
													"src": "21897:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21850:75:0"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 710,
												"src": "21949:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 706,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "21949:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 707,
													"nodeType": "ArrayTypeName",
													"src": "21949:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21948:18:0"
									},
									"scope": 759,
									"src": "21827:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 711,
										"nodeType": "StructuredDocumentation",
										"src": "21973:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 718,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "22235:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 713,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22261:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "22253:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 712,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "22276:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 718,
												"src": "22271:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 714,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22252:33:0"
									},
									"returnParameters": {
										"id": 717,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "22294:0:0"
									},
									"scope": 759,
									"src": "22226:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 719,
										"nodeType": "StructuredDocumentation",
										"src": "22301:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 728,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "22450:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "22475:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "22467:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 720,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22467:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "22492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "22484:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22466:35:0"
									},
									"returnParameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "22525:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 725,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22525:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22524:6:0"
									},
									"scope": 759,
									"src": "22441:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "22537:556:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 742,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "23107:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23132:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "23124:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23124:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23146:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "23138:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "23158:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "23150:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23150:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "23170:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "23162:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 736,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23162:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23193:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 742,
												"src": "23178:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23178:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23123:75:0"
									},
									"returnParameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23207:0:0"
									},
									"scope": 759,
									"src": "23098:110:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 743,
										"nodeType": "StructuredDocumentation",
										"src": "23214:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 758,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "23618:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 756,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "23657:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "23649:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23649:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "23679:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "23671:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 746,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23671:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "23710:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "23691:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 748,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23691:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 749,
													"nodeType": "ArrayTypeName",
													"src": "23691:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "23742:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "23723:26:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 751,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 752,
													"nodeType": "ArrayTypeName",
													"src": "23723:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "23774:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 758,
												"src": "23759:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 754,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "23759:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23639:145:0"
									},
									"returnParameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23793:0:0"
									},
									"scope": 759,
									"src": "23609:185:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2185,
							"src": "20121:3675:0",
							"usedErrors": []
						},
						{
							"id": 760,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "23967:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 762,
										"name": "IERC1155",
										"nameLocations": [
											"24221:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 759,
										"src": "24221:8:0"
									},
									"id": 763,
									"nodeType": "InheritanceSpecifier",
									"src": "24221:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 761,
								"nodeType": "StructuredDocumentation",
								"src": "23993:194:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 772,
							"linearizedBaseContracts": [
								772,
								759,
								578
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "24198:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 764,
										"nodeType": "StructuredDocumentation",
										"src": "24236:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "24442:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "24454:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "24446:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 765,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24446:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24445:12:0"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "24481:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 768,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "24481:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24480:15:0"
									},
									"scope": 772,
									"src": "24433:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2185,
							"src": "24188:310:0",
							"usedErrors": []
						},
						{
							"id": 773,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "24638:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 775,
										"name": "Context",
										"nameLocations": [
											"24904:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 21,
										"src": "24904:7:0"
									},
									"id": 776,
									"nodeType": "InheritanceSpecifier",
									"src": "24904:7:0"
								},
								{
									"baseName": {
										"id": 777,
										"name": "ERC165",
										"nameLocations": [
											"24913:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 600,
										"src": "24913:6:0"
									},
									"id": 778,
									"nodeType": "InheritanceSpecifier",
									"src": "24913:6:0"
								},
								{
									"baseName": {
										"id": 779,
										"name": "IERC1155",
										"nameLocations": [
											"24921:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 759,
										"src": "24921:8:0"
									},
									"id": 780,
									"nodeType": "InheritanceSpecifier",
									"src": "24921:8:0"
								},
								{
									"baseName": {
										"id": 781,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"24931:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 772,
										"src": "24931:19:0"
									},
									"id": 782,
									"nodeType": "InheritanceSpecifier",
									"src": "24931:19:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 774,
								"nodeType": "StructuredDocumentation",
								"src": "24669:214:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155\n _Available since v3.1._"
							},
							"fullyImplemented": true,
							"id": 1988,
							"linearizedBaseContracts": [
								1988,
								772,
								759,
								600,
								578,
								21
							],
							"name": "ERC1155",
							"nameLocation": "24893:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 785,
									"libraryName": {
										"id": 783,
										"name": "Address",
										"nameLocations": [
											"24963:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 567,
										"src": "24963:7:0"
									},
									"nodeType": "UsingForDirective",
									"src": "24957:26:0",
									"typeName": {
										"id": 784,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "24975:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"constant": false,
									"id": 791,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "25094:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 1988,
									"src": "25038:65:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 790,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 786,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "25046:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "25038:47:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 789,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 787,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "25065:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "25057:27:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 788,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "25076:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 797,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "25213:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 1988,
									"src": "25160:71:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 796,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 792,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "25168:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "25160:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 795,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 793,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "25187:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "25179:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 794,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "25198:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 799,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "25367:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 1988,
									"src": "25352:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 798,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "25352:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 809,
										"nodeType": "Block",
										"src": "25453:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 806,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 802,
															"src": "25471:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 805,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1321,
														"src": "25463:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25463:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "25463:13:0"
											}
										]
									},
									"documentation": {
										"id": 800,
										"nodeType": "StructuredDocumentation",
										"src": "25378:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 810,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 802,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "25447:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "25433:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 801,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "25433:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25432:20:0"
									},
									"returnParameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25453:0:0"
									},
									"scope": 1988,
									"src": "25421:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										577,
										599
									],
									"body": {
										"id": 840,
										"nodeType": "Block",
										"src": "25658:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 821,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "25687:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 823,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 759,
																			"src": "25707:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$759_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$759_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 822,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "25702:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25702:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$759",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25717:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "25702:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "25687:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 832,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 827,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "25744:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 829,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 772,
																			"src": "25764:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$772_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$772_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 828,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "25759:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "25759:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$772",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "25785:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "25759:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "25744:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "25687:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 836,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 813,
																"src": "25836:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 834,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "25812:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$1988_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "25818:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 599,
															"src": "25812:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 837,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25812:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "25687:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 820,
												"id": 839,
												"nodeType": "Return",
												"src": "25668:180:0"
											}
										]
									},
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "25489:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 841,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "25559:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 817,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 815,
												"name": "ERC165",
												"nameLocations": [
													"25626:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 600,
												"src": "25626:6:0"
											},
											{
												"id": 816,
												"name": "IERC165",
												"nameLocations": [
													"25634:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 578,
												"src": "25634:7:0"
											}
										],
										"src": "25617:25:0"
									},
									"parameters": {
										"id": 814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "25584:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "25577:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 812,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "25577:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25576:20:0"
									},
									"returnParameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 819,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "25652:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 818,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25652:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25651:6:0"
									},
									"scope": 1988,
									"src": "25550:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 852,
										"nodeType": "Block",
										"src": "26329:28:0",
										"statements": [
											{
												"expression": {
													"id": 850,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 799,
													"src": "26346:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 849,
												"id": 851,
												"nodeType": "Return",
												"src": "26339:11:0"
											}
										]
									},
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "25861:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 853,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "26263:3:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 846,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26296:8:0"
									},
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "26267:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 843,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26267:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26266:9:0"
									},
									"returnParameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "26314:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 847,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "26314:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26313:15:0"
									},
									"scope": 1988,
									"src": "26254:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										697
									],
									"body": {
										"id": 880,
										"nodeType": "Block",
										"src": "26594:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 870,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 865,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 856,
																"src": "26612:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 868,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26631:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "26623:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "26623:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 869,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26623:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "26612:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2061646472657373207a65726f206973206e6f7420612076616c6964206f776e6572",
															"id": 871,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "26635:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															},
															"value": "ERC1155: address zero is not a valid owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_415a1b99e1fd4a18cf87c08995f5a9130182e8d76e9c17c497bfebaaef9265ad",
																"typeString": "literal_string \"ERC1155: address zero is not a valid owner\""
															}
														],
														"id": 864,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "26604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26604:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "26604:76:0"
											},
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 874,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "26697:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 876,
														"indexExpression": {
															"id": 875,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 858,
															"src": "26707:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "26697:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 878,
													"indexExpression": {
														"id": 877,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "26711:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "26697:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 863,
												"id": 879,
												"nodeType": "Return",
												"src": "26690:29:0"
											}
										]
									},
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "26363:131:0",
										"text": " @dev See {IERC1155-balanceOf}.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 881,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "26508:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 860,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26567:8:0"
									},
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "26526:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "26518:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "26543:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "26535:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26535:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26517:29:0"
									},
									"returnParameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "26585:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 861,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26584:9:0"
									},
									"scope": 1988,
									"src": "26499:227:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										710
									],
									"body": {
										"id": 944,
										"nodeType": "Block",
										"src": "27034:335:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 896,
																	"name": "accounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "27052:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																		"typeString": "address[] memory"
																	}
																},
																"id": 897,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27061:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27052:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 898,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 888,
																	"src": "27071:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "27075:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "27071:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "27052:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206163636f756e747320616e6420696473206c656e677468206d69736d61746368",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "27083:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															},
															"value": "ERC1155: accounts and ids length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e155f5d69798c6205436a388a4f3a5fd42f54147b40f4d63a2c8071ff8a9fee5",
																"typeString": "literal_string \"ERC1155: accounts and ids length mismatch\""
															}
														],
														"id": 895,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "27044:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27044:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "27044:83:0"
											},
											{
												"assignments": [
													908
												],
												"declarations": [
													{
														"constant": false,
														"id": 908,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "27155:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 944,
														"src": "27138:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 906,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27138:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 907,
															"nodeType": "ArrayTypeName",
															"src": "27138:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 915,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 912,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "27185:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 913,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "27194:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "27185:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "27171:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 909,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27175:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 910,
															"nodeType": "ArrayTypeName",
															"src": "27175:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27171:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "27138:63:0"
											},
											{
												"body": {
													"id": 940,
													"nodeType": "Block",
													"src": "27258:74:0",
													"statements": [
														{
															"expression": {
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 927,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 908,
																		"src": "27272:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 929,
																	"indexExpression": {
																		"id": 928,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 917,
																		"src": "27286:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "27272:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"baseExpression": {
																				"id": 931,
																				"name": "accounts",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 885,
																				"src": "27301:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 933,
																			"indexExpression": {
																				"id": 932,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "27310:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27301:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"baseExpression": {
																				"id": 934,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 888,
																				"src": "27314:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 936,
																			"indexExpression": {
																				"id": 935,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 917,
																				"src": "27318:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "27314:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 930,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 881,
																		"src": "27291:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 937,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "27291:30:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "27272:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 939,
															"nodeType": "ExpressionStatement",
															"src": "27272:49:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 923,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 920,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 917,
														"src": "27232:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 921,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 885,
															"src": "27236:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 922,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "27245:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "27236:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "27232:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 941,
												"initializationExpression": {
													"assignments": [
														917
													],
													"declarations": [
														{
															"constant": false,
															"id": 917,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "27225:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 941,
															"src": "27217:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 916,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "27217:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 919,
													"initialValue": {
														"hexValue": "30",
														"id": 918,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "27229:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "27217:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "27253:3:0",
														"subExpression": {
															"id": 924,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 917,
															"src": "27255:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 926,
													"nodeType": "ExpressionStatement",
													"src": "27253:3:0"
												},
												"nodeType": "ForStatement",
												"src": "27212:120:0"
											},
											{
												"expression": {
													"id": 942,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 908,
													"src": "27349:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 894,
												"id": 943,
												"nodeType": "Return",
												"src": "27342:20:0"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "26732:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 945,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "26892:14:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 890,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26998:8:0"
									},
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "26933:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "26916:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 883,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "26916:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 884,
													"nodeType": "ArrayTypeName",
													"src": "26916:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "26968:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "26951:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 886,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "26951:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 887,
													"nodeType": "ArrayTypeName",
													"src": "26951:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26906:71:0"
									},
									"returnParameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "27016:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 891,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "27016:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 892,
													"nodeType": "ArrayTypeName",
													"src": "27016:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27015:18:0"
									},
									"scope": 1988,
									"src": "26883:486:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										718
									],
									"body": {
										"id": 961,
										"nodeType": "Block",
										"src": "27521:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 955,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "27550:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "27550:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 957,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 948,
															"src": "27564:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 958,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 950,
															"src": "27574:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 954,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1793,
														"src": "27531:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 959,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "27531:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 960,
												"nodeType": "ExpressionStatement",
												"src": "27531:52:0"
											}
										]
									},
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "27375:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 962,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "27446:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 952,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27512:8:0"
									},
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27472:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "27464:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27464:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "27487:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 962,
												"src": "27482:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 949,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27463:33:0"
									},
									"returnParameters": {
										"id": 953,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27521:0:0"
									},
									"scope": 1988,
									"src": "27437:153:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										728
									],
									"body": {
										"id": 979,
										"nodeType": "Block",
										"src": "27762:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 973,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 797,
															"src": "27779:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 975,
														"indexExpression": {
															"id": 974,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 965,
															"src": "27798:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "27779:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 977,
													"indexExpression": {
														"id": 976,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 967,
														"src": "27807:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "27779:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 972,
												"id": 978,
												"nodeType": "Return",
												"src": "27772:44:0"
											}
										]
									},
									"documentation": {
										"id": 963,
										"nodeType": "StructuredDocumentation",
										"src": "27596:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "27666:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 969,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "27738:8:0"
									},
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "27691:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "27683:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27683:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "27708:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "27700:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27682:35:0"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 971,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 980,
												"src": "27756:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 970,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "27756:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27755:6:0"
									},
									"scope": 1988,
									"src": "27657:166:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										742
									],
									"body": {
										"id": 1017,
										"nodeType": "Block",
										"src": "28059:225:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1005,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 996,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 983,
																	"src": "28090:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 997,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "28098:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28098:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "28090:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1001,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "28131:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1002,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "28137:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1003,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28137:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1000,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "28114:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1004,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28114:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "28090:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1006,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28164:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 995,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28069:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28069:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "28069:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1010,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 983,
															"src": "28250:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1011,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 985,
															"src": "28256:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1012,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 987,
															"src": "28260:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1013,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 989,
															"src": "28264:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1014,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 991,
															"src": "28272:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1009,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "28232:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28232:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1016,
												"nodeType": "ExpressionStatement",
												"src": "28232:45:0"
											}
										]
									},
									"documentation": {
										"id": 981,
										"nodeType": "StructuredDocumentation",
										"src": "27829:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 1018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "27899:16:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 993,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28050:8:0"
									},
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27933:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "27925:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27925:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 985,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27955:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "27947:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27947:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 987,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "27975:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "27967:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 986,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27967:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "27995:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "27987:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28024:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1018,
												"src": "28011:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 990,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28011:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27915:119:0"
									},
									"returnParameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28059:0:0"
									},
									"scope": 1988,
									"src": "27890:394:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										758
									],
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "28550:232:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 1039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1036,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1021,
																	"src": "28581:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1037,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "28589:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1038,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "28589:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "28581:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1041,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1021,
																		"src": "28622:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1042,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "28628:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "28628:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1040,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "28605:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28605:36:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "28581:60:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "28655:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 1035,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "28560:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1047,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28560:153:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1048,
												"nodeType": "ExpressionStatement",
												"src": "28560:153:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1050,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1021,
															"src": "28746:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1051,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1023,
															"src": "28752:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1052,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "28756:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1053,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1029,
															"src": "28761:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1054,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1031,
															"src": "28770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1049,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1310,
														"src": "28723:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28723:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "28723:52:0"
											}
										]
									},
									"documentation": {
										"id": 1019,
										"nodeType": "StructuredDocumentation",
										"src": "28290:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "28365:21:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1033,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "28541:8:0"
									},
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1021,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28404:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "28396:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1020,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28396:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28426:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "28418:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1022,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28418:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "28455:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "28438:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1024,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28438:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1025,
													"nodeType": "ArrayTypeName",
													"src": "28438:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1029,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "28485:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "28468:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1027,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28468:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1028,
													"nodeType": "ArrayTypeName",
													"src": "28468:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1031,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28515:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1058,
												"src": "28502:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1030,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28502:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28386:139:0"
									},
									"returnParameters": {
										"id": 1034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28550:0:0"
									},
									"scope": 1988,
									"src": "28356:426:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1174,
										"nodeType": "Block",
										"src": "29395:784:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1078,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1073,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1063,
																"src": "29413:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1076,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29427:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1075,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "29419:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1074,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "29419:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1077,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29419:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "29413:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1079,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29431:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1072,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29405:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1080,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29405:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1081,
												"nodeType": "ExpressionStatement",
												"src": "29405:66:0"
											},
											{
												"assignments": [
													1083
												],
												"declarations": [
													{
														"constant": false,
														"id": 1083,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "29490:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "29482:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1082,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "29482:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1086,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1084,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "29501:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29501:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29482:31:0"
											},
											{
												"assignments": [
													1091
												],
												"declarations": [
													{
														"constant": false,
														"id": 1091,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "29540:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "29523:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1089,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29523:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1090,
															"nodeType": "ArrayTypeName",
															"src": "29523:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1095,
												"initialValue": {
													"arguments": [
														{
															"id": 1093,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "29564:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1092,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "29546:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29546:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29523:44:0"
											},
											{
												"assignments": [
													1100
												],
												"declarations": [
													{
														"constant": false,
														"id": 1100,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "29594:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "29577:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1098,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "29577:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1099,
															"nodeType": "ArrayTypeName",
															"src": "29577:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1104,
												"initialValue": {
													"arguments": [
														{
															"id": 1102,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "29622:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1101,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "29604:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29604:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29577:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1106,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "29661:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1107,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "29671:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1108,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "29677:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1109,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "29681:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1110,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "29686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1111,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "29695:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1105,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "29640:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29640:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "29640:60:0"
											},
											{
												"assignments": [
													1115
												],
												"declarations": [
													{
														"constant": false,
														"id": 1115,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "29719:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1174,
														"src": "29711:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1114,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29711:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1121,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1116,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "29733:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1118,
														"indexExpression": {
															"id": 1117,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "29743:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "29733:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1120,
													"indexExpression": {
														"id": 1119,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1061,
														"src": "29747:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "29733:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29711:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1123,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1115,
																"src": "29770:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1124,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1067,
																"src": "29785:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29770:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
															"id": 1126,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "29793:44:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															},
															"value": "ERC1155: insufficient balance for transfer"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
															}
														],
														"id": 1122,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "29762:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29762:76:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1128,
												"nodeType": "ExpressionStatement",
												"src": "29762:76:0"
											},
											{
												"id": 1139,
												"nodeType": "UncheckedBlock",
												"src": "29848:77:0",
												"statements": [
													{
														"expression": {
															"id": 1137,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1129,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "29872:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1132,
																	"indexExpression": {
																		"id": 1130,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1065,
																		"src": "29882:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "29872:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1133,
																"indexExpression": {
																	"id": 1131,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1061,
																	"src": "29886:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "29872:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1134,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1115,
																	"src": "29894:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1135,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1067,
																	"src": "29908:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "29894:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "29872:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1138,
														"nodeType": "ExpressionStatement",
														"src": "29872:42:0"
													}
												]
											},
											{
												"expression": {
													"id": 1146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1140,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "29934:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1143,
															"indexExpression": {
																"id": 1141,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1065,
																"src": "29944:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "29934:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1144,
														"indexExpression": {
															"id": 1142,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "29948:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "29934:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1145,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1067,
														"src": "29955:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "29934:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1147,
												"nodeType": "ExpressionStatement",
												"src": "29934:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1149,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "29992:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1150,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "30002:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1151,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "30008:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1152,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "30012:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1153,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "30016:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1148,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "29977:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29977:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1155,
												"nodeType": "EmitStatement",
												"src": "29972:51:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1157,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "30054:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1158,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "30064:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1159,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "30070:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1160,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "30074:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1161,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1100,
															"src": "30079:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1162,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "30088:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1156,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "30034:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30034:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1164,
												"nodeType": "ExpressionStatement",
												"src": "30034:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1166,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1083,
															"src": "30135:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1167,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1061,
															"src": "30145:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1168,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "30151:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1169,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1065,
															"src": "30155:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1170,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1067,
															"src": "30159:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1171,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1069,
															"src": "30167:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1165,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "30104:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30104:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1173,
												"nodeType": "ExpressionStatement",
												"src": "30104:68:0"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "28788:439:0",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "29241:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1070,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "29276:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "29268:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29268:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29298:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "29290:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29290:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "29318:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "29310:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1064,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29310:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "29338:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "29330:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1069,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "29367:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "29354:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1068,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29354:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29258:119:0"
									},
									"returnParameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29395:0:0"
									},
									"scope": 1988,
									"src": "29232:947:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "30713:927:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1196,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1192,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "30731:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1193,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30735:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "30731:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1194,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "30745:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "30753:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "30745:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30731:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1197,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30761:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30723:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1198,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30723:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1199,
												"nodeType": "ExpressionStatement",
												"src": "30723:81:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1206,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1201,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1180,
																"src": "30822:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30836:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1203,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30828:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1202,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "30828:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1205,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30828:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "30822:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 1207,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "30840:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															},
															"value": "ERC1155: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6faf1c67f278b07c6771dcf4c315a89c21c0eaed11d9ab3d51774da1cfef545d",
																"typeString": "literal_string \"ERC1155: transfer to the zero address\""
															}
														],
														"id": 1200,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "30814:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30814:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1209,
												"nodeType": "ExpressionStatement",
												"src": "30814:66:0"
											},
											{
												"assignments": [
													1211
												],
												"declarations": [
													{
														"constant": false,
														"id": 1211,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "30899:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1309,
														"src": "30891:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1210,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "30891:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1214,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1212,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "30910:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30910:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "30891:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1216,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "30954:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1217,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "30964:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1218,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "30970:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1219,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "30974:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1220,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "30979:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1221,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "30988:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1215,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "30933:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "30933:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1223,
												"nodeType": "ExpressionStatement",
												"src": "30933:60:0"
											},
											{
												"body": {
													"id": 1281,
													"nodeType": "Block",
													"src": "31045:370:0",
													"statements": [
														{
															"assignments": [
																1236
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1236,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "31067:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1281,
																	"src": "31059:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1235,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31059:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1240,
															"initialValue": {
																"baseExpression": {
																	"id": 1237,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "31072:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1239,
																"indexExpression": {
																	"id": 1238,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "31076:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31072:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31059:19:0"
														},
														{
															"assignments": [
																1242
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1242,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "31100:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1281,
																	"src": "31092:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1241,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31092:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1246,
															"initialValue": {
																"baseExpression": {
																	"id": 1243,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1186,
																	"src": "31109:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1245,
																"indexExpression": {
																	"id": 1244,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1225,
																	"src": "31117:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31109:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31092:27:0"
														},
														{
															"assignments": [
																1248
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1248,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "31142:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1281,
																	"src": "31134:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1247,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "31134:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1254,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1249,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "31156:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1251,
																	"indexExpression": {
																		"id": 1250,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1236,
																		"src": "31166:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "31156:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1253,
																"indexExpression": {
																	"id": 1252,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1178,
																	"src": "31170:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "31156:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "31134:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1256,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1248,
																			"src": "31197:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1257,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1242,
																			"src": "31212:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31197:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a20696e73756666696369656e742062616c616e636520666f72207472616e73666572",
																		"id": 1259,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31220:44:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		},
																		"value": "ERC1155: insufficient balance for transfer"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_8ac7e9556b567c1c94bb4daaa3c3a65be5ac686579615210cb910fb8cb8d65bf",
																			"typeString": "literal_string \"ERC1155: insufficient balance for transfer\""
																		}
																	],
																	"id": 1255,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "31189:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1260,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31189:76:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1261,
															"nodeType": "ExpressionStatement",
															"src": "31189:76:0"
														},
														{
															"id": 1272,
															"nodeType": "UncheckedBlock",
															"src": "31279:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 1270,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1262,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "31307:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1265,
																				"indexExpression": {
																					"id": 1263,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1236,
																					"src": "31317:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "31307:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1266,
																			"indexExpression": {
																				"id": 1264,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1178,
																				"src": "31321:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "31307:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1267,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1248,
																				"src": "31329:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1268,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1242,
																				"src": "31343:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "31329:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "31307:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1271,
																	"nodeType": "ExpressionStatement",
																	"src": "31307:42:0"
																}
															]
														},
														{
															"expression": {
																"id": 1279,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1273,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "31377:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1276,
																		"indexExpression": {
																			"id": 1274,
																			"name": "id",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1236,
																			"src": "31387:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "31377:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1277,
																	"indexExpression": {
																		"id": 1275,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1180,
																		"src": "31391:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "31377:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 1278,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1242,
																	"src": "31398:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "31377:27:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1280,
															"nodeType": "ExpressionStatement",
															"src": "31377:27:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1231,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1228,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1225,
														"src": "31024:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1229,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "31028:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1230,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "31032:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "31028:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "31024:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1282,
												"initializationExpression": {
													"assignments": [
														1225
													],
													"declarations": [
														{
															"constant": false,
															"id": 1225,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "31017:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1282,
															"src": "31009:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1224,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "31009:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1227,
													"initialValue": {
														"hexValue": "30",
														"id": 1226,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "31021:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "31009:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1233,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "31040:3:0",
														"subExpression": {
															"id": 1232,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "31042:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1234,
													"nodeType": "ExpressionStatement",
													"src": "31040:3:0"
												},
												"nodeType": "ForStatement",
												"src": "31004:411:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1284,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "31444:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1285,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "31454:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1286,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "31460:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "31464:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1288,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "31469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1283,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "31430:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31430:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1290,
												"nodeType": "EmitStatement",
												"src": "31425:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1292,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "31508:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1293,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "31518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1294,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "31524:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1295,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "31528:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1296,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "31533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1297,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "31542:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1291,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "31488:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31488:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1299,
												"nodeType": "ExpressionStatement",
												"src": "31488:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1301,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1211,
															"src": "31594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1302,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1178,
															"src": "31604:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1303,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1180,
															"src": "31610:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1304,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1183,
															"src": "31614:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1305,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1186,
															"src": "31619:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1306,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1188,
															"src": "31628:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1300,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "31558:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1307,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31558:75:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1308,
												"nodeType": "ExpressionStatement",
												"src": "31558:75:0"
											}
										]
									},
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "30185:335:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "30534:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1189,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30574:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "30566:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30596:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "30588:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30588:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1183,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "30625:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "30608:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1181,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30608:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1182,
													"nodeType": "ArrayTypeName",
													"src": "30608:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "30655:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "30638:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1184,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30638:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1185,
													"nodeType": "ArrayTypeName",
													"src": "30638:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1188,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "30685:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1310,
												"src": "30672:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1187,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "30672:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30556:139:0"
									},
									"returnParameters": {
										"id": 1190,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "30713:0:0"
									},
									"scope": 1988,
									"src": "30525:1115:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1320,
										"nodeType": "Block",
										"src": "32519:30:0",
										"statements": [
											{
												"expression": {
													"id": 1318,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1316,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 799,
														"src": "32529:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1317,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1313,
														"src": "32536:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "32529:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 1319,
												"nodeType": "ExpressionStatement",
												"src": "32529:13:0"
											}
										]
									},
									"documentation": {
										"id": 1311,
										"nodeType": "StructuredDocumentation",
										"src": "31646:812:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the amounts in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 1321,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "32472:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "32494:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1321,
												"src": "32480:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1312,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "32480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32479:22:0"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32519:0:0"
									},
									"scope": 1988,
									"src": "32463:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1421,
										"nodeType": "Block",
										"src": "33013:580:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1334,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1324,
																"src": "33031:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1337,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33045:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "33037:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1335,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "33037:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33037:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "33031:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "33049:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1333,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "33023:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33023:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1342,
												"nodeType": "ExpressionStatement",
												"src": "33023:62:0"
											},
											{
												"assignments": [
													1344
												],
												"declarations": [
													{
														"constant": false,
														"id": 1344,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "33104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "33096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1343,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "33096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1347,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1345,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "33115:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33115:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33096:31:0"
											},
											{
												"assignments": [
													1352
												],
												"declarations": [
													{
														"constant": false,
														"id": 1352,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "33154:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "33137:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1350,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33137:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1351,
															"nodeType": "ArrayTypeName",
															"src": "33137:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1356,
												"initialValue": {
													"arguments": [
														{
															"id": 1354,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "33178:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1353,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "33160:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33160:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33137:44:0"
											},
											{
												"assignments": [
													1361
												],
												"declarations": [
													{
														"constant": false,
														"id": 1361,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "33208:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1421,
														"src": "33191:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1359,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "33191:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1360,
															"nodeType": "ArrayTypeName",
															"src": "33191:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1365,
												"initialValue": {
													"arguments": [
														{
															"id": 1363,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "33236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1362,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "33218:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1364,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33218:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "33191:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1367,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "33275:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33293:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33285:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1368,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33285:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33285:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1372,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "33297:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1373,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "33301:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1374,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "33306:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1375,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "33315:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1366,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "33254:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33254:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1377,
												"nodeType": "ExpressionStatement",
												"src": "33254:66:0"
											},
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1378,
																"name": "_balances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 791,
																"src": "33331:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(uint256 => mapping(address => uint256))"
																}
															},
															"id": 1381,
															"indexExpression": {
																"id": 1379,
																"name": "id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1326,
																"src": "33341:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "33331:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1382,
														"indexExpression": {
															"id": 1380,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "33345:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "33331:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1383,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1328,
														"src": "33352:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33331:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "33331:27:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1387,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "33388:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33406:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33398:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1388,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33398:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33398:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "33410:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1393,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "33414:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1394,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "33418:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1386,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "33373:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33373:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1396,
												"nodeType": "EmitStatement",
												"src": "33368:57:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1398,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "33456:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33474:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33466:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1399,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33466:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1402,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33466:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1403,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "33478:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1404,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1352,
															"src": "33482:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1405,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "33487:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1406,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "33496:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1397,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "33436:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1407,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33436:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1408,
												"nodeType": "ExpressionStatement",
												"src": "33436:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1410,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1344,
															"src": "33543:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33561:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33553:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1411,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33553:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33553:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1415,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1324,
															"src": "33565:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1416,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "33569:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1417,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1328,
															"src": "33573:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1418,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1330,
															"src": "33581:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1409,
														"name": "_doSafeTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1894,
														"src": "33512:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33512:74:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1420,
												"nodeType": "ExpressionStatement",
												"src": "33512:74:0"
											}
										]
									},
									"documentation": {
										"id": 1322,
										"nodeType": "StructuredDocumentation",
										"src": "32555:362:0",
										"text": " @dev Creates `amount` tokens of token type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 1422,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "32931:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1324,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32945:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "32937:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1323,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "32957:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "32949:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32949:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "32969:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "32961:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1327,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32961:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "32990:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "32977:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1329,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "32977:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32936:59:0"
									},
									"returnParameters": {
										"id": 1332,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33013:0:0"
									},
									"scope": 1988,
									"src": "32922:671:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1532,
										"nodeType": "Block",
										"src": "34137:637:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1437,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1425,
																"src": "34155:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1440,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34169:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1439,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "34161:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1438,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "34161:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34161:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "34155:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 1443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34173:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															},
															"value": "ERC1155: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf031a1b7ee1d0b3a7752b450a3268e8b6c334561b48c1c0ba0f5bac05749f2",
																"typeString": "literal_string \"ERC1155: mint to the zero address\""
															}
														],
														"id": 1436,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34147:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34147:62:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "34147:62:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1451,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1447,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1428,
																	"src": "34227:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1448,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34231:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "34227:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1449,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1431,
																	"src": "34241:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34249:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "34241:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34227:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1452,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "34257:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1446,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "34219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34219:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1454,
												"nodeType": "ExpressionStatement",
												"src": "34219:81:0"
											},
											{
												"assignments": [
													1456
												],
												"declarations": [
													{
														"constant": false,
														"id": 1456,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "34319:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1532,
														"src": "34311:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1455,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "34311:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1457,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "34330:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34330:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "34311:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "34374:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1464,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34392:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34384:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1462,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34384:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34384:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1466,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "34396:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1467,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34400:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1468,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "34405:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1469,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "34414:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1460,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "34353:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34353:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1471,
												"nodeType": "ExpressionStatement",
												"src": "34353:66:0"
											},
											{
												"body": {
													"id": 1495,
													"nodeType": "Block",
													"src": "34471:60:0",
													"statements": [
														{
															"expression": {
																"id": 1493,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 1483,
																			"name": "_balances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 791,
																			"src": "34485:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(uint256 => mapping(address => uint256))"
																			}
																		},
																		"id": 1488,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 1484,
																				"name": "ids",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1428,
																				"src": "34495:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																					"typeString": "uint256[] memory"
																				}
																			},
																			"id": 1486,
																			"indexExpression": {
																				"id": 1485,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1473,
																				"src": "34499:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "34495:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "34485:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1489,
																	"indexExpression": {
																		"id": 1487,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1425,
																		"src": "34503:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "34485:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 1490,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1431,
																		"src": "34510:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1492,
																	"indexExpression": {
																		"id": 1491,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1473,
																		"src": "34518:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "34510:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34485:35:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1494,
															"nodeType": "ExpressionStatement",
															"src": "34485:35:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1476,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1473,
														"src": "34450:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1477,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34454:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1478,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "34458:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "34454:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34450:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1496,
												"initializationExpression": {
													"assignments": [
														1473
													],
													"declarations": [
														{
															"constant": false,
															"id": 1473,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "34443:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1496,
															"src": "34435:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1472,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34435:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1475,
													"initialValue": {
														"hexValue": "30",
														"id": 1474,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "34447:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "34435:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "34466:3:0",
														"subExpression": {
															"id": 1480,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "34466:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1482,
													"nodeType": "ExpressionStatement",
													"src": "34466:3:0"
												},
												"nodeType": "ForStatement",
												"src": "34430:101:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1498,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "34560:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1501,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34578:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1500,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34570:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1499,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34570:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34570:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1503,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "34582:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1504,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34586:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1505,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "34591:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1497,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "34546:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34546:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "EmitStatement",
												"src": "34541:58:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1509,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "34630:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34648:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34640:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1510,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34640:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34640:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1514,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "34652:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1515,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34656:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1516,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "34661:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1517,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "34670:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1508,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "34610:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34610:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "34610:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1521,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1456,
															"src": "34722:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1524,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34740:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1523,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34732:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1522,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34732:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1525,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34732:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1526,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1425,
															"src": "34744:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1527,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1428,
															"src": "34748:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1528,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1431,
															"src": "34753:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1529,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1433,
															"src": "34762:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1520,
														"name": "_doSafeBatchTransferAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1959,
														"src": "34686:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1530,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34686:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1531,
												"nodeType": "ExpressionStatement",
												"src": "34686:81:0"
											}
										]
									},
									"documentation": {
										"id": 1423,
										"nodeType": "StructuredDocumentation",
										"src": "33599:379:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 1533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "33992:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34020:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "34012:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34012:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1428,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "34049:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "34032:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1426,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34032:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1427,
													"nodeType": "ArrayTypeName",
													"src": "34032:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1431,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "34079:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "34062:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1429,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34062:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1430,
													"nodeType": "ArrayTypeName",
													"src": "34062:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1433,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34109:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "34096:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1432,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34096:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34002:117:0"
									},
									"returnParameters": {
										"id": 1435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34137:0:0"
									},
									"scope": 1988,
									"src": "33983:791:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "35134:682:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1544,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1536,
																"src": "35152:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "35168:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "35160:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1545,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "35160:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "35160:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "35152:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35172:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35144:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1552,
												"nodeType": "ExpressionStatement",
												"src": "35144:66:0"
											},
											{
												"assignments": [
													1554
												],
												"declarations": [
													{
														"constant": false,
														"id": 1554,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "35229:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "35221:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1553,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "35221:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1557,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1555,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "35240:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35240:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35221:31:0"
											},
											{
												"assignments": [
													1562
												],
												"declarations": [
													{
														"constant": false,
														"id": 1562,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "35279:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "35262:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1560,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "35262:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1561,
															"nodeType": "ArrayTypeName",
															"src": "35262:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1566,
												"initialValue": {
													"arguments": [
														{
															"id": 1564,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "35303:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1563,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "35285:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35285:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35262:44:0"
											},
											{
												"assignments": [
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "amounts",
														"nameLocation": "35333:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "35316:24:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1569,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "35316:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1570,
															"nodeType": "ArrayTypeName",
															"src": "35316:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1575,
												"initialValue": {
													"arguments": [
														{
															"id": 1573,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "35361:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1572,
														"name": "_asSingletonArray",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "35343:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														}
													},
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35343:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35316:52:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1577,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "35400:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1578,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "35410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1581,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1580,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35416:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1579,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35416:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1582,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35416:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1583,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "35428:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1584,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "35433:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35442:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1576,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "35379:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35379:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1587,
												"nodeType": "ExpressionStatement",
												"src": "35379:66:0"
											},
											{
												"assignments": [
													1589
												],
												"declarations": [
													{
														"constant": false,
														"id": 1589,
														"mutability": "mutable",
														"name": "fromBalance",
														"nameLocation": "35464:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "35456:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "35456:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1595,
												"initialValue": {
													"baseExpression": {
														"baseExpression": {
															"id": 1590,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 791,
															"src": "35478:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1592,
														"indexExpression": {
															"id": 1591,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "35488:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "35478:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1594,
													"indexExpression": {
														"id": 1593,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1536,
														"src": "35492:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "35478:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "35456:41:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1597,
																"name": "fromBalance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1589,
																"src": "35515:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1598,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "35530:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35515:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35538:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															},
															"value": "ERC1155: burn amount exceeds balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
															}
														],
														"id": 1596,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "35507:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35507:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1602,
												"nodeType": "ExpressionStatement",
												"src": "35507:70:0"
											},
											{
												"id": 1613,
												"nodeType": "UncheckedBlock",
												"src": "35587:77:0",
												"statements": [
													{
														"expression": {
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1603,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "35611:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1606,
																	"indexExpression": {
																		"id": 1604,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1538,
																		"src": "35621:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "35611:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1607,
																"indexExpression": {
																	"id": 1605,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1536,
																	"src": "35625:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "35611:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1610,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1608,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1589,
																	"src": "35633:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1609,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "35647:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "35633:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "35611:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1612,
														"nodeType": "ExpressionStatement",
														"src": "35611:42:0"
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1615,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "35694:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1616,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "35704:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35718:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1618,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35710:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1617,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35710:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35710:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1621,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1538,
															"src": "35722:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1622,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "35726:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1614,
														"name": "TransferSingle",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 656,
														"src": "35679:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,address,uint256,uint256)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35679:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "EmitStatement",
												"src": "35674:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1626,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1554,
															"src": "35764:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1627,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1536,
															"src": "35774:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "35788:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "35780:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1628,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "35780:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "35780:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1632,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1562,
															"src": "35792:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1633,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "35797:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35806:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1625,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "35744:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35744:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1636,
												"nodeType": "ExpressionStatement",
												"src": "35744:65:0"
											}
										]
									},
									"documentation": {
										"id": 1534,
										"nodeType": "StructuredDocumentation",
										"src": "34780:275:0",
										"text": " @dev Destroys `amount` tokens of token type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `amount` tokens of token type `id`."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "35069:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1536,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "35083:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "35075:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1535,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1538,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "35097:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "35089:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1537,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35089:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "35109:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "35101:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35101:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35074:42:0"
									},
									"returnParameters": {
										"id": 1542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35134:0:0"
									},
									"scope": 1988,
									"src": "35060:756:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "36154:814:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1651,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1641,
																"src": "36172:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 1654,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36188:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1653,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "36180:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1652,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "36180:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 1655,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36180:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "36172:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 1657,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36192:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															},
															"value": "ERC1155: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_87fd4aee52f5758d127cd9704d5ffef70f36ed1e87eb99b6f40e37a25c79a76a",
																"typeString": "literal_string \"ERC1155: burn from the zero address\""
															}
														],
														"id": 1650,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36164:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1659,
												"nodeType": "ExpressionStatement",
												"src": "36164:66:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1665,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1661,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "36248:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "36252:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "36248:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 1663,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "36262:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1664,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "36270:6:0",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "36262:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "36248:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2069647320616e6420616d6f756e7473206c656e677468206d69736d61746368",
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36278:42:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															},
															"value": "ERC1155: ids and amounts length mismatch"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e909e0c9a8f96b4f9af03b716811ece20beb070be416893ed1d50619b5930807",
																"typeString": "literal_string \"ERC1155: ids and amounts length mismatch\""
															}
														],
														"id": 1660,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "36240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36240:81:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "36240:81:0"
											},
											{
												"assignments": [
													1670
												],
												"declarations": [
													{
														"constant": false,
														"id": 1670,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "36340:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 1760,
														"src": "36332:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1669,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36332:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1673,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1671,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "36351:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 1672,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36351:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36332:31:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1675,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "36395:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1676,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "36405:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1679,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36419:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36411:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1677,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36411:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1680,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36411:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1681,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "36423:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1682,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "36428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36437:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1674,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1812,
														"src": "36374:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36374:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1685,
												"nodeType": "ExpressionStatement",
												"src": "36374:66:0"
											},
											{
												"body": {
													"id": 1735,
													"nodeType": "Block",
													"src": "36492:323:0",
													"statements": [
														{
															"assignments": [
																1698
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1698,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "36514:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "36506:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1697,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36506:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1702,
															"initialValue": {
																"baseExpression": {
																	"id": 1699,
																	"name": "ids",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1644,
																	"src": "36519:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1701,
																"indexExpression": {
																	"id": 1700,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "36523:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36519:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36506:19:0"
														},
														{
															"assignments": [
																1704
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1704,
																	"mutability": "mutable",
																	"name": "amount",
																	"nameLocation": "36547:6:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "36539:14:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1703,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36539:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1708,
															"initialValue": {
																"baseExpression": {
																	"id": 1705,
																	"name": "amounts",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1647,
																	"src": "36556:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 1707,
																"indexExpression": {
																	"id": 1706,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1687,
																	"src": "36564:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36556:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36539:27:0"
														},
														{
															"assignments": [
																1710
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1710,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "36589:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1735,
																	"src": "36581:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1709,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "36581:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1716,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 1711,
																		"name": "_balances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 791,
																		"src": "36603:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																			"typeString": "mapping(uint256 => mapping(address => uint256))"
																		}
																	},
																	"id": 1713,
																	"indexExpression": {
																		"id": 1712,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1698,
																		"src": "36613:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "36603:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1715,
																"indexExpression": {
																	"id": 1714,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1641,
																	"src": "36617:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "36603:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "36581:41:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1720,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1718,
																			"name": "fromBalance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1710,
																			"src": "36644:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 1719,
																			"name": "amount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1704,
																			"src": "36659:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36644:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "455243313135353a206275726e20616d6f756e7420657863656564732062616c616e6365",
																		"id": 1721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "36667:38:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		},
																		"value": "ERC1155: burn amount exceeds balance"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_294a5de01910e2350ff231c633ae2d453ed6b1b72c75506234b7aace63eae685",
																			"typeString": "literal_string \"ERC1155: burn amount exceeds balance\""
																		}
																	],
																	"id": 1717,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "36636:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1722,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "36636:70:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1723,
															"nodeType": "ExpressionStatement",
															"src": "36636:70:0"
														},
														{
															"id": 1734,
															"nodeType": "UncheckedBlock",
															"src": "36720:85:0",
															"statements": [
																{
																	"expression": {
																		"id": 1732,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 1724,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 791,
																					"src": "36748:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 1727,
																				"indexExpression": {
																					"id": 1725,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1698,
																					"src": "36758:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "36748:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 1728,
																			"indexExpression": {
																				"id": 1726,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "36762:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "36748:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1729,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1710,
																				"src": "36770:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 1730,
																				"name": "amount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1704,
																				"src": "36784:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "36770:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "36748:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1733,
																	"nodeType": "ExpressionStatement",
																	"src": "36748:42:0"
																}
															]
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1690,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1687,
														"src": "36471:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1691,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "36475:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1692,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "36479:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "36475:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "36471:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1736,
												"initializationExpression": {
													"assignments": [
														1687
													],
													"declarations": [
														{
															"constant": false,
															"id": 1687,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "36464:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1736,
															"src": "36456:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1686,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "36456:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1689,
													"initialValue": {
														"hexValue": "30",
														"id": 1688,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "36468:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "36456:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "36487:3:0",
														"subExpression": {
															"id": 1694,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1687,
															"src": "36487:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1696,
													"nodeType": "ExpressionStatement",
													"src": "36487:3:0"
												},
												"nodeType": "ForStatement",
												"src": "36451:364:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1738,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "36844:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1739,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "36854:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36868:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1741,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36860:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1740,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36860:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1743,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36860:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1744,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "36872:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1745,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "36877:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 1737,
														"name": "TransferBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 671,
														"src": "36830:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 1746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36830:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1747,
												"nodeType": "EmitStatement",
												"src": "36825:60:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1749,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1670,
															"src": "36916:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1750,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1641,
															"src": "36926:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1753,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "36940:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1752,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "36932:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1751,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "36932:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36932:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1755,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1644,
															"src": "36944:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 1756,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1647,
															"src": "36949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 1757,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "36958:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1748,
														"name": "_afterTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "36896:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36896:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "36896:65:0"
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "35822:228:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "36064:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "36083:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "36075:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36075:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1644,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "36106:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "36089:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1642,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "36089:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1643,
													"nodeType": "ArrayTypeName",
													"src": "36089:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "36128:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "36111:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1645,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "36111:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1646,
													"nodeType": "ArrayTypeName",
													"src": "36111:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36074:62:0"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36154:0:0"
									},
									"scope": 1988,
									"src": "36055:913:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1792,
										"nodeType": "Block",
										"src": "37197:200:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1772,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "37215:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1773,
																"name": "operator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "37224:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "37215:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2073657474696e6720617070726f76616c2073746174757320666f722073656c66",
															"id": 1775,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37234:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															},
															"value": "ERC1155: setting approval status for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df9806c6dc743de602e49918a67b580590d69ab768bdb59f977c0a884a91a7c2",
																"typeString": "literal_string \"ERC1155: setting approval status for self\""
															}
														],
														"id": 1771,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "37207:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37207:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1777,
												"nodeType": "ExpressionStatement",
												"src": "37207:71:0"
											},
											{
												"expression": {
													"id": 1784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 1778,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 797,
																"src": "37288:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 1781,
															"indexExpression": {
																"id": 1779,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1764,
																"src": "37307:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "37288:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1782,
														"indexExpression": {
															"id": 1780,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "37314:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "37288:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1783,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1768,
														"src": "37326:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "37288:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "ExpressionStatement",
												"src": "37288:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1787,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "37364:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1788,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "37371:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1789,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1768,
															"src": "37381:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1786,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 680,
														"src": "37349:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1790,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37349:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1791,
												"nodeType": "EmitStatement",
												"src": "37344:46:0"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "36974:125:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event."
									},
									"id": 1793,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "37113:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37140:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "37132:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37132:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "37155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "37147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1768,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "37170:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1793,
												"src": "37165:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1767,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37131:48:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37197:0:0"
									},
									"scope": 1988,
									"src": "37104:293:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1811,
										"nodeType": "Block",
										"src": "38545:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1794,
										"nodeType": "StructuredDocumentation",
										"src": "37403:925:0",
										"text": " @dev Hook that is called before any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `ids` and `amounts` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nameLocation": "38342:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1796,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38380:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "38372:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1795,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38372:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "38406:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "38398:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1797,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "38428:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "38420:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1799,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38420:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1803,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "38457:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "38440:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1801,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38440:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1802,
													"nodeType": "ArrayTypeName",
													"src": "38440:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "38487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "38470:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1804,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "38470:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1805,
													"nodeType": "ArrayTypeName",
													"src": "38470:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "38517:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1812,
												"src": "38504:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "38504:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38362:165:0"
									},
									"returnParameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "38545:0:0"
									},
									"scope": 1988,
									"src": "38333:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "39691:2:0",
										"statements": []
									},
									"documentation": {
										"id": 1813,
										"nodeType": "StructuredDocumentation",
										"src": "38553:922:0",
										"text": " @dev Hook that is called after any token transfer. This includes minting\n and burning, as well as batched variants.\n The same hook is called on both single and batched variants. For single\n transfers, the length of the `id` and `amount` arrays will be 1.\n Calling conditions (for each `id` and `amount` pair):\n - When `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n of token type `id` will be  transferred to `to`.\n - When `from` is zero, `amount` tokens of token type `id` will be minted\n for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens of token type `id`\n will be burned.\n - `from` and `to` are never both zero.\n - `ids` and `amounts` have the same, non-zero length.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfer",
									"nameLocation": "39489:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1815,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39526:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "39518:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39518:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1817,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39552:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "39544:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1816,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39544:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39574:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "39566:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1818,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39566:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1822,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "39603:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "39586:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1820,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1821,
													"nodeType": "ArrayTypeName",
													"src": "39586:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "39633:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "39616:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1823,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "39616:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1824,
													"nodeType": "ArrayTypeName",
													"src": "39616:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39663:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "39650:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39650:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39508:165:0"
									},
									"returnParameters": {
										"id": 1829,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39691:0:0"
									},
									"scope": 1988,
									"src": "39480:213:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1893,
										"nodeType": "Block",
										"src": "39892:532:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1846,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "39906:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1847,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "39909:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "39906:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "39906:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1892,
												"nodeType": "IfStatement",
												"src": "39902:516:0",
												"trueBody": {
													"id": 1891,
													"nodeType": "Block",
													"src": "39923:495:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1873,
																		"nodeType": "Block",
																		"src": "40040:184:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1866,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1862,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1860,
																						"src": "40062:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1863,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 639,
																								"src": "40074:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$639_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1864,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "40091:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 620,
																							"src": "40074:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1865,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "40109:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "40074:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "40062:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1872,
																				"nodeType": "IfStatement",
																				"src": "40058:152:0",
																				"trueBody": {
																					"id": 1871,
																					"nodeType": "Block",
																					"src": "40119:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1868,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "40148:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1867,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "40141:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1869,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "40141:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1870,
																							"nodeType": "ExpressionStatement",
																							"src": "40141:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1874,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1861,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1860,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "40030:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1874,
																				"src": "40023:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1859,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "40023:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "40022:17:0"
																	},
																	"src": "40014:210:0"
																},
																{
																	"block": {
																		"id": 1882,
																		"nodeType": "Block",
																		"src": "40259:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1879,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1876,
																							"src": "40284:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1878,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "40277:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1880,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40277:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1881,
																				"nodeType": "ExpressionStatement",
																				"src": "40277:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1883,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1877,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1876,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "40251:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1883,
																				"src": "40237:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1875,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "40237:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "40236:22:0"
																	},
																	"src": "40225:81:0"
																},
																{
																	"block": {
																		"id": 1888,
																		"nodeType": "Block",
																		"src": "40313:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1885,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "40338:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1884,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "40331:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1886,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "40331:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1887,
																				"nodeType": "ExpressionStatement",
																				"src": "40331:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1889,
																	"nodeType": "TryCatchClause",
																	"src": "40307:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1853,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1833,
																		"src": "39980:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1854,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1835,
																		"src": "39990:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1855,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1839,
																		"src": "39996:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1856,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1841,
																		"src": "40000:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1857,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1843,
																		"src": "40008:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1850,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1837,
																				"src": "39958:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1849,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "39941:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$639_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "39941:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$639",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1852,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "39962:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 620,
																	"src": "39941:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1858,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39941:72:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1890,
															"nodeType": "TryStatement",
															"src": "39937:471:0"
														}
													]
												}
											}
										]
									},
									"id": 1894,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "39708:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1833,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39756:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "39748:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1832,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39748:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "39782:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "39774:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39774:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "39804:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "39796:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1836,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39796:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "39824:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "39816:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39816:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1841,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "39844:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "39836:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1840,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1843,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "39873:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1894,
												"src": "39860:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1842,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "39860:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39738:145:0"
									},
									"returnParameters": {
										"id": 1845,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "39892:0:0"
									},
									"scope": 1988,
									"src": "39699:725:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1958,
										"nodeType": "Block",
										"src": "40648:574:0",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1911,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1900,
															"src": "40662:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1912,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "40665:10:0",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 255,
														"src": "40662:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40662:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1957,
												"nodeType": "IfStatement",
												"src": "40658:558:0",
												"trueBody": {
													"id": 1956,
													"nodeType": "Block",
													"src": "40679:537:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 1938,
																		"nodeType": "Block",
																		"src": "40833:189:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 1931,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1927,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1925,
																						"src": "40855:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 1928,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 639,
																								"src": "40867:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$639_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 1929,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "40884:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 638,
																							"src": "40867:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 1930,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "40907:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "40867:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "40855:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1937,
																				"nodeType": "IfStatement",
																				"src": "40851:157:0",
																				"trueBody": {
																					"id": 1936,
																					"nodeType": "Block",
																					"src": "40917:91:0",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"hexValue": "455243313135353a204552433131353552656365697665722072656a656374656420746f6b656e73",
																										"id": 1933,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "string",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "40946:42:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										},
																										"value": "ERC1155: ERC1155Receiver rejected tokens"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_stringliteral_0587cccad73a80a7f013db13c596f4febc1968dc77e1d3589d5e7a509a3d6503",
																											"typeString": "literal_string \"ERC1155: ERC1155Receiver rejected tokens\""
																										}
																									],
																									"id": 1932,
																									"name": "revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [
																										4294967277,
																										4294967277
																									],
																									"referencedDeclaration": 4294967277,
																									"src": "40939:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																										"typeString": "function (string memory) pure"
																									}
																								},
																								"id": 1934,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "40939:50:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1935,
																							"nodeType": "ExpressionStatement",
																							"src": "40939:50:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1939,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1926,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1925,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "40810:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1939,
																				"src": "40803:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 1924,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "40803:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "40785:47:0"
																	},
																	"src": "40777:245:0"
																},
																{
																	"block": {
																		"id": 1947,
																		"nodeType": "Block",
																		"src": "41057:47:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"id": 1944,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1941,
																							"src": "41082:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_string_memory_ptr",
																								"typeString": "string memory"
																							}
																						],
																						"id": 1943,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "41075:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1945,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "41075:14:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1946,
																				"nodeType": "ExpressionStatement",
																				"src": "41075:14:0"
																			}
																		]
																	},
																	"errorName": "Error",
																	"id": 1948,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 1942,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 1941,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "41049:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 1948,
																				"src": "41035:20:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_string_memory_ptr",
																					"typeString": "string"
																				},
																				"typeName": {
																					"id": 1940,
																					"name": "string",
																					"nodeType": "ElementaryTypeName",
																					"src": "41035:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_storage_ptr",
																						"typeString": "string"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "41034:22:0"
																	},
																	"src": "41023:81:0"
																},
																{
																	"block": {
																		"id": 1953,
																		"nodeType": "Block",
																		"src": "41111:95:0",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"hexValue": "455243313135353a207472616e7366657220746f206e6f6e2d45524331313535526563656976657220696d706c656d656e746572",
																							"id": 1950,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "string",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "41136:54:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							},
																							"value": "ERC1155: transfer to non-ERC1155Receiver implementer"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_stringliteral_f591f7b75ffc499e05f8b34c3364b2eceff651378d9549db1d5d67c0d8255c5d",
																								"typeString": "literal_string \"ERC1155: transfer to non-ERC1155Receiver implementer\""
																							}
																						],
																						"id": 1949,
																						"name": "revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [
																							4294967277,
																							4294967277
																						],
																						"referencedDeclaration": 4294967277,
																						"src": "41129:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																							"typeString": "function (string memory) pure"
																						}
																					},
																					"id": 1951,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "41129:62:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1952,
																				"nodeType": "ExpressionStatement",
																				"src": "41129:62:0"
																			}
																		]
																	},
																	"errorName": "",
																	"id": 1954,
																	"nodeType": "TryCatchClause",
																	"src": "41105:101:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 1918,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1896,
																		"src": "40741:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1919,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1898,
																		"src": "40751:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1920,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1903,
																		"src": "40757:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1921,
																		"name": "amounts",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1906,
																		"src": "40762:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 1922,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1908,
																		"src": "40771:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 1915,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1900,
																				"src": "40714:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1914,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 639,
																			"src": "40697:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$639_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 1916,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "40697:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$639",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 1917,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "40718:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 638,
																	"src": "40697:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 1923,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "40697:79:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 1955,
															"nodeType": "TryStatement",
															"src": "40693:513:0"
														}
													]
												}
											}
										]
									},
									"id": 1959,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "40439:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1896,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "40492:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "40484:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40484:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1898,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "40518:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "40510:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40510:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "40540:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "40532:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40532:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "40569:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "40552:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1901,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "40552:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1902,
													"nodeType": "ArrayTypeName",
													"src": "40552:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "40599:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "40582:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1904,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "40582:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1905,
													"nodeType": "ArrayTypeName",
													"src": "40582:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1908,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "40629:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1959,
												"src": "40616:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1907,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "40616:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40474:165:0"
									},
									"returnParameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40648:0:0"
									},
									"scope": 1988,
									"src": "40430:792:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1986,
										"nodeType": "Block",
										"src": "41312:109:0",
										"statements": [
											{
												"assignments": [
													1971
												],
												"declarations": [
													{
														"constant": false,
														"id": 1971,
														"mutability": "mutable",
														"name": "array",
														"nameLocation": "41339:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 1986,
														"src": "41322:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1969,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "41322:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1970,
															"nodeType": "ArrayTypeName",
															"src": "41322:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1977,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 1975,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41361:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1974,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "41347:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1972,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "41351:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1973,
															"nodeType": "ArrayTypeName",
															"src": "41351:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1976,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41347:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "41322:41:0"
											},
											{
												"expression": {
													"id": 1982,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1978,
															"name": "array",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1971,
															"src": "41373:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1980,
														"indexExpression": {
															"hexValue": "30",
															"id": 1979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "41379:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41373:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1981,
														"name": "element",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "41384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41373:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1983,
												"nodeType": "ExpressionStatement",
												"src": "41373:18:0"
											},
											{
												"expression": {
													"id": 1984,
													"name": "array",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1971,
													"src": "41409:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1966,
												"id": 1985,
												"nodeType": "Return",
												"src": "41402:12:0"
											}
										]
									},
									"id": 1987,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArray",
									"nameLocation": "41237:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "41263:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "41255:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41255:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41254:17:0"
									},
									"returnParameters": {
										"id": 1966,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "41294:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1963,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "41294:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1964,
													"nodeType": "ArrayTypeName",
													"src": "41294:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41293:18:0"
									},
									"scope": 1988,
									"src": "41228:193:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2185,
							"src": "24884:16539:0",
							"usedErrors": []
						},
						{
							"id": 1989,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41601:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1991,
										"name": "ERC1155",
										"nameLocations": [
											"41842:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1988,
										"src": "41842:7:0"
									},
									"id": 1992,
									"nodeType": "InheritanceSpecifier",
									"src": "41842:7:0"
								}
							],
							"canonicalName": "ERC1155Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1990,
								"nodeType": "StructuredDocumentation",
								"src": "41627:177:0",
								"text": " @dev Extension of {ERC1155} that allows token holders to destroy both their\n own tokens and those that they have been approved to use.\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 2055,
							"linearizedBaseContracts": [
								2055,
								1988,
								772,
								759,
								600,
								578,
								21
							],
							"name": "ERC1155Burnable",
							"nameLocation": "41823:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2021,
										"nodeType": "Block",
										"src": "41929:212:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2011,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2005,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2002,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1994,
																	"src": "41960:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2003,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "41971:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2004,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "41971:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "41960:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2007,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1994,
																		"src": "42004:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2008,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "42013:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2009,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42013:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2006,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "41987:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 2010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "41987:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "41960:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2012,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42040:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 2001,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "41939:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2013,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "41939:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2014,
												"nodeType": "ExpressionStatement",
												"src": "41939:159:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2016,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "42115:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2017,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1996,
															"src": "42124:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2018,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "42128:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2015,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "42109:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42109:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "42109:25:0"
											}
										]
									},
									"functionSelector": "f5298aca",
									"id": 2022,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "41865:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "41878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "41870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41870:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1996,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "41895:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "41887:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "41907:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2022,
												"src": "41899:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41899:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41869:44:0"
									},
									"returnParameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "41929:0:0"
									},
									"scope": 2055,
									"src": "41856:285:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "42245:219:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2043,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2037,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2034,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2024,
																	"src": "42276:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 2035,
																		"name": "_msgSender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 11,
																		"src": "42287:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 2036,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "42287:12:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "42276:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2039,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2024,
																		"src": "42320:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 2040,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "42329:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 2041,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "42329:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2038,
																	"name": "isApprovedForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 980,
																	"src": "42303:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																		"typeString": "function (address,address) view returns (bool)"
																	}
																},
																"id": 2042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42303:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "42276:66:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "455243313135353a2063616c6c6572206973206e6f7420746f6b656e206f776e6572206f7220617070726f766564",
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "42356:48:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															},
															"value": "ERC1155: caller is not token owner or approved"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47c72b42072ed6c647dec3a0a5c88bec44d3e901c64659bff94ecce0a0323156",
																"typeString": "literal_string \"ERC1155: caller is not token owner or approved\""
															}
														],
														"id": 2033,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "42255:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2045,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42255:159:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2046,
												"nodeType": "ExpressionStatement",
												"src": "42255:159:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2048,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2024,
															"src": "42436:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2049,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2027,
															"src": "42445:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2050,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "42450:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2047,
														"name": "_burnBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1761,
														"src": "42425:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42425:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "42425:32:0"
											}
										]
									},
									"functionSelector": "6b20c454",
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnBatch",
									"nameLocation": "42156:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "42174:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "42166:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "42200:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "42183:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2025,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "42183:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2026,
													"nodeType": "ArrayTypeName",
													"src": "42183:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "42222:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2054,
												"src": "42205:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2028,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "42205:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2029,
													"nodeType": "ArrayTypeName",
													"src": "42205:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42165:64:0"
									},
									"returnParameters": {
										"id": 2032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42245:0:0"
									},
									"scope": 2055,
									"src": "42147:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 2185,
							"src": "41805:661:0",
							"usedErrors": []
						},
						{
							"id": 2056,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "42500:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2057,
										"name": "ERC1155",
										"nameLocations": [
											"42548:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1988,
										"src": "42548:7:0"
									},
									"id": 2058,
									"nodeType": "InheritanceSpecifier",
									"src": "42548:7:0"
								},
								{
									"baseName": {
										"id": 2059,
										"name": "Pausable",
										"nameLocations": [
											"42557:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 238,
										"src": "42557:8:0"
									},
									"id": 2060,
									"nodeType": "InheritanceSpecifier",
									"src": "42557:8:0"
								},
								{
									"baseName": {
										"id": 2061,
										"name": "Ownable",
										"nameLocations": [
											"42567:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 132,
										"src": "42567:7:0"
									},
									"id": 2062,
									"nodeType": "InheritanceSpecifier",
									"src": "42567:7:0"
								},
								{
									"baseName": {
										"id": 2063,
										"name": "ERC1155Burnable",
										"nameLocations": [
											"42576:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2055,
										"src": "42576:15:0"
									},
									"id": 2064,
									"nodeType": "InheritanceSpecifier",
									"src": "42576:15:0"
								}
							],
							"canonicalName": "DTiket",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2184,
							"linearizedBaseContracts": [
								2184,
								2055,
								132,
								238,
								1988,
								772,
								759,
								600,
								578,
								21
							],
							"name": "DTiket",
							"nameLocation": "42538:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 2070,
										"nodeType": "Block",
										"src": "42626:2:0",
										"statements": []
									},
									"id": 2071,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4454",
													"id": 2067,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "42620:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_f3c6d15ee9cd01f6a869c50fdbdb633d5b07cca374a35c88b60c25e0480bd779",
														"typeString": "literal_string \"DT\""
													},
													"value": "DT"
												}
											],
											"id": 2068,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 2066,
												"name": "ERC1155",
												"nameLocations": [
													"42612:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1988,
												"src": "42612:7:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "42612:13:0"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42609:2:0"
									},
									"returnParameters": {
										"id": 2069,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42626:0:0"
									},
									"scope": 2184,
									"src": "42598:30:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "42668:25:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2076,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 221,
														"src": "42678:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2077,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42678:8:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2078,
												"nodeType": "ExpressionStatement",
												"src": "42678:8:0"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2074,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2073,
												"name": "onlyOwner",
												"nameLocations": [
													"42658:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "42658:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "42658:9:0"
										}
									],
									"name": "pause",
									"nameLocation": "42643:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42648:2:0"
									},
									"returnParameters": {
										"id": 2075,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42668:0:0"
									},
									"scope": 2184,
									"src": "42634:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2088,
										"nodeType": "Block",
										"src": "42735:27:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2085,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "42745:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42745:10:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2087,
												"nodeType": "ExpressionStatement",
												"src": "42745:10:0"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2089,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2083,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2082,
												"name": "onlyOwner",
												"nameLocations": [
													"42725:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "42725:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "42725:9:0"
										}
									],
									"name": "unpause",
									"nameLocation": "42708:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42715:2:0"
									},
									"returnParameters": {
										"id": 2084,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42735:0:0"
									},
									"scope": 2184,
									"src": "42699:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2106,
										"nodeType": "Block",
										"src": "42851:52:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2101,
															"name": "_ticketUser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2091,
															"src": "42867:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2102,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2093,
															"src": "42880:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 2103,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2095,
															"src": "42889:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2100,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1638,
														"src": "42861:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42861:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2105,
												"nodeType": "ExpressionStatement",
												"src": "42861:35:0"
											}
										]
									},
									"functionSelector": "d501dc37",
									"id": 2107,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2098,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2097,
												"name": "onlyOwner",
												"nameLocations": [
													"42841:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "42841:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "42841:9:0"
										}
									],
									"name": "burn",
									"nameLocation": "42776:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2096,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2091,
												"mutability": "mutable",
												"name": "_ticketUser",
												"nameLocation": "42789:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "42781:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2090,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "42809:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "42802:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2092,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "42802:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2095,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "42826:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2107,
												"src": "42818:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42818:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42780:53:0"
									},
									"returnParameters": {
										"id": 2099,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42851:0:0"
									},
									"scope": 2184,
									"src": "42767:136:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2127,
										"nodeType": "Block",
										"src": "43023:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2121,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2109,
															"src": "43039:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2122,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2111,
															"src": "43048:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2123,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2113,
															"src": "43052:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2124,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2115,
															"src": "43060:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2120,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1422,
														"src": "43033:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43033:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2126,
												"nodeType": "ExpressionStatement",
												"src": "43033:32:0"
											}
										]
									},
									"functionSelector": "731133e9",
									"id": 2128,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2118,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2117,
												"name": "onlyOwner",
												"nameLocations": [
													"43009:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "43009:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "43009:9:0"
										}
									],
									"name": "mint",
									"nameLocation": "42917:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2109,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "42930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "42922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2111,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "42947:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "42939:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "42959:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "42951:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2112,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42951:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "42980:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "42967:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42967:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42921:64:0"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43023:0:0"
									},
									"scope": 2184,
									"src": "42908:164:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2150,
										"nodeType": "Block",
										"src": "43213:51:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2144,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "43234:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2145,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "43238:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2146,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2136,
															"src": "43243:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2147,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2138,
															"src": "43252:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2143,
														"name": "_mintBatch",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1533,
														"src": "43223:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43223:34:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "43223:34:0"
											}
										]
									},
									"functionSelector": "1f7fdffa",
									"id": 2151,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2141,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2140,
												"name": "onlyOwner",
												"nameLocations": [
													"43199:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 51,
												"src": "43199:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "43199:9:0"
										}
									],
									"name": "mintBatch",
									"nameLocation": "43087:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43105:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "43097:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43097:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "43126:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "43109:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2131,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43109:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2132,
													"nodeType": "ArrayTypeName",
													"src": "43109:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "43148:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "43131:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2134,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43131:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2135,
													"nodeType": "ArrayTypeName",
													"src": "43131:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2138,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43170:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2151,
												"src": "43157:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2137,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43157:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43096:79:0"
									},
									"returnParameters": {
										"id": 2142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43213:0:0"
									},
									"scope": 2184,
									"src": "43078:186:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1812
									],
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "43471:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2174,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "43508:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2175,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2155,
															"src": "43518:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2176,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2157,
															"src": "43524:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2177,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "43528:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2178,
															"name": "amounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2163,
															"src": "43533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2179,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2165,
															"src": "43542:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 2171,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "43481:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_DTiket_$2184_$",
																"typeString": "type(contract super DTiket)"
															}
														},
														"id": 2173,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "43487:20:0",
														"memberName": "_beforeTokenTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1812,
														"src": "43481:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43481:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "43481:66:0"
											}
										]
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2168,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2167,
												"name": "whenNotPaused",
												"nameLocations": [
													"43436:13:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 165,
												"src": "43436:13:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "43436:13:0"
										}
									],
									"name": "_beforeTokenTransfer",
									"nameLocation": "43279:20:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2169,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "43458:8:0"
									},
									"parameters": {
										"id": 2166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2153,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "43308:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "43300:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43300:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2155,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "43326:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "43318:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2157,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "43340:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "43332:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "43332:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "43361:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "43344:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2158,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43344:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2159,
													"nodeType": "ArrayTypeName",
													"src": "43344:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2163,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "43383:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "43366:24:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2161,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "43366:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2162,
													"nodeType": "ArrayTypeName",
													"src": "43366:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2165,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "43405:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "43392:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2164,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "43392:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43299:111:0"
									},
									"returnParameters": {
										"id": 2170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43471:0:0"
									},
									"scope": 2184,
									"src": "43270:284:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2185,
							"src": "42529:1027:0",
							"usedErrors": []
						}
					],
					"src": "108:43448:0"
				},
				"id": 0
			}
		}
	}
}