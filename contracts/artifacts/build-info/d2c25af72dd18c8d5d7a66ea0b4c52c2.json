{
	"id": "d2c25af72dd18c8d5d7a66ea0b4c52c2",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.20",
	"solcLongVersion": "0.8.20+commit.a1b79de6",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/FundRegistry_flattened.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n// File: @openzeppelin/contracts/utils/math/Math.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n\n// File: @openzeppelin/contracts/utils/StorageSlot.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/Arrays.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Arrays.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Collection of functions related to array types.\n */\nlibrary Arrays {\n    using StorageSlot for bytes32;\n\n    /**\n     * @dev Searches a sorted `array` and returns the first index that contains\n     * a value greater or equal to `element`. If no such index exists (i.e. all\n     * values in the array are strictly less than `element`), the array length is\n     * returned. Time complexity O(log n).\n     *\n     * `array` is expected to be sorted in ascending order, and to contain no\n     * repeated elements.\n     */\n    function findUpperBound(uint256[] storage array, uint256 element) internal view returns (uint256) {\n        uint256 low = 0;\n        uint256 high = array.length;\n\n        if (high == 0) {\n            return 0;\n        }\n\n        while (low < high) {\n            uint256 mid = Math.average(low, high);\n\n            // Note that mid will always be strictly less than high (i.e. it will be a valid array index)\n            // because Math.average rounds towards zero (it does integer division with truncation).\n            if (unsafeAccess(array, mid).value > element) {\n                high = mid;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        // At this point `low` is the exclusive upper bound. We will return the inclusive upper bound.\n        if (low > 0 && unsafeAccess(array, low - 1).value == element) {\n            return low - 1;\n        } else {\n            return low;\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(address[] storage arr, uint256 pos) internal pure returns (StorageSlot.AddressSlot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getAddressSlot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(bytes32[] storage arr, uint256 pos) internal pure returns (StorageSlot.Bytes32Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getBytes32Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeAccess(uint256[] storage arr, uint256 pos) internal pure returns (StorageSlot.Uint256Slot storage) {\n        bytes32 slot;\n        // We use assembly to calculate the storage slot of the element at index `pos` of the dynamic array `arr`\n        // following https://docs.soliditylang.org/en/v0.8.20/internals/layout_in_storage.html#mappings-and-dynamic-arrays.\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0, arr.slot)\n            slot := add(keccak256(0, 0x20), pos)\n        }\n        return slot.getUint256Slot();\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(uint256[] memory arr, uint256 pos) internal pure returns (uint256 res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n\n    /**\n     * @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n     *\n     * WARNING: Only use if you are certain `pos` is lower than the array length.\n     */\n    function unsafeMemoryAccess(address[] memory arr, uint256 pos) internal pure returns (address res) {\n        assembly {\n            res := mload(add(add(arr, 0x20), mul(pos, 0x20)))\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/utils/introspection/IERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n\n// File: @openzeppelin/contracts/utils/introspection/ERC165.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155Receiver.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155Receiver.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface that must be implemented by smart contracts in order to receive\n * ERC-1155 token transfers.\n */\ninterface IERC1155Receiver is IERC165 {\n    /**\n     * @dev Handles the receipt of a single ERC1155 token type. This function is\n     * called at the end of a `safeTransferFrom` after the balance has been updated.\n     *\n     * NOTE: To accept the transfer, this must return\n     * `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n     * (i.e. 0xf23a6e61, or its own function selector).\n     *\n     * @param operator The address which initiated the transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param id The ID of the token being transferred\n     * @param value The amount of tokens being transferred\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed\n     */\n    function onERC1155Received(\n        address operator,\n        address from,\n        uint256 id,\n        uint256 value,\n        bytes calldata data\n    ) external returns (bytes4);\n\n    /**\n     * @dev Handles the receipt of a multiple ERC1155 token types. This function\n     * is called at the end of a `safeBatchTransferFrom` after the balances have\n     * been updated.\n     *\n     * NOTE: To accept the transfer(s), this must return\n     * `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n     * (i.e. 0xbc197c81, or its own function selector).\n     *\n     * @param operator The address which initiated the batch transfer (i.e. msg.sender)\n     * @param from The address which previously owned the token\n     * @param ids An array containing ids of each token being transferred (order and length must match values array)\n     * @param values An array containing amounts of each token being transferred (order and length must match ids array)\n     * @param data Additional data with no specified format\n     * @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed\n     */\n    function onERC1155BatchReceived(\n        address operator,\n        address from,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/utils/ERC1155Holder.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/utils/ERC1155Holder.sol)\n\npragma solidity ^0.8.20;\n\n\n\n/**\n * @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n *\n * IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n * stuck.\n */\nabstract contract ERC1155Holder is ERC165, IERC1155Receiver {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    function onERC1155Received(\n        address,\n        address,\n        uint256,\n        uint256,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155Received.selector;\n    }\n\n    function onERC1155BatchReceived(\n        address,\n        address,\n        uint256[] memory,\n        uint256[] memory,\n        bytes memory\n    ) public virtual override returns (bytes4) {\n        return this.onERC1155BatchReceived.selector;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/IERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n */\ninterface IERC1155 is IERC165 {\n    /**\n     * @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the value of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     *\n     * WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n     * to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n     * Ensure to follow the checks-effects-interactions pattern and consider employing\n     * reentrancy guards when interacting with untrusted contracts.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata values,\n        bytes calldata data\n    ) external;\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/extensions/IERC1155MetadataURI.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/extensions/IERC1155MetadataURI.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n * in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\n */\ninterface IERC1155MetadataURI is IERC1155 {\n    /**\n     * @dev Returns the URI for token type `id`.\n     *\n     * If the `\\{id\\}` substring is present in the URI, it must be replaced by\n     * clients with the actual token type ID.\n     */\n    function uri(uint256 id) external view returns (string memory);\n}\n\n// File: @openzeppelin/contracts/interfaces/draft-IERC6093.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n\n// File: @openzeppelin/contracts/utils/Context.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC1155/ERC1155.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC1155/ERC1155.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n\n\n\n/**\n * @dev Implementation of the basic standard multi-token.\n * See https://eips.ethereum.org/EIPS/eip-1155\n * Originally based on code by Enjin: https://github.com/enjin/erc-1155\n */\nabstract contract ERC1155 is Context, ERC165, IERC1155, IERC1155MetadataURI, IERC1155Errors {\n    using Arrays for uint256[];\n    using Arrays for address[];\n\n    mapping(uint256 id => mapping(address account => uint256)) private _balances;\n\n    mapping(address account => mapping(address operator => bool)) private _operatorApprovals;\n\n    // Used as the URI for all token types by relying on ID substitution, e.g. https://token-cdn-domain/{id}.json\n    string private _uri;\n\n    /**\n     * @dev See {_setURI}.\n     */\n    constructor(string memory uri_) {\n        _setURI(uri_);\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\n        return\n            interfaceId == type(IERC1155).interfaceId ||\n            interfaceId == type(IERC1155MetadataURI).interfaceId ||\n            super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev See {IERC1155MetadataURI-uri}.\n     *\n     * This implementation returns the same URI for *all* token types. It relies\n     * on the token type ID substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * Clients calling this function must replace the `\\{id\\}` substring with the\n     * actual token type ID.\n     */\n    function uri(uint256 /* id */) public view virtual returns (string memory) {\n        return _uri;\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOf}.\n     */\n    function balanceOf(address account, uint256 id) public view virtual returns (uint256) {\n        return _balances[id][account];\n    }\n\n    /**\n     * @dev See {IERC1155-balanceOfBatch}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] memory accounts,\n        uint256[] memory ids\n    ) public view virtual returns (uint256[] memory) {\n        if (accounts.length != ids.length) {\n            revert ERC1155InvalidArrayLength(ids.length, accounts.length);\n        }\n\n        uint256[] memory batchBalances = new uint256[](accounts.length);\n\n        for (uint256 i = 0; i < accounts.length; ++i) {\n            batchBalances[i] = balanceOf(accounts.unsafeMemoryAccess(i), ids.unsafeMemoryAccess(i));\n        }\n\n        return batchBalances;\n    }\n\n    /**\n     * @dev See {IERC1155-setApprovalForAll}.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual {\n        _setApprovalForAll(_msgSender(), operator, approved);\n    }\n\n    /**\n     * @dev See {IERC1155-isApprovedForAll}.\n     */\n    function isApprovedForAll(address account, address operator) public view virtual returns (bool) {\n        return _operatorApprovals[account][operator];\n    }\n\n    /**\n     * @dev See {IERC1155-safeTransferFrom}.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeTransferFrom(from, to, id, value, data);\n    }\n\n    /**\n     * @dev See {IERC1155-safeBatchTransferFrom}.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) public virtual {\n        address sender = _msgSender();\n        if (from != sender && !isApprovedForAll(from, sender)) {\n            revert ERC1155MissingApprovalForAll(sender, from);\n        }\n        _safeBatchTransferFrom(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n     * (or `to`) is the zero address.\n     *\n     * Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n     *   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     *\n     * NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead.\n     */\n    function _update(address from, address to, uint256[] memory ids, uint256[] memory values) internal virtual {\n        if (ids.length != values.length) {\n            revert ERC1155InvalidArrayLength(ids.length, values.length);\n        }\n\n        address operator = _msgSender();\n\n        for (uint256 i = 0; i < ids.length; ++i) {\n            uint256 id = ids.unsafeMemoryAccess(i);\n            uint256 value = values.unsafeMemoryAccess(i);\n\n            if (from != address(0)) {\n                uint256 fromBalance = _balances[id][from];\n                if (fromBalance < value) {\n                    revert ERC1155InsufficientBalance(from, fromBalance, value, id);\n                }\n                unchecked {\n                    // Overflow not possible: value <= fromBalance\n                    _balances[id][from] = fromBalance - value;\n                }\n            }\n\n            if (to != address(0)) {\n                _balances[id][to] += value;\n            }\n        }\n\n        if (ids.length == 1) {\n            uint256 id = ids.unsafeMemoryAccess(0);\n            uint256 value = values.unsafeMemoryAccess(0);\n            emit TransferSingle(operator, from, to, id, value);\n        } else {\n            emit TransferBatch(operator, from, to, ids, values);\n        }\n    }\n\n    /**\n     * @dev Version of {_update} that performs the token acceptance check by calling\n     * {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n     * contains code (eg. is a smart contract at the moment of execution).\n     *\n     * IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n     * update to the contract state after this function would break the check-effect-interaction pattern. Consider\n     * overriding {_update} instead.\n     */\n    function _updateWithAcceptanceCheck(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal virtual {\n        _update(from, to, ids, values);\n        if (to != address(0)) {\n            address operator = _msgSender();\n            if (ids.length == 1) {\n                uint256 id = ids.unsafeMemoryAccess(0);\n                uint256 value = values.unsafeMemoryAccess(0);\n                _doSafeTransferAcceptanceCheck(operator, from, to, id, value, data);\n            } else {\n                _doSafeBatchTransferAcceptanceCheck(operator, from, to, ids, values, data);\n            }\n        }\n    }\n\n    /**\n     * @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of tokens of type `id` of at least `value` amount.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _safeTransferFrom(address from, address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     * - `ids` and `values` must have the same length.\n     */\n    function _safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, to, ids, values, data);\n    }\n\n    /**\n     * @dev Sets a new URI for all token types, by relying on the token type ID\n     * substitution mechanism\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n     *\n     * By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n     * URI or any of the values in the JSON file at said URI will be replaced by\n     * clients with the token type ID.\n     *\n     * For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n     * interpreted by clients as\n     * `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n     * for token type ID 0x4cce0.\n     *\n     * See {uri}.\n     *\n     * Because these URIs cannot be meaningfully represented by the {URI} event,\n     * this function emits no events.\n     */\n    function _setURI(string memory newuri) internal virtual {\n        _uri = newuri;\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function _mint(address to, uint256 id, uint256 value, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `values` must have the same length.\n     * - `to` cannot be the zero address.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function _mintBatch(address to, uint256[] memory ids, uint256[] memory values, bytes memory data) internal {\n        if (to == address(0)) {\n            revert ERC1155InvalidReceiver(address(0));\n        }\n        _updateWithAcceptanceCheck(address(0), to, ids, values, data);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens of type `id` from `from`\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     */\n    function _burn(address from, uint256 id, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        (uint256[] memory ids, uint256[] memory values) = _asSingletonArrays(id, value);\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `from` must have at least `value` amount of tokens of type `id`.\n     * - `ids` and `values` must have the same length.\n     */\n    function _burnBatch(address from, uint256[] memory ids, uint256[] memory values) internal {\n        if (from == address(0)) {\n            revert ERC1155InvalidSender(address(0));\n        }\n        _updateWithAcceptanceCheck(from, address(0), ids, values, \"\");\n    }\n\n    /**\n     * @dev Approve `operator` to operate on all of `owner` tokens\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the zero address.\n     */\n    function _setApprovalForAll(address owner, address operator, bool approved) internal virtual {\n        if (operator == address(0)) {\n            revert ERC1155InvalidOperator(address(0));\n        }\n        _operatorApprovals[owner][operator] = approved;\n        emit ApprovalForAll(owner, operator, approved);\n    }\n\n    /**\n     * @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256 id,\n        uint256 value,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155Received(operator, from, id, value, data) returns (bytes4 response) {\n                if (response != IERC1155Receiver.onERC1155Received.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n     * if it contains code at the moment of execution.\n     */\n    function _doSafeBatchTransferAcceptanceCheck(\n        address operator,\n        address from,\n        address to,\n        uint256[] memory ids,\n        uint256[] memory values,\n        bytes memory data\n    ) private {\n        if (to.code.length > 0) {\n            try IERC1155Receiver(to).onERC1155BatchReceived(operator, from, ids, values, data) returns (\n                bytes4 response\n            ) {\n                if (response != IERC1155Receiver.onERC1155BatchReceived.selector) {\n                    // Tokens rejected\n                    revert ERC1155InvalidReceiver(to);\n                }\n            } catch (bytes memory reason) {\n                if (reason.length == 0) {\n                    // non-ERC1155Receiver implementer\n                    revert ERC1155InvalidReceiver(to);\n                } else {\n                    /// @solidity memory-safe-assembly\n                    assembly {\n                        revert(add(32, reason), mload(reason))\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @dev Creates an array in memory with only one value for each of the elements provided.\n     */\n    function _asSingletonArrays(\n        uint256 element1,\n        uint256 element2\n    ) private pure returns (uint256[] memory array1, uint256[] memory array2) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            // Load the free memory pointer\n            array1 := mload(0x40)\n            // Set array length to 1\n            mstore(array1, 1)\n            // Store the single element at the next word after the length (where content starts)\n            mstore(add(array1, 0x20), element1)\n\n            // Repeat for next array locating it right after the first array\n            array2 := add(array1, 0x40)\n            mstore(array2, 1)\n            mstore(add(array2, 0x20), element2)\n\n            // Update the free memory pointer by pointing after the second array\n            mstore(0x40, add(array2, 0x40))\n        }\n    }\n}\n\n// File: @openzeppelin/contracts/token/ERC20/IERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n\n// File: @openzeppelin/contracts/token/ERC20/ERC20.sol\n\n\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n\n// File: contracts/FundRegistry.sol\n\n\npragma solidity ^0.8.9;\npragma abicoder v2;\n\n\n\n\n\n// 펀드를 생성, 업데이트하고 정보를 가지고 올 수 있는 컨트랙트트\n\ncontract FundRegistry is ERC1155Holder {\n    ERC1155 token;\n    uint96 public fundCount;\n    constructor(ERC1155 _token) {\n        token = _token;\n    }\n    struct Fund {\n        uint96 id;\n        address owner; // 정보 변경할 수 있는 owenr 주소\n        uint48 createdAt;\n        uint48 updatedAt;\n        address payee; // 토큰 수취인 주소\n        uint256 threshold; // 펀딩 임계 토큰량\n        uint256 donationAmount; // 현재 펀딩된 토큰량\n        bool isEnd; // 펀딩이 끝났는지\n        // 펀딩(노선)의 메타데이터도 추가해야함\n    }\n\n    struct Donation {\n        address user;\n        uint96 fundId;\n        uint256 amount;\n    }\n\n\n    mapping(uint96 => Fund) public funds;\n    mapping(uint96 => address[]) public fundUsers;\n    mapping(uint96 => mapping(address => Donation[])) public fundDonations;\n\n\n\n    event FundCreated(\n        uint96 indexed id,\n        address owner, \n        address payee, \n        uint256 indexed threshold, \n        uint256 indexed amount, \n        bool isEnd,\n        uint time\n    );\n    event FundUpdated(\n        uint96 indexed id, \n        address owner, \n        address payee, \n        uint256 indexed threshold, \n        uint256 indexed amount, \n        bool isEnd, \n        uint time\n    );\n    /// @notice Emitted when a donation has been made\n    event FundCompletion(\n        uint96 indexed FundId,\n        uint256 donationAmount,\n        uint256 time\n    );\n\n    function createFund(\n        address _owner,\n        address _payee,\n        uint256 _threshold\n    ) external  {\n        uint96 _id = fundCount;\n        funds[_id] = Fund(\n            _id, \n            _owner, \n            uint48(block.timestamp), \n            uint48(block.timestamp), \n            _payee,\n            _threshold,\n            0,\n            false\n        );\n\n        // event\n        emit FundCreated(_id, _owner, _payee, _threshold, 0, false, block.timestamp);\n        \n        fundCount += 1;\n    }\n\n    function createDonation(\n        address _user,\n        uint96 _fundId,\n        uint256 _amount\n    ) private {\n\n        require(token.balanceOf(_user, 0) > _amount, \"token amount of user not sufficient\" );\n        require(token.isApprovedForAll(_user, address(this) ), \"token allowance shortage\");\n        token.safeTransferFrom(_user, address(this), 0, _amount, \"0x0\");\n        \n\n        Donation memory newDonation = Donation(\n            _user,\n            _fundId,\n            _amount\n        );\n        fundDonations[_fundId][_user].push(newDonation);\n        funds[_fundId].donationAmount = funds[_fundId].donationAmount + _amount;\n\n        address[] storage _fundUsers = fundUsers[_fundId];\n\n        bool isAdd = true;\n        for (uint96 i = 0; i < _fundUsers.length; i++){\n            if (_fundUsers[i] == _user){\n                isAdd = false;\n                break;\n            }\n        }\n        if (isAdd){\n            _fundUsers.push(_user);\n        }\n\n    }\n\n    function donate(\n        address _user,\n        uint96 _fundId,\n        uint256 _amount\n    ) external {\n        // Create new donation\n        createDonation(_user, _fundId, _amount);\n        validateFunds(_fundId);\n    }\n\n    function validateFunds(uint96 _fundIdx) private {        \n        if(funds[_fundIdx].threshold < funds[_fundIdx].donationAmount) { //임계량을 넘었는지 체크한다.\n            token.safeTransferFrom(address(this), getFundPayee(_fundIdx), 0, funds[_fundIdx].donationAmount, \"0x0\"); //돈을 전송한다.\n            emit FundCompletion(\n                _fundIdx,\n                funds[_fundIdx].donationAmount,\n                block.timestamp\n            );\n            funds[_fundIdx].isEnd = true; //모금이 완료되었음을 표기한다.\n            mintDTiket(_fundIdx, 1000); //모금이 완료되면 도네이트한 사람들에게 해당 금액의 NFT를 전송한다.\n        }\n\n\n        \n    }\n\n    function mintDTiket(uint96 _fundId, uint96 totalTicket) public {\n        uint256 donationAmount = funds[_fundId].donationAmount;\n        address[] memory userAddresses = fundUsers[_fundId]; //모금이 완료된 펀드에 투자한 사람들을 긁어와서\n        uint256 userTotal;\n        for (uint96 j = 0; j < userAddresses.length; j++){ //각 유저에게 전송\n                userTotal= 0;\n                for (uint96 k = 0; k < fundDonations[_fundId][userAddresses[j]].length; k++){\n                        userTotal += fundDonations[_fundId][userAddresses[j]][k].amount;\n                }\n                token.safeTransferFrom(address(this), userAddresses[j], _fundId, (userTotal * totalTicket) / donationAmount, \"0x0\" ); //0번 토큰을 funding한 만큼 nft를 전송함.\n        }\n    }\n\n    function updateFund(\n        uint96 _id,\n        address _owner,\n        address _payee,\n        uint256 _threshold\n    ) external {\n        Fund memory _fund = funds[_id];\n        require(msg.sender == _fund.owner, \"Fund Update not authorized\");\n        funds[_id] = Fund(\n            _id, \n            _owner, \n            _fund.createdAt, \n            uint48(block.timestamp), \n            _payee, \n            _threshold, \n            _fund.donationAmount,\n            _fund.isEnd\n        );\n        emit FundUpdated(_id, _owner, _payee, _threshold, _fund.donationAmount, _fund.isEnd, block.timestamp);\n    }\n    \n    function getAllFunds() external view returns (Fund[] memory){\n        return getFunds(0, fundCount);\n    }\n\n    function getFunds(uint96 _startId, uint96 _endId) public view returns (Fund[] memory){\n        require(_endId <= fundCount, \"Must be _endId <= fundCount\");\n        require(_startId <= _endId, \"Must be _startId <= _endId\");\n        Fund[] memory fundList = new Fund[](_endId - _startId);\n        for (uint96 i = _startId; i < _endId; i++){\n            fundList[i - _startId] = funds[i];\n        }\n        return fundList;\n    }\n    \n    function getFundPayee(uint96 _id) public view returns (address){\n        require(_id < fundCount, \"Must be _id < fundCount\");\n        return funds[_id].payee;\n    }\n\n\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"contracts/FundRegistry_flattened.sol": {
				"Arrays": {
					"abi": [],
					"devdoc": {
						"details": "Collection of functions related to array types.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FundRegistry_flattened.sol\":19347:23873  library Arrays {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundRegistry_flattened.sol\":19347:23873  library Arrays {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a26cea1ff962fecdef73ddd600e1a80387fa6ee1e2901ebae41deccac9df952464736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a26cea1ff962fecdef73ddd600e1a80387fa6ee1e2901ebae41deccac9df952464736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEA1FF962FECDEF73DDD600E1A8 SUB DUP8 STATICCALL PUSH15 0xE1E2901EBAE41DECCAC9DF95246473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "19347:4526:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a26cea1ff962fecdef73ddd600e1a80387fa6ee1e2901ebae41deccac9df952464736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG2 PUSH13 0xEA1FF962FECDEF73DDD600E1A8 SUB DUP8 STATICCALL PUSH15 0xE1E2901EBAE41DECCAC9DF95246473 PUSH16 0x6C634300081400330000000000000000 ",
							"sourceMap": "19347:4526:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"findUpperBound(uint256[] storage pointer,uint256)": "infinite",
								"unsafeAccess(address[] storage pointer,uint256)": "infinite",
								"unsafeAccess(bytes32[] storage pointer,uint256)": "infinite",
								"unsafeAccess(uint256[] storage pointer,uint256)": "infinite",
								"unsafeMemoryAccess(address[] memory,uint256)": "infinite",
								"unsafeMemoryAccess(uint256[] memory,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 19347,
									"end": 23873,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a26cea1ff962fecdef73ddd600e1a80387fa6ee1e2901ebae41deccac9df952464736f6c63430008140033",
									".code": [
										{
											"begin": 19347,
											"end": 23873,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19347,
											"end": 23873,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/FundRegistry_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to array types.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"Arrays\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"Context\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "See {IERC1155-balanceOf}."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"constructor": {
								"details": "See {_setURI}."
							},
							"isApprovedForAll(address,address)": {
								"details": "See {IERC1155-isApprovedForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "See {IERC1155-safeBatchTransferFrom}."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "See {IERC1155-safeTransferFrom}."
							},
							"setApprovalForAll(address,bool)": {
								"details": "See {IERC1155-setApprovalForAll}."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"uri(uint256)": {
								"details": "See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\{id\\}` substring with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the basic standard multi-token. See https://eips.ethereum.org/EIPS/eip-1155 Originally based on code by Enjin: https://github.com/enjin/erc-1155\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"See {IERC1155-balanceOf}.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"See {IERC1155-balanceOfBatch}. Requirements: - `accounts` and `ids` must have the same length.\"},\"constructor\":{\"details\":\"See {_setURI}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC1155-isApprovedForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"See {IERC1155-safeBatchTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"See {IERC1155-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC1155-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"uri(uint256)\":{\"details\":\"See {IERC1155MetadataURI-uri}. This implementation returns the same URI for *all* token types. It relies on the token type ID substitution mechanism https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP]. Clients calling this function must replace the `\\\\{id\\\\}` substring with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"ERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1802,
								"contract": "contracts/FundRegistry_flattened.sol:ERC1155",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 1808,
								"contract": "contracts/FundRegistry_flattened.sol:ERC1155",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 1810,
								"contract": "contracts/FundRegistry_flattened.sol:ERC1155",
								"label": "_uri",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC1155Holder": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC1155 tokens. IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be stuck.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"ERC1155Holder\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"ERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"ERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2925,
								"contract": "contracts/FundRegistry_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 2931,
								"contract": "contracts/FundRegistry_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 2933,
								"contract": "contracts/FundRegistry_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 2935,
								"contract": "contracts/FundRegistry_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 2937,
								"contract": "contracts/FundRegistry_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"FundRegistry": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "contract ERC1155",
									"name": "_token",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint96",
									"name": "FundId",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "donationAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "FundCompletion",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint96",
									"name": "id",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isEnd",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "FundCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint96",
									"name": "id",
									"type": "uint96"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "isEnd",
									"type": "bool"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"name": "FundUpdated",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_payee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_threshold",
									"type": "uint256"
								}
							],
							"name": "createFund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_user",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "_fundId",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "donate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "fundCount",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "fundDonations",
							"outputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint96",
									"name": "fundId",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "fundUsers",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "",
									"type": "uint96"
								}
							],
							"name": "funds",
							"outputs": [
								{
									"internalType": "uint96",
									"name": "id",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "uint48",
									"name": "createdAt",
									"type": "uint48"
								},
								{
									"internalType": "uint48",
									"name": "updatedAt",
									"type": "uint48"
								},
								{
									"internalType": "address",
									"name": "payee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "threshold",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "donationAmount",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "isEnd",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getAllFunds",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint96",
											"name": "id",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint48",
											"name": "createdAt",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "updatedAt",
											"type": "uint48"
										},
										{
											"internalType": "address",
											"name": "payee",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "threshold",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "donationAmount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isEnd",
											"type": "bool"
										}
									],
									"internalType": "struct FundRegistry.Fund[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_id",
									"type": "uint96"
								}
							],
							"name": "getFundPayee",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_startId",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "_endId",
									"type": "uint96"
								}
							],
							"name": "getFunds",
							"outputs": [
								{
									"components": [
										{
											"internalType": "uint96",
											"name": "id",
											"type": "uint96"
										},
										{
											"internalType": "address",
											"name": "owner",
											"type": "address"
										},
										{
											"internalType": "uint48",
											"name": "createdAt",
											"type": "uint48"
										},
										{
											"internalType": "uint48",
											"name": "updatedAt",
											"type": "uint48"
										},
										{
											"internalType": "address",
											"name": "payee",
											"type": "address"
										},
										{
											"internalType": "uint256",
											"name": "threshold",
											"type": "uint256"
										},
										{
											"internalType": "uint256",
											"name": "donationAmount",
											"type": "uint256"
										},
										{
											"internalType": "bool",
											"name": "isEnd",
											"type": "bool"
										}
									],
									"internalType": "struct FundRegistry.Fund[]",
									"name": "",
									"type": "tuple[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_fundId",
									"type": "uint96"
								},
								{
									"internalType": "uint96",
									"name": "totalTicket",
									"type": "uint96"
								}
							],
							"name": "mintDTiket",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint96",
									"name": "_id",
									"type": "uint96"
								},
								{
									"internalType": "address",
									"name": "_owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_payee",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_threshold",
									"type": "uint256"
								}
							],
							"name": "updateFund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FundRegistry_flattened.sol\":73542:79607  contract FundRegistry is ERC1155Holder {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/FundRegistry_flattened.sol\":73635:73694  constructor(ERC1155 _token) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/FundRegistry_flattened.sol\":73681:73687  _token */\n  dup1\n    /* \"contracts/FundRegistry_flattened.sol\":73673:73678  token */\n  0x00\n  dup1\n    /* \"contracts/FundRegistry_flattened.sol\":73673:73687  token = _token */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/FundRegistry_flattened.sol\":73635:73694  constructor(ERC1155 _token) {... */\n  pop\n    /* \"contracts/FundRegistry_flattened.sol\":73542:79607  contract FundRegistry is ERC1155Holder {... */\n  jump(tag_6)\n    /* \"#utility.yul\":88:205   */\ntag_8:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_10:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_11:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_21\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_10\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:680   */\ntag_12:\n    /* \"#utility.yul\":621:628   */\n  0x00\n    /* \"#utility.yul\":650:674   */\n  tag_23\n    /* \"#utility.yul\":668:673   */\n  dup3\n    /* \"#utility.yul\":650:674   */\n  tag_11\n  jump\t// in\ntag_23:\n    /* \"#utility.yul\":639:674   */\n  swap1\n  pop\n    /* \"#utility.yul\":568:680   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":686:840   */\ntag_13:\n    /* \"#utility.yul\":775:815   */\n  tag_25\n    /* \"#utility.yul\":809:814   */\n  dup2\n    /* \"#utility.yul\":775:815   */\n  tag_12\n  jump\t// in\ntag_25:\n    /* \"#utility.yul\":768:773   */\n  dup2\n    /* \"#utility.yul\":765:816   */\n  eq\n    /* \"#utility.yul\":755:834   */\n  tag_26\n  jumpi\n    /* \"#utility.yul\":830:831   */\n  0x00\n    /* \"#utility.yul\":827:828   */\n  dup1\n    /* \"#utility.yul\":820:832   */\n  revert\n    /* \"#utility.yul\":755:834   */\ntag_26:\n    /* \"#utility.yul\":686:840   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":846:1021   */\ntag_14:\n    /* \"#utility.yul\":919:924   */\n  0x00\n    /* \"#utility.yul\":950:956   */\n  dup2\n    /* \"#utility.yul\":944:957   */\n  mload\n    /* \"#utility.yul\":935:957   */\n  swap1\n  pop\n    /* \"#utility.yul\":966:1015   */\n  tag_28\n    /* \"#utility.yul\":1009:1014   */\n  dup2\n    /* \"#utility.yul\":966:1015   */\n  tag_13\n  jump\t// in\ntag_28:\n    /* \"#utility.yul\":846:1021   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1027:1410   */\ntag_3:\n    /* \"#utility.yul\":1113:1119   */\n  0x00\n    /* \"#utility.yul\":1162:1164   */\n  0x20\n    /* \"#utility.yul\":1150:1159   */\n  dup3\n    /* \"#utility.yul\":1141:1148   */\n  dup5\n    /* \"#utility.yul\":1137:1160   */\n  sub\n    /* \"#utility.yul\":1133:1165   */\n  slt\n    /* \"#utility.yul\":1130:1249   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":1168:1247   */\n  tag_31\n  tag_8\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1130:1249   */\ntag_30:\n    /* \"#utility.yul\":1288:1289   */\n  0x00\n    /* \"#utility.yul\":1313:1393   */\n  tag_32\n    /* \"#utility.yul\":1385:1392   */\n  dup5\n    /* \"#utility.yul\":1376:1382   */\n  dup3\n    /* \"#utility.yul\":1365:1374   */\n  dup6\n    /* \"#utility.yul\":1361:1383   */\n  add\n    /* \"#utility.yul\":1313:1393   */\n  tag_14\n  jump\t// in\ntag_32:\n    /* \"#utility.yul\":1303:1393   */\n  swap2\n  pop\n    /* \"#utility.yul\":1259:1403   */\n  pop\n    /* \"#utility.yul\":1027:1410   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/FundRegistry_flattened.sol\":73542:79607  contract FundRegistry is ERC1155Holder {... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundRegistry_flattened.sol\":73542:79607  contract FundRegistry is ERC1155Holder {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3f936ff5\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x88b53ced\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x88b53ced\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xbc197c81\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd7d7929\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xf23a6e61\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x3f936ff5\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x6c173d38\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x7a3819cb\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x1c69b464\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x1c69b464\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x1f71f89f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2f14670c\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x380eaaf9\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x11c9fb83\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x17444626\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/FundRegistry_flattened.sol\":28820:29041  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":77460:78263  function mintDTiket(uint96 _fundId, uint96 totalTicket) public {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      tag_29\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/FundRegistry_flattened.sol\":75007:75525  function createFund(... */\n    tag_5:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      tag_33\n      jump\t// in\n    tag_30:\n      stop\n        /* \"contracts/FundRegistry_flattened.sol\":78891:78997  function getAllFunds() external view returns (Fund[] memory){... */\n    tag_6:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":74237:74273  mapping(uint96 => Fund) public funds */\n    tag_7:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap9\n      swap8\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":74279:74324  mapping(uint96 => address[]) public fundUsers */\n    tag_8:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":79003:79429  function getFunds(uint96 _startId, uint96 _endId) public view returns (Fund[] memory){... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":73606:73629  uint96 public fundCount */\n    tag_10:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":79439:79603  function getFundPayee(uint96 _id) public view returns (address){... */\n    tag_11:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_59:\n      tag_60\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_61\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":74330:74400  mapping(uint96 => mapping(address => Donation[])) public fundDonations */\n    tag_12:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":76511:76733  function donate(... */\n    tag_13:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_70\n      jump\t// in\n    tag_69:\n      tag_71\n      jump\t// in\n    tag_68:\n      stop\n        /* \"contracts/FundRegistry_flattened.sol\":29272:29519  function onERC1155BatchReceived(... */\n    tag_14:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":78269:78881  function updateFund(... */\n    tag_15:\n      tag_78\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n    tag_78:\n      stop\n        /* \"contracts/FundRegistry_flattened.sol\":29047:29266  function onERC1155Received(... */\n    tag_16:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_77\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/FundRegistry_flattened.sol\":28820:29041  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n    tag_23:\n        /* \"contracts/FundRegistry_flattened.sol\":28922:28926  bool */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":28960:28994  type(IERC1155Receiver).interfaceId */\n      0x4e2312e000000000000000000000000000000000000000000000000000000000\n        /* \"contracts/FundRegistry_flattened.sol\":28945:28994  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":28945:28956  interfaceId */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":28945:28994  interfaceId == type(IERC1155Receiver).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/FundRegistry_flattened.sol\":28945:29034  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":28998:29034  super.supportsInterface(interfaceId) */\n      tag_89\n        /* \"contracts/FundRegistry_flattened.sol\":29022:29033  interfaceId */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":28998:29021  super.supportsInterface */\n      tag_90\n        /* \"contracts/FundRegistry_flattened.sol\":28998:29034  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_89:\n        /* \"contracts/FundRegistry_flattened.sol\":28945:29034  interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n    tag_88:\n        /* \"contracts/FundRegistry_flattened.sol\":28938:29034  return interfaceId == type(IERC1155Receiver).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":28820:29041  function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":77460:78263  function mintDTiket(uint96 _fundId, uint96 totalTicket) public {... */\n    tag_29:\n        /* \"contracts/FundRegistry_flattened.sol\":77533:77555  uint256 donationAmount */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77558:77563  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":77558:77572  funds[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77564:77571  _fundId */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":77558:77572  funds[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77558:77587  funds[_fundId].donationAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":77533:77587  uint256 donationAmount = funds[_fundId].donationAmount */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77597:77627  address[] memory userAddresses */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77630:77639  fundUsers */\n      0x02\n        /* \"contracts/FundRegistry_flattened.sol\":77630:77648  fundUsers[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77640:77647  _fundId */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":77630:77648  fundUsers[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77597:77648  address[] memory userAddresses = fundUsers[_fundId] */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_92\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_93:\n      dup2\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_93\n      jumpi\n    tag_92:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77726:77743  uint256 userTotal */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77758:77766  uint96 j */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":77769:77770  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77758:77770  uint96 j = 0 */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77753:78257  for (uint96 j = 0; j < userAddresses.length; j++){ //각 유저에게 전송... */\n    tag_94:\n        /* \"contracts/FundRegistry_flattened.sol\":77776:77789  userAddresses */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":77776:77796  userAddresses.length */\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":77772:77773  j */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":77772:77796  j < userAddresses.length */\n      0xffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/FundRegistry_flattened.sol\":77753:78257  for (uint96 j = 0; j < userAddresses.length; j++){ //각 유저에게 전송... */\n      iszero\n      tag_95\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":77857:77858  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77846:77858  userTotal= 0 */\n      swap2\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77881:77889  uint96 k */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77876:78060  for (uint96 k = 0; k < fundDonations[_fundId][userAddresses[j]].length; k++){... */\n    tag_97:\n        /* \"contracts/FundRegistry_flattened.sol\":77899:77912  fundDonations */\n      0x03\n        /* \"contracts/FundRegistry_flattened.sol\":77899:77921  fundDonations[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77913:77920  _fundId */\n      dup9\n        /* \"contracts/FundRegistry_flattened.sol\":77899:77921  fundDonations[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77899:77939  fundDonations[_fundId][userAddresses[j]] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77922:77935  userAddresses */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":77936:77937  j */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":77922:77938  userAddresses[j] */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_100\n      jumpi\n      tag_101\n      tag_102\n      jump\t// in\n    tag_101:\n    tag_100:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":77899:77939  fundDonations[_fundId][userAddresses[j]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77899:77946  fundDonations[_fundId][userAddresses[j]].length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77895:77896  k */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":77895:77946  k < fundDonations[_fundId][userAddresses[j]].length */\n      0xffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/FundRegistry_flattened.sol\":77876:78060  for (uint96 k = 0; k < fundDonations[_fundId][userAddresses[j]].length; k++){... */\n      iszero\n      tag_98\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78004  fundDonations */\n      0x03\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78013  fundDonations[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":78005:78012  _fundId */\n      dup9\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78013  fundDonations[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78031  fundDonations[_fundId][userAddresses[j]] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":78014:78027  userAddresses */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":78028:78029  j */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":78014:78030  userAddresses[j] */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_103\n      jumpi\n      tag_104\n      tag_102\n      jump\t// in\n    tag_104:\n    tag_103:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78031  fundDonations[_fundId][userAddresses[j]] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":78032:78033  k */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78034  fundDonations[_fundId][userAddresses[j]][k] */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_105\n      jumpi\n      tag_106\n      tag_102\n      jump\t// in\n    tag_106:\n    tag_105:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":77991:78041  fundDonations[_fundId][userAddresses[j]][k].amount */\n      0x01\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":77978:78041  userTotal += fundDonations[_fundId][userAddresses[j]][k].amount */\n      dup4\n      tag_108\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_108:\n      swap3\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77948:77951  k++ */\n      dup1\n      dup1\n      tag_110\n      swap1\n      tag_111\n      jump\t// in\n    tag_110:\n      swap2\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77876:78060  for (uint96 k = 0; k < fundDonations[_fundId][userAddresses[j]].length; k++){... */\n      jump(tag_97)\n    tag_98:\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":78077:78082  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":78077:78099  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/FundRegistry_flattened.sol\":78108:78112  this */\n      address\n        /* \"contracts/FundRegistry_flattened.sol\":78115:78128  userAddresses */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":78129:78130  j */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":78115:78131  userAddresses[j] */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_112\n      jumpi\n      tag_113\n      tag_102\n      jump\t// in\n    tag_113:\n    tag_112:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78133:78140  _fundId */\n      dup10\n        /* \"contracts/FundRegistry_flattened.sol\":78170:78184  donationAmount */\n      dup9\n        /* \"contracts/FundRegistry_flattened.sol\":78155:78166  totalTicket */\n      dup11\n        /* \"contracts/FundRegistry_flattened.sol\":78143:78166  userTotal * totalTicket */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":78143:78152  userTotal */\n      dup9\n        /* \"contracts/FundRegistry_flattened.sol\":78143:78166  userTotal * totalTicket */\n      tag_114\n      swap2\n      swap1\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"contracts/FundRegistry_flattened.sol\":78142:78184  (userTotal * totalTicket) / donationAmount */\n      tag_116\n      swap2\n      swap1\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"contracts/FundRegistry_flattened.sol\":78077:78193  token.safeTransferFrom(address(this), userAddresses[j], _fundId, (userTotal * totalTicket) / donationAmount, \"0x0\" ) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_118\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77798:77801  j++ */\n      dup1\n      dup1\n      tag_123\n      swap1\n      tag_111\n      jump\t// in\n    tag_123:\n      swap2\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77753:78257  for (uint96 j = 0; j < userAddresses.length; j++){ //각 유저에게 전송... */\n      jump(tag_94)\n    tag_95:\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77523:78263  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77460:78263  function mintDTiket(uint96 _fundId, uint96 totalTicket) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":75007:75525  function createFund(... */\n    tag_33:\n        /* \"contracts/FundRegistry_flattened.sol\":75129:75139  uint96 _id */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75142:75151  fundCount */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":75129:75151  uint96 _id = fundCount */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":75192:75195  _id */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75210:75216  _owner */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75238:75253  block.timestamp */\n      timestamp\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75276:75291  block.timestamp */\n      timestamp\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75307:75313  _payee */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75327:75337  _threshold */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75351:75352  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75366:75371  false */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75174:75381  Fund(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75161:75166  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":75161:75171  funds[_id] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75167:75170  _id */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":75161:75171  funds[_id] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":75161:75381  funds[_id] = Fund(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x06)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75459:75460  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75447:75457  _threshold */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":75426:75429  _id */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":75414:75485  FundCreated(_id, _owner, _payee, _threshold, 0, false, block.timestamp) */\n      0xffffffffffffffffffffffff\n      and\n      0x1e216cc18d3e93f7c7b9a7b3a038093bc655d3d5cbfbb504d67d4376bd02d13f\n        /* \"contracts/FundRegistry_flattened.sol\":75431:75437  _owner */\n      dup8\n        /* \"contracts/FundRegistry_flattened.sol\":75439:75445  _payee */\n      dup8\n        /* \"contracts/FundRegistry_flattened.sol\":75462:75467  false */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75469:75484  block.timestamp */\n      timestamp\n        /* \"contracts/FundRegistry_flattened.sol\":75414:75485  FundCreated(_id, _owner, _payee, _threshold, 0, false, block.timestamp) */\n      mload(0x40)\n      tag_125\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/FundRegistry_flattened.sol\":75517:75518  1 */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":75504:75513  fundCount */\n      0x00\n      0x14\n        /* \"contracts/FundRegistry_flattened.sol\":75504:75518  fundCount += 1 */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      tag_127\n      swap2\n      swap1\n      tag_128\n      jump\t// in\n    tag_127:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75119:75525  {... */\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75007:75525  function createFund(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":78891:78997  function getAllFunds() external view returns (Fund[] memory){... */\n    tag_35:\n        /* \"contracts/FundRegistry_flattened.sol\":78937:78950  Fund[] memory */\n      0x60\n        /* \"contracts/FundRegistry_flattened.sol\":78968:78990  getFunds(0, fundCount) */\n      tag_130\n        /* \"contracts/FundRegistry_flattened.sol\":78977:78978  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":78980:78989  fundCount */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":78968:78976  getFunds */\n      tag_52\n        /* \"contracts/FundRegistry_flattened.sol\":78968:78990  getFunds(0, fundCount) */\n      jump\t// in\n    tag_130:\n        /* \"contracts/FundRegistry_flattened.sol\":78961:78990  return getFunds(0, fundCount) */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":78891:78997  function getAllFunds() external view returns (Fund[] memory){... */\n      swap1\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":74237:74273  mapping(uint96 => Fund) public funds */\n    tag_41:\n      mstore(0x20, 0x01)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x06\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      swap1\n      pop\n      dup9\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":74279:74324  mapping(uint96 => address[]) public fundUsers */\n    tag_47:\n      mstore(0x20, 0x02)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":79003:79429  function getFunds(uint96 _startId, uint96 _endId) public view returns (Fund[] memory){... */\n    tag_52:\n        /* \"contracts/FundRegistry_flattened.sol\":79074:79087  Fund[] memory */\n      0x60\n        /* \"contracts/FundRegistry_flattened.sol\":79116:79125  fundCount */\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79106:79125  _endId <= fundCount */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79106:79112  _endId */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":79106:79125  _endId <= fundCount */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/FundRegistry_flattened.sol\":79098:79157  require(_endId <= fundCount, \"Must be _endId <= fundCount\") */\n      tag_134\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_135\n      swap1\n      tag_136\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_134:\n        /* \"contracts/FundRegistry_flattened.sol\":79187:79193  _endId */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":79175:79193  _startId <= _endId */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79175:79183  _startId */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":79175:79193  _startId <= _endId */\n      0xffffffffffffffffffffffff\n      and\n      gt\n      iszero\n        /* \"contracts/FundRegistry_flattened.sol\":79167:79224  require(_startId <= _endId, \"Must be _startId <= _endId\") */\n      tag_137\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_138\n      swap1\n      tag_139\n      jump\t// in\n    tag_138:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_137:\n        /* \"contracts/FundRegistry_flattened.sol\":79234:79256  Fund[] memory fundList */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":79279:79287  _startId */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":79270:79276  _endId */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":79270:79287  _endId - _startId */\n      tag_140\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"contracts/FundRegistry_flattened.sol\":79259:79288  new Fund[](_endId - _startId) */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_142\n      jumpi\n      tag_143\n      tag_144\n      jump\t// in\n    tag_143:\n    tag_142:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_145\n      jumpi\n      dup2\n      0x20\n      add\n    tag_146:\n      tag_147\n      tag_148\n      jump\t// in\n    tag_147:\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      swap1\n      sub\n      swap1\n      dup2\n      tag_146\n      jumpi\n      swap1\n      pop\n    tag_145:\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79234:79288  Fund[] memory fundList = new Fund[](_endId - _startId) */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79303:79311  uint96 i */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":79314:79322  _startId */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":79303:79322  uint96 i = _startId */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79298:79398  for (uint96 i = _startId; i < _endId; i++){... */\n    tag_149:\n        /* \"contracts/FundRegistry_flattened.sol\":79328:79334  _endId */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":79324:79334  i < _endId */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79324:79325  i */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":79324:79334  i < _endId */\n      0xffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/FundRegistry_flattened.sol\":79298:79398  for (uint96 i = _startId; i < _endId; i++){... */\n      iszero\n      tag_150\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":79379:79384  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":79379:79387  funds[i] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":79385:79386  i */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":79379:79387  funds[i] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":79354:79387  fundList[i - _startId] = funds[i] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x06\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79354:79362  fundList */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":79367:79375  _startId */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":79363:79364  i */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":79363:79375  i - _startId */\n      tag_152\n      swap2\n      swap1\n      tag_141\n      jump\t// in\n    tag_152:\n        /* \"contracts/FundRegistry_flattened.sol\":79354:79376  fundList[i - _startId] */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mload\n      dup2\n      lt\n      tag_153\n      jumpi\n      tag_154\n      tag_102\n      jump\t// in\n    tag_154:\n    tag_153:\n      0x20\n      mul\n      0x20\n      add\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":79354:79387  fundList[i - _startId] = funds[i] */\n      dup2\n      swap1\n      mstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79336:79339  i++ */\n      dup1\n      dup1\n      tag_155\n      swap1\n      tag_111\n      jump\t// in\n    tag_155:\n      swap2\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79298:79398  for (uint96 i = _startId; i < _endId; i++){... */\n      jump(tag_149)\n    tag_150:\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79414:79422  fundList */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":79407:79422  return fundList */\n      swap2\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79003:79429  function getFunds(uint96 _startId, uint96 _endId) public view returns (Fund[] memory){... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":73606:73629  uint96 public fundCount */\n    tag_55:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":79439:79603  function getFundPayee(uint96 _id) public view returns (address){... */\n    tag_60:\n        /* \"contracts/FundRegistry_flattened.sol\":79494:79501  address */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":79526:79535  fundCount */\n      dup1\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79520:79535  _id < fundCount */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79520:79523  _id */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":79520:79535  _id < fundCount */\n      0xffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/FundRegistry_flattened.sol\":79512:79563  require(_id < fundCount, \"Must be _id < fundCount\") */\n      tag_157\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_158\n      swap1\n      tag_159\n      jump\t// in\n    tag_158:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_157:\n        /* \"contracts/FundRegistry_flattened.sol\":79580:79585  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":79580:79590  funds[_id] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":79586:79589  _id */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":79580:79590  funds[_id] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":79580:79596  funds[_id].payee */\n      0x01\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":79573:79596  return funds[_id].payee */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":79439:79603  function getFundPayee(uint96 _id) public view returns (address){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":74330:74400  mapping(uint96 => mapping(address => Donation[])) public fundDonations */\n    tag_65:\n      mstore(0x20, 0x03)\n      dup3\n      0x00\n      mstore\n      mstore(0x20, keccak256(0x00, 0x40))\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_160\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_160:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap3\n      pop\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x00\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":76511:76733  function donate(... */\n    tag_71:\n        /* \"contracts/FundRegistry_flattened.sol\":76655:76694  createDonation(_user, _fundId, _amount) */\n      tag_163\n        /* \"contracts/FundRegistry_flattened.sol\":76670:76675  _user */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":76677:76684  _fundId */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":76686:76693  _amount */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":76655:76669  createDonation */\n      tag_164\n        /* \"contracts/FundRegistry_flattened.sol\":76655:76694  createDonation(_user, _fundId, _amount) */\n      jump\t// in\n    tag_163:\n        /* \"contracts/FundRegistry_flattened.sol\":76704:76726  validateFunds(_fundId) */\n      tag_165\n        /* \"contracts/FundRegistry_flattened.sol\":76718:76725  _fundId */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":76704:76717  validateFunds */\n      tag_166\n        /* \"contracts/FundRegistry_flattened.sol\":76704:76726  validateFunds(_fundId) */\n      jump\t// in\n    tag_165:\n        /* \"contracts/FundRegistry_flattened.sol\":76511:76733  function donate(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":29272:29519  function onERC1155BatchReceived(... */\n    tag_75:\n        /* \"contracts/FundRegistry_flattened.sol\":29451:29457  bytes4 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":29476:29512  this.onERC1155BatchReceived.selector */\n      shl(0xe0, 0xbc197c81)\n        /* \"contracts/FundRegistry_flattened.sol\":29469:29512  return this.onERC1155BatchReceived.selector */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":29272:29519  function onERC1155BatchReceived(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":78269:78881  function updateFund(... */\n    tag_81:\n        /* \"contracts/FundRegistry_flattened.sol\":78410:78427  Fund memory _fund */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":78430:78435  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":78430:78440  funds[_id] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":78436:78439  _id */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":78430:78440  funds[_id] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":78410:78440  Fund memory _fund = funds[_id] */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup3\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x06\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x0c\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x04\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":78472:78477  _fund */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":78472:78483  _fund.owner */\n      0x20\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78458:78483  msg.sender == _fund.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":78458:78468  msg.sender */\n      caller\n        /* \"contracts/FundRegistry_flattened.sol\":78458:78483  msg.sender == _fund.owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/FundRegistry_flattened.sol\":78450:78514  require(msg.sender == _fund.owner, \"Fund Update not authorized\") */\n      tag_169\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_170\n      swap1\n      tag_171\n      jump\t// in\n    tag_170:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_169:\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":78555:78558  _id */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78573:78579  _owner */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78594:78599  _fund */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":78594:78609  _fund.createdAt */\n      0x40\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78631:78646  block.timestamp */\n      timestamp\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      0xffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78662:78668  _payee */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78683:78693  _threshold */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78708:78713  _fund */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":78708:78728  _fund.donationAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":78742:78747  _fund */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":78742:78753  _fund.isEnd */\n      0xe0\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78537:78763  Fund(... */\n      iszero\n      iszero\n      dup2\n      mstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":78524:78529  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":78524:78534  funds[_id] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":78530:78533  _id */\n      dup8\n        /* \"contracts/FundRegistry_flattened.sol\":78524:78534  funds[_id] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":78524:78763  funds[_id] = Fund(... */\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x06)\n      dup2\n      sload\n      dup2\n      0xffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      exp(0x0100, 0x0c)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0xc0\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0xe0\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n      swap1\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":78823:78828  _fund */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":78823:78843  _fund.donationAmount */\n      0xc0\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78811:78821  _threshold */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":78790:78793  _id */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":78778:78874  FundUpdated(_id, _owner, _payee, _threshold, _fund.donationAmount, _fund.isEnd, block.timestamp) */\n      0xffffffffffffffffffffffff\n      and\n      0x603e97a48f8cadd1e9020bf96470c32853c5d9d8ed30f7cbe961f12ad2a45fa0\n        /* \"contracts/FundRegistry_flattened.sol\":78795:78801  _owner */\n      dup8\n        /* \"contracts/FundRegistry_flattened.sol\":78803:78809  _payee */\n      dup8\n        /* \"contracts/FundRegistry_flattened.sol\":78845:78850  _fund */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":78845:78856  _fund.isEnd */\n      0xe0\n      add\n      mload\n        /* \"contracts/FundRegistry_flattened.sol\":78858:78873  block.timestamp */\n      timestamp\n        /* \"contracts/FundRegistry_flattened.sol\":78778:78874  FundUpdated(_id, _owner, _payee, _threshold, _fund.donationAmount, _fund.isEnd, block.timestamp) */\n      mload(0x40)\n      tag_172\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_126\n      jump\t// in\n    tag_172:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/FundRegistry_flattened.sol\":78400:78881  {... */\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":78269:78881  function updateFund(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":29047:29266  function onERC1155Received(... */\n    tag_85:\n        /* \"contracts/FundRegistry_flattened.sol\":29203:29209  bytes4 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":29228:29259  this.onERC1155Received.selector */\n      shl(0xe0, 0xf23a6e61)\n        /* \"contracts/FundRegistry_flattened.sol\":29221:29259  return this.onERC1155Received.selector */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":29047:29266  function onERC1155Received(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":25537:25683  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n    tag_90:\n        /* \"contracts/FundRegistry_flattened.sol\":25613:25617  bool */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":25651:25676  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"contracts/FundRegistry_flattened.sol\":25636:25676  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":25636:25647  interfaceId */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":25636:25676  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"contracts/FundRegistry_flattened.sol\":25629:25676  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":25537:25683  function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":75531:76505  function createDonation(... */\n    tag_164:\n        /* \"contracts/FundRegistry_flattened.sol\":75688:75695  _amount */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":75660:75665  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":75660:75675  token.balanceOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfdd58e\n        /* \"contracts/FundRegistry_flattened.sol\":75676:75681  _user */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":75683:75684  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75660:75685  token.balanceOf(_user, 0) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap3\n      swap2\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_179\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_179:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_180\n      swap2\n      swap1\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"contracts/FundRegistry_flattened.sol\":75660:75695  token.balanceOf(_user, 0) > _amount */\n      gt\n        /* \"contracts/FundRegistry_flattened.sol\":75652:75736  require(token.balanceOf(_user, 0) > _amount, \"token amount of user not sufficient\" ) */\n      tag_182\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_183\n      swap1\n      tag_184\n      jump\t// in\n    tag_183:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_182:\n        /* \"contracts/FundRegistry_flattened.sol\":75754:75759  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":75754:75776  token.isApprovedForAll */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xe985e9c5\n        /* \"contracts/FundRegistry_flattened.sol\":75777:75782  _user */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":75792:75796  this */\n      address\n        /* \"contracts/FundRegistry_flattened.sol\":75754:75799  token.isApprovedForAll(_user, address(this) ) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_185\n      swap3\n      swap2\n      swap1\n      tag_186\n      jump\t// in\n    tag_185:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_188\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_188:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_189\n      swap2\n      swap1\n      tag_190\n      jump\t// in\n    tag_189:\n        /* \"contracts/FundRegistry_flattened.sol\":75746:75828  require(token.isApprovedForAll(_user, address(this) ), \"token allowance shortage\") */\n      tag_191\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_191:\n        /* \"contracts/FundRegistry_flattened.sol\":75838:75843  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":75838:75860  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/FundRegistry_flattened.sol\":75861:75866  _user */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":75876:75880  this */\n      address\n        /* \"contracts/FundRegistry_flattened.sol\":75883:75884  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75886:75893  _amount */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":75838:75901  token.safeTransferFrom(_user, address(this), 0, _amount, \"0x0\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_194\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_194:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_196\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_196:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_198\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_198:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75921:75948  Donation memory newDonation */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":75951:76030  Donation(... */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":75973:75978  _user */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":75951:76030  Donation(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":75992:75999  _fundId */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":75951:76030  Donation(... */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":76013:76020  _amount */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":75951:76030  Donation(... */\n      dup2\n      mstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75921:76030  Donation memory newDonation = Donation(... */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76040:76053  fundDonations */\n      0x03\n        /* \"contracts/FundRegistry_flattened.sol\":76040:76062  fundDonations[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76054:76061  _fundId */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":76040:76062  fundDonations[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76040:76069  fundDonations[_fundId][_user] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76063:76068  _user */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":76040:76069  fundDonations[_fundId][_user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76075:76086  newDonation */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":76040:76087  fundDonations[_fundId][_user].push(newDonation) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x02\n      mul\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x00\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x20\n      dup3\n      add\n      mload\n      dup2\n      0x00\n      add\n      exp(0x0100, 0x14)\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x01\n      add\n      sstore\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76161:76168  _amount */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":76129:76134  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":76129:76143  funds[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76135:76142  _fundId */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":76129:76143  funds[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76129:76158  funds[_fundId].donationAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":76129:76168  funds[_fundId].donationAmount + _amount */\n      tag_200\n      swap2\n      swap1\n      tag_109\n      jump\t// in\n    tag_200:\n        /* \"contracts/FundRegistry_flattened.sol\":76097:76102  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":76097:76111  funds[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76103:76110  _fundId */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":76097:76111  funds[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76097:76126  funds[_fundId].donationAmount */\n      0x03\n      add\n        /* \"contracts/FundRegistry_flattened.sol\":76097:76168  funds[_fundId].donationAmount = funds[_fundId].donationAmount + _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76179:76207  address[] storage _fundUsers */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76210:76219  fundUsers */\n      0x02\n        /* \"contracts/FundRegistry_flattened.sol\":76210:76228  fundUsers[_fundId] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76220:76227  _fundId */\n      dup6\n        /* \"contracts/FundRegistry_flattened.sol\":76210:76228  fundUsers[_fundId] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76179:76228  address[] storage _fundUsers = fundUsers[_fundId] */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76239:76249  bool isAdd */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76252:76256  true */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":76239:76256  bool isAdd = true */\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76271:76279  uint96 i */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76266:76432  for (uint96 i = 0; i < _fundUsers.length; i++){... */\n    tag_201:\n        /* \"contracts/FundRegistry_flattened.sol\":76289:76299  _fundUsers */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":76289:76306  _fundUsers.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76285:76286  i */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":76285:76306  i < _fundUsers.length */\n      0xffffffffffffffffffffffff\n      and\n      lt\n        /* \"contracts/FundRegistry_flattened.sol\":76266:76432  for (uint96 i = 0; i < _fundUsers.length; i++){... */\n      iszero\n      tag_202\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":76347:76352  _user */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":76330:76352  _fundUsers[i] == _user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":76330:76340  _fundUsers */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":76341:76342  i */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":76330:76343  _fundUsers[i] */\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      sload\n      dup2\n      lt\n      tag_204\n      jumpi\n      tag_205\n      tag_102\n      jump\t// in\n    tag_205:\n    tag_204:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":76330:76352  _fundUsers[i] == _user */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/FundRegistry_flattened.sol\":76326:76422  if (_fundUsers[i] == _user){... */\n      tag_207\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":76379:76384  false */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76371:76384  isAdd = false */\n      swap2\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76402:76407  break */\n      jump(tag_202)\n        /* \"contracts/FundRegistry_flattened.sol\":76326:76422  if (_fundUsers[i] == _user){... */\n    tag_207:\n        /* \"contracts/FundRegistry_flattened.sol\":76308:76311  i++ */\n      dup1\n      dup1\n      tag_208\n      swap1\n      tag_111\n      jump\t// in\n    tag_208:\n      swap2\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76266:76432  for (uint96 i = 0; i < _fundUsers.length; i++){... */\n      jump(tag_201)\n    tag_202:\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76445:76450  isAdd */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":76441:76498  if (isAdd){... */\n      iszero\n      tag_209\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":76465:76475  _fundUsers */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":76481:76486  _user */\n      dup7\n        /* \"contracts/FundRegistry_flattened.sol\":76465:76487  _fundUsers.push(_user) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":76441:76498  if (isAdd){... */\n    tag_209:\n        /* \"contracts/FundRegistry_flattened.sol\":75641:76505  {... */\n      pop\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":75531:76505  function createDonation(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/FundRegistry_flattened.sol\":76739:77454  function validateFunds(uint96 _fundIdx) private {        ... */\n    tag_166:\n        /* \"contracts/FundRegistry_flattened.sol\":76836:76841  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":76836:76851  funds[_fundIdx] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76842:76850  _fundIdx */\n      dup3\n        /* \"contracts/FundRegistry_flattened.sol\":76836:76851  funds[_fundIdx] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76836:76866  funds[_fundIdx].donationAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":76808:76813  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":76808:76823  funds[_fundIdx] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76814:76822  _fundIdx */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":76808:76823  funds[_fundIdx] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76808:76833  funds[_fundIdx].threshold */\n      0x02\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":76808:76866  funds[_fundIdx].threshold < funds[_fundIdx].donationAmount */\n      lt\n        /* \"contracts/FundRegistry_flattened.sol\":76805:77437  if(funds[_fundIdx].threshold < funds[_fundIdx].donationAmount) { //임계량을 넘었는지 체크한다.... */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/FundRegistry_flattened.sol\":76924:76929  token */\n      0x00\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/FundRegistry_flattened.sol\":76924:76946  token.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf242432a\n        /* \"contracts/FundRegistry_flattened.sol\":76955:76959  this */\n      address\n        /* \"contracts/FundRegistry_flattened.sol\":76962:76984  getFundPayee(_fundIdx) */\n      tag_213\n        /* \"contracts/FundRegistry_flattened.sol\":76975:76983  _fundIdx */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":76962:76974  getFundPayee */\n      tag_60\n        /* \"contracts/FundRegistry_flattened.sol\":76962:76984  getFundPayee(_fundIdx) */\n      jump\t// in\n    tag_213:\n        /* \"contracts/FundRegistry_flattened.sol\":76986:76987  0 */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76989:76994  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":76989:77004  funds[_fundIdx] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":76995:77003  _fundIdx */\n      dup8\n        /* \"contracts/FundRegistry_flattened.sol\":76989:77004  funds[_fundIdx] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":76989:77019  funds[_fundIdx].donationAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":76924:77027  token.safeTransferFrom(address(this), getFundPayee(_fundIdx), 0, funds[_fundIdx].donationAmount, \"0x0\") */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_195\n      jump\t// in\n    tag_214:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_215\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_215:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_217:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77101:77109  _fundIdx */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":77069:77204  FundCompletion(... */\n      0xffffffffffffffffffffffff\n      and\n      0xcd79837f8e8f598de24ef07ea60108df97918f95cfc31d1d61ff9fa09c240352\n        /* \"contracts/FundRegistry_flattened.sol\":77127:77132  funds */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":77127:77142  funds[_fundIdx] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77133:77141  _fundIdx */\n      dup5\n        /* \"contracts/FundRegistry_flattened.sol\":77127:77142  funds[_fundIdx] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77127:77157  funds[_fundIdx].donationAmount */\n      0x03\n      add\n      sload\n        /* \"contracts/FundRegistry_flattened.sol\":77175:77190  block.timestamp */\n      timestamp\n        /* \"contracts/FundRegistry_flattened.sol\":77069:77204  FundCompletion(... */\n      mload(0x40)\n      tag_218\n      swap3\n      swap2\n      swap1\n      tag_219\n      jump\t// in\n    tag_218:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/FundRegistry_flattened.sol\":77242:77246  true */\n      0x01\n        /* \"contracts/FundRegistry_flattened.sol\":77218:77223  funds */\n      dup1\n        /* \"contracts/FundRegistry_flattened.sol\":77218:77233  funds[_fundIdx] */\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77224:77232  _fundIdx */\n      dup4\n        /* \"contracts/FundRegistry_flattened.sol\":77218:77233  funds[_fundIdx] */\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/FundRegistry_flattened.sol\":77218:77239  funds[_fundIdx].isEnd */\n      0x04\n      add\n      0x00\n        /* \"contracts/FundRegistry_flattened.sol\":77218:77246  funds[_fundIdx].isEnd = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/FundRegistry_flattened.sol\":77305:77331  mintDTiket(_fundIdx, 1000) */\n      tag_220\n        /* \"contracts/FundRegistry_flattened.sol\":77316:77324  _fundIdx */\n      dup2\n        /* \"contracts/FundRegistry_flattened.sol\":77326:77330  1000 */\n      0x03e8\n        /* \"contracts/FundRegistry_flattened.sol\":77305:77315  mintDTiket */\n      tag_29\n        /* \"contracts/FundRegistry_flattened.sol\":77305:77331  mintDTiket(_fundIdx, 1000) */\n      jump\t// in\n    tag_220:\n        /* \"contracts/FundRegistry_flattened.sol\":76805:77437  if(funds[_fundIdx].threshold < funds[_fundIdx].donationAmount) { //임계량을 넘었는지 체크한다.... */\n    tag_212:\n        /* \"contracts/FundRegistry_flattened.sol\":76739:77454  function validateFunds(uint96 _fundIdx) private {        ... */\n      pop\n      jump\t// out\n    tag_148:\n      mload(0x40)\n      dup1\n      0x0100\n      add\n      0x40\n      mstore\n      dup1\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      iszero(iszero(0x00))\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_221:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_222:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_223:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      dup1\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_224:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_225:\n        /* \"#utility.yul\":561:584   */\n      tag_303\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_224\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_304\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_304:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_226:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_306\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_225\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_308\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_309\n      tag_222\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":833:952   */\n    tag_308:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_310\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_226\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_227:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_228:\n        /* \"#utility.yul\":1268:1289   */\n      tag_313\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_227\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_315\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_228\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1627   */\n    tag_229:\n        /* \"#utility.yul\":1554:1561   */\n      0x00\n        /* \"#utility.yul\":1594:1620   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":1587:1592   */\n      dup3\n        /* \"#utility.yul\":1583:1621   */\n      and\n        /* \"#utility.yul\":1572:1621   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1627   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1633:1753   */\n    tag_230:\n        /* \"#utility.yul\":1705:1728   */\n      tag_318\n        /* \"#utility.yul\":1722:1727   */\n      dup2\n        /* \"#utility.yul\":1705:1728   */\n      tag_229\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1698:1703   */\n      dup2\n        /* \"#utility.yul\":1695:1729   */\n      eq\n        /* \"#utility.yul\":1685:1747   */\n      tag_319\n      jumpi\n        /* \"#utility.yul\":1743:1744   */\n      0x00\n        /* \"#utility.yul\":1740:1741   */\n      dup1\n        /* \"#utility.yul\":1733:1745   */\n      revert\n        /* \"#utility.yul\":1685:1747   */\n    tag_319:\n        /* \"#utility.yul\":1633:1753   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1759:1896   */\n    tag_231:\n        /* \"#utility.yul\":1804:1809   */\n      0x00\n        /* \"#utility.yul\":1842:1848   */\n      dup2\n        /* \"#utility.yul\":1829:1849   */\n      calldataload\n        /* \"#utility.yul\":1820:1849   */\n      swap1\n      pop\n        /* \"#utility.yul\":1858:1890   */\n      tag_321\n        /* \"#utility.yul\":1884:1889   */\n      dup2\n        /* \"#utility.yul\":1858:1890   */\n      tag_230\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":1759:1896   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1902:2372   */\n    tag_28:\n        /* \"#utility.yul\":1968:1974   */\n      0x00\n        /* \"#utility.yul\":1976:1982   */\n      dup1\n        /* \"#utility.yul\":2025:2027   */\n      0x40\n        /* \"#utility.yul\":2013:2022   */\n      dup4\n        /* \"#utility.yul\":2004:2011   */\n      dup6\n        /* \"#utility.yul\":2000:2023   */\n      sub\n        /* \"#utility.yul\":1996:2028   */\n      slt\n        /* \"#utility.yul\":1993:2112   */\n      iszero\n      tag_323\n      jumpi\n        /* \"#utility.yul\":2031:2110   */\n      tag_324\n      tag_222\n      jump\t// in\n    tag_324:\n        /* \"#utility.yul\":1993:2112   */\n    tag_323:\n        /* \"#utility.yul\":2151:2152   */\n      0x00\n        /* \"#utility.yul\":2176:2228   */\n      tag_325\n        /* \"#utility.yul\":2220:2227   */\n      dup6\n        /* \"#utility.yul\":2211:2217   */\n      dup3\n        /* \"#utility.yul\":2200:2209   */\n      dup7\n        /* \"#utility.yul\":2196:2218   */\n      add\n        /* \"#utility.yul\":2176:2228   */\n      tag_231\n      jump\t// in\n    tag_325:\n        /* \"#utility.yul\":2166:2228   */\n      swap3\n      pop\n        /* \"#utility.yul\":2122:2238   */\n      pop\n        /* \"#utility.yul\":2277:2279   */\n      0x20\n        /* \"#utility.yul\":2303:2355   */\n      tag_326\n        /* \"#utility.yul\":2347:2354   */\n      dup6\n        /* \"#utility.yul\":2338:2344   */\n      dup3\n        /* \"#utility.yul\":2327:2336   */\n      dup7\n        /* \"#utility.yul\":2323:2345   */\n      add\n        /* \"#utility.yul\":2303:2355   */\n      tag_231\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2293:2355   */\n      swap2\n      pop\n        /* \"#utility.yul\":2248:2365   */\n      pop\n        /* \"#utility.yul\":1902:2372   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2504   */\n    tag_232:\n        /* \"#utility.yul\":2415:2422   */\n      0x00\n        /* \"#utility.yul\":2455:2497   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2448:2453   */\n      dup3\n        /* \"#utility.yul\":2444:2498   */\n      and\n        /* \"#utility.yul\":2433:2498   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2504   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2510:2606   */\n    tag_233:\n        /* \"#utility.yul\":2547:2554   */\n      0x00\n        /* \"#utility.yul\":2576:2600   */\n      tag_329\n        /* \"#utility.yul\":2594:2599   */\n      dup3\n        /* \"#utility.yul\":2576:2600   */\n      tag_232\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2565:2600   */\n      swap1\n      pop\n        /* \"#utility.yul\":2510:2606   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2612:2734   */\n    tag_234:\n        /* \"#utility.yul\":2685:2709   */\n      tag_331\n        /* \"#utility.yul\":2703:2708   */\n      dup2\n        /* \"#utility.yul\":2685:2709   */\n      tag_233\n      jump\t// in\n    tag_331:\n        /* \"#utility.yul\":2678:2683   */\n      dup2\n        /* \"#utility.yul\":2675:2710   */\n      eq\n        /* \"#utility.yul\":2665:2728   */\n      tag_332\n      jumpi\n        /* \"#utility.yul\":2724:2725   */\n      0x00\n        /* \"#utility.yul\":2721:2722   */\n      dup1\n        /* \"#utility.yul\":2714:2726   */\n      revert\n        /* \"#utility.yul\":2665:2728   */\n    tag_332:\n        /* \"#utility.yul\":2612:2734   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2740:2879   */\n    tag_235:\n        /* \"#utility.yul\":2786:2791   */\n      0x00\n        /* \"#utility.yul\":2824:2830   */\n      dup2\n        /* \"#utility.yul\":2811:2831   */\n      calldataload\n        /* \"#utility.yul\":2802:2831   */\n      swap1\n      pop\n        /* \"#utility.yul\":2840:2873   */\n      tag_334\n        /* \"#utility.yul\":2867:2872   */\n      dup2\n        /* \"#utility.yul\":2840:2873   */\n      tag_234\n      jump\t// in\n    tag_334:\n        /* \"#utility.yul\":2740:2879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2885:2962   */\n    tag_236:\n        /* \"#utility.yul\":2922:2929   */\n      0x00\n        /* \"#utility.yul\":2951:2956   */\n      dup2\n        /* \"#utility.yul\":2940:2956   */\n      swap1\n      pop\n        /* \"#utility.yul\":2885:2962   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2968:3090   */\n    tag_237:\n        /* \"#utility.yul\":3041:3065   */\n      tag_337\n        /* \"#utility.yul\":3059:3064   */\n      dup2\n        /* \"#utility.yul\":3041:3065   */\n      tag_236\n      jump\t// in\n    tag_337:\n        /* \"#utility.yul\":3034:3039   */\n      dup2\n        /* \"#utility.yul\":3031:3066   */\n      eq\n        /* \"#utility.yul\":3021:3084   */\n      tag_338\n      jumpi\n        /* \"#utility.yul\":3080:3081   */\n      0x00\n        /* \"#utility.yul\":3077:3078   */\n      dup1\n        /* \"#utility.yul\":3070:3082   */\n      revert\n        /* \"#utility.yul\":3021:3084   */\n    tag_338:\n        /* \"#utility.yul\":2968:3090   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3096:3235   */\n    tag_238:\n        /* \"#utility.yul\":3142:3147   */\n      0x00\n        /* \"#utility.yul\":3180:3186   */\n      dup2\n        /* \"#utility.yul\":3167:3187   */\n      calldataload\n        /* \"#utility.yul\":3158:3187   */\n      swap1\n      pop\n        /* \"#utility.yul\":3196:3229   */\n      tag_340\n        /* \"#utility.yul\":3223:3228   */\n      dup2\n        /* \"#utility.yul\":3196:3229   */\n      tag_237\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":3096:3235   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3241:3860   */\n    tag_32:\n        /* \"#utility.yul\":3318:3324   */\n      0x00\n        /* \"#utility.yul\":3326:3332   */\n      dup1\n        /* \"#utility.yul\":3334:3340   */\n      0x00\n        /* \"#utility.yul\":3383:3385   */\n      0x60\n        /* \"#utility.yul\":3371:3380   */\n      dup5\n        /* \"#utility.yul\":3362:3369   */\n      dup7\n        /* \"#utility.yul\":3358:3381   */\n      sub\n        /* \"#utility.yul\":3354:3386   */\n      slt\n        /* \"#utility.yul\":3351:3470   */\n      iszero\n      tag_342\n      jumpi\n        /* \"#utility.yul\":3389:3468   */\n      tag_343\n      tag_222\n      jump\t// in\n    tag_343:\n        /* \"#utility.yul\":3351:3470   */\n    tag_342:\n        /* \"#utility.yul\":3509:3510   */\n      0x00\n        /* \"#utility.yul\":3534:3587   */\n      tag_344\n        /* \"#utility.yul\":3579:3586   */\n      dup7\n        /* \"#utility.yul\":3570:3576   */\n      dup3\n        /* \"#utility.yul\":3559:3568   */\n      dup8\n        /* \"#utility.yul\":3555:3577   */\n      add\n        /* \"#utility.yul\":3534:3587   */\n      tag_235\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3524:3587   */\n      swap4\n      pop\n        /* \"#utility.yul\":3480:3597   */\n      pop\n        /* \"#utility.yul\":3636:3638   */\n      0x20\n        /* \"#utility.yul\":3662:3715   */\n      tag_345\n        /* \"#utility.yul\":3707:3714   */\n      dup7\n        /* \"#utility.yul\":3698:3704   */\n      dup3\n        /* \"#utility.yul\":3687:3696   */\n      dup8\n        /* \"#utility.yul\":3683:3705   */\n      add\n        /* \"#utility.yul\":3662:3715   */\n      tag_235\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":3652:3715   */\n      swap3\n      pop\n        /* \"#utility.yul\":3607:3725   */\n      pop\n        /* \"#utility.yul\":3764:3766   */\n      0x40\n        /* \"#utility.yul\":3790:3843   */\n      tag_346\n        /* \"#utility.yul\":3835:3842   */\n      dup7\n        /* \"#utility.yul\":3826:3832   */\n      dup3\n        /* \"#utility.yul\":3815:3824   */\n      dup8\n        /* \"#utility.yul\":3811:3833   */\n      add\n        /* \"#utility.yul\":3790:3843   */\n      tag_238\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":3780:3843   */\n      swap2\n      pop\n        /* \"#utility.yul\":3735:3853   */\n      pop\n        /* \"#utility.yul\":3241:3860   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":3866:4002   */\n    tag_239:\n        /* \"#utility.yul\":3955:3961   */\n      0x00\n        /* \"#utility.yul\":3989:3994   */\n      dup2\n        /* \"#utility.yul\":3983:3995   */\n      mload\n        /* \"#utility.yul\":3973:3995   */\n      swap1\n      pop\n        /* \"#utility.yul\":3866:4002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4008:4214   */\n    tag_240:\n        /* \"#utility.yul\":4129:4140   */\n      0x00\n        /* \"#utility.yul\":4163:4169   */\n      dup3\n        /* \"#utility.yul\":4158:4161   */\n      dup3\n        /* \"#utility.yul\":4151:4170   */\n      mstore\n        /* \"#utility.yul\":4203:4207   */\n      0x20\n        /* \"#utility.yul\":4198:4201   */\n      dup3\n        /* \"#utility.yul\":4194:4208   */\n      add\n        /* \"#utility.yul\":4179:4208   */\n      swap1\n      pop\n        /* \"#utility.yul\":4008:4214   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4220:4374   */\n    tag_241:\n        /* \"#utility.yul\":4309:4313   */\n      0x00\n        /* \"#utility.yul\":4332:4335   */\n      dup2\n        /* \"#utility.yul\":4324:4335   */\n      swap1\n      pop\n        /* \"#utility.yul\":4362:4366   */\n      0x20\n        /* \"#utility.yul\":4357:4360   */\n      dup3\n        /* \"#utility.yul\":4353:4367   */\n      add\n        /* \"#utility.yul\":4345:4367   */\n      swap1\n      pop\n        /* \"#utility.yul\":4220:4374   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4380:4485   */\n    tag_242:\n        /* \"#utility.yul\":4455:4478   */\n      tag_351\n        /* \"#utility.yul\":4472:4477   */\n      dup2\n        /* \"#utility.yul\":4455:4478   */\n      tag_229\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4450:4453   */\n      dup3\n        /* \"#utility.yul\":4443:4479   */\n      mstore\n        /* \"#utility.yul\":4380:4485   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4491:4599   */\n    tag_243:\n        /* \"#utility.yul\":4568:4592   */\n      tag_353\n        /* \"#utility.yul\":4586:4591   */\n      dup2\n        /* \"#utility.yul\":4568:4592   */\n      tag_233\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4563:4566   */\n      dup3\n        /* \"#utility.yul\":4556:4593   */\n      mstore\n        /* \"#utility.yul\":4491:4599   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4605:4702   */\n    tag_244:\n        /* \"#utility.yul\":4641:4648   */\n      0x00\n        /* \"#utility.yul\":4681:4695   */\n      0xffffffffffff\n        /* \"#utility.yul\":4674:4679   */\n      dup3\n        /* \"#utility.yul\":4670:4696   */\n      and\n        /* \"#utility.yul\":4659:4696   */\n      swap1\n      pop\n        /* \"#utility.yul\":4605:4702   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4708:4813   */\n    tag_245:\n        /* \"#utility.yul\":4783:4806   */\n      tag_356\n        /* \"#utility.yul\":4800:4805   */\n      dup2\n        /* \"#utility.yul\":4783:4806   */\n      tag_244\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":4778:4781   */\n      dup3\n        /* \"#utility.yul\":4771:4807   */\n      mstore\n        /* \"#utility.yul\":4708:4813   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4819:4927   */\n    tag_246:\n        /* \"#utility.yul\":4896:4920   */\n      tag_358\n        /* \"#utility.yul\":4914:4919   */\n      dup2\n        /* \"#utility.yul\":4896:4920   */\n      tag_236\n      jump\t// in\n    tag_358:\n        /* \"#utility.yul\":4891:4894   */\n      dup3\n        /* \"#utility.yul\":4884:4921   */\n      mstore\n        /* \"#utility.yul\":4819:4927   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4933:5032   */\n    tag_247:\n        /* \"#utility.yul\":5004:5025   */\n      tag_360\n        /* \"#utility.yul\":5019:5024   */\n      dup2\n        /* \"#utility.yul\":5004:5025   */\n      tag_227\n      jump\t// in\n    tag_360:\n        /* \"#utility.yul\":4999:5002   */\n      dup3\n        /* \"#utility.yul\":4992:5026   */\n      mstore\n        /* \"#utility.yul\":4933:5032   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5098:6649   */\n    tag_248:\n        /* \"#utility.yul\":5229:5235   */\n      0x0100\n        /* \"#utility.yul\":5224:5227   */\n      dup3\n        /* \"#utility.yul\":5220:5236   */\n      add\n        /* \"#utility.yul\":5316:5320   */\n      0x00\n        /* \"#utility.yul\":5309:5314   */\n      dup3\n        /* \"#utility.yul\":5305:5321   */\n      add\n        /* \"#utility.yul\":5299:5322   */\n      mload\n        /* \"#utility.yul\":5335:5396   */\n      tag_362\n        /* \"#utility.yul\":5390:5394   */\n      0x00\n        /* \"#utility.yul\":5385:5388   */\n      dup6\n        /* \"#utility.yul\":5381:5395   */\n      add\n        /* \"#utility.yul\":5367:5379   */\n      dup3\n        /* \"#utility.yul\":5335:5396   */\n      tag_242\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":5246:5406   */\n      pop\n        /* \"#utility.yul\":5489:5493   */\n      0x20\n        /* \"#utility.yul\":5482:5487   */\n      dup3\n        /* \"#utility.yul\":5478:5494   */\n      add\n        /* \"#utility.yul\":5472:5495   */\n      mload\n        /* \"#utility.yul\":5508:5571   */\n      tag_363\n        /* \"#utility.yul\":5565:5569   */\n      0x20\n        /* \"#utility.yul\":5560:5563   */\n      dup6\n        /* \"#utility.yul\":5556:5570   */\n      add\n        /* \"#utility.yul\":5542:5554   */\n      dup3\n        /* \"#utility.yul\":5508:5571   */\n      tag_243\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5416:5581   */\n      pop\n        /* \"#utility.yul\":5668:5672   */\n      0x40\n        /* \"#utility.yul\":5661:5666   */\n      dup3\n        /* \"#utility.yul\":5657:5673   */\n      add\n        /* \"#utility.yul\":5651:5674   */\n      mload\n        /* \"#utility.yul\":5687:5748   */\n      tag_364\n        /* \"#utility.yul\":5742:5746   */\n      0x40\n        /* \"#utility.yul\":5737:5740   */\n      dup6\n        /* \"#utility.yul\":5733:5747   */\n      add\n        /* \"#utility.yul\":5719:5731   */\n      dup3\n        /* \"#utility.yul\":5687:5748   */\n      tag_245\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":5591:5758   */\n      pop\n        /* \"#utility.yul\":5845:5849   */\n      0x60\n        /* \"#utility.yul\":5838:5843   */\n      dup3\n        /* \"#utility.yul\":5834:5850   */\n      add\n        /* \"#utility.yul\":5828:5851   */\n      mload\n        /* \"#utility.yul\":5864:5925   */\n      tag_365\n        /* \"#utility.yul\":5919:5923   */\n      0x60\n        /* \"#utility.yul\":5914:5917   */\n      dup6\n        /* \"#utility.yul\":5910:5924   */\n      add\n        /* \"#utility.yul\":5896:5908   */\n      dup3\n        /* \"#utility.yul\":5864:5925   */\n      tag_245\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5768:5935   */\n      pop\n        /* \"#utility.yul\":6018:6022   */\n      0x80\n        /* \"#utility.yul\":6011:6016   */\n      dup3\n        /* \"#utility.yul\":6007:6023   */\n      add\n        /* \"#utility.yul\":6001:6024   */\n      mload\n        /* \"#utility.yul\":6037:6100   */\n      tag_366\n        /* \"#utility.yul\":6094:6098   */\n      0x80\n        /* \"#utility.yul\":6089:6092   */\n      dup6\n        /* \"#utility.yul\":6085:6099   */\n      add\n        /* \"#utility.yul\":6071:6083   */\n      dup3\n        /* \"#utility.yul\":6037:6100   */\n      tag_243\n      jump\t// in\n    tag_366:\n        /* \"#utility.yul\":5945:6110   */\n      pop\n        /* \"#utility.yul\":6197:6201   */\n      0xa0\n        /* \"#utility.yul\":6190:6195   */\n      dup3\n        /* \"#utility.yul\":6186:6202   */\n      add\n        /* \"#utility.yul\":6180:6203   */\n      mload\n        /* \"#utility.yul\":6216:6279   */\n      tag_367\n        /* \"#utility.yul\":6273:6277   */\n      0xa0\n        /* \"#utility.yul\":6268:6271   */\n      dup6\n        /* \"#utility.yul\":6264:6278   */\n      add\n        /* \"#utility.yul\":6250:6262   */\n      dup3\n        /* \"#utility.yul\":6216:6279   */\n      tag_246\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":6120:6289   */\n      pop\n        /* \"#utility.yul\":6381:6385   */\n      0xc0\n        /* \"#utility.yul\":6374:6379   */\n      dup3\n        /* \"#utility.yul\":6370:6386   */\n      add\n        /* \"#utility.yul\":6364:6387   */\n      mload\n        /* \"#utility.yul\":6400:6463   */\n      tag_368\n        /* \"#utility.yul\":6457:6461   */\n      0xc0\n        /* \"#utility.yul\":6452:6455   */\n      dup6\n        /* \"#utility.yul\":6448:6462   */\n      add\n        /* \"#utility.yul\":6434:6446   */\n      dup3\n        /* \"#utility.yul\":6400:6463   */\n      tag_246\n      jump\t// in\n    tag_368:\n        /* \"#utility.yul\":6299:6473   */\n      pop\n        /* \"#utility.yul\":6556:6560   */\n      0xe0\n        /* \"#utility.yul\":6549:6554   */\n      dup3\n        /* \"#utility.yul\":6545:6561   */\n      add\n        /* \"#utility.yul\":6539:6562   */\n      mload\n        /* \"#utility.yul\":6575:6632   */\n      tag_369\n        /* \"#utility.yul\":6626:6630   */\n      0xe0\n        /* \"#utility.yul\":6621:6624   */\n      dup6\n        /* \"#utility.yul\":6617:6631   */\n      add\n        /* \"#utility.yul\":6603:6615   */\n      dup3\n        /* \"#utility.yul\":6575:6632   */\n      tag_247\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":6483:6642   */\n      pop\n        /* \"#utility.yul\":5198:6649   */\n      pop\n        /* \"#utility.yul\":5098:6649   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6655:6924   */\n    tag_249:\n        /* \"#utility.yul\":6768:6778   */\n      0x00\n        /* \"#utility.yul\":6789:6879   */\n      tag_371\n        /* \"#utility.yul\":6875:6878   */\n      dup4\n        /* \"#utility.yul\":6867:6873   */\n      dup4\n        /* \"#utility.yul\":6789:6879   */\n      tag_248\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6911:6917   */\n      0x0100\n        /* \"#utility.yul\":6906:6909   */\n      dup4\n        /* \"#utility.yul\":6902:6918   */\n      add\n        /* \"#utility.yul\":6888:6918   */\n      swap1\n      pop\n        /* \"#utility.yul\":6655:6924   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6930:7065   */\n    tag_250:\n        /* \"#utility.yul\":7022:7026   */\n      0x00\n        /* \"#utility.yul\":7054:7058   */\n      0x20\n        /* \"#utility.yul\":7049:7052   */\n      dup3\n        /* \"#utility.yul\":7045:7059   */\n      add\n        /* \"#utility.yul\":7037:7059   */\n      swap1\n      pop\n        /* \"#utility.yul\":6930:7065   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7135:8043   */\n    tag_251:\n        /* \"#utility.yul\":7298:7301   */\n      0x00\n        /* \"#utility.yul\":7327:7403   */\n      tag_374\n        /* \"#utility.yul\":7397:7402   */\n      dup3\n        /* \"#utility.yul\":7327:7403   */\n      tag_239\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7419:7527   */\n      tag_375\n        /* \"#utility.yul\":7520:7526   */\n      dup2\n        /* \"#utility.yul\":7515:7518   */\n      dup6\n        /* \"#utility.yul\":7419:7527   */\n      tag_240\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":7412:7527   */\n      swap4\n      pop\n        /* \"#utility.yul\":7551:7629   */\n      tag_376\n        /* \"#utility.yul\":7623:7628   */\n      dup4\n        /* \"#utility.yul\":7551:7629   */\n      tag_241\n      jump\t// in\n    tag_376:\n        /* \"#utility.yul\":7652:7659   */\n      dup1\n        /* \"#utility.yul\":7683:7684   */\n      0x00\n        /* \"#utility.yul\":7668:8018   */\n    tag_377:\n        /* \"#utility.yul\":7693:7699   */\n      dup4\n        /* \"#utility.yul\":7690:7691   */\n      dup2\n        /* \"#utility.yul\":7687:7700   */\n      lt\n        /* \"#utility.yul\":7668:8018   */\n      iszero\n      tag_379\n      jumpi\n        /* \"#utility.yul\":7769:7775   */\n      dup2\n        /* \"#utility.yul\":7763:7776   */\n      mload\n        /* \"#utility.yul\":7796:7903   */\n      tag_380\n        /* \"#utility.yul\":7899:7902   */\n      dup9\n        /* \"#utility.yul\":7884:7897   */\n      dup3\n        /* \"#utility.yul\":7796:7903   */\n      tag_249\n      jump\t// in\n    tag_380:\n        /* \"#utility.yul\":7789:7903   */\n      swap8\n      pop\n        /* \"#utility.yul\":7926:8008   */\n      tag_381\n        /* \"#utility.yul\":8001:8007   */\n      dup4\n        /* \"#utility.yul\":7926:8008   */\n      tag_250\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":7916:8008   */\n      swap3\n      pop\n        /* \"#utility.yul\":7728:8018   */\n      pop\n        /* \"#utility.yul\":7715:7716   */\n      0x01\n        /* \"#utility.yul\":7712:7713   */\n      dup2\n        /* \"#utility.yul\":7708:7717   */\n      add\n        /* \"#utility.yul\":7703:7717   */\n      swap1\n      pop\n        /* \"#utility.yul\":7668:8018   */\n      jump(tag_377)\n    tag_379:\n        /* \"#utility.yul\":7672:7686   */\n      pop\n        /* \"#utility.yul\":8034:8037   */\n      dup6\n        /* \"#utility.yul\":8027:8037   */\n      swap4\n      pop\n        /* \"#utility.yul\":7303:8043   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":7135:8043   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8049:8510   */\n    tag_37:\n        /* \"#utility.yul\":8236:8240   */\n      0x00\n        /* \"#utility.yul\":8274:8276   */\n      0x20\n        /* \"#utility.yul\":8263:8272   */\n      dup3\n        /* \"#utility.yul\":8259:8277   */\n      add\n        /* \"#utility.yul\":8251:8277   */\n      swap1\n      pop\n        /* \"#utility.yul\":8323:8332   */\n      dup2\n        /* \"#utility.yul\":8317:8321   */\n      dup2\n        /* \"#utility.yul\":8313:8333   */\n      sub\n        /* \"#utility.yul\":8309:8310   */\n      0x00\n        /* \"#utility.yul\":8298:8307   */\n      dup4\n        /* \"#utility.yul\":8294:8311   */\n      add\n        /* \"#utility.yul\":8287:8334   */\n      mstore\n        /* \"#utility.yul\":8351:8503   */\n      tag_383\n        /* \"#utility.yul\":8498:8502   */\n      dup2\n        /* \"#utility.yul\":8489:8495   */\n      dup5\n        /* \"#utility.yul\":8351:8503   */\n      tag_251\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":8343:8503   */\n      swap1\n      pop\n        /* \"#utility.yul\":8049:8510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8516:8843   */\n    tag_40:\n        /* \"#utility.yul\":8574:8580   */\n      0x00\n        /* \"#utility.yul\":8623:8625   */\n      0x20\n        /* \"#utility.yul\":8611:8620   */\n      dup3\n        /* \"#utility.yul\":8602:8609   */\n      dup5\n        /* \"#utility.yul\":8598:8621   */\n      sub\n        /* \"#utility.yul\":8594:8626   */\n      slt\n        /* \"#utility.yul\":8591:8710   */\n      iszero\n      tag_385\n      jumpi\n        /* \"#utility.yul\":8629:8708   */\n      tag_386\n      tag_222\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":8591:8710   */\n    tag_385:\n        /* \"#utility.yul\":8749:8750   */\n      0x00\n        /* \"#utility.yul\":8774:8826   */\n      tag_387\n        /* \"#utility.yul\":8818:8825   */\n      dup5\n        /* \"#utility.yul\":8809:8815   */\n      dup3\n        /* \"#utility.yul\":8798:8807   */\n      dup6\n        /* \"#utility.yul\":8794:8816   */\n      add\n        /* \"#utility.yul\":8774:8826   */\n      tag_231\n      jump\t// in\n    tag_387:\n        /* \"#utility.yul\":8764:8826   */\n      swap2\n      pop\n        /* \"#utility.yul\":8720:8836   */\n      pop\n        /* \"#utility.yul\":8516:8843   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8849:8964   */\n    tag_252:\n        /* \"#utility.yul\":8934:8957   */\n      tag_389\n        /* \"#utility.yul\":8951:8956   */\n      dup2\n        /* \"#utility.yul\":8934:8957   */\n      tag_229\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8929:8932   */\n      dup3\n        /* \"#utility.yul\":8922:8958   */\n      mstore\n        /* \"#utility.yul\":8849:8964   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8970:9088   */\n    tag_253:\n        /* \"#utility.yul\":9057:9081   */\n      tag_391\n        /* \"#utility.yul\":9075:9080   */\n      dup2\n        /* \"#utility.yul\":9057:9081   */\n      tag_233\n      jump\t// in\n    tag_391:\n        /* \"#utility.yul\":9052:9055   */\n      dup3\n        /* \"#utility.yul\":9045:9082   */\n      mstore\n        /* \"#utility.yul\":8970:9088   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9094:9209   */\n    tag_254:\n        /* \"#utility.yul\":9179:9202   */\n      tag_393\n        /* \"#utility.yul\":9196:9201   */\n      dup2\n        /* \"#utility.yul\":9179:9202   */\n      tag_244\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9174:9177   */\n      dup3\n        /* \"#utility.yul\":9167:9203   */\n      mstore\n        /* \"#utility.yul\":9094:9209   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9215:9333   */\n    tag_255:\n        /* \"#utility.yul\":9302:9326   */\n      tag_395\n        /* \"#utility.yul\":9320:9325   */\n      dup2\n        /* \"#utility.yul\":9302:9326   */\n      tag_236\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9297:9300   */\n      dup3\n        /* \"#utility.yul\":9290:9327   */\n      mstore\n        /* \"#utility.yul\":9215:9333   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9339:10312   */\n    tag_43:\n        /* \"#utility.yul\":9616:9620   */\n      0x00\n        /* \"#utility.yul\":9654:9657   */\n      0x0100\n        /* \"#utility.yul\":9643:9652   */\n      dup3\n        /* \"#utility.yul\":9639:9658   */\n      add\n        /* \"#utility.yul\":9631:9658   */\n      swap1\n      pop\n        /* \"#utility.yul\":9668:9737   */\n      tag_397\n        /* \"#utility.yul\":9734:9735   */\n      0x00\n        /* \"#utility.yul\":9723:9732   */\n      dup4\n        /* \"#utility.yul\":9719:9736   */\n      add\n        /* \"#utility.yul\":9710:9716   */\n      dup12\n        /* \"#utility.yul\":9668:9737   */\n      tag_252\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9747:9819   */\n      tag_398\n        /* \"#utility.yul\":9815:9817   */\n      0x20\n        /* \"#utility.yul\":9804:9813   */\n      dup4\n        /* \"#utility.yul\":9800:9818   */\n      add\n        /* \"#utility.yul\":9791:9797   */\n      dup11\n        /* \"#utility.yul\":9747:9819   */\n      tag_253\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9829:9899   */\n      tag_399\n        /* \"#utility.yul\":9895:9897   */\n      0x40\n        /* \"#utility.yul\":9884:9893   */\n      dup4\n        /* \"#utility.yul\":9880:9898   */\n      add\n        /* \"#utility.yul\":9871:9877   */\n      dup10\n        /* \"#utility.yul\":9829:9899   */\n      tag_254\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":9909:9979   */\n      tag_400\n        /* \"#utility.yul\":9975:9977   */\n      0x60\n        /* \"#utility.yul\":9964:9973   */\n      dup4\n        /* \"#utility.yul\":9960:9978   */\n      add\n        /* \"#utility.yul\":9951:9957   */\n      dup9\n        /* \"#utility.yul\":9909:9979   */\n      tag_254\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9989:10062   */\n      tag_401\n        /* \"#utility.yul\":10057:10060   */\n      0x80\n        /* \"#utility.yul\":10046:10055   */\n      dup4\n        /* \"#utility.yul\":10042:10061   */\n      add\n        /* \"#utility.yul\":10033:10039   */\n      dup8\n        /* \"#utility.yul\":9989:10062   */\n      tag_253\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":10072:10145   */\n      tag_402\n        /* \"#utility.yul\":10140:10143   */\n      0xa0\n        /* \"#utility.yul\":10129:10138   */\n      dup4\n        /* \"#utility.yul\":10125:10144   */\n      add\n        /* \"#utility.yul\":10116:10122   */\n      dup7\n        /* \"#utility.yul\":10072:10145   */\n      tag_255\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10155:10228   */\n      tag_403\n        /* \"#utility.yul\":10223:10226   */\n      0xc0\n        /* \"#utility.yul\":10212:10221   */\n      dup4\n        /* \"#utility.yul\":10208:10227   */\n      add\n        /* \"#utility.yul\":10199:10205   */\n      dup6\n        /* \"#utility.yul\":10155:10228   */\n      tag_255\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10238:10305   */\n      tag_404\n        /* \"#utility.yul\":10300:10303   */\n      0xe0\n        /* \"#utility.yul\":10289:10298   */\n      dup4\n        /* \"#utility.yul\":10285:10304   */\n      add\n        /* \"#utility.yul\":10276:10282   */\n      dup5\n        /* \"#utility.yul\":10238:10305   */\n      tag_228\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9339:10312   */\n      swap10\n      swap9\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10318:10790   */\n    tag_46:\n        /* \"#utility.yul\":10385:10391   */\n      0x00\n        /* \"#utility.yul\":10393:10399   */\n      dup1\n        /* \"#utility.yul\":10442:10444   */\n      0x40\n        /* \"#utility.yul\":10430:10439   */\n      dup4\n        /* \"#utility.yul\":10421:10428   */\n      dup6\n        /* \"#utility.yul\":10417:10440   */\n      sub\n        /* \"#utility.yul\":10413:10445   */\n      slt\n        /* \"#utility.yul\":10410:10529   */\n      iszero\n      tag_406\n      jumpi\n        /* \"#utility.yul\":10448:10527   */\n      tag_407\n      tag_222\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":10410:10529   */\n    tag_406:\n        /* \"#utility.yul\":10568:10569   */\n      0x00\n        /* \"#utility.yul\":10593:10645   */\n      tag_408\n        /* \"#utility.yul\":10637:10644   */\n      dup6\n        /* \"#utility.yul\":10628:10634   */\n      dup3\n        /* \"#utility.yul\":10617:10626   */\n      dup7\n        /* \"#utility.yul\":10613:10635   */\n      add\n        /* \"#utility.yul\":10593:10645   */\n      tag_231\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10583:10645   */\n      swap3\n      pop\n        /* \"#utility.yul\":10539:10655   */\n      pop\n        /* \"#utility.yul\":10694:10696   */\n      0x20\n        /* \"#utility.yul\":10720:10773   */\n      tag_409\n        /* \"#utility.yul\":10765:10772   */\n      dup6\n        /* \"#utility.yul\":10756:10762   */\n      dup3\n        /* \"#utility.yul\":10745:10754   */\n      dup7\n        /* \"#utility.yul\":10741:10763   */\n      add\n        /* \"#utility.yul\":10720:10773   */\n      tag_238\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":10710:10773   */\n      swap2\n      pop\n        /* \"#utility.yul\":10665:10783   */\n      pop\n        /* \"#utility.yul\":10318:10790   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10796:11018   */\n    tag_49:\n        /* \"#utility.yul\":10889:10893   */\n      0x00\n        /* \"#utility.yul\":10927:10929   */\n      0x20\n        /* \"#utility.yul\":10916:10925   */\n      dup3\n        /* \"#utility.yul\":10912:10930   */\n      add\n        /* \"#utility.yul\":10904:10930   */\n      swap1\n      pop\n        /* \"#utility.yul\":10940:11011   */\n      tag_411\n        /* \"#utility.yul\":11008:11009   */\n      0x00\n        /* \"#utility.yul\":10997:11006   */\n      dup4\n        /* \"#utility.yul\":10993:11010   */\n      add\n        /* \"#utility.yul\":10984:10990   */\n      dup5\n        /* \"#utility.yul\":10940:11011   */\n      tag_253\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":10796:11018   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11024:11242   */\n    tag_57:\n        /* \"#utility.yul\":11115:11119   */\n      0x00\n        /* \"#utility.yul\":11153:11155   */\n      0x20\n        /* \"#utility.yul\":11142:11151   */\n      dup3\n        /* \"#utility.yul\":11138:11156   */\n      add\n        /* \"#utility.yul\":11130:11156   */\n      swap1\n      pop\n        /* \"#utility.yul\":11166:11235   */\n      tag_413\n        /* \"#utility.yul\":11232:11233   */\n      0x00\n        /* \"#utility.yul\":11221:11230   */\n      dup4\n        /* \"#utility.yul\":11217:11234   */\n      add\n        /* \"#utility.yul\":11208:11214   */\n      dup5\n        /* \"#utility.yul\":11166:11235   */\n      tag_252\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11024:11242   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11248:11865   */\n    tag_64:\n        /* \"#utility.yul\":11324:11330   */\n      0x00\n        /* \"#utility.yul\":11332:11338   */\n      dup1\n        /* \"#utility.yul\":11340:11346   */\n      0x00\n        /* \"#utility.yul\":11389:11391   */\n      0x60\n        /* \"#utility.yul\":11377:11386   */\n      dup5\n        /* \"#utility.yul\":11368:11375   */\n      dup7\n        /* \"#utility.yul\":11364:11387   */\n      sub\n        /* \"#utility.yul\":11360:11392   */\n      slt\n        /* \"#utility.yul\":11357:11476   */\n      iszero\n      tag_415\n      jumpi\n        /* \"#utility.yul\":11395:11474   */\n      tag_416\n      tag_222\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11357:11476   */\n    tag_415:\n        /* \"#utility.yul\":11515:11516   */\n      0x00\n        /* \"#utility.yul\":11540:11592   */\n      tag_417\n        /* \"#utility.yul\":11584:11591   */\n      dup7\n        /* \"#utility.yul\":11575:11581   */\n      dup3\n        /* \"#utility.yul\":11564:11573   */\n      dup8\n        /* \"#utility.yul\":11560:11582   */\n      add\n        /* \"#utility.yul\":11540:11592   */\n      tag_231\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":11530:11592   */\n      swap4\n      pop\n        /* \"#utility.yul\":11486:11602   */\n      pop\n        /* \"#utility.yul\":11641:11643   */\n      0x20\n        /* \"#utility.yul\":11667:11720   */\n      tag_418\n        /* \"#utility.yul\":11712:11719   */\n      dup7\n        /* \"#utility.yul\":11703:11709   */\n      dup3\n        /* \"#utility.yul\":11692:11701   */\n      dup8\n        /* \"#utility.yul\":11688:11710   */\n      add\n        /* \"#utility.yul\":11667:11720   */\n      tag_235\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":11657:11720   */\n      swap3\n      pop\n        /* \"#utility.yul\":11612:11730   */\n      pop\n        /* \"#utility.yul\":11769:11771   */\n      0x40\n        /* \"#utility.yul\":11795:11848   */\n      tag_419\n        /* \"#utility.yul\":11840:11847   */\n      dup7\n        /* \"#utility.yul\":11831:11837   */\n      dup3\n        /* \"#utility.yul\":11820:11829   */\n      dup8\n        /* \"#utility.yul\":11816:11838   */\n      add\n        /* \"#utility.yul\":11795:11848   */\n      tag_238\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11785:11848   */\n      swap2\n      pop\n        /* \"#utility.yul\":11740:11858   */\n      pop\n        /* \"#utility.yul\":11248:11865   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":11871:12309   */\n    tag_67:\n        /* \"#utility.yul\":12018:12022   */\n      0x00\n        /* \"#utility.yul\":12056:12058   */\n      0x60\n        /* \"#utility.yul\":12045:12054   */\n      dup3\n        /* \"#utility.yul\":12041:12059   */\n      add\n        /* \"#utility.yul\":12033:12059   */\n      swap1\n      pop\n        /* \"#utility.yul\":12069:12140   */\n      tag_421\n        /* \"#utility.yul\":12137:12138   */\n      0x00\n        /* \"#utility.yul\":12126:12135   */\n      dup4\n        /* \"#utility.yul\":12122:12139   */\n      add\n        /* \"#utility.yul\":12113:12119   */\n      dup7\n        /* \"#utility.yul\":12069:12140   */\n      tag_253\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12150:12220   */\n      tag_422\n        /* \"#utility.yul\":12216:12218   */\n      0x20\n        /* \"#utility.yul\":12205:12214   */\n      dup4\n        /* \"#utility.yul\":12201:12219   */\n      add\n        /* \"#utility.yul\":12192:12198   */\n      dup6\n        /* \"#utility.yul\":12150:12220   */\n      tag_252\n      jump\t// in\n    tag_422:\n        /* \"#utility.yul\":12230:12302   */\n      tag_423\n        /* \"#utility.yul\":12298:12300   */\n      0x40\n        /* \"#utility.yul\":12287:12296   */\n      dup4\n        /* \"#utility.yul\":12283:12301   */\n      add\n        /* \"#utility.yul\":12274:12280   */\n      dup5\n        /* \"#utility.yul\":12230:12302   */\n      tag_255\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":11871:12309   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12315:12932   */\n    tag_70:\n        /* \"#utility.yul\":12391:12397   */\n      0x00\n        /* \"#utility.yul\":12399:12405   */\n      dup1\n        /* \"#utility.yul\":12407:12413   */\n      0x00\n        /* \"#utility.yul\":12456:12458   */\n      0x60\n        /* \"#utility.yul\":12444:12453   */\n      dup5\n        /* \"#utility.yul\":12435:12442   */\n      dup7\n        /* \"#utility.yul\":12431:12454   */\n      sub\n        /* \"#utility.yul\":12427:12459   */\n      slt\n        /* \"#utility.yul\":12424:12543   */\n      iszero\n      tag_425\n      jumpi\n        /* \"#utility.yul\":12462:12541   */\n      tag_426\n      tag_222\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12424:12543   */\n    tag_425:\n        /* \"#utility.yul\":12582:12583   */\n      0x00\n        /* \"#utility.yul\":12607:12660   */\n      tag_427\n        /* \"#utility.yul\":12652:12659   */\n      dup7\n        /* \"#utility.yul\":12643:12649   */\n      dup3\n        /* \"#utility.yul\":12632:12641   */\n      dup8\n        /* \"#utility.yul\":12628:12650   */\n      add\n        /* \"#utility.yul\":12607:12660   */\n      tag_235\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12597:12660   */\n      swap4\n      pop\n        /* \"#utility.yul\":12553:12670   */\n      pop\n        /* \"#utility.yul\":12709:12711   */\n      0x20\n        /* \"#utility.yul\":12735:12787   */\n      tag_428\n        /* \"#utility.yul\":12779:12786   */\n      dup7\n        /* \"#utility.yul\":12770:12776   */\n      dup3\n        /* \"#utility.yul\":12759:12768   */\n      dup8\n        /* \"#utility.yul\":12755:12777   */\n      add\n        /* \"#utility.yul\":12735:12787   */\n      tag_231\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12725:12787   */\n      swap3\n      pop\n        /* \"#utility.yul\":12680:12797   */\n      pop\n        /* \"#utility.yul\":12836:12838   */\n      0x40\n        /* \"#utility.yul\":12862:12915   */\n      tag_429\n        /* \"#utility.yul\":12907:12914   */\n      dup7\n        /* \"#utility.yul\":12898:12904   */\n      dup3\n        /* \"#utility.yul\":12887:12896   */\n      dup8\n        /* \"#utility.yul\":12883:12905   */\n      add\n        /* \"#utility.yul\":12862:12915   */\n      tag_238\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":12852:12915   */\n      swap2\n      pop\n        /* \"#utility.yul\":12807:12925   */\n      pop\n        /* \"#utility.yul\":12315:12932   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":12938:13055   */\n    tag_256:\n        /* \"#utility.yul\":13047:13048   */\n      0x00\n        /* \"#utility.yul\":13044:13045   */\n      dup1\n        /* \"#utility.yul\":13037:13049   */\n      revert\n        /* \"#utility.yul\":13061:13163   */\n    tag_257:\n        /* \"#utility.yul\":13102:13108   */\n      0x00\n        /* \"#utility.yul\":13153:13155   */\n      0x1f\n        /* \"#utility.yul\":13149:13156   */\n      not\n        /* \"#utility.yul\":13144:13146   */\n      0x1f\n        /* \"#utility.yul\":13137:13142   */\n      dup4\n        /* \"#utility.yul\":13133:13147   */\n      add\n        /* \"#utility.yul\":13129:13157   */\n      and\n        /* \"#utility.yul\":13119:13157   */\n      swap1\n      pop\n        /* \"#utility.yul\":13061:13163   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13169:13349   */\n    tag_144:\n        /* \"#utility.yul\":13217:13294   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":13214:13215   */\n      0x00\n        /* \"#utility.yul\":13207:13295   */\n      mstore\n        /* \"#utility.yul\":13314:13318   */\n      0x41\n        /* \"#utility.yul\":13311:13312   */\n      0x04\n        /* \"#utility.yul\":13304:13319   */\n      mstore\n        /* \"#utility.yul\":13338:13342   */\n      0x24\n        /* \"#utility.yul\":13335:13336   */\n      0x00\n        /* \"#utility.yul\":13328:13343   */\n      revert\n        /* \"#utility.yul\":13355:13636   */\n    tag_258:\n        /* \"#utility.yul\":13438:13465   */\n      tag_434\n        /* \"#utility.yul\":13460:13464   */\n      dup3\n        /* \"#utility.yul\":13438:13465   */\n      tag_257\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":13430:13436   */\n      dup2\n        /* \"#utility.yul\":13426:13466   */\n      add\n        /* \"#utility.yul\":13568:13574   */\n      dup2\n        /* \"#utility.yul\":13556:13566   */\n      dup2\n        /* \"#utility.yul\":13553:13575   */\n      lt\n        /* \"#utility.yul\":13532:13550   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13520:13530   */\n      dup3\n        /* \"#utility.yul\":13517:13551   */\n      gt\n        /* \"#utility.yul\":13514:13576   */\n      or\n        /* \"#utility.yul\":13511:13599   */\n      iszero\n      tag_435\n      jumpi\n        /* \"#utility.yul\":13579:13597   */\n      tag_436\n      tag_144\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":13511:13599   */\n    tag_435:\n        /* \"#utility.yul\":13619:13629   */\n      dup1\n        /* \"#utility.yul\":13615:13617   */\n      0x40\n        /* \"#utility.yul\":13608:13630   */\n      mstore\n        /* \"#utility.yul\":13398:13636   */\n      pop\n        /* \"#utility.yul\":13355:13636   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13642:13771   */\n    tag_259:\n        /* \"#utility.yul\":13676:13682   */\n      0x00\n        /* \"#utility.yul\":13703:13723   */\n      tag_438\n      tag_221\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13693:13723   */\n      swap1\n      pop\n        /* \"#utility.yul\":13732:13765   */\n      tag_439\n        /* \"#utility.yul\":13760:13764   */\n      dup3\n        /* \"#utility.yul\":13752:13758   */\n      dup3\n        /* \"#utility.yul\":13732:13765   */\n      tag_258\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13642:13771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13777:14088   */\n    tag_260:\n        /* \"#utility.yul\":13854:13858   */\n      0x00\n        /* \"#utility.yul\":13944:13962   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":13936:13942   */\n      dup3\n        /* \"#utility.yul\":13933:13963   */\n      gt\n        /* \"#utility.yul\":13930:13986   */\n      iszero\n      tag_441\n      jumpi\n        /* \"#utility.yul\":13966:13984   */\n      tag_442\n      tag_144\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13930:13986   */\n    tag_441:\n        /* \"#utility.yul\":14016:14020   */\n      0x20\n        /* \"#utility.yul\":14008:14014   */\n      dup3\n        /* \"#utility.yul\":14004:14021   */\n      mul\n        /* \"#utility.yul\":13996:14021   */\n      swap1\n      pop\n        /* \"#utility.yul\":14076:14080   */\n      0x20\n        /* \"#utility.yul\":14070:14074   */\n      dup2\n        /* \"#utility.yul\":14066:14081   */\n      add\n        /* \"#utility.yul\":14058:14081   */\n      swap1\n      pop\n        /* \"#utility.yul\":13777:14088   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14094:14211   */\n    tag_261:\n        /* \"#utility.yul\":14203:14204   */\n      0x00\n        /* \"#utility.yul\":14200:14201   */\n      dup1\n        /* \"#utility.yul\":14193:14205   */\n      revert\n        /* \"#utility.yul\":14234:14944   */\n    tag_262:\n        /* \"#utility.yul\":14330:14335   */\n      0x00\n        /* \"#utility.yul\":14355:14436   */\n      tag_445\n        /* \"#utility.yul\":14371:14435   */\n      tag_446\n        /* \"#utility.yul\":14428:14434   */\n      dup5\n        /* \"#utility.yul\":14371:14435   */\n      tag_260\n      jump\t// in\n    tag_446:\n        /* \"#utility.yul\":14355:14436   */\n      tag_259\n      jump\t// in\n    tag_445:\n        /* \"#utility.yul\":14346:14436   */\n      swap1\n      pop\n        /* \"#utility.yul\":14456:14461   */\n      dup1\n        /* \"#utility.yul\":14485:14491   */\n      dup4\n        /* \"#utility.yul\":14478:14483   */\n      dup3\n        /* \"#utility.yul\":14471:14492   */\n      mstore\n        /* \"#utility.yul\":14519:14523   */\n      0x20\n        /* \"#utility.yul\":14512:14517   */\n      dup3\n        /* \"#utility.yul\":14508:14524   */\n      add\n        /* \"#utility.yul\":14501:14524   */\n      swap1\n      pop\n        /* \"#utility.yul\":14572:14576   */\n      0x20\n        /* \"#utility.yul\":14564:14570   */\n      dup5\n        /* \"#utility.yul\":14560:14577   */\n      mul\n        /* \"#utility.yul\":14552:14558   */\n      dup4\n        /* \"#utility.yul\":14548:14578   */\n      add\n        /* \"#utility.yul\":14601:14604   */\n      dup6\n        /* \"#utility.yul\":14593:14599   */\n      dup2\n        /* \"#utility.yul\":14590:14605   */\n      gt\n        /* \"#utility.yul\":14587:14709   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":14620:14699   */\n      tag_448\n      tag_261\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14587:14709   */\n    tag_447:\n        /* \"#utility.yul\":14735:14741   */\n      dup4\n        /* \"#utility.yul\":14718:14938   */\n    tag_449:\n        /* \"#utility.yul\":14752:14758   */\n      dup2\n        /* \"#utility.yul\":14747:14750   */\n      dup2\n        /* \"#utility.yul\":14744:14759   */\n      lt\n        /* \"#utility.yul\":14718:14938   */\n      iszero\n      tag_451\n      jumpi\n        /* \"#utility.yul\":14827:14830   */\n      dup1\n        /* \"#utility.yul\":14856:14893   */\n      tag_452\n        /* \"#utility.yul\":14889:14892   */\n      dup9\n        /* \"#utility.yul\":14877:14887   */\n      dup3\n        /* \"#utility.yul\":14856:14893   */\n      tag_238\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":14851:14854   */\n      dup5\n        /* \"#utility.yul\":14844:14894   */\n      mstore\n        /* \"#utility.yul\":14923:14927   */\n      0x20\n        /* \"#utility.yul\":14918:14921   */\n      dup5\n        /* \"#utility.yul\":14914:14928   */\n      add\n        /* \"#utility.yul\":14907:14928   */\n      swap4\n      pop\n        /* \"#utility.yul\":14794:14938   */\n      pop\n        /* \"#utility.yul\":14778:14782   */\n      0x20\n        /* \"#utility.yul\":14773:14776   */\n      dup2\n        /* \"#utility.yul\":14769:14783   */\n      add\n        /* \"#utility.yul\":14762:14783   */\n      swap1\n      pop\n        /* \"#utility.yul\":14718:14938   */\n      jump(tag_449)\n    tag_451:\n        /* \"#utility.yul\":14722:14743   */\n      pop\n        /* \"#utility.yul\":14336:14944   */\n      pop\n      pop\n        /* \"#utility.yul\":14234:14944   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14967:15337   */\n    tag_263:\n        /* \"#utility.yul\":15038:15043   */\n      0x00\n        /* \"#utility.yul\":15087:15090   */\n      dup3\n        /* \"#utility.yul\":15080:15084   */\n      0x1f\n        /* \"#utility.yul\":15072:15078   */\n      dup4\n        /* \"#utility.yul\":15068:15085   */\n      add\n        /* \"#utility.yul\":15064:15091   */\n      slt\n        /* \"#utility.yul\":15054:15176   */\n      tag_454\n      jumpi\n        /* \"#utility.yul\":15095:15174   */\n      tag_455\n      tag_256\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":15054:15176   */\n    tag_454:\n        /* \"#utility.yul\":15212:15218   */\n      dup2\n        /* \"#utility.yul\":15199:15219   */\n      calldataload\n        /* \"#utility.yul\":15237:15331   */\n      tag_456\n        /* \"#utility.yul\":15327:15330   */\n      dup5\n        /* \"#utility.yul\":15319:15325   */\n      dup3\n        /* \"#utility.yul\":15312:15316   */\n      0x20\n        /* \"#utility.yul\":15304:15310   */\n      dup7\n        /* \"#utility.yul\":15300:15317   */\n      add\n        /* \"#utility.yul\":15237:15331   */\n      tag_262\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15228:15331   */\n      swap2\n      pop\n        /* \"#utility.yul\":15044:15337   */\n      pop\n        /* \"#utility.yul\":14967:15337   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15343:15460   */\n    tag_264:\n        /* \"#utility.yul\":15452:15453   */\n      0x00\n        /* \"#utility.yul\":15449:15450   */\n      dup1\n        /* \"#utility.yul\":15442:15454   */\n      revert\n        /* \"#utility.yul\":15466:15773   */\n    tag_265:\n        /* \"#utility.yul\":15527:15531   */\n      0x00\n        /* \"#utility.yul\":15617:15635   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":15609:15615   */\n      dup3\n        /* \"#utility.yul\":15606:15636   */\n      gt\n        /* \"#utility.yul\":15603:15659   */\n      iszero\n      tag_459\n      jumpi\n        /* \"#utility.yul\":15639:15657   */\n      tag_460\n      tag_144\n      jump\t// in\n    tag_460:\n        /* \"#utility.yul\":15603:15659   */\n    tag_459:\n        /* \"#utility.yul\":15677:15706   */\n      tag_461\n        /* \"#utility.yul\":15699:15705   */\n      dup3\n        /* \"#utility.yul\":15677:15706   */\n      tag_257\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":15669:15706   */\n      swap1\n      pop\n        /* \"#utility.yul\":15761:15765   */\n      0x20\n        /* \"#utility.yul\":15755:15759   */\n      dup2\n        /* \"#utility.yul\":15751:15766   */\n      add\n        /* \"#utility.yul\":15743:15766   */\n      swap1\n      pop\n        /* \"#utility.yul\":15466:15773   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15779:15925   */\n    tag_266:\n        /* \"#utility.yul\":15876:15882   */\n      dup3\n        /* \"#utility.yul\":15871:15874   */\n      dup2\n        /* \"#utility.yul\":15866:15869   */\n      dup4\n        /* \"#utility.yul\":15853:15883   */\n      calldatacopy\n        /* \"#utility.yul\":15917:15918   */\n      0x00\n        /* \"#utility.yul\":15908:15914   */\n      dup4\n        /* \"#utility.yul\":15903:15906   */\n      dup4\n        /* \"#utility.yul\":15899:15915   */\n      add\n        /* \"#utility.yul\":15892:15919   */\n      mstore\n        /* \"#utility.yul\":15779:15925   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15931:16354   */\n    tag_267:\n        /* \"#utility.yul\":16008:16013   */\n      0x00\n        /* \"#utility.yul\":16033:16098   */\n      tag_464\n        /* \"#utility.yul\":16049:16097   */\n      tag_465\n        /* \"#utility.yul\":16090:16096   */\n      dup5\n        /* \"#utility.yul\":16049:16097   */\n      tag_265\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16033:16098   */\n      tag_259\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":16024:16098   */\n      swap1\n      pop\n        /* \"#utility.yul\":16121:16127   */\n      dup3\n        /* \"#utility.yul\":16114:16119   */\n      dup2\n        /* \"#utility.yul\":16107:16128   */\n      mstore\n        /* \"#utility.yul\":16159:16163   */\n      0x20\n        /* \"#utility.yul\":16152:16157   */\n      dup2\n        /* \"#utility.yul\":16148:16164   */\n      add\n        /* \"#utility.yul\":16197:16200   */\n      dup5\n        /* \"#utility.yul\":16188:16194   */\n      dup5\n        /* \"#utility.yul\":16183:16186   */\n      dup5\n        /* \"#utility.yul\":16179:16195   */\n      add\n        /* \"#utility.yul\":16176:16201   */\n      gt\n        /* \"#utility.yul\":16173:16285   */\n      iszero\n      tag_466\n      jumpi\n        /* \"#utility.yul\":16204:16283   */\n      tag_467\n      tag_264\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16173:16285   */\n    tag_466:\n        /* \"#utility.yul\":16294:16348   */\n      tag_468\n        /* \"#utility.yul\":16341:16347   */\n      dup5\n        /* \"#utility.yul\":16336:16339   */\n      dup3\n        /* \"#utility.yul\":16331:16334   */\n      dup6\n        /* \"#utility.yul\":16294:16348   */\n      tag_266\n      jump\t// in\n    tag_468:\n        /* \"#utility.yul\":16014:16354   */\n      pop\n        /* \"#utility.yul\":15931:16354   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16373:16711   */\n    tag_268:\n        /* \"#utility.yul\":16428:16433   */\n      0x00\n        /* \"#utility.yul\":16477:16480   */\n      dup3\n        /* \"#utility.yul\":16470:16474   */\n      0x1f\n        /* \"#utility.yul\":16462:16468   */\n      dup4\n        /* \"#utility.yul\":16458:16475   */\n      add\n        /* \"#utility.yul\":16454:16481   */\n      slt\n        /* \"#utility.yul\":16444:16566   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":16485:16564   */\n      tag_471\n      tag_256\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":16444:16566   */\n    tag_470:\n        /* \"#utility.yul\":16602:16608   */\n      dup2\n        /* \"#utility.yul\":16589:16609   */\n      calldataload\n        /* \"#utility.yul\":16627:16705   */\n      tag_472\n        /* \"#utility.yul\":16701:16704   */\n      dup5\n        /* \"#utility.yul\":16693:16699   */\n      dup3\n        /* \"#utility.yul\":16686:16690   */\n      0x20\n        /* \"#utility.yul\":16678:16684   */\n      dup7\n        /* \"#utility.yul\":16674:16691   */\n      add\n        /* \"#utility.yul\":16627:16705   */\n      tag_267\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":16618:16705   */\n      swap2\n      pop\n        /* \"#utility.yul\":16434:16711   */\n      pop\n        /* \"#utility.yul\":16373:16711   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16717:18226   */\n    tag_74:\n        /* \"#utility.yul\":16871:16877   */\n      0x00\n        /* \"#utility.yul\":16879:16885   */\n      dup1\n        /* \"#utility.yul\":16887:16893   */\n      0x00\n        /* \"#utility.yul\":16895:16901   */\n      dup1\n        /* \"#utility.yul\":16903:16909   */\n      0x00\n        /* \"#utility.yul\":16952:16955   */\n      0xa0\n        /* \"#utility.yul\":16940:16949   */\n      dup7\n        /* \"#utility.yul\":16931:16938   */\n      dup9\n        /* \"#utility.yul\":16927:16950   */\n      sub\n        /* \"#utility.yul\":16923:16956   */\n      slt\n        /* \"#utility.yul\":16920:17040   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":16959:17038   */\n      tag_475\n      tag_222\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":16920:17040   */\n    tag_474:\n        /* \"#utility.yul\":17079:17080   */\n      0x00\n        /* \"#utility.yul\":17104:17157   */\n      tag_476\n        /* \"#utility.yul\":17149:17156   */\n      dup9\n        /* \"#utility.yul\":17140:17146   */\n      dup3\n        /* \"#utility.yul\":17129:17138   */\n      dup10\n        /* \"#utility.yul\":17125:17147   */\n      add\n        /* \"#utility.yul\":17104:17157   */\n      tag_235\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":17094:17157   */\n      swap6\n      pop\n        /* \"#utility.yul\":17050:17167   */\n      pop\n        /* \"#utility.yul\":17206:17208   */\n      0x20\n        /* \"#utility.yul\":17232:17285   */\n      tag_477\n        /* \"#utility.yul\":17277:17284   */\n      dup9\n        /* \"#utility.yul\":17268:17274   */\n      dup3\n        /* \"#utility.yul\":17257:17266   */\n      dup10\n        /* \"#utility.yul\":17253:17275   */\n      add\n        /* \"#utility.yul\":17232:17285   */\n      tag_235\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":17222:17285   */\n      swap5\n      pop\n        /* \"#utility.yul\":17177:17295   */\n      pop\n        /* \"#utility.yul\":17362:17364   */\n      0x40\n        /* \"#utility.yul\":17351:17360   */\n      dup7\n        /* \"#utility.yul\":17347:17365   */\n      add\n        /* \"#utility.yul\":17334:17366   */\n      calldataload\n        /* \"#utility.yul\":17393:17411   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17385:17391   */\n      dup2\n        /* \"#utility.yul\":17382:17412   */\n      gt\n        /* \"#utility.yul\":17379:17496   */\n      iszero\n      tag_478\n      jumpi\n        /* \"#utility.yul\":17415:17494   */\n      tag_479\n      tag_223\n      jump\t// in\n    tag_479:\n        /* \"#utility.yul\":17379:17496   */\n    tag_478:\n        /* \"#utility.yul\":17520:17598   */\n      tag_480\n        /* \"#utility.yul\":17590:17597   */\n      dup9\n        /* \"#utility.yul\":17581:17587   */\n      dup3\n        /* \"#utility.yul\":17570:17579   */\n      dup10\n        /* \"#utility.yul\":17566:17588   */\n      add\n        /* \"#utility.yul\":17520:17598   */\n      tag_263\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":17510:17598   */\n      swap4\n      pop\n        /* \"#utility.yul\":17305:17608   */\n      pop\n        /* \"#utility.yul\":17675:17677   */\n      0x60\n        /* \"#utility.yul\":17664:17673   */\n      dup7\n        /* \"#utility.yul\":17660:17678   */\n      add\n        /* \"#utility.yul\":17647:17679   */\n      calldataload\n        /* \"#utility.yul\":17706:17724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":17698:17704   */\n      dup2\n        /* \"#utility.yul\":17695:17725   */\n      gt\n        /* \"#utility.yul\":17692:17809   */\n      iszero\n      tag_481\n      jumpi\n        /* \"#utility.yul\":17728:17807   */\n      tag_482\n      tag_223\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":17692:17809   */\n    tag_481:\n        /* \"#utility.yul\":17833:17911   */\n      tag_483\n        /* \"#utility.yul\":17903:17910   */\n      dup9\n        /* \"#utility.yul\":17894:17900   */\n      dup3\n        /* \"#utility.yul\":17883:17892   */\n      dup10\n        /* \"#utility.yul\":17879:17901   */\n      add\n        /* \"#utility.yul\":17833:17911   */\n      tag_263\n      jump\t// in\n    tag_483:\n        /* \"#utility.yul\":17823:17911   */\n      swap3\n      pop\n        /* \"#utility.yul\":17618:17921   */\n      pop\n        /* \"#utility.yul\":17988:17991   */\n      0x80\n        /* \"#utility.yul\":17977:17986   */\n      dup7\n        /* \"#utility.yul\":17973:17992   */\n      add\n        /* \"#utility.yul\":17960:17993   */\n      calldataload\n        /* \"#utility.yul\":18020:18038   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":18012:18018   */\n      dup2\n        /* \"#utility.yul\":18009:18039   */\n      gt\n        /* \"#utility.yul\":18006:18123   */\n      iszero\n      tag_484\n      jumpi\n        /* \"#utility.yul\":18042:18121   */\n      tag_485\n      tag_223\n      jump\t// in\n    tag_485:\n        /* \"#utility.yul\":18006:18123   */\n    tag_484:\n        /* \"#utility.yul\":18147:18209   */\n      tag_486\n        /* \"#utility.yul\":18201:18208   */\n      dup9\n        /* \"#utility.yul\":18192:18198   */\n      dup3\n        /* \"#utility.yul\":18181:18190   */\n      dup10\n        /* \"#utility.yul\":18177:18199   */\n      add\n        /* \"#utility.yul\":18147:18209   */\n      tag_268\n      jump\t// in\n    tag_486:\n        /* \"#utility.yul\":18137:18209   */\n      swap2\n      pop\n        /* \"#utility.yul\":17931:18219   */\n      pop\n        /* \"#utility.yul\":16717:18226   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18232:18347   */\n    tag_269:\n        /* \"#utility.yul\":18317:18340   */\n      tag_488\n        /* \"#utility.yul\":18334:18339   */\n      dup2\n        /* \"#utility.yul\":18317:18340   */\n      tag_224\n      jump\t// in\n    tag_488:\n        /* \"#utility.yul\":18312:18315   */\n      dup3\n        /* \"#utility.yul\":18305:18341   */\n      mstore\n        /* \"#utility.yul\":18232:18347   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18353:18571   */\n    tag_77:\n        /* \"#utility.yul\":18444:18448   */\n      0x00\n        /* \"#utility.yul\":18482:18484   */\n      0x20\n        /* \"#utility.yul\":18471:18480   */\n      dup3\n        /* \"#utility.yul\":18467:18485   */\n      add\n        /* \"#utility.yul\":18459:18485   */\n      swap1\n      pop\n        /* \"#utility.yul\":18495:18564   */\n      tag_490\n        /* \"#utility.yul\":18561:18562   */\n      0x00\n        /* \"#utility.yul\":18550:18559   */\n      dup4\n        /* \"#utility.yul\":18546:18563   */\n      add\n        /* \"#utility.yul\":18537:18543   */\n      dup5\n        /* \"#utility.yul\":18495:18564   */\n      tag_269\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":18353:18571   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18577:19340   */\n    tag_80:\n        /* \"#utility.yul\":18662:18668   */\n      0x00\n        /* \"#utility.yul\":18670:18676   */\n      dup1\n        /* \"#utility.yul\":18678:18684   */\n      0x00\n        /* \"#utility.yul\":18686:18692   */\n      dup1\n        /* \"#utility.yul\":18735:18738   */\n      0x80\n        /* \"#utility.yul\":18723:18732   */\n      dup6\n        /* \"#utility.yul\":18714:18721   */\n      dup8\n        /* \"#utility.yul\":18710:18733   */\n      sub\n        /* \"#utility.yul\":18706:18739   */\n      slt\n        /* \"#utility.yul\":18703:18823   */\n      iszero\n      tag_492\n      jumpi\n        /* \"#utility.yul\":18742:18821   */\n      tag_493\n      tag_222\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":18703:18823   */\n    tag_492:\n        /* \"#utility.yul\":18862:18863   */\n      0x00\n        /* \"#utility.yul\":18887:18939   */\n      tag_494\n        /* \"#utility.yul\":18931:18938   */\n      dup8\n        /* \"#utility.yul\":18922:18928   */\n      dup3\n        /* \"#utility.yul\":18911:18920   */\n      dup9\n        /* \"#utility.yul\":18907:18929   */\n      add\n        /* \"#utility.yul\":18887:18939   */\n      tag_231\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":18877:18939   */\n      swap5\n      pop\n        /* \"#utility.yul\":18833:18949   */\n      pop\n        /* \"#utility.yul\":18988:18990   */\n      0x20\n        /* \"#utility.yul\":19014:19067   */\n      tag_495\n        /* \"#utility.yul\":19059:19066   */\n      dup8\n        /* \"#utility.yul\":19050:19056   */\n      dup3\n        /* \"#utility.yul\":19039:19048   */\n      dup9\n        /* \"#utility.yul\":19035:19057   */\n      add\n        /* \"#utility.yul\":19014:19067   */\n      tag_235\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":19004:19067   */\n      swap4\n      pop\n        /* \"#utility.yul\":18959:19077   */\n      pop\n        /* \"#utility.yul\":19116:19118   */\n      0x40\n        /* \"#utility.yul\":19142:19195   */\n      tag_496\n        /* \"#utility.yul\":19187:19194   */\n      dup8\n        /* \"#utility.yul\":19178:19184   */\n      dup3\n        /* \"#utility.yul\":19167:19176   */\n      dup9\n        /* \"#utility.yul\":19163:19185   */\n      add\n        /* \"#utility.yul\":19142:19195   */\n      tag_235\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":19132:19195   */\n      swap3\n      pop\n        /* \"#utility.yul\":19087:19205   */\n      pop\n        /* \"#utility.yul\":19244:19246   */\n      0x60\n        /* \"#utility.yul\":19270:19323   */\n      tag_497\n        /* \"#utility.yul\":19315:19322   */\n      dup8\n        /* \"#utility.yul\":19306:19312   */\n      dup3\n        /* \"#utility.yul\":19295:19304   */\n      dup9\n        /* \"#utility.yul\":19291:19313   */\n      add\n        /* \"#utility.yul\":19270:19323   */\n      tag_238\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":19260:19323   */\n      swap2\n      pop\n        /* \"#utility.yul\":19215:19333   */\n      pop\n        /* \"#utility.yul\":18577:19340   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19346:20435   */\n    tag_84:\n        /* \"#utility.yul\":19450:19456   */\n      0x00\n        /* \"#utility.yul\":19458:19464   */\n      dup1\n        /* \"#utility.yul\":19466:19472   */\n      0x00\n        /* \"#utility.yul\":19474:19480   */\n      dup1\n        /* \"#utility.yul\":19482:19488   */\n      0x00\n        /* \"#utility.yul\":19531:19534   */\n      0xa0\n        /* \"#utility.yul\":19519:19528   */\n      dup7\n        /* \"#utility.yul\":19510:19517   */\n      dup9\n        /* \"#utility.yul\":19506:19529   */\n      sub\n        /* \"#utility.yul\":19502:19535   */\n      slt\n        /* \"#utility.yul\":19499:19619   */\n      iszero\n      tag_499\n      jumpi\n        /* \"#utility.yul\":19538:19617   */\n      tag_500\n      tag_222\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":19499:19619   */\n    tag_499:\n        /* \"#utility.yul\":19658:19659   */\n      0x00\n        /* \"#utility.yul\":19683:19736   */\n      tag_501\n        /* \"#utility.yul\":19728:19735   */\n      dup9\n        /* \"#utility.yul\":19719:19725   */\n      dup3\n        /* \"#utility.yul\":19708:19717   */\n      dup10\n        /* \"#utility.yul\":19704:19726   */\n      add\n        /* \"#utility.yul\":19683:19736   */\n      tag_235\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":19673:19736   */\n      swap6\n      pop\n        /* \"#utility.yul\":19629:19746   */\n      pop\n        /* \"#utility.yul\":19785:19787   */\n      0x20\n        /* \"#utility.yul\":19811:19864   */\n      tag_502\n        /* \"#utility.yul\":19856:19863   */\n      dup9\n        /* \"#utility.yul\":19847:19853   */\n      dup3\n        /* \"#utility.yul\":19836:19845   */\n      dup10\n        /* \"#utility.yul\":19832:19854   */\n      add\n        /* \"#utility.yul\":19811:19864   */\n      tag_235\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":19801:19864   */\n      swap5\n      pop\n        /* \"#utility.yul\":19756:19874   */\n      pop\n        /* \"#utility.yul\":19913:19915   */\n      0x40\n        /* \"#utility.yul\":19939:19992   */\n      tag_503\n        /* \"#utility.yul\":19984:19991   */\n      dup9\n        /* \"#utility.yul\":19975:19981   */\n      dup3\n        /* \"#utility.yul\":19964:19973   */\n      dup10\n        /* \"#utility.yul\":19960:19982   */\n      add\n        /* \"#utility.yul\":19939:19992   */\n      tag_238\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":19929:19992   */\n      swap4\n      pop\n        /* \"#utility.yul\":19884:20002   */\n      pop\n        /* \"#utility.yul\":20041:20043   */\n      0x60\n        /* \"#utility.yul\":20067:20120   */\n      tag_504\n        /* \"#utility.yul\":20112:20119   */\n      dup9\n        /* \"#utility.yul\":20103:20109   */\n      dup3\n        /* \"#utility.yul\":20092:20101   */\n      dup10\n        /* \"#utility.yul\":20088:20110   */\n      add\n        /* \"#utility.yul\":20067:20120   */\n      tag_238\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":20057:20120   */\n      swap3\n      pop\n        /* \"#utility.yul\":20012:20130   */\n      pop\n        /* \"#utility.yul\":20197:20200   */\n      0x80\n        /* \"#utility.yul\":20186:20195   */\n      dup7\n        /* \"#utility.yul\":20182:20201   */\n      add\n        /* \"#utility.yul\":20169:20202   */\n      calldataload\n        /* \"#utility.yul\":20229:20247   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":20221:20227   */\n      dup2\n        /* \"#utility.yul\":20218:20248   */\n      gt\n        /* \"#utility.yul\":20215:20332   */\n      iszero\n      tag_505\n      jumpi\n        /* \"#utility.yul\":20251:20330   */\n      tag_506\n      tag_223\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":20215:20332   */\n    tag_505:\n        /* \"#utility.yul\":20356:20418   */\n      tag_507\n        /* \"#utility.yul\":20410:20417   */\n      dup9\n        /* \"#utility.yul\":20401:20407   */\n      dup3\n        /* \"#utility.yul\":20390:20399   */\n      dup10\n        /* \"#utility.yul\":20386:20408   */\n      add\n        /* \"#utility.yul\":20356:20418   */\n      tag_268\n      jump\t// in\n    tag_507:\n        /* \"#utility.yul\":20346:20418   */\n      swap2\n      pop\n        /* \"#utility.yul\":20140:20428   */\n      pop\n        /* \"#utility.yul\":19346:20435   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20441:20621   */\n    tag_102:\n        /* \"#utility.yul\":20489:20566   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20486:20487   */\n      0x00\n        /* \"#utility.yul\":20479:20567   */\n      mstore\n        /* \"#utility.yul\":20586:20590   */\n      0x32\n        /* \"#utility.yul\":20583:20584   */\n      0x04\n        /* \"#utility.yul\":20576:20591   */\n      mstore\n        /* \"#utility.yul\":20610:20614   */\n      0x24\n        /* \"#utility.yul\":20607:20608   */\n      0x00\n        /* \"#utility.yul\":20600:20615   */\n      revert\n        /* \"#utility.yul\":20627:20807   */\n    tag_270:\n        /* \"#utility.yul\":20675:20752   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":20672:20673   */\n      0x00\n        /* \"#utility.yul\":20665:20753   */\n      mstore\n        /* \"#utility.yul\":20772:20776   */\n      0x11\n        /* \"#utility.yul\":20769:20770   */\n      0x04\n        /* \"#utility.yul\":20762:20777   */\n      mstore\n        /* \"#utility.yul\":20796:20800   */\n      0x24\n        /* \"#utility.yul\":20793:20794   */\n      0x00\n        /* \"#utility.yul\":20786:20801   */\n      revert\n        /* \"#utility.yul\":20813:21004   */\n    tag_109:\n        /* \"#utility.yul\":20853:20856   */\n      0x00\n        /* \"#utility.yul\":20872:20892   */\n      tag_511\n        /* \"#utility.yul\":20890:20891   */\n      dup3\n        /* \"#utility.yul\":20872:20892   */\n      tag_236\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":20867:20892   */\n      swap2\n      pop\n        /* \"#utility.yul\":20906:20926   */\n      tag_512\n        /* \"#utility.yul\":20924:20925   */\n      dup4\n        /* \"#utility.yul\":20906:20926   */\n      tag_236\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":20901:20926   */\n      swap3\n      pop\n        /* \"#utility.yul\":20949:20950   */\n      dup3\n        /* \"#utility.yul\":20946:20947   */\n      dup3\n        /* \"#utility.yul\":20942:20951   */\n      add\n        /* \"#utility.yul\":20935:20951   */\n      swap1\n      pop\n        /* \"#utility.yul\":20970:20973   */\n      dup1\n        /* \"#utility.yul\":20967:20968   */\n      dup3\n        /* \"#utility.yul\":20964:20974   */\n      gt\n        /* \"#utility.yul\":20961:20997   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":20977:20995   */\n      tag_514\n      tag_270\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":20961:20997   */\n    tag_513:\n        /* \"#utility.yul\":20813:21004   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21010:21201   */\n    tag_111:\n        /* \"#utility.yul\":21048:21051   */\n      0x00\n        /* \"#utility.yul\":21071:21094   */\n      tag_516\n        /* \"#utility.yul\":21088:21093   */\n      dup3\n        /* \"#utility.yul\":21071:21094   */\n      tag_229\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":21062:21094   */\n      swap2\n      pop\n        /* \"#utility.yul\":21116:21142   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":21109:21114   */\n      dup3\n        /* \"#utility.yul\":21106:21143   */\n      sub\n        /* \"#utility.yul\":21103:21166   */\n      tag_517\n      jumpi\n        /* \"#utility.yul\":21146:21164   */\n      tag_518\n      tag_270\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":21103:21166   */\n    tag_517:\n        /* \"#utility.yul\":21193:21194   */\n      0x01\n        /* \"#utility.yul\":21186:21191   */\n      dup3\n        /* \"#utility.yul\":21182:21195   */\n      add\n        /* \"#utility.yul\":21175:21195   */\n      swap1\n      pop\n        /* \"#utility.yul\":21010:21201   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21207:21617   */\n    tag_115:\n        /* \"#utility.yul\":21247:21254   */\n      0x00\n        /* \"#utility.yul\":21270:21290   */\n      tag_520\n        /* \"#utility.yul\":21288:21289   */\n      dup3\n        /* \"#utility.yul\":21270:21290   */\n      tag_236\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":21265:21290   */\n      swap2\n      pop\n        /* \"#utility.yul\":21304:21324   */\n      tag_521\n        /* \"#utility.yul\":21322:21323   */\n      dup4\n        /* \"#utility.yul\":21304:21324   */\n      tag_236\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":21299:21324   */\n      swap3\n      pop\n        /* \"#utility.yul\":21359:21360   */\n      dup3\n        /* \"#utility.yul\":21356:21357   */\n      dup3\n        /* \"#utility.yul\":21352:21361   */\n      mul\n        /* \"#utility.yul\":21381:21411   */\n      tag_522\n        /* \"#utility.yul\":21399:21410   */\n      dup2\n        /* \"#utility.yul\":21381:21411   */\n      tag_236\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":21370:21411   */\n      swap2\n      pop\n        /* \"#utility.yul\":21560:21561   */\n      dup3\n        /* \"#utility.yul\":21551:21558   */\n      dup3\n        /* \"#utility.yul\":21547:21562   */\n      div\n        /* \"#utility.yul\":21544:21545   */\n      dup5\n        /* \"#utility.yul\":21541:21563   */\n      eq\n        /* \"#utility.yul\":21521:21522   */\n      dup4\n        /* \"#utility.yul\":21514:21523   */\n      iszero\n        /* \"#utility.yul\":21494:21577   */\n      or\n        /* \"#utility.yul\":21471:21610   */\n      tag_523\n      jumpi\n        /* \"#utility.yul\":21590:21608   */\n      tag_524\n      tag_270\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":21471:21610   */\n    tag_523:\n        /* \"#utility.yul\":21255:21617   */\n      pop\n        /* \"#utility.yul\":21207:21617   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21623:21803   */\n    tag_271:\n        /* \"#utility.yul\":21671:21748   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21668:21669   */\n      0x00\n        /* \"#utility.yul\":21661:21749   */\n      mstore\n        /* \"#utility.yul\":21768:21772   */\n      0x12\n        /* \"#utility.yul\":21765:21766   */\n      0x04\n        /* \"#utility.yul\":21758:21773   */\n      mstore\n        /* \"#utility.yul\":21792:21796   */\n      0x24\n        /* \"#utility.yul\":21789:21790   */\n      0x00\n        /* \"#utility.yul\":21782:21797   */\n      revert\n        /* \"#utility.yul\":21809:21994   */\n    tag_117:\n        /* \"#utility.yul\":21849:21850   */\n      0x00\n        /* \"#utility.yul\":21866:21886   */\n      tag_527\n        /* \"#utility.yul\":21884:21885   */\n      dup3\n        /* \"#utility.yul\":21866:21886   */\n      tag_236\n      jump\t// in\n    tag_527:\n        /* \"#utility.yul\":21861:21886   */\n      swap2\n      pop\n        /* \"#utility.yul\":21900:21920   */\n      tag_528\n        /* \"#utility.yul\":21918:21919   */\n      dup4\n        /* \"#utility.yul\":21900:21920   */\n      tag_236\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":21895:21920   */\n      swap3\n      pop\n        /* \"#utility.yul\":21939:21940   */\n      dup3\n        /* \"#utility.yul\":21929:21964   */\n      tag_529\n      jumpi\n        /* \"#utility.yul\":21944:21962   */\n      tag_530\n      tag_271\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":21929:21964   */\n    tag_529:\n        /* \"#utility.yul\":21986:21987   */\n      dup3\n        /* \"#utility.yul\":21983:21984   */\n      dup3\n        /* \"#utility.yul\":21979:21988   */\n      div\n        /* \"#utility.yul\":21974:21988   */\n      swap1\n      pop\n        /* \"#utility.yul\":21809:21994   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22000:22060   */\n    tag_272:\n        /* \"#utility.yul\":22028:22031   */\n      0x00\n        /* \"#utility.yul\":22049:22054   */\n      dup2\n        /* \"#utility.yul\":22042:22054   */\n      swap1\n      pop\n        /* \"#utility.yul\":22000:22060   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22066:22206   */\n    tag_273:\n        /* \"#utility.yul\":22115:22124   */\n      0x00\n        /* \"#utility.yul\":22148:22200   */\n      tag_533\n        /* \"#utility.yul\":22166:22199   */\n      tag_534\n        /* \"#utility.yul\":22175:22198   */\n      tag_535\n        /* \"#utility.yul\":22192:22197   */\n      dup5\n        /* \"#utility.yul\":22175:22198   */\n      tag_229\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":22166:22199   */\n      tag_272\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":22148:22200   */\n      tag_236\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":22135:22200   */\n      swap1\n      pop\n        /* \"#utility.yul\":22066:22206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22212:22341   */\n    tag_274:\n        /* \"#utility.yul\":22298:22334   */\n      tag_537\n        /* \"#utility.yul\":22328:22333   */\n      dup2\n        /* \"#utility.yul\":22298:22334   */\n      tag_273\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":22293:22296   */\n      dup3\n        /* \"#utility.yul\":22286:22335   */\n      mstore\n        /* \"#utility.yul\":22212:22341   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22347:22515   */\n    tag_275:\n        /* \"#utility.yul\":22430:22441   */\n      0x00\n        /* \"#utility.yul\":22464:22470   */\n      dup3\n        /* \"#utility.yul\":22459:22462   */\n      dup3\n        /* \"#utility.yul\":22452:22471   */\n      mstore\n        /* \"#utility.yul\":22504:22508   */\n      0x20\n        /* \"#utility.yul\":22499:22502   */\n      dup3\n        /* \"#utility.yul\":22495:22509   */\n      add\n        /* \"#utility.yul\":22480:22509   */\n      swap1\n      pop\n        /* \"#utility.yul\":22347:22515   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22521:22674   */\n    tag_276:\n        /* \"#utility.yul\":22661:22666   */\n      0x3078300000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":22657:22658   */\n      0x00\n        /* \"#utility.yul\":22649:22655   */\n      dup3\n        /* \"#utility.yul\":22645:22659   */\n      add\n        /* \"#utility.yul\":22638:22667   */\n      mstore\n        /* \"#utility.yul\":22521:22674   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22680:23043   */\n    tag_277:\n        /* \"#utility.yul\":22821:22824   */\n      0x00\n        /* \"#utility.yul\":22842:22907   */\n      tag_541\n        /* \"#utility.yul\":22905:22906   */\n      0x03\n        /* \"#utility.yul\":22900:22903   */\n      dup4\n        /* \"#utility.yul\":22842:22907   */\n      tag_275\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":22835:22907   */\n      swap2\n      pop\n        /* \"#utility.yul\":22916:23009   */\n      tag_542\n        /* \"#utility.yul\":23005:23008   */\n      dup3\n        /* \"#utility.yul\":22916:23009   */\n      tag_276\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":23034:23036   */\n      0x20\n        /* \"#utility.yul\":23029:23032   */\n      dup3\n        /* \"#utility.yul\":23025:23037   */\n      add\n        /* \"#utility.yul\":23018:23037   */\n      swap1\n      pop\n        /* \"#utility.yul\":22680:23043   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23049:23906   */\n    tag_119:\n        /* \"#utility.yul\":23325:23329   */\n      0x00\n        /* \"#utility.yul\":23363:23366   */\n      0xa0\n        /* \"#utility.yul\":23352:23361   */\n      dup3\n        /* \"#utility.yul\":23348:23367   */\n      add\n        /* \"#utility.yul\":23340:23367   */\n      swap1\n      pop\n        /* \"#utility.yul\":23377:23448   */\n      tag_544\n        /* \"#utility.yul\":23445:23446   */\n      0x00\n        /* \"#utility.yul\":23434:23443   */\n      dup4\n        /* \"#utility.yul\":23430:23447   */\n      add\n        /* \"#utility.yul\":23421:23427   */\n      dup8\n        /* \"#utility.yul\":23377:23448   */\n      tag_253\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":23458:23530   */\n      tag_545\n        /* \"#utility.yul\":23526:23528   */\n      0x20\n        /* \"#utility.yul\":23515:23524   */\n      dup4\n        /* \"#utility.yul\":23511:23529   */\n      add\n        /* \"#utility.yul\":23502:23508   */\n      dup7\n        /* \"#utility.yul\":23458:23530   */\n      tag_253\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":23540:23611   */\n      tag_546\n        /* \"#utility.yul\":23607:23609   */\n      0x40\n        /* \"#utility.yul\":23596:23605   */\n      dup4\n        /* \"#utility.yul\":23592:23610   */\n      add\n        /* \"#utility.yul\":23583:23589   */\n      dup6\n        /* \"#utility.yul\":23540:23611   */\n      tag_274\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":23621:23693   */\n      tag_547\n        /* \"#utility.yul\":23689:23691   */\n      0x60\n        /* \"#utility.yul\":23678:23687   */\n      dup4\n        /* \"#utility.yul\":23674:23692   */\n      add\n        /* \"#utility.yul\":23665:23671   */\n      dup5\n        /* \"#utility.yul\":23621:23693   */\n      tag_255\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":23741:23750   */\n      dup2\n        /* \"#utility.yul\":23735:23739   */\n      dup2\n        /* \"#utility.yul\":23731:23751   */\n      sub\n        /* \"#utility.yul\":23725:23728   */\n      0x80\n        /* \"#utility.yul\":23714:23723   */\n      dup4\n        /* \"#utility.yul\":23710:23729   */\n      add\n        /* \"#utility.yul\":23703:23752   */\n      mstore\n        /* \"#utility.yul\":23769:23899   */\n      tag_548\n        /* \"#utility.yul\":23894:23898   */\n      dup2\n        /* \"#utility.yul\":23769:23899   */\n      tag_277\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":23761:23899   */\n      swap1\n      pop\n        /* \"#utility.yul\":23049:23906   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23912:24453   */\n    tag_126:\n        /* \"#utility.yul\":24083:24087   */\n      0x00\n        /* \"#utility.yul\":24121:24124   */\n      0x80\n        /* \"#utility.yul\":24110:24119   */\n      dup3\n        /* \"#utility.yul\":24106:24125   */\n      add\n        /* \"#utility.yul\":24098:24125   */\n      swap1\n      pop\n        /* \"#utility.yul\":24135:24206   */\n      tag_550\n        /* \"#utility.yul\":24203:24204   */\n      0x00\n        /* \"#utility.yul\":24192:24201   */\n      dup4\n        /* \"#utility.yul\":24188:24205   */\n      add\n        /* \"#utility.yul\":24179:24185   */\n      dup8\n        /* \"#utility.yul\":24135:24206   */\n      tag_253\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":24216:24288   */\n      tag_551\n        /* \"#utility.yul\":24284:24286   */\n      0x20\n        /* \"#utility.yul\":24273:24282   */\n      dup4\n        /* \"#utility.yul\":24269:24287   */\n      add\n        /* \"#utility.yul\":24260:24266   */\n      dup7\n        /* \"#utility.yul\":24216:24288   */\n      tag_253\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":24298:24364   */\n      tag_552\n        /* \"#utility.yul\":24360:24362   */\n      0x40\n        /* \"#utility.yul\":24349:24358   */\n      dup4\n        /* \"#utility.yul\":24345:24363   */\n      add\n        /* \"#utility.yul\":24336:24342   */\n      dup6\n        /* \"#utility.yul\":24298:24364   */\n      tag_228\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":24374:24446   */\n      tag_553\n        /* \"#utility.yul\":24442:24444   */\n      0x60\n        /* \"#utility.yul\":24431:24440   */\n      dup4\n        /* \"#utility.yul\":24427:24445   */\n      add\n        /* \"#utility.yul\":24418:24424   */\n      dup5\n        /* \"#utility.yul\":24374:24446   */\n      tag_255\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":23912:24453   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24459:24672   */\n    tag_128:\n        /* \"#utility.yul\":24498:24501   */\n      0x00\n        /* \"#utility.yul\":24517:24536   */\n      tag_555\n        /* \"#utility.yul\":24534:24535   */\n      dup3\n        /* \"#utility.yul\":24517:24536   */\n      tag_229\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":24512:24536   */\n      swap2\n      pop\n        /* \"#utility.yul\":24550:24569   */\n      tag_556\n        /* \"#utility.yul\":24567:24568   */\n      dup4\n        /* \"#utility.yul\":24550:24569   */\n      tag_229\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":24545:24569   */\n      swap3\n      pop\n        /* \"#utility.yul\":24592:24593   */\n      dup3\n        /* \"#utility.yul\":24589:24590   */\n      dup3\n        /* \"#utility.yul\":24585:24594   */\n      add\n        /* \"#utility.yul\":24578:24594   */\n      swap1\n      pop\n        /* \"#utility.yul\":24615:24641   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":24610:24613   */\n      dup2\n        /* \"#utility.yul\":24607:24642   */\n      gt\n        /* \"#utility.yul\":24604:24665   */\n      iszero\n      tag_557\n      jumpi\n        /* \"#utility.yul\":24645:24663   */\n      tag_558\n      tag_270\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":24604:24665   */\n    tag_557:\n        /* \"#utility.yul\":24459:24672   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24678:24847   */\n    tag_278:\n        /* \"#utility.yul\":24762:24773   */\n      0x00\n        /* \"#utility.yul\":24796:24802   */\n      dup3\n        /* \"#utility.yul\":24791:24794   */\n      dup3\n        /* \"#utility.yul\":24784:24803   */\n      mstore\n        /* \"#utility.yul\":24836:24840   */\n      0x20\n        /* \"#utility.yul\":24831:24834   */\n      dup3\n        /* \"#utility.yul\":24827:24841   */\n      add\n        /* \"#utility.yul\":24812:24841   */\n      swap1\n      pop\n        /* \"#utility.yul\":24678:24847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24853:25030   */\n    tag_279:\n        /* \"#utility.yul\":24993:25022   */\n      0x4d757374206265205f656e644964203c3d2066756e64436f756e740000000000\n        /* \"#utility.yul\":24989:24990   */\n      0x00\n        /* \"#utility.yul\":24981:24987   */\n      dup3\n        /* \"#utility.yul\":24977:24991   */\n      add\n        /* \"#utility.yul\":24970:25023   */\n      mstore\n        /* \"#utility.yul\":24853:25030   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25036:25402   */\n    tag_280:\n        /* \"#utility.yul\":25178:25181   */\n      0x00\n        /* \"#utility.yul\":25199:25266   */\n      tag_562\n        /* \"#utility.yul\":25263:25265   */\n      0x1b\n        /* \"#utility.yul\":25258:25261   */\n      dup4\n        /* \"#utility.yul\":25199:25266   */\n      tag_278\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":25192:25266   */\n      swap2\n      pop\n        /* \"#utility.yul\":25275:25368   */\n      tag_563\n        /* \"#utility.yul\":25364:25367   */\n      dup3\n        /* \"#utility.yul\":25275:25368   */\n      tag_279\n      jump\t// in\n    tag_563:\n        /* \"#utility.yul\":25393:25395   */\n      0x20\n        /* \"#utility.yul\":25388:25391   */\n      dup3\n        /* \"#utility.yul\":25384:25396   */\n      add\n        /* \"#utility.yul\":25377:25396   */\n      swap1\n      pop\n        /* \"#utility.yul\":25036:25402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25408:25827   */\n    tag_136:\n        /* \"#utility.yul\":25574:25578   */\n      0x00\n        /* \"#utility.yul\":25612:25614   */\n      0x20\n        /* \"#utility.yul\":25601:25610   */\n      dup3\n        /* \"#utility.yul\":25597:25615   */\n      add\n        /* \"#utility.yul\":25589:25615   */\n      swap1\n      pop\n        /* \"#utility.yul\":25661:25670   */\n      dup2\n        /* \"#utility.yul\":25655:25659   */\n      dup2\n        /* \"#utility.yul\":25651:25671   */\n      sub\n        /* \"#utility.yul\":25647:25648   */\n      0x00\n        /* \"#utility.yul\":25636:25645   */\n      dup4\n        /* \"#utility.yul\":25632:25649   */\n      add\n        /* \"#utility.yul\":25625:25672   */\n      mstore\n        /* \"#utility.yul\":25689:25820   */\n      tag_565\n        /* \"#utility.yul\":25815:25819   */\n      dup2\n        /* \"#utility.yul\":25689:25820   */\n      tag_280\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":25681:25820   */\n      swap1\n      pop\n        /* \"#utility.yul\":25408:25827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25833:26009   */\n    tag_281:\n        /* \"#utility.yul\":25973:26001   */\n      0x4d757374206265205f73746172744964203c3d205f656e644964000000000000\n        /* \"#utility.yul\":25969:25970   */\n      0x00\n        /* \"#utility.yul\":25961:25967   */\n      dup3\n        /* \"#utility.yul\":25957:25971   */\n      add\n        /* \"#utility.yul\":25950:26002   */\n      mstore\n        /* \"#utility.yul\":25833:26009   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26015:26381   */\n    tag_282:\n        /* \"#utility.yul\":26157:26160   */\n      0x00\n        /* \"#utility.yul\":26178:26245   */\n      tag_568\n        /* \"#utility.yul\":26242:26244   */\n      0x1a\n        /* \"#utility.yul\":26237:26240   */\n      dup4\n        /* \"#utility.yul\":26178:26245   */\n      tag_278\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":26171:26245   */\n      swap2\n      pop\n        /* \"#utility.yul\":26254:26347   */\n      tag_569\n        /* \"#utility.yul\":26343:26346   */\n      dup3\n        /* \"#utility.yul\":26254:26347   */\n      tag_281\n      jump\t// in\n    tag_569:\n        /* \"#utility.yul\":26372:26374   */\n      0x20\n        /* \"#utility.yul\":26367:26370   */\n      dup3\n        /* \"#utility.yul\":26363:26375   */\n      add\n        /* \"#utility.yul\":26356:26375   */\n      swap1\n      pop\n        /* \"#utility.yul\":26015:26381   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26387:26806   */\n    tag_139:\n        /* \"#utility.yul\":26553:26557   */\n      0x00\n        /* \"#utility.yul\":26591:26593   */\n      0x20\n        /* \"#utility.yul\":26580:26589   */\n      dup3\n        /* \"#utility.yul\":26576:26594   */\n      add\n        /* \"#utility.yul\":26568:26594   */\n      swap1\n      pop\n        /* \"#utility.yul\":26640:26649   */\n      dup2\n        /* \"#utility.yul\":26634:26638   */\n      dup2\n        /* \"#utility.yul\":26630:26650   */\n      sub\n        /* \"#utility.yul\":26626:26627   */\n      0x00\n        /* \"#utility.yul\":26615:26624   */\n      dup4\n        /* \"#utility.yul\":26611:26628   */\n      add\n        /* \"#utility.yul\":26604:26651   */\n      mstore\n        /* \"#utility.yul\":26668:26799   */\n      tag_571\n        /* \"#utility.yul\":26794:26798   */\n      dup2\n        /* \"#utility.yul\":26668:26799   */\n      tag_282\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":26660:26799   */\n      swap1\n      pop\n        /* \"#utility.yul\":26387:26806   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":26812:27028   */\n    tag_141:\n        /* \"#utility.yul\":26851:26855   */\n      0x00\n        /* \"#utility.yul\":26871:26890   */\n      tag_573\n        /* \"#utility.yul\":26888:26889   */\n      dup3\n        /* \"#utility.yul\":26871:26890   */\n      tag_229\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":26866:26890   */\n      swap2\n      pop\n        /* \"#utility.yul\":26904:26923   */\n      tag_574\n        /* \"#utility.yul\":26921:26922   */\n      dup4\n        /* \"#utility.yul\":26904:26923   */\n      tag_229\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":26899:26923   */\n      swap3\n      pop\n        /* \"#utility.yul\":26947:26948   */\n      dup3\n        /* \"#utility.yul\":26944:26945   */\n      dup3\n        /* \"#utility.yul\":26940:26949   */\n      sub\n        /* \"#utility.yul\":26932:26949   */\n      swap1\n      pop\n        /* \"#utility.yul\":26971:26997   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":26965:26969   */\n      dup2\n        /* \"#utility.yul\":26962:26998   */\n      gt\n        /* \"#utility.yul\":26959:27021   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":27001:27019   */\n      tag_576\n      tag_270\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":26959:27021   */\n    tag_575:\n        /* \"#utility.yul\":26812:27028   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27034:27207   */\n    tag_283:\n        /* \"#utility.yul\":27174:27199   */\n      0x4d757374206265205f6964203c2066756e64436f756e74000000000000000000\n        /* \"#utility.yul\":27170:27171   */\n      0x00\n        /* \"#utility.yul\":27162:27168   */\n      dup3\n        /* \"#utility.yul\":27158:27172   */\n      add\n        /* \"#utility.yul\":27151:27200   */\n      mstore\n        /* \"#utility.yul\":27034:27207   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27213:27579   */\n    tag_284:\n        /* \"#utility.yul\":27355:27358   */\n      0x00\n        /* \"#utility.yul\":27376:27443   */\n      tag_579\n        /* \"#utility.yul\":27440:27442   */\n      0x17\n        /* \"#utility.yul\":27435:27438   */\n      dup4\n        /* \"#utility.yul\":27376:27443   */\n      tag_278\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":27369:27443   */\n      swap2\n      pop\n        /* \"#utility.yul\":27452:27545   */\n      tag_580\n        /* \"#utility.yul\":27541:27544   */\n      dup3\n        /* \"#utility.yul\":27452:27545   */\n      tag_283\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":27570:27572   */\n      0x20\n        /* \"#utility.yul\":27565:27568   */\n      dup3\n        /* \"#utility.yul\":27561:27573   */\n      add\n        /* \"#utility.yul\":27554:27573   */\n      swap1\n      pop\n        /* \"#utility.yul\":27213:27579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":27585:28004   */\n    tag_159:\n        /* \"#utility.yul\":27751:27755   */\n      0x00\n        /* \"#utility.yul\":27789:27791   */\n      0x20\n        /* \"#utility.yul\":27778:27787   */\n      dup3\n        /* \"#utility.yul\":27774:27792   */\n      add\n        /* \"#utility.yul\":27766:27792   */\n      swap1\n      pop\n        /* \"#utility.yul\":27838:27847   */\n      dup2\n        /* \"#utility.yul\":27832:27836   */\n      dup2\n        /* \"#utility.yul\":27828:27848   */\n      sub\n        /* \"#utility.yul\":27824:27825   */\n      0x00\n        /* \"#utility.yul\":27813:27822   */\n      dup4\n        /* \"#utility.yul\":27809:27826   */\n      add\n        /* \"#utility.yul\":27802:27849   */\n      mstore\n        /* \"#utility.yul\":27866:27997   */\n      tag_582\n        /* \"#utility.yul\":27992:27996   */\n      dup2\n        /* \"#utility.yul\":27866:27997   */\n      tag_284\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":27858:27997   */\n      swap1\n      pop\n        /* \"#utility.yul\":27585:28004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28010:28186   */\n    tag_285:\n        /* \"#utility.yul\":28150:28178   */\n      0x46756e6420557064617465206e6f7420617574686f72697a6564000000000000\n        /* \"#utility.yul\":28146:28147   */\n      0x00\n        /* \"#utility.yul\":28138:28144   */\n      dup3\n        /* \"#utility.yul\":28134:28148   */\n      add\n        /* \"#utility.yul\":28127:28179   */\n      mstore\n        /* \"#utility.yul\":28010:28186   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28192:28558   */\n    tag_286:\n        /* \"#utility.yul\":28334:28337   */\n      0x00\n        /* \"#utility.yul\":28355:28422   */\n      tag_585\n        /* \"#utility.yul\":28419:28421   */\n      0x1a\n        /* \"#utility.yul\":28414:28417   */\n      dup4\n        /* \"#utility.yul\":28355:28422   */\n      tag_278\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":28348:28422   */\n      swap2\n      pop\n        /* \"#utility.yul\":28431:28524   */\n      tag_586\n        /* \"#utility.yul\":28520:28523   */\n      dup3\n        /* \"#utility.yul\":28431:28524   */\n      tag_285\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":28549:28551   */\n      0x20\n        /* \"#utility.yul\":28544:28547   */\n      dup3\n        /* \"#utility.yul\":28540:28552   */\n      add\n        /* \"#utility.yul\":28533:28552   */\n      swap1\n      pop\n        /* \"#utility.yul\":28192:28558   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28564:28983   */\n    tag_171:\n        /* \"#utility.yul\":28730:28734   */\n      0x00\n        /* \"#utility.yul\":28768:28770   */\n      0x20\n        /* \"#utility.yul\":28757:28766   */\n      dup3\n        /* \"#utility.yul\":28753:28771   */\n      add\n        /* \"#utility.yul\":28745:28771   */\n      swap1\n      pop\n        /* \"#utility.yul\":28817:28826   */\n      dup2\n        /* \"#utility.yul\":28811:28815   */\n      dup2\n        /* \"#utility.yul\":28807:28827   */\n      sub\n        /* \"#utility.yul\":28803:28804   */\n      0x00\n        /* \"#utility.yul\":28792:28801   */\n      dup4\n        /* \"#utility.yul\":28788:28805   */\n      add\n        /* \"#utility.yul\":28781:28828   */\n      mstore\n        /* \"#utility.yul\":28845:28976   */\n      tag_588\n        /* \"#utility.yul\":28971:28975   */\n      dup2\n        /* \"#utility.yul\":28845:28976   */\n      tag_286\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":28837:28976   */\n      swap1\n      pop\n        /* \"#utility.yul\":28564:28983   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":28989:29074   */\n    tag_287:\n        /* \"#utility.yul\":29034:29041   */\n      0x00\n        /* \"#utility.yul\":29063:29068   */\n      dup2\n        /* \"#utility.yul\":29052:29068   */\n      swap1\n      pop\n        /* \"#utility.yul\":28989:29074   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29080:29238   */\n    tag_288:\n        /* \"#utility.yul\":29138:29147   */\n      0x00\n        /* \"#utility.yul\":29171:29232   */\n      tag_591\n        /* \"#utility.yul\":29189:29231   */\n      tag_592\n        /* \"#utility.yul\":29198:29230   */\n      tag_593\n        /* \"#utility.yul\":29224:29229   */\n      dup5\n        /* \"#utility.yul\":29198:29230   */\n      tag_287\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":29189:29231   */\n      tag_272\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":29171:29232   */\n      tag_236\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":29158:29232   */\n      swap1\n      pop\n        /* \"#utility.yul\":29080:29238   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29244:29391   */\n    tag_289:\n        /* \"#utility.yul\":29339:29384   */\n      tag_595\n        /* \"#utility.yul\":29378:29383   */\n      dup2\n        /* \"#utility.yul\":29339:29384   */\n      tag_288\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":29334:29337   */\n      dup3\n        /* \"#utility.yul\":29327:29385   */\n      mstore\n        /* \"#utility.yul\":29244:29391   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29397:29745   */\n    tag_177:\n        /* \"#utility.yul\":29526:29530   */\n      0x00\n        /* \"#utility.yul\":29564:29566   */\n      0x40\n        /* \"#utility.yul\":29553:29562   */\n      dup3\n        /* \"#utility.yul\":29549:29567   */\n      add\n        /* \"#utility.yul\":29541:29567   */\n      swap1\n      pop\n        /* \"#utility.yul\":29577:29648   */\n      tag_597\n        /* \"#utility.yul\":29645:29646   */\n      0x00\n        /* \"#utility.yul\":29634:29643   */\n      dup4\n        /* \"#utility.yul\":29630:29647   */\n      add\n        /* \"#utility.yul\":29621:29627   */\n      dup6\n        /* \"#utility.yul\":29577:29648   */\n      tag_253\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":29658:29738   */\n      tag_598\n        /* \"#utility.yul\":29734:29736   */\n      0x20\n        /* \"#utility.yul\":29723:29732   */\n      dup4\n        /* \"#utility.yul\":29719:29737   */\n      add\n        /* \"#utility.yul\":29710:29716   */\n      dup5\n        /* \"#utility.yul\":29658:29738   */\n      tag_289\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":29397:29745   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29751:29894   */\n    tag_290:\n        /* \"#utility.yul\":29808:29813   */\n      0x00\n        /* \"#utility.yul\":29839:29845   */\n      dup2\n        /* \"#utility.yul\":29833:29846   */\n      mload\n        /* \"#utility.yul\":29824:29846   */\n      swap1\n      pop\n        /* \"#utility.yul\":29855:29888   */\n      tag_600\n        /* \"#utility.yul\":29882:29887   */\n      dup2\n        /* \"#utility.yul\":29855:29888   */\n      tag_237\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":29751:29894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":29900:30251   */\n    tag_181:\n        /* \"#utility.yul\":29970:29976   */\n      0x00\n        /* \"#utility.yul\":30019:30021   */\n      0x20\n        /* \"#utility.yul\":30007:30016   */\n      dup3\n        /* \"#utility.yul\":29998:30005   */\n      dup5\n        /* \"#utility.yul\":29994:30017   */\n      sub\n        /* \"#utility.yul\":29990:30022   */\n      slt\n        /* \"#utility.yul\":29987:30106   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":30025:30104   */\n      tag_603\n      tag_222\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":29987:30106   */\n    tag_602:\n        /* \"#utility.yul\":30145:30146   */\n      0x00\n        /* \"#utility.yul\":30170:30234   */\n      tag_604\n        /* \"#utility.yul\":30226:30233   */\n      dup5\n        /* \"#utility.yul\":30217:30223   */\n      dup3\n        /* \"#utility.yul\":30206:30215   */\n      dup6\n        /* \"#utility.yul\":30202:30224   */\n      add\n        /* \"#utility.yul\":30170:30234   */\n      tag_290\n      jump\t// in\n    tag_604:\n        /* \"#utility.yul\":30160:30234   */\n      swap2\n      pop\n        /* \"#utility.yul\":30116:30244   */\n      pop\n        /* \"#utility.yul\":29900:30251   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30257:30479   */\n    tag_291:\n        /* \"#utility.yul\":30397:30431   */\n      0x746f6b656e20616d6f756e74206f662075736572206e6f742073756666696369\n        /* \"#utility.yul\":30393:30394   */\n      0x00\n        /* \"#utility.yul\":30385:30391   */\n      dup3\n        /* \"#utility.yul\":30381:30395   */\n      add\n        /* \"#utility.yul\":30374:30432   */\n      mstore\n        /* \"#utility.yul\":30466:30471   */\n      0x656e740000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":30461:30463   */\n      0x20\n        /* \"#utility.yul\":30453:30459   */\n      dup3\n        /* \"#utility.yul\":30449:30464   */\n      add\n        /* \"#utility.yul\":30442:30472   */\n      mstore\n        /* \"#utility.yul\":30257:30479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30485:30851   */\n    tag_292:\n        /* \"#utility.yul\":30627:30630   */\n      0x00\n        /* \"#utility.yul\":30648:30715   */\n      tag_607\n        /* \"#utility.yul\":30712:30714   */\n      0x23\n        /* \"#utility.yul\":30707:30710   */\n      dup4\n        /* \"#utility.yul\":30648:30715   */\n      tag_278\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":30641:30715   */\n      swap2\n      pop\n        /* \"#utility.yul\":30724:30817   */\n      tag_608\n        /* \"#utility.yul\":30813:30816   */\n      dup3\n        /* \"#utility.yul\":30724:30817   */\n      tag_291\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":30842:30844   */\n      0x40\n        /* \"#utility.yul\":30837:30840   */\n      dup3\n        /* \"#utility.yul\":30833:30845   */\n      add\n        /* \"#utility.yul\":30826:30845   */\n      swap1\n      pop\n        /* \"#utility.yul\":30485:30851   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":30857:31276   */\n    tag_184:\n        /* \"#utility.yul\":31023:31027   */\n      0x00\n        /* \"#utility.yul\":31061:31063   */\n      0x20\n        /* \"#utility.yul\":31050:31059   */\n      dup3\n        /* \"#utility.yul\":31046:31064   */\n      add\n        /* \"#utility.yul\":31038:31064   */\n      swap1\n      pop\n        /* \"#utility.yul\":31110:31119   */\n      dup2\n        /* \"#utility.yul\":31104:31108   */\n      dup2\n        /* \"#utility.yul\":31100:31120   */\n      sub\n        /* \"#utility.yul\":31096:31097   */\n      0x00\n        /* \"#utility.yul\":31085:31094   */\n      dup4\n        /* \"#utility.yul\":31081:31098   */\n      add\n        /* \"#utility.yul\":31074:31121   */\n      mstore\n        /* \"#utility.yul\":31138:31269   */\n      tag_610\n        /* \"#utility.yul\":31264:31268   */\n      dup2\n        /* \"#utility.yul\":31138:31269   */\n      tag_292\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":31130:31269   */\n      swap1\n      pop\n        /* \"#utility.yul\":30857:31276   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31282:31614   */\n    tag_186:\n        /* \"#utility.yul\":31403:31407   */\n      0x00\n        /* \"#utility.yul\":31441:31443   */\n      0x40\n        /* \"#utility.yul\":31430:31439   */\n      dup3\n        /* \"#utility.yul\":31426:31444   */\n      add\n        /* \"#utility.yul\":31418:31444   */\n      swap1\n      pop\n        /* \"#utility.yul\":31454:31525   */\n      tag_612\n        /* \"#utility.yul\":31522:31523   */\n      0x00\n        /* \"#utility.yul\":31511:31520   */\n      dup4\n        /* \"#utility.yul\":31507:31524   */\n      add\n        /* \"#utility.yul\":31498:31504   */\n      dup6\n        /* \"#utility.yul\":31454:31525   */\n      tag_253\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":31535:31607   */\n      tag_613\n        /* \"#utility.yul\":31603:31605   */\n      0x20\n        /* \"#utility.yul\":31592:31601   */\n      dup4\n        /* \"#utility.yul\":31588:31606   */\n      add\n        /* \"#utility.yul\":31579:31585   */\n      dup5\n        /* \"#utility.yul\":31535:31607   */\n      tag_253\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":31282:31614   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31620:31736   */\n    tag_293:\n        /* \"#utility.yul\":31690:31711   */\n      tag_615\n        /* \"#utility.yul\":31705:31710   */\n      dup2\n        /* \"#utility.yul\":31690:31711   */\n      tag_227\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":31683:31688   */\n      dup2\n        /* \"#utility.yul\":31680:31712   */\n      eq\n        /* \"#utility.yul\":31670:31730   */\n      tag_616\n      jumpi\n        /* \"#utility.yul\":31726:31727   */\n      0x00\n        /* \"#utility.yul\":31723:31724   */\n      dup1\n        /* \"#utility.yul\":31716:31728   */\n      revert\n        /* \"#utility.yul\":31670:31730   */\n    tag_616:\n        /* \"#utility.yul\":31620:31736   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31742:31879   */\n    tag_294:\n        /* \"#utility.yul\":31796:31801   */\n      0x00\n        /* \"#utility.yul\":31827:31833   */\n      dup2\n        /* \"#utility.yul\":31821:31834   */\n      mload\n        /* \"#utility.yul\":31812:31834   */\n      swap1\n      pop\n        /* \"#utility.yul\":31843:31873   */\n      tag_618\n        /* \"#utility.yul\":31867:31872   */\n      dup2\n        /* \"#utility.yul\":31843:31873   */\n      tag_293\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":31742:31879   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":31885:32230   */\n    tag_190:\n        /* \"#utility.yul\":31952:31958   */\n      0x00\n        /* \"#utility.yul\":32001:32003   */\n      0x20\n        /* \"#utility.yul\":31989:31998   */\n      dup3\n        /* \"#utility.yul\":31980:31987   */\n      dup5\n        /* \"#utility.yul\":31976:31999   */\n      sub\n        /* \"#utility.yul\":31972:32004   */\n      slt\n        /* \"#utility.yul\":31969:32088   */\n      iszero\n      tag_620\n      jumpi\n        /* \"#utility.yul\":32007:32086   */\n      tag_621\n      tag_222\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":31969:32088   */\n    tag_620:\n        /* \"#utility.yul\":32127:32128   */\n      0x00\n        /* \"#utility.yul\":32152:32213   */\n      tag_622\n        /* \"#utility.yul\":32205:32212   */\n      dup5\n        /* \"#utility.yul\":32196:32202   */\n      dup3\n        /* \"#utility.yul\":32185:32194   */\n      dup6\n        /* \"#utility.yul\":32181:32203   */\n      add\n        /* \"#utility.yul\":32152:32213   */\n      tag_294\n      jump\t// in\n    tag_622:\n        /* \"#utility.yul\":32142:32213   */\n      swap2\n      pop\n        /* \"#utility.yul\":32098:32223   */\n      pop\n        /* \"#utility.yul\":31885:32230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32236:32410   */\n    tag_295:\n        /* \"#utility.yul\":32376:32402   */\n      0x746f6b656e20616c6c6f77616e63652073686f72746167650000000000000000\n        /* \"#utility.yul\":32372:32373   */\n      0x00\n        /* \"#utility.yul\":32364:32370   */\n      dup3\n        /* \"#utility.yul\":32360:32374   */\n      add\n        /* \"#utility.yul\":32353:32403   */\n      mstore\n        /* \"#utility.yul\":32236:32410   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32416:32782   */\n    tag_296:\n        /* \"#utility.yul\":32558:32561   */\n      0x00\n        /* \"#utility.yul\":32579:32646   */\n      tag_625\n        /* \"#utility.yul\":32643:32645   */\n      0x18\n        /* \"#utility.yul\":32638:32641   */\n      dup4\n        /* \"#utility.yul\":32579:32646   */\n      tag_278\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":32572:32646   */\n      swap2\n      pop\n        /* \"#utility.yul\":32655:32748   */\n      tag_626\n        /* \"#utility.yul\":32744:32747   */\n      dup3\n        /* \"#utility.yul\":32655:32748   */\n      tag_295\n      jump\t// in\n    tag_626:\n        /* \"#utility.yul\":32773:32775   */\n      0x20\n        /* \"#utility.yul\":32768:32771   */\n      dup3\n        /* \"#utility.yul\":32764:32776   */\n      add\n        /* \"#utility.yul\":32757:32776   */\n      swap1\n      pop\n        /* \"#utility.yul\":32416:32782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":32788:33207   */\n    tag_193:\n        /* \"#utility.yul\":32954:32958   */\n      0x00\n        /* \"#utility.yul\":32992:32994   */\n      0x20\n        /* \"#utility.yul\":32981:32990   */\n      dup3\n        /* \"#utility.yul\":32977:32995   */\n      add\n        /* \"#utility.yul\":32969:32995   */\n      swap1\n      pop\n        /* \"#utility.yul\":33041:33050   */\n      dup2\n        /* \"#utility.yul\":33035:33039   */\n      dup2\n        /* \"#utility.yul\":33031:33051   */\n      sub\n        /* \"#utility.yul\":33027:33028   */\n      0x00\n        /* \"#utility.yul\":33016:33025   */\n      dup4\n        /* \"#utility.yul\":33012:33029   */\n      add\n        /* \"#utility.yul\":33005:33052   */\n      mstore\n        /* \"#utility.yul\":33069:33200   */\n      tag_628\n        /* \"#utility.yul\":33195:33199   */\n      dup2\n        /* \"#utility.yul\":33069:33200   */\n      tag_296\n      jump\t// in\n    tag_628:\n        /* \"#utility.yul\":33061:33200   */\n      swap1\n      pop\n        /* \"#utility.yul\":32788:33207   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":33213:34088   */\n    tag_195:\n        /* \"#utility.yul\":33498:33502   */\n      0x00\n        /* \"#utility.yul\":33536:33539   */\n      0xa0\n        /* \"#utility.yul\":33525:33534   */\n      dup3\n        /* \"#utility.yul\":33521:33540   */\n      add\n        /* \"#utility.yul\":33513:33540   */\n      swap1\n      pop\n        /* \"#utility.yul\":33550:33621   */\n      tag_630\n        /* \"#utility.yul\":33618:33619   */\n      0x00\n        /* \"#utility.yul\":33607:33616   */\n      dup4\n        /* \"#utility.yul\":33603:33620   */\n      add\n        /* \"#utility.yul\":33594:33600   */\n      dup8\n        /* \"#utility.yul\":33550:33621   */\n      tag_253\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":33631:33703   */\n      tag_631\n        /* \"#utility.yul\":33699:33701   */\n      0x20\n        /* \"#utility.yul\":33688:33697   */\n      dup4\n        /* \"#utility.yul\":33684:33702   */\n      add\n        /* \"#utility.yul\":33675:33681   */\n      dup7\n        /* \"#utility.yul\":33631:33703   */\n      tag_253\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":33713:33793   */\n      tag_632\n        /* \"#utility.yul\":33789:33791   */\n      0x40\n        /* \"#utility.yul\":33778:33787   */\n      dup4\n        /* \"#utility.yul\":33774:33792   */\n      add\n        /* \"#utility.yul\":33765:33771   */\n      dup6\n        /* \"#utility.yul\":33713:33793   */\n      tag_289\n      jump\t// in\n    tag_632:\n        /* \"#utility.yul\":33803:33875   */\n      tag_633\n        /* \"#utility.yul\":33871:33873   */\n      0x60\n        /* \"#utility.yul\":33860:33869   */\n      dup4\n        /* \"#utility.yul\":33856:33874   */\n      add\n        /* \"#utility.yul\":33847:33853   */\n      dup5\n        /* \"#utility.yul\":33803:33875   */\n      tag_255\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":33923:33932   */\n      dup2\n        /* \"#utility.yul\":33917:33921   */\n      dup2\n        /* \"#utility.yul\":33913:33933   */\n      sub\n        /* \"#utility.yul\":33907:33910   */\n      0x80\n        /* \"#utility.yul\":33896:33905   */\n      dup4\n        /* \"#utility.yul\":33892:33911   */\n      add\n        /* \"#utility.yul\":33885:33934   */\n      mstore\n        /* \"#utility.yul\":33951:34081   */\n      tag_634\n        /* \"#utility.yul\":34076:34080   */\n      dup2\n        /* \"#utility.yul\":33951:34081   */\n      tag_277\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":33943:34081   */\n      swap1\n      pop\n        /* \"#utility.yul\":33213:34088   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":34094:34426   */\n    tag_219:\n        /* \"#utility.yul\":34215:34219   */\n      0x00\n        /* \"#utility.yul\":34253:34255   */\n      0x40\n        /* \"#utility.yul\":34242:34251   */\n      dup3\n        /* \"#utility.yul\":34238:34256   */\n      add\n        /* \"#utility.yul\":34230:34256   */\n      swap1\n      pop\n        /* \"#utility.yul\":34266:34337   */\n      tag_636\n        /* \"#utility.yul\":34334:34335   */\n      0x00\n        /* \"#utility.yul\":34323:34332   */\n      dup4\n        /* \"#utility.yul\":34319:34336   */\n      add\n        /* \"#utility.yul\":34310:34316   */\n      dup6\n        /* \"#utility.yul\":34266:34337   */\n      tag_255\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":34347:34419   */\n      tag_637\n        /* \"#utility.yul\":34415:34417   */\n      0x20\n        /* \"#utility.yul\":34404:34413   */\n      dup4\n        /* \"#utility.yul\":34400:34418   */\n      add\n        /* \"#utility.yul\":34391:34397   */\n      dup5\n        /* \"#utility.yul\":34347:34419   */\n      tag_255\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":34094:34426   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122062b0b5812d742be69be8b0b3f7f76bae4da0815971b1a0bd355fb42c340ded4664736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_3437": {
									"entryPoint": null,
									"id": 3437,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_contract$_ERC1155_$2811_fromMemory": {
									"entryPoint": 222,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_contract$_ERC1155_$2811_fromMemory": {
									"entryPoint": 244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 159,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_contract$_ERC1155_$2811": {
									"entryPoint": 178,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 128,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 124,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_contract$_ERC1155_$2811": {
									"entryPoint": 197,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1413:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "379:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "389:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "411:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "400:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "511:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "521:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "532:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "493:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "503:7:1",
														"type": ""
													}
												],
												"src": "466:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "629:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "639:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "668:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "650:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "639:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_contract$_ERC1155_$2811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "611:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "621:7:1",
														"type": ""
													}
												],
												"src": "568:112:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "745:95:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "818:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "827:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "830:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "820:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "820:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "768:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "809:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_contract$_ERC1155_$2811",
																					"nodeType": "YulIdentifier",
																					"src": "775:33:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "775:40:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "765:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "765:51:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "758:59:1"
															},
															"nodeType": "YulIf",
															"src": "755:79:1"
														}
													]
												},
												"name": "validator_revert_t_contract$_ERC1155_$2811",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "738:5:1",
														"type": ""
													}
												],
												"src": "686:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "925:96:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "935:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "950:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "944:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "944:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "935:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1009:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_contract$_ERC1155_$2811",
																	"nodeType": "YulIdentifier",
																	"src": "966:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "966:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "966:49:1"
														}
													]
												},
												"name": "abi_decode_t_contract$_ERC1155_$2811_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "903:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "911:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "919:5:1",
														"type": ""
													}
												],
												"src": "846:175:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1120:290:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1166:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1168:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1168:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1168:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1141:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1150:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1137:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1137:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1162:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1133:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1133:32:1"
															},
															"nodeType": "YulIf",
															"src": "1130:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1259:144:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1274:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1278:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1303:90:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1365:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1376:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1361:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1361:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1385:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_contract$_ERC1155_$2811_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1313:47:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:80:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1303:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_contract$_ERC1155_$2811_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1090:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1101:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1113:6:1",
														"type": ""
													}
												],
												"src": "1027:383:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ERC1155_$2811(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ERC1155_$2811(value) {\n        if iszero(eq(value, cleanup_t_contract$_ERC1155_$2811(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ERC1155_$2811_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ERC1155_$2811(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ERC1155_$2811_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ERC1155_$2811_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801562000010575f80fd5b5060405162002fa738038062002fa78339818101604052810190620000369190620000f4565b805f806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000124565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f620000ab8262000080565b9050919050565b5f620000be826200009f565b9050919050565b620000d081620000b2565b8114620000db575f80fd5b50565b5f81519050620000ee81620000c5565b92915050565b5f602082840312156200010c576200010b6200007c565b5b5f6200011b84828501620000de565b91505092915050565b612e7580620001325f395ff3fe608060405234801561000f575f80fd5b50600436106100e8575f3560e01c80633f936ff51161008a57806388b53ced1161006457806388b53ced14610289578063bc197c81146102a5578063dd7d7929146102d5578063f23a6e61146102f1576100e8565b80633f936ff5146102095780636c173d38146102275780637a3819cb14610257576100e8565b80631c69b464116100c65780631c69b464146101545780631f71f89f146101725780632f14670c146101a9578063380eaaf9146101d9576100e8565b806301ffc9a7146100ec57806311c9fb831461011c5780631744462614610138575b5f80fd5b61010660048036038101906101019190611d68565b610321565b6040516101139190611dad565b60405180910390f35b61013660048036038101906101319190611e07565b61039a565b005b610152600480360381019061014d9190611ed2565b61071e565b005b61015c6109e5565b60405161016991906120c7565b60405180910390f35b61018c600480360381019061018791906120e7565b610a0f565b6040516101a098979695949392919061214e565b60405180910390f35b6101c360048036038101906101be91906121ca565b610ad8565b6040516101d09190612208565b60405180910390f35b6101f360048036038101906101ee9190611e07565b610b20565b60405161020091906120c7565b60405180910390f35b610211610e8c565b60405161021e9190612221565b60405180910390f35b610241600480360381019061023c91906120e7565b610ea9565b60405161024e9190612208565b60405180910390f35b610271600480360381019061026c919061223a565b610f79565b6040516102809392919061228a565b60405180910390f35b6102a3600480360381019061029e91906122bf565b610ffa565b005b6102bf60048036038101906102ba919061250f565b611013565b6040516102cc91906125e9565b60405180910390f35b6102ef60048036038101906102ea9190612602565b611027565b005b61030b60048036038101906103069190612666565b6114a9565b60405161031891906125e9565b60405180910390f35b5f7f4e2312e0000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103935750610392826114bd565b5b9050919050565b5f60015f846bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f206003015490505f60025f856bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f2080548060200260200160405190810160405280929190818152602001828054801561047957602002820191905f5260205f20905b815f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610430575b505050505090505f805f90505b8251816bffffffffffffffffffffffff161015610716575f91505f5b60035f886bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f205f85846bffffffffffffffffffffffff16815181106104f1576104f06126f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2080549050816bffffffffffffffffffffffff16101561062b5760035f886bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f205f85846bffffffffffffffffffffffff168151811061059a576105996126f9565b5b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20816bffffffffffffffffffffffff16815481106105fb576105fa6126f9565b5b905f5260205f20906002020160010154836106169190612753565b9250808061062390612786565b9150506104a2565b505f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a3085846bffffffffffffffffffffffff1681518110610689576106886126f9565b5b602002602001015189888a6bffffffffffffffffffffffff16886106ad91906127b9565b6106b79190612827565b6040518563ffffffff1660e01b81526004016106d694939291906128ea565b5f604051808303815f87803b1580156106ed575f80fd5b505af11580156106ff573d5f803e3d5ffd5b50505050808061070e90612786565b915050610486565b505050505050565b5f8060149054906101000a90046bffffffffffffffffffffffff169050604051806101000160405280826bffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff1681526020014265ffffffffffff1681526020014265ffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020015f81526020015f151581525060015f836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506020820151815f01600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001015f6101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550608082015181600101600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816002015560c0820151816003015560e0820151816004015f6101000a81548160ff0219169083151502179055509050505f82826bffffffffffffffffffffffff167f1e216cc18d3e93f7c7b9a7b3a038093bc655d3d5cbfbb504d67d4376bd02d13f87875f426040516109809493929190612940565b60405180910390a460015f60148282829054906101000a90046bffffffffffffffffffffffff166109b19190612983565b92506101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555050505050565b6060610a0a5f8060149054906101000a90046bffffffffffffffffffffffff16610b20565b905090565b6001602052805f5260405f205f91509050805f015f9054906101000a90046bffffffffffffffffffffffff1690805f01600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806001015f9054906101000a900465ffffffffffff16908060010160069054906101000a900465ffffffffffff169080600101600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690806002015490806003015490806004015f9054906101000a900460ff16905088565b6002602052815f5260405f208181548110610af1575f80fd5b905f5260205f20015f915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60605f60149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16826bffffffffffffffffffffffff161115610b9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b9190612a1c565b60405180910390fd5b816bffffffffffffffffffffffff16836bffffffffffffffffffffffff161115610bf9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bf090612a84565b60405180910390fd5b5f8383610c069190612aa2565b6bffffffffffffffffffffffff1667ffffffffffffffff811115610c2d57610c2c612323565b5b604051908082528060200260200182016040528015610c6657816020015b610c53611c79565b815260200190600190039081610c4b5790505b5090505f8490505b836bffffffffffffffffffffffff16816bffffffffffffffffffffffff161015610e815760015f826bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20604051806101000160405290815f82015f9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020015f8201600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff161515151581525050828683610e449190612aa2565b6bffffffffffffffffffffffff1681518110610e6357610e626126f9565b5b60200260200101819052508080610e7990612786565b915050610c6e565b508091505092915050565b5f60149054906101000a90046bffffffffffffffffffffffff1681565b5f8060149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff16826bffffffffffffffffffffffff1610610f21576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f1890612b2b565b60405180910390fd5b60015f836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20600101600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6003602052825f5260405f20602052815f5260405f208181548110610f9c575f80fd5b905f5260205f2090600202015f925092505050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a90046bffffffffffffffffffffffff16908060010154905083565b611005838383611526565b61100e82611a7f565b505050565b5f63bc197c8160e01b905095945050505050565b5f60015f866bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20604051806101000160405290815f82015f9054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020015f8201600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015f9054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff1681526020016001820160069054906101000a900465ffffffffffff1665ffffffffffff1665ffffffffffff16815260200160018201600c9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015f9054906101000a900460ff1615151515815250509050806020015173ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611241576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161123890612b93565b60405180910390fd5b604051806101000160405280866bffffffffffffffffffffffff1681526020018573ffffffffffffffffffffffffffffffffffffffff168152602001826040015165ffffffffffff1681526020014265ffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018381526020018260c0015181526020018260e00151151581525060015f876bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f205f820151815f015f6101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506020820151815f01600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816001015f6101000a81548165ffffffffffff021916908365ffffffffffff16021790555060608201518160010160066101000a81548165ffffffffffff021916908365ffffffffffff160217905550608082015181600101600c6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060a0820151816002015560c0820151816003015560e0820151816004015f6101000a81548160ff0219169083151502179055509050508060c0015182866bffffffffffffffffffffffff167f603e97a48f8cadd1e9020bf96470c32853c5d9d8ed30f7cbe961f12ad2a45fa087878660e001514260405161149a9493929190612940565b60405180910390a45050505050565b5f63f23a6e6160e01b905095945050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b805f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1662fdd58e855f6040518363ffffffff1660e01b8152600401611580929190612bea565b602060405180830381865afa15801561159b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115bf9190612c25565b116115ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115f690612cc0565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663e985e9c584306040518363ffffffff1660e01b8152600401611659929190612cde565b602060405180830381865afa158015611674573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906116989190612d2f565b6116d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ce90612da4565b60405180910390fd5b5f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a84305f856040518563ffffffff1660e01b81526004016117359493929190612dc2565b5f604051808303815f87803b15801561174c575f80fd5b505af115801561175e573d5f803e3d5ffd5b505050505f60405180606001604052808573ffffffffffffffffffffffffffffffffffffffff168152602001846bffffffffffffffffffffffff16815260200183815250905060035f846bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081908060018154018082558091505060019003905f5260205f2090600202015f909190919091505f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506040820151816001015550508160015f856bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20600301546118f59190612753565b60015f856bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20600301819055505f60025f856bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f2090505f600190505f5b8280549050816bffffffffffffffffffffffff161015611a10578673ffffffffffffffffffffffffffffffffffffffff1683826bffffffffffffffffffffffff16815481106119b2576119b16126f9565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036119fd575f9150611a10565b8080611a0890612786565b915050611960565b508015611a77578186908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b505050505050565b60015f826bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f206003015460015f836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20600201541015611c76575f8054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f242432a30611b2c84610ea9565b5f60015f876bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f20600301546040518563ffffffff1660e01b8152600401611b7d9493929190612dc2565b5f604051808303815f87803b158015611b94575f80fd5b505af1158015611ba6573d5f803e3d5ffd5b50505050806bffffffffffffffffffffffff167fcd79837f8e8f598de24ef07ea60108df97918f95cfc31d1d61ff9fa09c24035260015f846bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f206003015442604051611c1a929190612e18565b60405180910390a26001805f836bffffffffffffffffffffffff166bffffffffffffffffffffffff1681526020019081526020015f206004015f6101000a81548160ff021916908315150217905550611c75816103e861039a565b5b50565b6040518061010001604052805f6bffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f65ffffffffffff1681526020015f65ffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f81526020015f81526020015f151581525090565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611d4781611d13565b8114611d51575f80fd5b50565b5f81359050611d6281611d3e565b92915050565b5f60208284031215611d7d57611d7c611d0b565b5b5f611d8a84828501611d54565b91505092915050565b5f8115159050919050565b611da781611d93565b82525050565b5f602082019050611dc05f830184611d9e565b92915050565b5f6bffffffffffffffffffffffff82169050919050565b611de681611dc6565b8114611df0575f80fd5b50565b5f81359050611e0181611ddd565b92915050565b5f8060408385031215611e1d57611e1c611d0b565b5b5f611e2a85828601611df3565b9250506020611e3b85828601611df3565b9150509250929050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611e6e82611e45565b9050919050565b611e7e81611e64565b8114611e88575f80fd5b50565b5f81359050611e9981611e75565b92915050565b5f819050919050565b611eb181611e9f565b8114611ebb575f80fd5b50565b5f81359050611ecc81611ea8565b92915050565b5f805f60608486031215611ee957611ee8611d0b565b5b5f611ef686828701611e8b565b9350506020611f0786828701611e8b565b9250506040611f1886828701611ebe565b9150509250925092565b5f81519050919050565b5f82825260208201905092915050565b5f819050602082019050919050565b611f5481611dc6565b82525050565b611f6381611e64565b82525050565b5f65ffffffffffff82169050919050565b611f8381611f69565b82525050565b611f9281611e9f565b82525050565b611fa181611d93565b82525050565b61010082015f820151611fbc5f850182611f4b565b506020820151611fcf6020850182611f5a565b506040820151611fe26040850182611f7a565b506060820151611ff56060850182611f7a565b5060808201516120086080850182611f5a565b5060a082015161201b60a0850182611f89565b5060c082015161202e60c0850182611f89565b5060e082015161204160e0850182611f98565b50505050565b5f6120528383611fa7565b6101008301905092915050565b5f602082019050919050565b5f61207582611f22565b61207f8185611f2c565b935061208a83611f3c565b805f5b838110156120ba5781516120a18882612047565b97506120ac8361205f565b92505060018101905061208d565b5085935050505092915050565b5f6020820190508181035f8301526120df818461206b565b905092915050565b5f602082840312156120fc576120fb611d0b565b5b5f61210984828501611df3565b91505092915050565b61211b81611dc6565b82525050565b61212a81611e64565b82525050565b61213981611f69565b82525050565b61214881611e9f565b82525050565b5f610100820190506121625f83018b612112565b61216f602083018a612121565b61217c6040830189612130565b6121896060830188612130565b6121966080830187612121565b6121a360a083018661213f565b6121b060c083018561213f565b6121bd60e0830184611d9e565b9998505050505050505050565b5f80604083850312156121e0576121df611d0b565b5b5f6121ed85828601611df3565b92505060206121fe85828601611ebe565b9150509250929050565b5f60208201905061221b5f830184612121565b92915050565b5f6020820190506122345f830184612112565b92915050565b5f805f6060848603121561225157612250611d0b565b5b5f61225e86828701611df3565b935050602061226f86828701611e8b565b925050604061228086828701611ebe565b9150509250925092565b5f60608201905061229d5f830186612121565b6122aa6020830185612112565b6122b7604083018461213f565b949350505050565b5f805f606084860312156122d6576122d5611d0b565b5b5f6122e386828701611e8b565b93505060206122f486828701611df3565b925050604061230586828701611ebe565b9150509250925092565b5f80fd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61235982612313565b810181811067ffffffffffffffff8211171561237857612377612323565b5b80604052505050565b5f61238a611d02565b90506123968282612350565b919050565b5f67ffffffffffffffff8211156123b5576123b4612323565b5b602082029050602081019050919050565b5f80fd5b5f6123dc6123d78461239b565b612381565b905080838252602082019050602084028301858111156123ff576123fe6123c6565b5b835b8181101561242857806124148882611ebe565b845260208401935050602081019050612401565b5050509392505050565b5f82601f8301126124465761244561230f565b5b81356124568482602086016123ca565b91505092915050565b5f80fd5b5f67ffffffffffffffff82111561247d5761247c612323565b5b61248682612313565b9050602081019050919050565b828183375f83830152505050565b5f6124b36124ae84612463565b612381565b9050828152602081018484840111156124cf576124ce61245f565b5b6124da848285612493565b509392505050565b5f82601f8301126124f6576124f561230f565b5b81356125068482602086016124a1565b91505092915050565b5f805f805f60a0868803121561252857612527611d0b565b5b5f61253588828901611e8b565b955050602061254688828901611e8b565b945050604086013567ffffffffffffffff81111561256757612566611d0f565b5b61257388828901612432565b935050606086013567ffffffffffffffff81111561259457612593611d0f565b5b6125a088828901612432565b925050608086013567ffffffffffffffff8111156125c1576125c0611d0f565b5b6125cd888289016124e2565b9150509295509295909350565b6125e381611d13565b82525050565b5f6020820190506125fc5f8301846125da565b92915050565b5f805f806080858703121561261a57612619611d0b565b5b5f61262787828801611df3565b945050602061263887828801611e8b565b935050604061264987828801611e8b565b925050606061265a87828801611ebe565b91505092959194509250565b5f805f805f60a0868803121561267f5761267e611d0b565b5b5f61268c88828901611e8b565b955050602061269d88828901611e8b565b94505060406126ae88828901611ebe565b93505060606126bf88828901611ebe565b925050608086013567ffffffffffffffff8111156126e0576126df611d0f565b5b6126ec888289016124e2565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61275d82611e9f565b915061276883611e9f565b92508282019050808211156127805761277f612726565b5b92915050565b5f61279082611dc6565b91506bffffffffffffffffffffffff82036127ae576127ad612726565b5b600182019050919050565b5f6127c382611e9f565b91506127ce83611e9f565b92508282026127dc81611e9f565b915082820484148315176127f3576127f2612726565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61283182611e9f565b915061283c83611e9f565b92508261284c5761284b6127fa565b5b828204905092915050565b5f819050919050565b5f61287a61287561287084611dc6565b612857565b611e9f565b9050919050565b61288a81612860565b82525050565b5f82825260208201905092915050565b7f30783000000000000000000000000000000000000000000000000000000000005f82015250565b5f6128d4600383612890565b91506128df826128a0565b602082019050919050565b5f60a0820190506128fd5f830187612121565b61290a6020830186612121565b6129176040830185612881565b612924606083018461213f565b8181036080830152612935816128c8565b905095945050505050565b5f6080820190506129535f830187612121565b6129606020830186612121565b61296d6040830185611d9e565b61297a606083018461213f565b95945050505050565b5f61298d82611dc6565b915061299883611dc6565b925082820190506bffffffffffffffffffffffff8111156129bc576129bb612726565b5b92915050565b5f82825260208201905092915050565b7f4d757374206265205f656e644964203c3d2066756e64436f756e7400000000005f82015250565b5f612a06601b836129c2565b9150612a11826129d2565b602082019050919050565b5f6020820190508181035f830152612a33816129fa565b9050919050565b7f4d757374206265205f73746172744964203c3d205f656e6449640000000000005f82015250565b5f612a6e601a836129c2565b9150612a7982612a3a565b602082019050919050565b5f6020820190508181035f830152612a9b81612a62565b9050919050565b5f612aac82611dc6565b9150612ab783611dc6565b925082820390506bffffffffffffffffffffffff811115612adb57612ada612726565b5b92915050565b7f4d757374206265205f6964203c2066756e64436f756e740000000000000000005f82015250565b5f612b156017836129c2565b9150612b2082612ae1565b602082019050919050565b5f6020820190508181035f830152612b4281612b09565b9050919050565b7f46756e6420557064617465206e6f7420617574686f72697a65640000000000005f82015250565b5f612b7d601a836129c2565b9150612b8882612b49565b602082019050919050565b5f6020820190508181035f830152612baa81612b71565b9050919050565b5f819050919050565b5f612bd4612bcf612bca84612bb1565b612857565b611e9f565b9050919050565b612be481612bba565b82525050565b5f604082019050612bfd5f830185612121565b612c0a6020830184612bdb565b9392505050565b5f81519050612c1f81611ea8565b92915050565b5f60208284031215612c3a57612c39611d0b565b5b5f612c4784828501612c11565b91505092915050565b7f746f6b656e20616d6f756e74206f662075736572206e6f7420737566666963695f8201527f656e740000000000000000000000000000000000000000000000000000000000602082015250565b5f612caa6023836129c2565b9150612cb582612c50565b604082019050919050565b5f6020820190508181035f830152612cd781612c9e565b9050919050565b5f604082019050612cf15f830185612121565b612cfe6020830184612121565b9392505050565b612d0e81611d93565b8114612d18575f80fd5b50565b5f81519050612d2981612d05565b92915050565b5f60208284031215612d4457612d43611d0b565b5b5f612d5184828501612d1b565b91505092915050565b7f746f6b656e20616c6c6f77616e63652073686f727461676500000000000000005f82015250565b5f612d8e6018836129c2565b9150612d9982612d5a565b602082019050919050565b5f6020820190508181035f830152612dbb81612d82565b9050919050565b5f60a082019050612dd55f830187612121565b612de26020830186612121565b612def6040830185612bdb565b612dfc606083018461213f565b8181036080830152612e0d816128c8565b905095945050505050565b5f604082019050612e2b5f83018561213f565b612e38602083018461213f565b939250505056fea264697066735822122062b0b5812d742be69be8b0b3f7f76bae4da0815971b1a0bd355fb42c340ded4664736f6c63430008140033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x10 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x2FA7 CODESIZE SUB DUP1 PUSH3 0x2FA7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x36 SWAP2 SWAP1 PUSH3 0xF4 JUMP JUMPDEST DUP1 PUSH0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x124 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xAB DUP3 PUSH3 0x80 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0xBE DUP3 PUSH3 0x9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0xD0 DUP2 PUSH3 0xB2 JUMP JUMPDEST DUP2 EQ PUSH3 0xDB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH3 0xEE DUP2 PUSH3 0xC5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x10C JUMPI PUSH3 0x10B PUSH3 0x7C JUMP JUMPDEST JUMPDEST PUSH0 PUSH3 0x11B DUP5 DUP3 DUP6 ADD PUSH3 0xDE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E75 DUP1 PUSH3 0x132 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F936FF5 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x88B53CED GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x88B53CED EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xDD7D7929 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2F1 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3F936FF5 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6C173D38 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x7A3819CB EQ PUSH2 0x257 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1C69B464 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1C69B464 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x1F71F89F EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x2F14670C EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x380EAAF9 EQ PUSH2 0x1D9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x11C9FB83 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x17444626 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15C PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x1027 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x14BD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x430 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x716 JUMPI PUSH0 SWAP2 POP PUSH0 JUMPDEST PUSH1 0x3 PUSH0 DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x4F1 JUMPI PUSH2 0x4F0 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x62B JUMPI PUSH1 0x3 PUSH0 DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x599 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x5FB JUMPI PUSH2 0x5FA PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x2753 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0x623 SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4A2 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS DUP6 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP9 DUP11 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28EA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x70E SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x486 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH0 DUP3 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1E216CC18D3E93F7C7B9A7B3A038093BC655D3D5CBFBB504D67D4376BD02D13F DUP8 DUP8 PUSH0 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x980 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH0 PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0A PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB20 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB91 SWAP1 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH2 0xC06 SWAP2 SWAP1 PUSH2 0x2AA2 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2C PUSH2 0x2323 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC66 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC53 PUSH2 0x1C79 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC4B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP5 SWAP1 POP JUMPDEST DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xE81 JUMPI PUSH1 0x1 PUSH0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP7 DUP4 PUSH2 0xE44 SWAP2 SWAP1 PUSH2 0x2AA2 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0xE63 JUMPI PUSH2 0xE62 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xE79 SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC6E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1005 DUP4 DUP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x100E DUP3 PUSH2 0x1A7F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1238 SWAP1 PUSH2 0x2B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xE0 ADD MLOAD ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP8 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD DUP3 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x603E97A48F8CADD1E9020BF96470C32853C5D9D8ED30F7CBE961F12AD2A45FA0 DUP8 DUP8 DUP7 PUSH1 0xE0 ADD MLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x149A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP6 PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1580 SWAP3 SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x159B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST GT PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F6 SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1659 SWAP3 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1674 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x16D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP5 ADDRESS PUSH0 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1735 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x174C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x175E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x3 PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x18F5 SWAP2 SWAP1 PUSH2 0x2753 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 JUMPDEST DUP3 DUP1 SLOAD SWAP1 POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1A10 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x19B2 JUMPI PUSH2 0x19B1 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19FD JUMPI PUSH0 SWAP2 POP PUSH2 0x1A10 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1A08 SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1960 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1A77 JUMPI DUP2 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x1C76 JUMPI PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS PUSH2 0x1B2C DUP5 PUSH2 0xEA9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP8 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BA6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD79837F8E8F598DE24EF07EA60108DF97918F95CFC31D1D61FF9FA09C240352 PUSH1 0x1 PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1C1A SWAP3 SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C75 DUP2 PUSH2 0x3E8 PUSH2 0x39A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D47 DUP2 PUSH2 0x1D13 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D62 DUP2 PUSH2 0x1D3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8A DUP5 DUP3 DUP6 ADD PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA7 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE6 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E01 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1C PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3B DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6E DUP3 PUSH2 0x1E45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7E DUP2 PUSH2 0x1E64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E99 DUP2 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB1 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1EBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ECC DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE8 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF6 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F07 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F18 DUP7 DUP3 DUP8 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F54 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F63 DUP2 PUSH2 0x1E64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F83 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F92 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FA1 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1FBC PUSH0 DUP6 ADD DUP3 PUSH2 0x1F4B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1FCF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1F5A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1FE2 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1F7A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1FF5 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1F7A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2008 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1F5A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x201B PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1F89 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x202E PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1F89 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2041 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1F98 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2052 DUP4 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2075 DUP3 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x207F DUP2 DUP6 PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP PUSH2 0x208A DUP4 PUSH2 0x1F3C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20BA JUMPI DUP2 MLOAD PUSH2 0x20A1 DUP9 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP8 POP PUSH2 0x20AC DUP4 PUSH2 0x205F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x208D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DF DUP2 DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2109 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x211B DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x212A DUP2 PUSH2 0x1E64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2139 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH0 DUP4 ADD DUP12 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x216F PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x217C PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2130 JUMP JUMPDEST PUSH2 0x2189 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2130 JUMP JUMPDEST PUSH2 0x2196 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x21A3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x21B0 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x21BD PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x1D9E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21ED DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21FE DUP6 DUP3 DUP7 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x221B PUSH0 DUP4 ADD DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2234 PUSH0 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2251 JUMPI PUSH2 0x2250 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x225E DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x226F DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2280 DUP7 DUP3 DUP8 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x229D PUSH0 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x22AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x22B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D5 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22E3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22F4 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2305 DUP7 DUP3 DUP8 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2359 DUP3 PUSH2 0x2313 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2378 JUMPI PUSH2 0x2377 PUSH2 0x2323 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x238A PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP PUSH2 0x2396 DUP3 DUP3 PUSH2 0x2350 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23B5 JUMPI PUSH2 0x23B4 PUSH2 0x2323 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x23DC PUSH2 0x23D7 DUP5 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x23FF JUMPI PUSH2 0x23FE PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2428 JUMPI DUP1 PUSH2 0x2414 DUP9 DUP3 PUSH2 0x1EBE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2401 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2446 JUMPI PUSH2 0x2445 PUSH2 0x230F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2456 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247C PUSH2 0x2323 JUMP JUMPDEST JUMPDEST PUSH2 0x2486 DUP3 PUSH2 0x2313 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24B3 PUSH2 0x24AE DUP5 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x245F JUMP JUMPDEST JUMPDEST PUSH2 0x24DA DUP5 DUP3 DUP6 PUSH2 0x2493 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24F6 JUMPI PUSH2 0x24F5 PUSH2 0x230F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2506 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2535 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2546 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2567 JUMPI PUSH2 0x2566 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x2573 DUP9 DUP3 DUP10 ADD PUSH2 0x2432 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2594 JUMPI PUSH2 0x2593 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x25A0 DUP9 DUP3 DUP10 ADD PUSH2 0x2432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x25CD DUP9 DUP3 DUP10 ADD PUSH2 0x24E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x25E3 DUP2 PUSH2 0x1D13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25FC PUSH0 DUP4 ADD DUP5 PUSH2 0x25DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2627 DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2638 DUP8 DUP3 DUP9 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2649 DUP8 DUP3 DUP9 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x265A DUP8 DUP3 DUP9 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x267F JUMPI PUSH2 0x267E PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x268C DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x269D DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x26AE DUP9 DUP3 DUP10 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x26BF DUP9 DUP3 DUP10 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26E0 JUMPI PUSH2 0x26DF PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x26EC DUP9 DUP3 DUP10 ADD PUSH2 0x24E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x275D DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2768 DUP4 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2780 JUMPI PUSH2 0x277F PUSH2 0x2726 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2790 DUP3 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27AE JUMPI PUSH2 0x27AD PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27C3 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP PUSH2 0x27CE DUP4 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x27DC DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x27F3 JUMPI PUSH2 0x27F2 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2831 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP PUSH2 0x283C DUP4 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x284C JUMPI PUSH2 0x284B PUSH2 0x27FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x287A PUSH2 0x2875 PUSH2 0x2870 DUP5 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288A DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D4 PUSH1 0x3 DUP4 PUSH2 0x2890 JUMP JUMPDEST SWAP2 POP PUSH2 0x28DF DUP3 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x28FD PUSH0 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x290A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2917 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x2924 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2935 DUP2 PUSH2 0x28C8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2953 PUSH0 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2960 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x296D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x297A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x298D DUP3 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2998 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29BC JUMPI PUSH2 0x29BB PUSH2 0x2726 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374206265205F656E644964203C3D2066756E64436F756E740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A06 PUSH1 0x1B DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A11 DUP3 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A33 DUP2 PUSH2 0x29FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206265205F73746172744964203C3D205F656E644964000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A6E PUSH1 0x1A DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A79 DUP3 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9B DUP2 PUSH2 0x2A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AAC DUP3 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB7 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ADB JUMPI PUSH2 0x2ADA PUSH2 0x2726 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374206265205F6964203C2066756E64436F756E74000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B15 PUSH1 0x17 DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B20 DUP3 PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B42 DUP2 PUSH2 0x2B09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6420557064617465206E6F7420617574686F72697A6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B7D PUSH1 0x1A DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B88 DUP3 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BAA DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD4 PUSH2 0x2BCF PUSH2 0x2BCA DUP5 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE4 DUP2 PUSH2 0x2BBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BFD PUSH0 DUP4 ADD DUP6 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2C0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C1F DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3A JUMPI PUSH2 0x2C39 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C47 DUP5 DUP3 DUP6 ADD PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E20616D6F756E74206F662075736572206E6F742073756666696369 PUSH0 DUP3 ADD MSTORE PUSH32 0x656E740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CAA PUSH1 0x23 DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB5 DUP3 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CD7 DUP2 PUSH2 0x2C9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CF1 PUSH0 DUP4 ADD DUP6 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2CFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D0E DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D29 DUP2 PUSH2 0x2D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D44 JUMPI PUSH2 0x2D43 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D51 DUP5 DUP3 DUP6 ADD PUSH2 0x2D1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E20616C6C6F77616E63652073686F72746167650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D8E PUSH1 0x18 DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D99 DUP3 PUSH2 0x2D5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DBB DUP2 PUSH2 0x2D82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DD5 PUSH0 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2DE2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2DEF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x2DFC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E0D DUP2 PUSH2 0x28C8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E2B PUSH0 DUP4 ADD DUP6 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x2E38 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xB0B581 0x2D PUSH21 0x2BE69BE8B0B3F7F76BAE4DA0815971B1A0BD355FB4 0x2C CALLVALUE 0xD 0xED CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "73542:6065:0:-:0;;;73635:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;73681:6;73673:5;;:14;;;;;;;;;;;;;;;;;;73635:59;73542:6065;;88:117:1;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:112::-;621:7;650:24;668:5;650:24;:::i;:::-;639:35;;568:112;;;:::o;686:154::-;775:40;809:5;775:40;:::i;:::-;768:5;765:51;755:79;;830:1;827;820:12;755:79;686:154;:::o;846:175::-;919:5;950:6;944:13;935:22;;966:49;1009:5;966:49;:::i;:::-;846:175;;;;:::o;1027:383::-;1113:6;1162:2;1150:9;1141:7;1137:23;1133:32;1130:119;;;1168:79;;:::i;:::-;1130:119;1288:1;1313:80;1385:7;1376:6;1365:9;1361:22;1313:80;:::i;:::-;1303:90;;1259:144;1027:383;;;;:::o;73542:6065:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@createDonation_3695": {
									"entryPoint": 5414,
									"id": 3695,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@createFund_3572": {
									"entryPoint": 1822,
									"id": 3572,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@donate_3715": {
									"entryPoint": 4090,
									"id": 3715,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@fundCount_3426": {
									"entryPoint": 3724,
									"id": 3426,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundDonations_3479": {
									"entryPoint": 3961,
									"id": 3479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@fundUsers_3471": {
									"entryPoint": 2776,
									"id": 3471,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@funds_3466": {
									"entryPoint": 2575,
									"id": 3466,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@getAllFunds_3944": {
									"entryPoint": 2533,
									"id": 3944,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getFundPayee_4028": {
									"entryPoint": 3753,
									"id": 4028,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getFunds_4008": {
									"entryPoint": 2848,
									"id": 4008,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@mintDTiket_3868": {
									"entryPoint": 922,
									"id": 3868,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@onERC1155BatchReceived_1485": {
									"entryPoint": 4115,
									"id": 1485,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@onERC1155Received_1462": {
									"entryPoint": 5289,
									"id": 1462,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@supportsInterface_1371": {
									"entryPoint": 5309,
									"id": 1371,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_1441": {
									"entryPoint": 801,
									"id": 1441,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@updateFund_3931": {
									"entryPoint": 4135,
									"id": 3931,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@validateFunds_3772": {
									"entryPoint": 6783,
									"id": 3772,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9162,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 9377,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 7819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9266,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 11547,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 7508,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 9442,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 11281,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint96": {
									"entryPoint": 7667,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr": {
									"entryPoint": 9487,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 7890,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr": {
									"entryPoint": 9830,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_addresst_uint96t_uint256": {
									"entryPoint": 8895,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 11567,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 11301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint96": {
									"entryPoint": 8423,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint96t_addresst_addresst_uint256": {
									"entryPoint": 9730,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint96t_addresst_uint256": {
									"entryPoint": 8762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_uint96t_uint256": {
									"entryPoint": 8650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint96t_uint96": {
									"entryPoint": 7687,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encodeUpdatedPos_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr": {
									"entryPoint": 8263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8481,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 8299,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 7582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 9690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_0_by_1_to_t_uint256_fromStack": {
									"entryPoint": 11227,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10850,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11422,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11017,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11121,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10746,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr": {
									"entryPoint": 8103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 8073,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint48_to_t_uint48": {
									"entryPoint": 8058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint48_to_t_uint48_fromStack": {
									"entryPoint": 8496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint256_fromStack": {
									"entryPoint": 10369,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96": {
									"entryPoint": 8011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96_fromStack": {
									"entryPoint": 8466,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed": {
									"entryPoint": 11486,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_bool_t_uint256__to_t_address_t_address_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 10560,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_rational_0_by_1_t_uint256_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 11714,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint96_t_uint256_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 10474,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 11242,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint96_t_uint256__to_t_address_t_uint96_t_uint256__fromStack_reversed": {
									"entryPoint": 8842,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 7597,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 9705,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11684,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11456,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11051,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11155,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11800,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed": {
									"entryPoint": 8737,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint96_t_address_t_uint48_t_uint48_t_address_t_uint256_t_uint256_t_bool__to_t_uint96_t_address_t_uint48_t_uint48_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 8526,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 9089,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 7426,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 9115,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 7970,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr": {
									"entryPoint": 8287,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack": {
									"entryPoint": 7980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 10384,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 10690,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint96": {
									"entryPoint": 10627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint96": {
									"entryPoint": 10914,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 7571,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 7443,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_0_by_1": {
									"entryPoint": 11185,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint48": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 7622,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_0_by_1_to_t_uint256": {
									"entryPoint": 11194,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint96_to_t_uint256": {
									"entryPoint": 10336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 9363,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 9040,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 10327,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint96": {
									"entryPoint": 10118,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10022,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10234,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9977,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 8995,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 8975,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef": {
									"entryPoint": 9158,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 9311,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 7439,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7435,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 8979,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc": {
									"entryPoint": 11610,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08": {
									"entryPoint": 10810,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb": {
									"entryPoint": 11344,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810": {
									"entryPoint": 10400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496": {
									"entryPoint": 10977,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49": {
									"entryPoint": 11081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388": {
									"entryPoint": 10706,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7797,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 11525,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 7486,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint96": {
									"entryPoint": 7645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:34429:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "378:105:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "388:89:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "410:66:1",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:78:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "360:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "370:7:1",
														"type": ""
													}
												],
												"src": "334:149:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "531:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "587:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "596:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "599:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "544:42:1"
															},
															"nodeType": "YulIf",
															"src": "541:62:1"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "524:5:1",
														"type": ""
													}
												],
												"src": "489:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "666:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "676:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "685:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "714:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "714:32:1"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "644:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "652:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "660:5:1",
														"type": ""
													}
												],
												"src": "615:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "823:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "869:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "865:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "836:32:1"
															},
															"nodeType": "YulIf",
															"src": "833:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "962:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "991:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "981:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1006:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "793:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "804:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "816:6:1",
														"type": ""
													}
												],
												"src": "758:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1133:48:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1143:32:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:1"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1154:21:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1115:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1125:7:1",
														"type": ""
													}
												],
												"src": "1091:90:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1246:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1256:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1234:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1241:3:1",
														"type": ""
													}
												],
												"src": "1187:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1394:118:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1404:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1412:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1440:65:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1366:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1378:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1389:4:1",
														"type": ""
													}
												],
												"src": "1302:210:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1562:65:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1572:49:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1587:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1594:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1583:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1583:38:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1572:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1544:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1554:7:1",
														"type": ""
													}
												],
												"src": "1518:109:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1675:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1731:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1740:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1743:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1733:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1733:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1733:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1698:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1722:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint96",
																					"nodeType": "YulIdentifier",
																					"src": "1705:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1705:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1695:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1695:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:42:1"
															},
															"nodeType": "YulIf",
															"src": "1685:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1668:5:1",
														"type": ""
													}
												],
												"src": "1633:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1810:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1820:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1842:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1829:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1820:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1884:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint96",
																	"nodeType": "YulIdentifier",
																	"src": "1858:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1858:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1858:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1788:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1796:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1804:5:1",
														"type": ""
													}
												],
												"src": "1759:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1983:389:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2029:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2031:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2031:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2031:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2004:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2013:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2000:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2000:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2025:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1996:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1996:32:1"
															},
															"nodeType": "YulIf",
															"src": "1993:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "2122:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2137:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2151:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2141:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2166:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2200:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2211:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2196:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2196:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2220:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "2176:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2176:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2166:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2248:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2263:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2277:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2267:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2293:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2327:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2338:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2323:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2323:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2347:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "2303:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2303:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2293:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1945:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1956:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1968:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1976:6:1",
														"type": ""
													}
												],
												"src": "1902:470:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2423:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2433:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2448:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2455:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "2444:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2444:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2433:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2405:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2415:7:1",
														"type": ""
													}
												],
												"src": "2378:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2555:51:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2565:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2594:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "2576:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2576:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2565:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2537:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2547:7:1",
														"type": ""
													}
												],
												"src": "2510:96:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2655:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2712:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2721:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2724:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2714:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2714:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2714:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2678:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2703:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "2685:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2685:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2675:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2675:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2668:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2668:43:1"
															},
															"nodeType": "YulIf",
															"src": "2665:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2648:5:1",
														"type": ""
													}
												],
												"src": "2612:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2792:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2802:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2824:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "2811:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2811:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "2802:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2867:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "2840:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2840:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2840:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "2770:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2778:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2786:5:1",
														"type": ""
													}
												],
												"src": "2740:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2930:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2940:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2951:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "2940:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2912:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "2922:7:1",
														"type": ""
													}
												],
												"src": "2885:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3011:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3068:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3077:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "3080:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "3070:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3070:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3070:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3034:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "3059:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "3041:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3041:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "3031:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3031:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "3024:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3024:43:1"
															},
															"nodeType": "YulIf",
															"src": "3021:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3004:5:1",
														"type": ""
													}
												],
												"src": "2968:122:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3148:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3158:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3180:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "3167:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3167:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "3158:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3223:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "3196:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3196:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3196:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "3126:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3134:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3142:5:1",
														"type": ""
													}
												],
												"src": "3096:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3341:519:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "3387:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "3389:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "3389:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "3389:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3362:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3371:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3358:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3358:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3383:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "3354:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3354:32:1"
															},
															"nodeType": "YulIf",
															"src": "3351:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "3480:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3495:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3509:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3499:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3524:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3559:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3570:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3555:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3555:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3579:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3534:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3534:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "3524:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3607:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3622:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3636:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3626:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3652:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3687:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3698:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3683:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3683:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3707:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3662:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3662:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "3652:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "3735:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "3750:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3764:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "3754:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "3780:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "3815:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "3826:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "3811:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "3811:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "3835:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3790:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3790:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "3780:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3295:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "3306:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3318:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3326:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3334:6:1",
														"type": ""
													}
												],
												"src": "3241:619:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3962:40:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3973:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "3989:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "3983:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "3983:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "3973:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3945:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "3955:6:1",
														"type": ""
													}
												],
												"src": "3866:136:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4141:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4158:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "4163:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4151:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4151:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4179:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4198:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4203:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4194:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4194:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "4179:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4113:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "4118:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "4129:11:1",
														"type": ""
													}
												],
												"src": "4008:206:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4314:60:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4324:11:1",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "4332:3:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4324:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "4345:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "4357:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4362:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4353:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4353:14:1"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "4345:4:1"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "4301:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "4309:4:1",
														"type": ""
													}
												],
												"src": "4220:154:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4433:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4450:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4472:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "4455:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4455:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4443:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4443:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4443:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4421:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4428:3:1",
														"type": ""
													}
												],
												"src": "4380:105:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4546:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4563:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4586:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "4568:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4568:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4556:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4556:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4556:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4534:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4541:3:1",
														"type": ""
													}
												],
												"src": "4491:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4649:53:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4659:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4674:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4681:14:1",
																		"type": "",
																		"value": "0xffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "4670:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4670:26:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "4659:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4631:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "4641:7:1",
														"type": ""
													}
												],
												"src": "4605:97:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4761:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4778:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4800:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "4783:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4783:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4771:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4771:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4771:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint48_to_t_uint48",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4749:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4756:3:1",
														"type": ""
													}
												],
												"src": "4708:105:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4874:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4891:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4914:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4896:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4896:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4884:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4884:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4884:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4862:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4869:3:1",
														"type": ""
													}
												],
												"src": "4819:108:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4982:50:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4999:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "5019:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "5004:14:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5004:21:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4992:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "4992:34:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4992:34:1"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4970:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4977:3:1",
														"type": ""
													}
												],
												"src": "4933:99:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5198:1451:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "5208:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5224:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5229:6:1",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5220:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "5220:16:1"
															},
															"variables": [
																{
																	"name": "tail",
																	"nodeType": "YulTypedName",
																	"src": "5212:4:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5246:160:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5279:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5309:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5316:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5305:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5305:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5299:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5299:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5283:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5367:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5385:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5390:4:1",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5381:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5381:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint96_to_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "5335:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5335:61:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5335:61:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5416:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5452:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5482:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5489:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5478:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5478:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5472:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5472:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5456:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5542:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5560:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5565:4:1",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5556:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5556:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "5508:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5508:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5508:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5591:167:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5631:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5661:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5668:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5657:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5657:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5651:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5651:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5635:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5719:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5737:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5742:4:1",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5733:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5733:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint48_to_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "5687:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5687:61:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5687:61:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5768:167:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5808:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "5838:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5845:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5834:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5834:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "5828:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5828:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5812:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "5896:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "5914:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "5919:4:1",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "5910:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5910:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint48_to_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "5864:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5864:61:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5864:61:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "5945:165:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "5981:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6011:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6018:4:1",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6007:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6007:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6001:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "5985:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6071:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6089:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6094:4:1",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6085:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6085:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "6037:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6037:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6037:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6120:169:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6160:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6190:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6197:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6186:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6186:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6180:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6180:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6164:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6250:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6268:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6273:4:1",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6264:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6264:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6216:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6216:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6216:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6299:174:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6344:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6374:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6381:4:1",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6370:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6370:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6364:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6364:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6348:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6434:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6452:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6457:4:1",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6448:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6448:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint256_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "6400:33:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6400:63:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6400:63:1"
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "6483:159:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "6519:43:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "6549:5:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6556:4:1",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6545:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6545:16:1"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nodeType": "YulIdentifier",
																			"src": "6539:5:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6539:23:1"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nodeType": "YulTypedName",
																			"src": "6523:12:1",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nodeType": "YulIdentifier",
																				"src": "6603:12:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "6621:3:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "6626:4:1",
																						"type": "",
																						"value": "0xe0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "6617:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6617:14:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bool_to_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "6575:27:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6575:57:1"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "6575:57:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5185:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5192:3:1",
														"type": ""
													}
												],
												"src": "5098:1551:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6779:145:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6867:6:1"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6875:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "6789:77:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6789:90:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6789:90:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6888:30:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6906:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6911:6:1",
																		"type": "",
																		"value": "0x0100"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6902:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "6902:16:1"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "6888:10:1"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6752:6:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6760:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "6768:10:1",
														"type": ""
													}
												],
												"src": "6655:269:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7027:38:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7037:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "7049:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7054:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7045:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7045:14:1"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "7037:4:1"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "7014:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "7022:4:1",
														"type": ""
													}
												],
												"src": "6930:135:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7303:740:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7313:90:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7397:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7327:69:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7327:76:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "7317:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7412:115:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7515:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7520:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7419:95:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7419:108:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "7412:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7536:93:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7623:5:1"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "7551:71:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7551:78:1"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "7540:7:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7638:21:1",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "7652:7:1"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "7642:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7728:290:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7742:34:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "7769:6:1"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "7763:5:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7763:13:1"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "7746:13:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7789:114:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "7884:13:1"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "7899:3:1"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7796:87:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7796:107:1"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "7789:3:1"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "7916:92:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "8001:6:1"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "7926:74:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7926:82:1"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7916:6:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "7690:1:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7693:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7687:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "7687:13:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "7701:18:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "7703:14:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "7712:1:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7715:1:1",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "7708:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7708:9:1"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "7703:1:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "7672:14:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "7674:10:1",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "7683:1:1",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "7678:1:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "7668:350:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8027:10:1",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "8034:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "8027:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7282:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7289:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "7298:3:1",
														"type": ""
													}
												],
												"src": "7135:908:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8241:269:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8251:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8263:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8274:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8259:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8259:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8251:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8298:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8309:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8294:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8294:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8317:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8323:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8313:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8313:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8287:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8287:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8287:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8343:160:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8489:6:1"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8498:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8351:137:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8351:152:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8343:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8213:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8225:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8236:4:1",
														"type": ""
													}
												],
												"src": "8049:461:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8581:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8627:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "8629:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8629:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8629:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8602:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8611:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8598:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8598:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8623:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "8594:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8594:32:1"
															},
															"nodeType": "YulIf",
															"src": "8591:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "8720:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "8735:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8749:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "8739:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "8764:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "8798:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "8809:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "8794:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8794:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "8818:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "8774:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8774:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "8764:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8551:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "8562:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8574:6:1",
														"type": ""
													}
												],
												"src": "8516:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8912:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8929:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8951:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "8934:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8934:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8922:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "8922:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8922:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8900:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8907:3:1",
														"type": ""
													}
												],
												"src": "8849:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9035:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9052:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9075:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "9057:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9057:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9045:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9045:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9045:37:1"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9023:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9030:3:1",
														"type": ""
													}
												],
												"src": "8970:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9157:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9174:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9196:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint48",
																			"nodeType": "YulIdentifier",
																			"src": "9179:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9179:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9167:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9167:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9145:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9152:3:1",
														"type": ""
													}
												],
												"src": "9094:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9280:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "9297:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9320:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "9302:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9302:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9290:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9290:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9290:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9268:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "9275:3:1",
														"type": ""
													}
												],
												"src": "9215:118:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9621:691:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9631:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9643:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9654:3:1",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9639:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9639:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9631:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "9710:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9734:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9719:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9668:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9668:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9668:69:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "9791:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9804:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9815:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9800:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9800:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9747:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9747:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9747:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "9871:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9884:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9895:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9880:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9880:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9829:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9829:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9829:70:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "9951:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9964:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9975:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9960:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9960:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint48_to_t_uint48_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9909:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9909:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9909:70:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value4",
																		"nodeType": "YulIdentifier",
																		"src": "10033:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10046:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10057:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10042:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10042:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "9989:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "9989:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9989:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value5",
																		"nodeType": "YulIdentifier",
																		"src": "10116:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10129:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10140:3:1",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10125:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10072:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10072:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10072:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value6",
																		"nodeType": "YulIdentifier",
																		"src": "10199:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10212:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10223:3:1",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10208:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10208:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10155:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10155:73:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10155:73:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value7",
																		"nodeType": "YulIdentifier",
																		"src": "10276:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10289:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10300:3:1",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10285:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10285:19:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10238:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10238:67:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10238:67:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96_t_address_t_uint48_t_uint48_t_address_t_uint256_t_uint256_t_bool__to_t_uint96_t_address_t_uint48_t_uint48_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9537:9:1",
														"type": ""
													},
													{
														"name": "value7",
														"nodeType": "YulTypedName",
														"src": "9549:6:1",
														"type": ""
													},
													{
														"name": "value6",
														"nodeType": "YulTypedName",
														"src": "9557:6:1",
														"type": ""
													},
													{
														"name": "value5",
														"nodeType": "YulTypedName",
														"src": "9565:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "9573:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "9581:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "9589:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "9597:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "9605:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9616:4:1",
														"type": ""
													}
												],
												"src": "9339:973:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10400:390:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10446:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "10448:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10448:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10448:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10421:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10430:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "10417:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10417:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10442:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "10413:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10413:32:1"
															},
															"nodeType": "YulIf",
															"src": "10410:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "10539:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10554:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10568:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10558:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10583:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10617:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10628:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10613:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10613:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10637:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "10593:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10593:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "10583:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "10665:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "10680:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10694:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "10684:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "10710:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "10745:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "10756:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "10741:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10741:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "10765:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "10720:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10720:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "10710:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10362:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "10373:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10385:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "10393:6:1",
														"type": ""
													}
												],
												"src": "10318:472:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10894:124:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10904:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10916:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10927:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10912:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10912:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10904:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "10984:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10997:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11008:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10993:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10993:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "10940:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "10940:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10940:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10866:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "10878:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10889:4:1",
														"type": ""
													}
												],
												"src": "10796:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11120:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "11130:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11142:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11153:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11138:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11138:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11130:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "11208:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11221:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11232:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11217:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11217:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "11166:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11166:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11166:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11092:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11104:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11115:4:1",
														"type": ""
													}
												],
												"src": "11024:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11347:518:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11393:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "11395:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11395:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11395:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11368:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11377:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "11364:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11364:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11389:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "11360:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "11360:32:1"
															},
															"nodeType": "YulIf",
															"src": "11357:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "11486:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11501:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11515:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11505:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11530:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11564:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11575:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11560:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11560:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11584:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "11540:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11540:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "11530:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11612:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11627:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11641:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11631:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11657:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11692:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11703:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11688:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11688:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11712:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "11667:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11667:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "11657:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "11740:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "11755:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11769:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "11759:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "11785:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "11820:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "11831:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "11816:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11816:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "11840:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "11795:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11795:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "11785:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11301:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "11312:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "11324:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11332:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11340:6:1",
														"type": ""
													}
												],
												"src": "11248:617:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12023:286:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12033:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12045:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12056:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12041:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12041:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12033:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "12113:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12126:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12137:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12122:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12122:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12069:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12069:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12069:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "12192:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12205:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12216:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12201:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12201:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint96_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12150:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12150:70:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12150:70:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "12274:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12287:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12298:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12283:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12283:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "12230:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12230:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12230:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint96_t_uint256__to_t_address_t_uint96_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11979:9:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "11991:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "11999:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12007:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12018:4:1",
														"type": ""
													}
												],
												"src": "11871:438:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12414:518:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12460:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "12462:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12462:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12462:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12435:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12444:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "12431:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12431:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12456:2:1",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "12427:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "12427:32:1"
															},
															"nodeType": "YulIf",
															"src": "12424:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "12553:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12568:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12582:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12572:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12597:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12632:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12643:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12628:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12628:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12652:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "12607:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12607:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "12597:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12680:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12695:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12709:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12699:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12725:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12759:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12770:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12755:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12755:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12779:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "12735:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12735:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "12725:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "12807:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "12822:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12836:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "12826:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "12852:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "12887:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "12898:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "12883:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12883:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "12907:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "12862:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12862:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "12852:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint96t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12368:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "12379:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12391:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "12399:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "12407:6:1",
														"type": ""
													}
												],
												"src": "12315:617:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13027:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13044:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13047:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13037:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13037:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13037:12:1"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "12938:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13109:54:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13119:38:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "13137:5:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13144:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13133:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13133:14:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13153:2:1",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13149:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13149:7:1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13129:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13129:28:1"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "13119:6:1"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "13092:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "13102:6:1",
														"type": ""
													}
												],
												"src": "13061:102:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13197:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13214:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13217:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13207:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13207:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13207:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13311:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13314:4:1",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13304:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13304:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13304:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13335:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13338:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "13328:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13328:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13328:15:1"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "13169:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13398:238:1",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13408:58:1",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "13430:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "13460:4:1"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "13438:21:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13438:27:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13426:40:1"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "13412:10:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13577:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13579:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13579:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13579:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "13520:10:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13532:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "13517:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13517:34:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "13556:10:1"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "13568:6:1"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "13553:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13553:22:1"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "13514:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13514:62:1"
															},
															"nodeType": "YulIf",
															"src": "13511:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13615:2:1",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "13619:10:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13608:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13608:22:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13608:22:1"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13384:6:1",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13392:4:1",
														"type": ""
													}
												],
												"src": "13355:281:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13683:88:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13693:30:1",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "13703:18:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13703:20:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "13693:6:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "13752:6:1"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "13760:4:1"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "13732:19:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13732:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13732:33:1"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13667:4:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "13676:6:1",
														"type": ""
													}
												],
												"src": "13642:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13859:229:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13964:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "13966:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13966:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13966:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "13936:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13944:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13933:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "13933:30:1"
															},
															"nodeType": "YulIf",
															"src": "13930:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13996:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14008:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14016:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14004:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14004:17:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "13996:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "14058:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "14070:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14076:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14066:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14066:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "14058:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "13843:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "13854:4:1",
														"type": ""
													}
												],
												"src": "13777:311:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14183:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14200:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14203:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14193:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14193:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14193:12:1"
														}
													]
												},
												"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
												"nodeType": "YulFunctionDefinition",
												"src": "14094:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14336:608:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "14346:90:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14428:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "14371:56:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14371:64:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "14355:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14355:81:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "14346:5:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14445:16:1",
															"value": {
																"name": "array",
																"nodeType": "YulIdentifier",
																"src": "14456:5:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "14449:3:1",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "14478:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "14485:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14471:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14471:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14471:21:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14501:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "14512:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14519:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14508:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14508:16:1"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nodeType": "YulIdentifier",
																	"src": "14501:3:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14534:44:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "14552:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "14564:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "14572:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "14560:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14560:17:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14548:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14548:30:1"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nodeType": "YulTypedName",
																	"src": "14538:6:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14606:103:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef",
																				"nodeType": "YulIdentifier",
																				"src": "14620:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14620:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14620:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "14593:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "14601:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14590:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14590:15:1"
															},
															"nodeType": "YulIf",
															"src": "14587:122:1"
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14794:144:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14809:21:1",
																		"value": {
																			"name": "src",
																			"nodeType": "YulIdentifier",
																			"src": "14827:3:1"
																		},
																		"variables": [
																			{
																				"name": "elementPos",
																				"nodeType": "YulTypedName",
																				"src": "14813:10:1",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "14851:3:1"
																				},
																				{
																					"arguments": [
																						{
																							"name": "elementPos",
																							"nodeType": "YulIdentifier",
																							"src": "14877:10:1"
																						},
																						{
																							"name": "end",
																							"nodeType": "YulIdentifier",
																							"src": "14889:3:1"
																						}
																					],
																					"functionName": {
																						"name": "abi_decode_t_uint256",
																						"nodeType": "YulIdentifier",
																						"src": "14856:20:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "14856:37:1"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14844:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14844:50:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14844:50:1"
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "14907:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nodeType": "YulIdentifier",
																					"src": "14918:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14923:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14914:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14914:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "14907:3:1"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "14747:3:1"
																	},
																	{
																		"name": "srcEnd",
																		"nodeType": "YulIdentifier",
																		"src": "14752:6:1"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14744:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "14744:15:1"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "14760:25:1",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "14762:21:1",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nodeType": "YulIdentifier",
																					"src": "14773:3:1"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14778:4:1",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "14769:3:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14769:14:1"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "14762:3:1"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "14722:21:1",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "14724:17:1",
																		"value": {
																			"name": "offset",
																			"nodeType": "YulIdentifier",
																			"src": "14735:6:1"
																		},
																		"variables": [
																			{
																				"name": "src",
																				"nodeType": "YulTypedName",
																				"src": "14728:3:1",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "14718:220:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "14306:6:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "14314:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "14322:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "14330:5:1",
														"type": ""
													}
												],
												"src": "14234:710:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15044:293:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15093:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "15095:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15095:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15095:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "15072:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "15080:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "15068:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "15068:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "15087:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "15064:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15064:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "15057:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15057:35:1"
															},
															"nodeType": "YulIf",
															"src": "15054:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "15185:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "15212:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "15199:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15199:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "15189:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15228:103:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "15304:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "15312:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15300:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15300:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15319:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "15327:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "15237:62:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15237:94:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "15228:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "15022:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "15030:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "15038:5:1",
														"type": ""
													}
												],
												"src": "14967:370:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15432:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15449:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15452:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "15442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15442:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15442:12:1"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "15343:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15532:241:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "15637:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "15639:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "15639:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "15639:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15609:6:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15617:18:1",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "15606:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15606:30:1"
															},
															"nodeType": "YulIf",
															"src": "15603:56:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "15669:37:1",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15699:6:1"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "15677:21:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15677:29:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15669:4:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "15743:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "15755:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15761:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "15751:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15751:15:1"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "15743:4:1"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15516:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "15527:4:1",
														"type": ""
													}
												],
												"src": "15466:307:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "15843:82:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "15866:3:1"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "15871:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "15876:6:1"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "15853:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15853:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15853:30:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "15903:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "15908:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "15899:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "15899:16:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "15917:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "15892:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "15892:27:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "15892:27:1"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15825:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "15830:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15835:6:1",
														"type": ""
													}
												],
												"src": "15779:146:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16014:340:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "16024:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16090:6:1"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "16049:40:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16049:48:1"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "16033:15:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16033:65:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "16024:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "16114:5:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16121:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "16107:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16107:21:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16107:21:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16137:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "16152:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16159:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "16148:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16148:16:1"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "16141:3:1",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16202:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "16204:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16204:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16204:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "16183:3:1"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "16188:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16179:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16179:16:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "16197:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "16176:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16176:25:1"
															},
															"nodeType": "YulIf",
															"src": "16173:112:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "16331:3:1"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "16336:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16341:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nodeType": "YulIdentifier",
																	"src": "16294:36:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16294:54:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "16294:54:1"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "15987:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "15992:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16000:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "16008:5:1",
														"type": ""
													}
												],
												"src": "15931:423:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16434:277:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16483:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "16485:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16485:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16485:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "16462:6:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "16470:4:1",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "16458:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "16458:17:1"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "16477:3:1"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "16454:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16454:27:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "16447:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16447:35:1"
															},
															"nodeType": "YulIf",
															"src": "16444:122:1"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "16575:34:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "16602:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "16589:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16589:20:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "16579:6:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "16618:87:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "16678:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "16686:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "16674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16674:17:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "16693:6:1"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "16701:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "16627:46:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16627:78:1"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "16618:5:1"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "16412:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "16420:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "16428:5:1",
														"type": ""
													}
												],
												"src": "16373:338:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "16910:1316:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "16957:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "16959:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "16959:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "16959:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "16931:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "16940:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "16927:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "16927:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "16952:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "16923:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "16923:33:1"
															},
															"nodeType": "YulIf",
															"src": "16920:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "17050:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17065:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17079:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17069:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17094:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17129:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17140:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17125:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17125:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17149:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17104:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17104:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "17094:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17177:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17192:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "17206:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17196:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17222:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17257:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17268:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17253:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17253:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17277:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "17232:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17232:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "17222:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17305:303:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17320:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17351:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17362:2:1",
																						"type": "",
																						"value": "64"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17347:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17347:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "17334:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17334:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17324:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17413:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "17415:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17415:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "17415:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17385:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17393:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17382:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17382:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "17379:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17510:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17570:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17581:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17566:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17566:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17590:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17520:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17520:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "17510:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17618:303:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17633:46:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17664:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17675:2:1",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17660:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17660:18:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "17647:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17647:32:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17637:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "17726:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "17728:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "17728:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "17728:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "17698:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "17706:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "17695:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17695:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "17692:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "17823:88:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17883:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "17894:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17879:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17879:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "17903:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_array$_t_uint256_$dyn_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "17833:45:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17833:78:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "17823:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "17931:288:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "17946:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "17977:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "17988:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "17973:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "17973:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "17960:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "17960:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "17950:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "18040:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "18042:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "18042:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "18042:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "18012:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18020:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "18009:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18009:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "18006:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18137:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18181:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18192:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18177:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18177:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18201:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "18147:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18147:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "18137:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "16848:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "16859:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "16871:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "16879:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "16887:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "16895:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "16903:6:1",
														"type": ""
													}
												],
												"src": "16717:1509:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18295:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "18312:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "18334:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "18317:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18317:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "18305:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18305:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18305:36:1"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "18283:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "18290:3:1",
														"type": ""
													}
												],
												"src": "18232:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18449:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18459:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "18471:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18482:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "18467:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18467:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "18459:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "18537:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18550:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "18561:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "18546:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18546:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "18495:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18495:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "18495:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18421:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18433:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "18444:4:1",
														"type": ""
													}
												],
												"src": "18353:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "18693:647:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "18740:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "18742:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "18742:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "18742:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18714:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "18723:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "18710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18710:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18735:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "18706:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "18706:33:1"
															},
															"nodeType": "YulIf",
															"src": "18703:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "18833:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18848:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18862:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18852:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "18877:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "18911:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "18922:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "18907:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "18907:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "18931:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint96",
																			"nodeType": "YulIdentifier",
																			"src": "18887:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "18887:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "18877:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "18959:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "18974:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "18988:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "18978:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19004:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19039:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19050:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19035:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19035:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19059:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19014:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19014:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19004:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19087:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19102:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19116:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19106:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19132:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19167:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19178:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19163:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19163:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19187:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19142:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19142:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "19132:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19215:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19230:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19244:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19234:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19260:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19295:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19306:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19291:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19291:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19315:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19270:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19270:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "19260:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint96t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "18639:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "18650:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "18662:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "18670:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "18678:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "18686:6:1",
														"type": ""
													}
												],
												"src": "18577:763:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "19489:946:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "19536:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "19538:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "19538:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "19538:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19510:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "19519:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "19506:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19506:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19531:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "19502:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "19502:33:1"
															},
															"nodeType": "YulIf",
															"src": "19499:120:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "19629:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19644:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19658:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19648:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19673:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19708:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19719:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19704:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19704:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19728:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19683:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19683:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "19673:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19756:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19771:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19785:2:1",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19775:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19801:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19836:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19847:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19832:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19832:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19856:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "19811:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19811:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "19801:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "19884:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "19899:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "19913:2:1",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "19903:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "19929:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "19964:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "19975:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "19960:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "19960:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "19984:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "19939:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "19939:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "19929:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20012:118:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20027:16:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20041:2:1",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20031:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20057:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20092:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20103:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20088:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20088:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20112:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "20067:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20067:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "20057:6:1"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "20140:288:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "20155:47:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20186:9:1"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "20197:3:1",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20182:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20182:19:1"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "20169:12:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20169:33:1"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "20159:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "20249:83:1",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "20251:77:1"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "20251:79:1"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "20251:79:1"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "20221:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "20229:18:1",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "20218:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20218:30:1"
																	},
																	"nodeType": "YulIf",
																	"src": "20215:117:1"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "20346:72:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "20390:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "20401:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "20386:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "20386:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "20410:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "20356:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "20356:62:1"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "20346:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "19427:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "19438:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "19450:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "19458:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "19466:6:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "19474:6:1",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "19482:6:1",
														"type": ""
													}
												],
												"src": "19346:1089:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20469:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20486:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20489:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20479:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20479:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20479:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20583:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20586:4:1",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20576:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20576:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20576:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20607:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20610:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20600:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20600:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20600:15:1"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "20441:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20655:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20672:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20675:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20665:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20665:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20665:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20769:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20772:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "20762:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20762:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20762:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20793:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "20796:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "20786:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20786:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "20786:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "20627:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "20857:147:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "20867:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20890:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20872:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20872:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "20867:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20901:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20924:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "20906:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20906:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "20901:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "20935:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20946:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "20949:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "20942:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20942:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "20935:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "20975:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "20977:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "20977:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "20977:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "20967:1:1"
																	},
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "20970:3:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "20964:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "20964:10:1"
															},
															"nodeType": "YulIf",
															"src": "20961:36:1"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "20844:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "20847:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "20853:3:1",
														"type": ""
													}
												],
												"src": "20813:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21052:149:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21062:32:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21088:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nodeType": "YulIdentifier",
																	"src": "21071:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21071:23:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "21062:5:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21144:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21146:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21146:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21146:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21109:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21116:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "21106:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21106:37:1"
															},
															"nodeType": "YulIf",
															"src": "21103:63:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21175:20:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "21186:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21193:1:1",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21182:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21182:13:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "21175:3:1"
																}
															]
														}
													]
												},
												"name": "increment_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "21038:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "21048:3:1",
														"type": ""
													}
												],
												"src": "21010:191:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21255:362:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21265:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21288:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21270:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21270:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21265:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21299:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21322:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21304:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21304:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21299:1:1"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "21333:28:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21356:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21359:1:1"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "21352:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21352:9:1"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nodeType": "YulTypedName",
																	"src": "21337:11:1",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21370:41:1",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nodeType": "YulIdentifier",
																		"src": "21399:11:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21381:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21381:30:1"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "21370:7:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21588:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "21590:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21590:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21590:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "21521:1:1"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "21514:6:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21514:9:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nodeType": "YulIdentifier",
																						"src": "21544:1:1"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nodeType": "YulIdentifier",
																								"src": "21551:7:1"
																							},
																							{
																								"name": "x",
																								"nodeType": "YulIdentifier",
																								"src": "21560:1:1"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nodeType": "YulIdentifier",
																							"src": "21547:3:1"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "21547:15:1"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nodeType": "YulIdentifier",
																					"src": "21541:2:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "21541:22:1"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nodeType": "YulIdentifier",
																			"src": "21494:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21494:83:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21474:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21474:113:1"
															},
															"nodeType": "YulIf",
															"src": "21471:139:1"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21238:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21241:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "21247:7:1",
														"type": ""
													}
												],
												"src": "21207:410:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21651:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21668:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21671:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21661:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21661:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21661:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21765:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21768:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21758:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21758:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21758:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21789:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21792:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "21782:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21782:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21782:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "21623:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "21851:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "21861:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21884:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21866:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21866:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "21861:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "21895:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21918:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "21900:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21900:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "21895:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "21942:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "21944:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "21944:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "21944:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21939:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "21932:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21932:9:1"
															},
															"nodeType": "YulIf",
															"src": "21929:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21974:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "21983:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "21986:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "21979:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "21979:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "21974:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "21840:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "21843:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "21849:1:1",
														"type": ""
													}
												],
												"src": "21809:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22032:28:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22042:12:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "22049:5:1"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "22042:3:1"
																}
															]
														}
													]
												},
												"name": "identity",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22018:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "22028:3:1",
														"type": ""
													}
												],
												"src": "22000:60:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22125:81:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22135:65:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "22192:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint96",
																					"nodeType": "YulIdentifier",
																					"src": "22175:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "22175:23:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "22166:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22166:33:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "22148:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22148:52:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "22135:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_uint96_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22105:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "22115:9:1",
														"type": ""
													}
												],
												"src": "22066:140:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22276:65:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22293:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "22328:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_uint96_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "22298:29:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22298:36:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22286:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22286:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22286:49:1"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "22264:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22271:3:1",
														"type": ""
													}
												],
												"src": "22212:129:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22442:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22459:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "22464:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22452:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22452:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22452:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22480:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22499:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22504:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22495:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22495:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "22480:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22414:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "22419:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "22430:11:1",
														"type": ""
													}
												],
												"src": "22347:168:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22627:47:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "22649:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22657:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "22645:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22645:14:1"
																	},
																	{
																		"hexValue": "307830",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "22661:5:1",
																		"type": "",
																		"value": "0x0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22638:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22638:29:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22638:29:1"
														}
													]
												},
												"name": "store_literal_in_memory_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "22619:6:1",
														"type": ""
													}
												],
												"src": "22521:153:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "22825:218:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "22835:72:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22900:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22905:1:1",
																		"type": "",
																		"value": "3"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "22842:57:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22842:65:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "22835:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23005:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																	"nodeType": "YulIdentifier",
																	"src": "22916:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "22916:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22916:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23018:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23029:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23034:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23025:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23025:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "23018:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "22813:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "22821:3:1",
														"type": ""
													}
												],
												"src": "22680:363:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "23330:576:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23340:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "23352:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "23363:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "23348:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23348:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23340:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "23421:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23434:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23445:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23430:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23430:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23377:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23377:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23377:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "23502:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23515:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23526:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23511:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23511:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23458:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23458:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23458:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "23583:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23596:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23607:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23592:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23592:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint96_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23540:42:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23540:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23540:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "23665:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23678:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23689:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23674:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23674:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23621:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23621:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23621:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23714:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23725:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23710:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23710:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "23735:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "23741:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "23731:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23731:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "23703:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23703:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "23703:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "23761:138:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "23894:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "23769:123:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "23769:130:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "23761:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint96_t_uint256_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "23278:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "23290:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "23298:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "23306:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "23314:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "23325:4:1",
														"type": ""
													}
												],
												"src": "23049:857:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24088:365:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24098:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "24110:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24121:3:1",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24106:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24106:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "24098:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "24179:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24192:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24203:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24188:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24188:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24135:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24135:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24135:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "24260:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24273:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24284:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24269:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24269:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24216:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24216:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24216:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "24336:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24349:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24360:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24345:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24345:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24298:37:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24298:66:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24298:66:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "24418:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "24431:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24442:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24427:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24427:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "24374:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24374:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24374:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_bool_t_uint256__to_t_address_t_address_t_bool_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "24036:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "24048:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "24056:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "24064:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "24072:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "24083:4:1",
														"type": ""
													}
												],
												"src": "23912:541:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24502:170:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "24512:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24534:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nodeType": "YulIdentifier",
																	"src": "24517:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24517:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "24512:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24545:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24567:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nodeType": "YulIdentifier",
																	"src": "24550:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24550:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "24545:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "24578:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "24589:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "24592:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24585:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24585:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "24578:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "24643:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "24645:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "24645:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "24645:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "24610:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24615:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "24607:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24607:35:1"
															},
															"nodeType": "YulIf",
															"src": "24604:61:1"
														}
													]
												},
												"name": "checked_add_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "24489:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "24492:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "24498:3:1",
														"type": ""
													}
												],
												"src": "24459:213:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24774:73:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24791:3:1"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "24796:6:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24784:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24784:19:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24784:19:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "24812:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "24831:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "24836:4:1",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "24827:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24827:14:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "24812:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "24746:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "24751:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "24762:11:1",
														"type": ""
													}
												],
												"src": "24678:169:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "24959:71:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "24981:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "24989:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "24977:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "24977:14:1"
																	},
																	{
																		"hexValue": "4d757374206265205f656e644964203c3d2066756e64436f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "24993:29:1",
																		"type": "",
																		"value": "Must be _endId <= fundCount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "24970:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "24970:53:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "24970:53:1"
														}
													]
												},
												"name": "store_literal_in_memory_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "24951:6:1",
														"type": ""
													}
												],
												"src": "24853:177:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25182:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25192:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25258:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25263:2:1",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25199:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25199:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "25192:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25364:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388",
																	"nodeType": "YulIdentifier",
																	"src": "25275:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25275:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25275:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25377:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "25388:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25393:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25384:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25384:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "25377:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "25170:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "25178:3:1",
														"type": ""
													}
												],
												"src": "25036:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25579:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "25589:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "25601:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "25612:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "25597:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25597:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25589:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25636:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25647:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25632:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25632:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "25655:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "25661:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "25651:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25651:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25625:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25625:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25625:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "25681:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "25815:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "25689:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25689:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "25681:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "25559:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "25574:4:1",
														"type": ""
													}
												],
												"src": "25408:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "25939:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "25961:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "25969:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "25957:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "25957:14:1"
																	},
																	{
																		"hexValue": "4d757374206265205f73746172744964203c3d205f656e644964",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "25973:28:1",
																		"type": "",
																		"value": "Must be _startId <= _endId"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "25950:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "25950:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "25950:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "25931:6:1",
														"type": ""
													}
												],
												"src": "25833:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26161:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26171:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26237:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26242:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26178:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26178:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "26171:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26343:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08",
																	"nodeType": "YulIdentifier",
																	"src": "26254:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26254:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26254:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26356:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "26367:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26372:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26363:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26363:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "26356:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "26149:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "26157:3:1",
														"type": ""
													}
												],
												"src": "26015:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26558:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26568:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "26580:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26591:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "26576:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26576:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26568:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26615:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "26626:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "26611:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26611:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "26634:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "26640:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "26630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "26630:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "26604:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26604:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "26604:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "26660:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "26794:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "26668:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26668:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "26660:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "26538:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "26553:4:1",
														"type": ""
													}
												],
												"src": "26387:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "26856:172:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "26866:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26888:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nodeType": "YulIdentifier",
																	"src": "26871:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26871:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "26866:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26899:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26921:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint96",
																	"nodeType": "YulIdentifier",
																	"src": "26904:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26904:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "26899:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "26932:17:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "26944:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "26947:1:1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "26940:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26940:9:1"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "26932:4:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "26999:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "27001:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "27001:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "27001:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nodeType": "YulIdentifier",
																		"src": "26965:4:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "26971:26:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "26962:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "26962:36:1"
															},
															"nodeType": "YulIf",
															"src": "26959:62:1"
														}
													]
												},
												"name": "checked_sub_t_uint96",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "26842:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "26845:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "26851:4:1",
														"type": ""
													}
												],
												"src": "26812:216:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27140:67:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "27162:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27170:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27158:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27158:14:1"
																	},
																	{
																		"hexValue": "4d757374206265205f6964203c2066756e64436f756e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "27174:25:1",
																		"type": "",
																		"value": "Must be _id < fundCount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27151:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27151:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27151:49:1"
														}
													]
												},
												"name": "store_literal_in_memory_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "27132:6:1",
														"type": ""
													}
												],
												"src": "27034:173:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27359:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27369:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27435:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27440:2:1",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27376:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27376:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "27369:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27541:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496",
																	"nodeType": "YulIdentifier",
																	"src": "27452:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27452:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27452:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27554:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "27565:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27570:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27561:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27561:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "27554:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "27347:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "27355:3:1",
														"type": ""
													}
												],
												"src": "27213:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "27756:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "27766:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "27778:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "27789:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "27774:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27774:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27766:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27813:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "27824:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "27809:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27809:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "27832:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "27838:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "27828:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "27828:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "27802:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27802:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "27802:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "27858:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "27992:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "27866:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "27866:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "27858:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "27736:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "27751:4:1",
														"type": ""
													}
												],
												"src": "27585:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28116:70:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "28138:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28146:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28134:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28134:14:1"
																	},
																	{
																		"hexValue": "46756e6420557064617465206e6f7420617574686f72697a6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "28150:28:1",
																		"type": "",
																		"value": "Fund Update not authorized"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28127:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28127:52:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28127:52:1"
														}
													]
												},
												"name": "store_literal_in_memory_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "28108:6:1",
														"type": ""
													}
												],
												"src": "28010:176:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28338:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28348:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28414:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28419:2:1",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28355:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28355:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "28348:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28520:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49",
																	"nodeType": "YulIdentifier",
																	"src": "28431:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28431:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28431:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28533:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "28544:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28549:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28540:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28540:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "28533:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "28326:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "28334:3:1",
														"type": ""
													}
												],
												"src": "28192:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "28735:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "28745:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "28757:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "28768:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "28753:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28753:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28745:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28792:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "28803:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "28788:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28788:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "28811:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "28817:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "28807:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "28807:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "28781:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28781:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "28781:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "28837:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "28971:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "28845:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "28845:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "28837:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "28715:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "28730:4:1",
														"type": ""
													}
												],
												"src": "28564:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29042:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29052:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "29063:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "29052:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_0_by_1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29024:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "29034:7:1",
														"type": ""
													}
												],
												"src": "28989:85:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29148:90:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29158:74:1",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "29224:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_0_by_1",
																					"nodeType": "YulIdentifier",
																					"src": "29198:25:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "29198:32:1"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nodeType": "YulIdentifier",
																			"src": "29189:8:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29189:42:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29171:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29171:61:1"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "29158:9:1"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_0_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29128:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "29138:9:1",
														"type": ""
													}
												],
												"src": "29080:158:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29317:74:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "29334:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "29378:5:1"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_0_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "29339:38:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29339:45:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "29327:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29327:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29327:58:1"
														}
													]
												},
												"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29305:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "29312:3:1",
														"type": ""
													}
												],
												"src": "29244:147:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29531:214:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29541:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "29553:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "29564:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "29549:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29549:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "29541:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "29621:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29634:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29645:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29630:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29630:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29577:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29577:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29577:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "29710:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "29723:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "29734:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "29719:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29719:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "29658:51:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29658:80:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29658:80:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29495:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "29507:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29515:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "29526:4:1",
														"type": ""
													}
												],
												"src": "29397:348:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29814:80:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "29824:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "29839:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "29833:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29833:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "29824:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "29882:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "29855:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29855:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "29855:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "29792:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "29800:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "29808:5:1",
														"type": ""
													}
												],
												"src": "29751:143:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "29977:274:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "30023:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "30025:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "30025:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "30025:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "29998:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "30007:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "29994:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "29994:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30019:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "29990:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "29990:32:1"
															},
															"nodeType": "YulIf",
															"src": "29987:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "30116:128:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "30131:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30145:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "30135:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "30160:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "30206:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "30217:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "30202:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "30202:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "30226:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "30170:31:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30170:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "30160:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "29947:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "29958:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "29970:6:1",
														"type": ""
													}
												],
												"src": "29900:351:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30363:116:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30385:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30393:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30381:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30381:14:1"
																	},
																	{
																		"hexValue": "746f6b656e20616d6f756e74206f662075736572206e6f742073756666696369",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30397:34:1",
																		"type": "",
																		"value": "token amount of user not suffici"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30374:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30374:58:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30374:58:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "30453:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "30461:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "30449:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "30449:15:1"
																	},
																	{
																		"hexValue": "656e74",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "30466:5:1",
																		"type": "",
																		"value": "ent"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "30442:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30442:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30442:30:1"
														}
													]
												},
												"name": "store_literal_in_memory_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "30355:6:1",
														"type": ""
													}
												],
												"src": "30257:222:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "30631:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "30641:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30707:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30712:2:1",
																		"type": "",
																		"value": "35"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "30648:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30648:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "30641:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30813:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb",
																	"nodeType": "YulIdentifier",
																	"src": "30724:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30724:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "30724:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "30826:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "30837:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "30842:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "30833:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "30833:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "30826:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "30619:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "30627:3:1",
														"type": ""
													}
												],
												"src": "30485:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31028:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31038:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31050:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31061:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31046:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31046:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31038:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31085:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31096:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31081:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31081:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "31104:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31110:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31100:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31100:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "31074:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31074:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31074:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "31130:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "31264:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31138:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31138:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31130:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31008:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31023:4:1",
														"type": ""
													}
												],
												"src": "30857:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31408:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31418:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "31430:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "31441:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "31426:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31426:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "31418:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "31498:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31511:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31522:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31507:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31507:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31454:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31454:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31454:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "31579:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31592:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "31603:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "31588:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31588:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "31535:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31535:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31535:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31372:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "31384:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31392:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "31403:4:1",
														"type": ""
													}
												],
												"src": "31282:332:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31660:76:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "31714:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31723:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "31726:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "31716:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "31716:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "31716:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "31683:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "31705:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "31690:14:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "31690:21:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "31680:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31680:32:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "31673:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31673:40:1"
															},
															"nodeType": "YulIf",
															"src": "31670:60:1"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31653:5:1",
														"type": ""
													}
												],
												"src": "31620:116:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31802:77:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "31812:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "31827:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "31821:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31821:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "31812:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "31867:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "31843:23:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31843:30:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "31843:30:1"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "31780:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "31788:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "31796:5:1",
														"type": ""
													}
												],
												"src": "31742:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "31959:271:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "32005:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "32007:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "32007:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "32007:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "31980:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "31989:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "31976:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "31976:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32001:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "31972:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "31972:32:1"
															},
															"nodeType": "YulIf",
															"src": "31969:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "32098:125:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "32113:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32127:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "32117:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "32142:71:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "32185:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "32196:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "32181:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "32181:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "32205:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "32152:28:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32152:61:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "32142:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "31929:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "31940:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "31952:6:1",
														"type": ""
													}
												],
												"src": "31885:345:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32342:68:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "32364:6:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "32372:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "32360:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "32360:14:1"
																	},
																	{
																		"hexValue": "746f6b656e20616c6c6f77616e63652073686f7274616765",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "32376:26:1",
																		"type": "",
																		"value": "token allowance shortage"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "32353:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32353:50:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32353:50:1"
														}
													]
												},
												"name": "store_literal_in_memory_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "32334:6:1",
														"type": ""
													}
												],
												"src": "32236:174:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32562:220:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32572:74:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32638:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32643:2:1",
																		"type": "",
																		"value": "24"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "32579:58:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32579:67:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "32572:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32744:3:1"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc",
																	"nodeType": "YulIdentifier",
																	"src": "32655:88:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32655:93:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "32655:93:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "32757:19:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "32768:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32773:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32764:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32764:12:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "32757:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "32550:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "32558:3:1",
														"type": ""
													}
												],
												"src": "32416:366:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "32959:248:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "32969:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "32981:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "32992:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "32977:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "32977:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "32969:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33016:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33027:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33012:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33012:17:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33035:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33041:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33031:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33031:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33005:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33005:47:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33005:47:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33061:139:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "33195:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33069:124:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33069:131:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33061:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "32939:9:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "32954:4:1",
														"type": ""
													}
												],
												"src": "32788:419:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "33503:585:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "33513:27:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "33525:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "33536:3:1",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "33521:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33521:19:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33513:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "33594:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33607:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33618:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33603:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33603:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33550:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33550:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33550:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "33675:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33688:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33699:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33684:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33684:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33631:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33631:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33631:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "33765:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33778:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33789:2:1",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33774:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33774:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_0_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33713:51:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33713:80:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33713:80:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "33847:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33860:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33871:2:1",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33856:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33856:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33803:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33803:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33803:72:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33896:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "33907:3:1",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "33892:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33892:19:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "33917:4:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "33923:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "33913:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "33913:20:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "33885:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33885:49:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "33885:49:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "33943:138:1",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "34076:4:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "33951:123:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "33951:130:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "33943:4:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_rational_0_by_1_t_uint256_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "33451:9:1",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "33463:6:1",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "33471:6:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "33479:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "33487:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "33498:4:1",
														"type": ""
													}
												],
												"src": "33213:875:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "34220:206:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "34230:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "34242:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "34253:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "34238:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34238:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "34230:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "34310:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "34323:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34334:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34319:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34319:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "34266:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34266:71:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34266:71:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "34391:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "34404:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "34415:2:1",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "34400:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "34400:18:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "34347:43:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "34347:72:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "34347:72:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "34184:9:1",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "34196:6:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "34204:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "34215:4:1",
														"type": ""
													}
												],
												"src": "34094:332:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function validator_revert_t_uint96(value) {\n        if iszero(eq(value, cleanup_t_uint96(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint96(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint96(value)\n    }\n\n    function abi_decode_tuple_t_uint96t_uint96(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint96_to_t_uint96(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint48(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffff)\n    }\n\n    function abi_encode_t_uint48_to_t_uint48(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct FundRegistry.Fund -> struct FundRegistry.Fund\n    function abi_encode_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x0100)\n\n        {\n            // id\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint96_to_t_uint96(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // owner\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // createdAt\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // updatedAt\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint48_to_t_uint48(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // payee\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // threshold\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // donationAmount\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xc0))\n        }\n\n        {\n            // isEnd\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x0100)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct FundRegistry.Fund[] -> struct FundRegistry.Fund[]\n    function abi_encode_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Fund_$3454_memory_ptr_to_t_struct$_Fund_$3454_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint96(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint96_to_t_uint96_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_uint48_to_t_uint48_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint48(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint96_t_address_t_uint48_t_uint48_t_address_t_uint256_t_uint256_t_bool__to_t_uint96_t_address_t_uint48_t_uint48_t_address_t_uint256_t_uint256_t_bool__fromStack_reversed(headStart , value7, value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 256)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint48_to_t_uint48_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value6,  add(headStart, 192))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value7,  add(headStart, 224))\n\n    }\n\n    function abi_decode_tuple_t_uint96t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_uint96__to_t_uint96__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint96t_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint96_t_uint256__to_t_address_t_uint96_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint96_to_t_uint96_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint96t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_array$_t_uint256_$dyn_memory_ptrt_array$_t_uint256_$dyn_memory_ptrt_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint96t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint96(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function increment_t_uint96(value) -> ret {\n        value := cleanup_t_uint96(value)\n        if eq(value, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint96_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint96(value)))\n    }\n\n    function abi_encode_t_uint96_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_uint96_to_t_uint256(value))\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810(memPtr) {\n\n        mstore(add(memPtr, 0), \"0x0\")\n\n    }\n\n    function abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, 3)\n        store_literal_in_memory_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint96_t_uint256_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint96_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_bool_t_uint256__to_t_address_t_address_t_bool_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_add_t_uint96(x, y) -> sum {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be _endId <= fundCount\")\n\n    }\n\n    function abi_encode_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be _startId <= _endId\")\n\n    }\n\n    function abi_encode_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint96(x, y) -> diff {\n        x := cleanup_t_uint96(x)\n        y := cleanup_t_uint96(y)\n        diff := sub(x, y)\n\n        if gt(diff, 0xffffffffffffffffffffffff) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496(memPtr) {\n\n        mstore(add(memPtr, 0), \"Must be _id < fundCount\")\n\n    }\n\n    function abi_encode_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49(memPtr) {\n\n        mstore(add(memPtr, 0), \"Fund Update not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function cleanup_t_rational_0_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_0_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_rational_0_by_1(value)))\n    }\n\n    function abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_0_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_rational_0_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb(memPtr) {\n\n        mstore(add(memPtr, 0), \"token amount of user not suffici\")\n\n        mstore(add(memPtr, 32), \"ent\")\n\n    }\n\n    function abi_encode_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc(memPtr) {\n\n        mstore(add(memPtr, 0), \"token allowance shortage\")\n\n    }\n\n    function abi_encode_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_rational_0_by_1_t_uint256_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810__to_t_address_t_address_t_uint256_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_rational_0_by_1_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        mstore(add(headStart, 128), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810_to_t_bytes_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xE8 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3F936FF5 GT PUSH2 0x8A JUMPI DUP1 PUSH4 0x88B53CED GT PUSH2 0x64 JUMPI DUP1 PUSH4 0x88B53CED EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0xBC197C81 EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0xDD7D7929 EQ PUSH2 0x2D5 JUMPI DUP1 PUSH4 0xF23A6E61 EQ PUSH2 0x2F1 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x3F936FF5 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0x6C173D38 EQ PUSH2 0x227 JUMPI DUP1 PUSH4 0x7A3819CB EQ PUSH2 0x257 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1C69B464 GT PUSH2 0xC6 JUMPI DUP1 PUSH4 0x1C69B464 EQ PUSH2 0x154 JUMPI DUP1 PUSH4 0x1F71F89F EQ PUSH2 0x172 JUMPI DUP1 PUSH4 0x2F14670C EQ PUSH2 0x1A9 JUMPI DUP1 PUSH4 0x380EAAF9 EQ PUSH2 0x1D9 JUMPI PUSH2 0xE8 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xEC JUMPI DUP1 PUSH4 0x11C9FB83 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x17444626 EQ PUSH2 0x138 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x1D68 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x1DAD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x152 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14D SWAP2 SWAP1 PUSH2 0x1ED2 JUMP JUMPDEST PUSH2 0x71E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x15C PUSH2 0x9E5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x169 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x187 SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xA0F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A0 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x214E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BE SWAP2 SWAP1 PUSH2 0x21CA JUMP JUMPDEST PUSH2 0xAD8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1D0 SWAP2 SWAP1 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x1E07 JUMP JUMPDEST PUSH2 0xB20 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x200 SWAP2 SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x211 PUSH2 0xE8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21E SWAP2 SWAP1 PUSH2 0x2221 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x241 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23C SWAP2 SWAP1 PUSH2 0x20E7 JUMP JUMPDEST PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24E SWAP2 SWAP1 PUSH2 0x2208 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x271 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26C SWAP2 SWAP1 PUSH2 0x223A JUMP JUMPDEST PUSH2 0xF79 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x280 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x228A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29E SWAP2 SWAP1 PUSH2 0x22BF JUMP JUMPDEST PUSH2 0xFFA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BA SWAP2 SWAP1 PUSH2 0x250F JUMP JUMPDEST PUSH2 0x1013 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CC SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EA SWAP2 SWAP1 PUSH2 0x2602 JUMP JUMPDEST PUSH2 0x1027 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x30B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x306 SWAP2 SWAP1 PUSH2 0x2666 JUMP JUMPDEST PUSH2 0x14A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x318 SWAP2 SWAP1 PUSH2 0x25E9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH32 0x4E2312E000000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0x14BD JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD SWAP1 POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x479 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x430 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP PUSH0 DUP1 PUSH0 SWAP1 POP JUMPDEST DUP3 MLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x716 JUMPI PUSH0 SWAP2 POP PUSH0 JUMPDEST PUSH1 0x3 PUSH0 DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x4F1 JUMPI PUSH2 0x4F0 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x62B JUMPI PUSH1 0x3 PUSH0 DUP9 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x59A JUMPI PUSH2 0x599 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x5FB JUMPI PUSH2 0x5FA PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD SLOAD DUP4 PUSH2 0x616 SWAP2 SWAP1 PUSH2 0x2753 JUMP JUMPDEST SWAP3 POP DUP1 DUP1 PUSH2 0x623 SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x4A2 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS DUP6 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0x689 JUMPI PUSH2 0x688 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP10 DUP9 DUP11 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH2 0x6AD SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH2 0x6B7 SWAP2 SWAP1 PUSH2 0x2827 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6D6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x28EA JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6ED JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6FF JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 DUP1 PUSH2 0x70E SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x486 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH0 DUP3 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1E216CC18D3E93F7C7B9A7B3A038093BC655D3D5CBFBB504D67D4376BD02D13F DUP8 DUP8 PUSH0 TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x980 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 PUSH0 PUSH1 0x14 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B1 SWAP2 SWAP1 PUSH2 0x2983 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA0A PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xB20 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xAF1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SWAP2 POP SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xB9A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB91 SWAP1 PUSH2 0x2A1C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND GT ISZERO PUSH2 0xBF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBF0 SWAP1 PUSH2 0x2A84 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP4 DUP4 PUSH2 0xC06 SWAP2 SWAP1 PUSH2 0x2AA2 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xC2D JUMPI PUSH2 0xC2C PUSH2 0x2323 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xC66 JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xC53 PUSH2 0x1C79 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xC4B JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH0 DUP5 SWAP1 POP JUMPDEST DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0xE81 JUMPI PUSH1 0x1 PUSH0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP3 DUP7 DUP4 PUSH2 0xE44 SWAP2 SWAP1 PUSH2 0x2AA2 JUMP JUMPDEST PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MLOAD DUP2 LT PUSH2 0xE63 JUMPI PUSH2 0xE62 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 DUP1 PUSH2 0xE79 SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC6E JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT PUSH2 0xF21 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF18 SWAP1 PUSH2 0x2B2B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP3 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF9C JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP3 POP SWAP3 POP POP POP DUP1 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH0 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH2 0x1005 DUP4 DUP4 DUP4 PUSH2 0x1526 JUMP JUMPDEST PUSH2 0x100E DUP3 PUSH2 0x1A7F JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xBC197C81 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x6 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0xC SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP SWAP1 POP DUP1 PUSH1 0x20 ADD MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1241 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1238 SWAP1 PUSH2 0x2B93 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0x40 ADD MLOAD PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xC0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP3 PUSH1 0xE0 ADD MLOAD ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x1 PUSH0 DUP8 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x6 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH6 0xFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH6 0xFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0xC PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0xE0 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP DUP1 PUSH1 0xC0 ADD MLOAD DUP3 DUP7 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x603E97A48F8CADD1E9020BF96470C32853C5D9D8ED30F7CBE961F12AD2A45FA0 DUP8 DUP8 DUP7 PUSH1 0xE0 ADD MLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x149A SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2940 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH4 0xF23A6E61 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH3 0xFDD58E DUP6 PUSH0 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1580 SWAP3 SWAP2 SWAP1 PUSH2 0x2BEA JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x159B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x15BF SWAP2 SWAP1 PUSH2 0x2C25 JUMP JUMPDEST GT PUSH2 0x15FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15F6 SWAP1 PUSH2 0x2CC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xE985E9C5 DUP5 ADDRESS PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1659 SWAP3 SWAP2 SWAP1 PUSH2 0x2CDE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1674 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1698 SWAP2 SWAP1 PUSH2 0x2D2F JUMP JUMPDEST PUSH2 0x16D7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16CE SWAP1 PUSH2 0x2DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A DUP5 ADDRESS PUSH0 DUP6 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1735 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x174C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x175E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE POP SWAP1 POP PUSH1 0x3 PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH0 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH0 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP DUP2 PUSH1 0x1 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH2 0x18F5 SWAP2 SWAP1 PUSH2 0x2753 JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 DUP6 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 PUSH1 0x1 SWAP1 POP PUSH0 JUMPDEST DUP3 DUP1 SLOAD SWAP1 POP DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND LT ISZERO PUSH2 0x1A10 JUMPI DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 SLOAD DUP2 LT PUSH2 0x19B2 JUMPI PUSH2 0x19B1 PUSH2 0x26F9 JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x19FD JUMPI PUSH0 SWAP2 POP PUSH2 0x1A10 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x1A08 SWAP1 PUSH2 0x2786 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x1960 JUMP JUMPDEST POP DUP1 ISZERO PUSH2 0x1A77 JUMPI DUP2 DUP7 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x2 ADD SLOAD LT ISZERO PUSH2 0x1C76 JUMPI PUSH0 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF242432A ADDRESS PUSH2 0x1B2C DUP5 PUSH2 0xEA9 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP8 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1B7D SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2DC2 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B94 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1BA6 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP DUP1 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xCD79837F8E8F598DE24EF07EA60108DF97918F95CFC31D1D61FF9FA09C240352 PUSH1 0x1 PUSH0 DUP5 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD SLOAD TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x1C1A SWAP3 SWAP2 SWAP1 PUSH2 0x2E18 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH1 0x1 DUP1 PUSH0 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x4 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1C75 DUP2 PUSH2 0x3E8 PUSH2 0x39A JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x100 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH6 0xFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 ISZERO ISZERO DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D47 DUP2 PUSH2 0x1D13 JUMP JUMPDEST DUP2 EQ PUSH2 0x1D51 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1D62 DUP2 PUSH2 0x1D3E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D7D JUMPI PUSH2 0x1D7C PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1D8A DUP5 DUP3 DUP6 ADD PUSH2 0x1D54 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA7 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1DC0 PUSH0 DUP4 ADD DUP5 PUSH2 0x1D9E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DE6 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP2 EQ PUSH2 0x1DF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E01 DUP2 PUSH2 0x1DDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E1D JUMPI PUSH2 0x1E1C PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1E2A DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1E3B DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E6E DUP3 PUSH2 0x1E45 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1E7E DUP2 PUSH2 0x1E64 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E88 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1E99 DUP2 PUSH2 0x1E75 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EB1 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP2 EQ PUSH2 0x1EBB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ECC DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1EE9 JUMPI PUSH2 0x1EE8 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1EF6 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1F07 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1F18 DUP7 DUP3 DUP8 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F54 DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F63 DUP2 PUSH2 0x1E64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH6 0xFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F83 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1F92 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x1FA1 DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x100 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x1FBC PUSH0 DUP6 ADD DUP3 PUSH2 0x1F4B JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x1FCF PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x1F5A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x1FE2 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x1F7A JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x1FF5 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x1F7A JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2008 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x1F5A JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x201B PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x1F89 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x202E PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x1F89 JUMP JUMPDEST POP PUSH1 0xE0 DUP3 ADD MLOAD PUSH2 0x2041 PUSH1 0xE0 DUP6 ADD DUP3 PUSH2 0x1F98 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2052 DUP4 DUP4 PUSH2 0x1FA7 JUMP JUMPDEST PUSH2 0x100 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2075 DUP3 PUSH2 0x1F22 JUMP JUMPDEST PUSH2 0x207F DUP2 DUP6 PUSH2 0x1F2C JUMP JUMPDEST SWAP4 POP PUSH2 0x208A DUP4 PUSH2 0x1F3C JUMP JUMPDEST DUP1 PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x20BA JUMPI DUP2 MLOAD PUSH2 0x20A1 DUP9 DUP3 PUSH2 0x2047 JUMP JUMPDEST SWAP8 POP PUSH2 0x20AC DUP4 PUSH2 0x205F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x208D JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x20DF DUP2 DUP5 PUSH2 0x206B JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20FC JUMPI PUSH2 0x20FB PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2109 DUP5 DUP3 DUP6 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x211B DUP2 PUSH2 0x1DC6 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x212A DUP2 PUSH2 0x1E64 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2139 DUP2 PUSH2 0x1F69 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2148 DUP2 PUSH2 0x1E9F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x100 DUP3 ADD SWAP1 POP PUSH2 0x2162 PUSH0 DUP4 ADD DUP12 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x216F PUSH1 0x20 DUP4 ADD DUP11 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x217C PUSH1 0x40 DUP4 ADD DUP10 PUSH2 0x2130 JUMP JUMPDEST PUSH2 0x2189 PUSH1 0x60 DUP4 ADD DUP9 PUSH2 0x2130 JUMP JUMPDEST PUSH2 0x2196 PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x21A3 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x21B0 PUSH1 0xC0 DUP4 ADD DUP6 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x21BD PUSH1 0xE0 DUP4 ADD DUP5 PUSH2 0x1D9E JUMP JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x21E0 JUMPI PUSH2 0x21DF PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21ED DUP6 DUP3 DUP7 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x21FE DUP6 DUP3 DUP7 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x221B PUSH0 DUP4 ADD DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2234 PUSH0 DUP4 ADD DUP5 PUSH2 0x2112 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2251 JUMPI PUSH2 0x2250 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x225E DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x226F DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2280 DUP7 DUP3 DUP8 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x229D PUSH0 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x22AA PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2112 JUMP JUMPDEST PUSH2 0x22B7 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x22D6 JUMPI PUSH2 0x22D5 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22E3 DUP7 DUP3 DUP8 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x22F4 DUP7 DUP3 DUP8 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2305 DUP7 DUP3 DUP8 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2359 DUP3 PUSH2 0x2313 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2378 JUMPI PUSH2 0x2377 PUSH2 0x2323 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x238A PUSH2 0x1D02 JUMP JUMPDEST SWAP1 POP PUSH2 0x2396 DUP3 DUP3 PUSH2 0x2350 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x23B5 JUMPI PUSH2 0x23B4 PUSH2 0x2323 JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH2 0x23DC PUSH2 0x23D7 DUP5 PUSH2 0x239B JUMP JUMPDEST PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x23FF JUMPI PUSH2 0x23FE PUSH2 0x23C6 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2428 JUMPI DUP1 PUSH2 0x2414 DUP9 DUP3 PUSH2 0x1EBE JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2401 JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2446 JUMPI PUSH2 0x2445 PUSH2 0x230F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2456 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x23CA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x247D JUMPI PUSH2 0x247C PUSH2 0x2323 JUMP JUMPDEST JUMPDEST PUSH2 0x2486 DUP3 PUSH2 0x2313 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x24B3 PUSH2 0x24AE DUP5 PUSH2 0x2463 JUMP JUMPDEST PUSH2 0x2381 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x24CF JUMPI PUSH2 0x24CE PUSH2 0x245F JUMP JUMPDEST JUMPDEST PUSH2 0x24DA DUP5 DUP3 DUP6 PUSH2 0x2493 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x24F6 JUMPI PUSH2 0x24F5 PUSH2 0x230F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2506 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x24A1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2528 JUMPI PUSH2 0x2527 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2535 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x2546 DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2567 JUMPI PUSH2 0x2566 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x2573 DUP9 DUP3 DUP10 ADD PUSH2 0x2432 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2594 JUMPI PUSH2 0x2593 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x25A0 DUP9 DUP3 DUP10 ADD PUSH2 0x2432 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x25C1 JUMPI PUSH2 0x25C0 PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x25CD DUP9 DUP3 DUP10 ADD PUSH2 0x24E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x25E3 DUP2 PUSH2 0x1D13 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25FC PUSH0 DUP4 ADD DUP5 PUSH2 0x25DA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x261A JUMPI PUSH2 0x2619 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2627 DUP8 DUP3 DUP9 ADD PUSH2 0x1DF3 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x2638 DUP8 DUP3 DUP9 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x2649 DUP8 DUP3 DUP9 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x265A DUP8 DUP3 DUP9 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x267F JUMPI PUSH2 0x267E PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x268C DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x269D DUP9 DUP3 DUP10 ADD PUSH2 0x1E8B JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x26AE DUP9 DUP3 DUP10 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x26BF DUP9 DUP3 DUP10 ADD PUSH2 0x1EBE JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x26E0 JUMPI PUSH2 0x26DF PUSH2 0x1D0F JUMP JUMPDEST JUMPDEST PUSH2 0x26EC DUP9 DUP3 DUP10 ADD PUSH2 0x24E2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x275D DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP PUSH2 0x2768 DUP4 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2780 JUMPI PUSH2 0x277F PUSH2 0x2726 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2790 DUP3 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 SUB PUSH2 0x27AE JUMPI PUSH2 0x27AD PUSH2 0x2726 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27C3 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP PUSH2 0x27CE DUP4 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x27DC DUP2 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x27F3 JUMPI PUSH2 0x27F2 PUSH2 0x2726 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2831 DUP3 PUSH2 0x1E9F JUMP JUMPDEST SWAP2 POP PUSH2 0x283C DUP4 PUSH2 0x1E9F JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x284C JUMPI PUSH2 0x284B PUSH2 0x27FA JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x287A PUSH2 0x2875 PUSH2 0x2870 DUP5 PUSH2 0x1DC6 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x288A DUP2 PUSH2 0x2860 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x3078300000000000000000000000000000000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x28D4 PUSH1 0x3 DUP4 PUSH2 0x2890 JUMP JUMPDEST SWAP2 POP PUSH2 0x28DF DUP3 PUSH2 0x28A0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x28FD PUSH0 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x290A PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2917 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2881 JUMP JUMPDEST PUSH2 0x2924 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2935 DUP2 PUSH2 0x28C8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2953 PUSH0 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2960 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x296D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x1D9E JUMP JUMPDEST PUSH2 0x297A PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x298D DUP3 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2998 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x29BC JUMPI PUSH2 0x29BB PUSH2 0x2726 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374206265205F656E644964203C3D2066756E64436F756E740000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A06 PUSH1 0x1B DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A11 DUP3 PUSH2 0x29D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A33 DUP2 PUSH2 0x29FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4D757374206265205F73746172744964203C3D205F656E644964000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A6E PUSH1 0x1A DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A79 DUP3 PUSH2 0x2A3A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A9B DUP2 PUSH2 0x2A62 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2AAC DUP3 PUSH2 0x1DC6 JUMP JUMPDEST SWAP2 POP PUSH2 0x2AB7 DUP4 PUSH2 0x1DC6 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2ADB JUMPI PUSH2 0x2ADA PUSH2 0x2726 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4D757374206265205F6964203C2066756E64436F756E74000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B15 PUSH1 0x17 DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B20 DUP3 PUSH2 0x2AE1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B42 DUP2 PUSH2 0x2B09 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x46756E6420557064617465206E6F7420617574686F72697A6564000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B7D PUSH1 0x1A DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B88 DUP3 PUSH2 0x2B49 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BAA DUP2 PUSH2 0x2B71 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2BD4 PUSH2 0x2BCF PUSH2 0x2BCA DUP5 PUSH2 0x2BB1 JUMP JUMPDEST PUSH2 0x2857 JUMP JUMPDEST PUSH2 0x1E9F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2BE4 DUP2 PUSH2 0x2BBA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2BFD PUSH0 DUP4 ADD DUP6 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2C0A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2BDB JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2C1F DUP2 PUSH2 0x1EA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C3A JUMPI PUSH2 0x2C39 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2C47 DUP5 DUP3 DUP6 ADD PUSH2 0x2C11 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E20616D6F756E74206F662075736572206E6F742073756666696369 PUSH0 DUP3 ADD MSTORE PUSH32 0x656E740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CAA PUSH1 0x23 DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CB5 DUP3 PUSH2 0x2C50 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CD7 DUP2 PUSH2 0x2C9E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2CF1 PUSH0 DUP4 ADD DUP6 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2CFE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2121 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2D0E DUP2 PUSH2 0x1D93 JUMP JUMPDEST DUP2 EQ PUSH2 0x2D18 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x2D29 DUP2 PUSH2 0x2D05 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D44 JUMPI PUSH2 0x2D43 PUSH2 0x1D0B JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2D51 DUP5 DUP3 DUP6 ADD PUSH2 0x2D1B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x746F6B656E20616C6C6F77616E63652073686F72746167650000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D8E PUSH1 0x18 DUP4 PUSH2 0x29C2 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D99 DUP3 PUSH2 0x2D5A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DBB DUP2 PUSH2 0x2D82 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xA0 DUP3 ADD SWAP1 POP PUSH2 0x2DD5 PUSH0 DUP4 ADD DUP8 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2DE2 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2121 JUMP JUMPDEST PUSH2 0x2DEF PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2BDB JUMP JUMPDEST PUSH2 0x2DFC PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x2E0D DUP2 PUSH2 0x28C8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2E2B PUSH0 DUP4 ADD DUP6 PUSH2 0x213F JUMP JUMPDEST PUSH2 0x2E38 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x213F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH3 0xB0B581 0x2D PUSH21 0x2BE69BE8B0B3F7F76BAE4DA0815971B1A0BD355FB4 0x2C CALLVALUE 0xD 0xED CHAINID PUSH5 0x736F6C6343 STOP ADDMOD EQ STOP CALLER ",
							"sourceMap": "73542:6065:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;28820:221;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;77460:803;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;75007:518;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;78891:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;74237:36;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;74279:45;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79003:426;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;73606:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;79439:164;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;74330:70;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;76511:222;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29272:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;78269:612;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;29047:219;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;28820:221;28922:4;28960:34;28945:49;;;:11;:49;;;;:89;;;;28998:36;29022:11;28998:23;:36::i;:::-;28945:89;28938:96;;28820:221;;;:::o;77460:803::-;77533:22;77558:5;:14;77564:7;77558:14;;;;;;;;;;;;;;;:29;;;77533:54;;77597:30;77630:9;:18;77640:7;77630:18;;;;;;;;;;;;;;;77597:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77726:17;77758:8;77769:1;77758:12;;77753:504;77776:13;:20;77772:1;:24;;;77753:504;;;77857:1;77846:12;;77881:8;77876:184;77899:13;:22;77913:7;77899:22;;;;;;;;;;;;;;;:40;77922:13;77936:1;77922:16;;;;;;;;;;:::i;:::-;;;;;;;;77899:40;;;;;;;;;;;;;;;:47;;;;77895:1;:51;;;77876:184;;;77991:13;:22;78005:7;77991:22;;;;;;;;;;;;;;;:40;78014:13;78028:1;78014:16;;;;;;;;;;:::i;:::-;;;;;;;;77991:40;;;;;;;;;;;;;;;78032:1;77991:43;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:50;;;77978:63;;;;;:::i;:::-;;;77948:3;;;;;:::i;:::-;;;;77876:184;;;;78077:5;;;;;;;;;;:22;;;78108:4;78115:13;78129:1;78115:16;;;;;;;;;;:::i;:::-;;;;;;;;78133:7;78170:14;78155:11;78143:23;;:9;:23;;;;:::i;:::-;78142:42;;;;:::i;:::-;78077:116;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77798:3;;;;;:::i;:::-;;;;77753:504;;;;77523:740;;;77460:803;;:::o;75007:518::-;75129:10;75142:9;;;;;;;;;;;75129:22;;75174:207;;;;;;;;75192:3;75174:207;;;;;;75210:6;75174:207;;;;;;75238:15;75174:207;;;;;;75276:15;75174:207;;;;;;75307:6;75174:207;;;;;;75327:10;75174:207;;;;75351:1;75174:207;;;;75366:5;75174:207;;;;;75161:5;:10;75167:3;75161:10;;;;;;;;;;;;;;;:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;75459:1;75447:10;75426:3;75414:71;;;75431:6;75439;75462:5;75469:15;75414:71;;;;;;;;;:::i;:::-;;;;;;;;75517:1;75504:9;;:14;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;75119:406;75007:518;;;:::o;78891:106::-;78937:13;78968:22;78977:1;78980:9;;;;;;;;;;;78968:8;:22::i;:::-;78961:29;;78891:106;:::o;74237:36::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;74279:45::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;79003:426::-;79074:13;79116:9;;;;;;;;;;;79106:19;;:6;:19;;;;79098:59;;;;;;;;;;;;:::i;:::-;;;;;;;;;79187:6;79175:18;;:8;:18;;;;79167:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;79234:22;79279:8;79270:6;:17;;;;:::i;:::-;79259:29;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;79234:54;;79303:8;79314;79303:19;;79298:100;79328:6;79324:10;;:1;:10;;;79298:100;;;79379:5;:8;79385:1;79379:8;;;;;;;;;;;;;;;79354:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:8;79367;79363:1;:12;;;;:::i;:::-;79354:22;;;;;;;;;;:::i;:::-;;;;;;;:33;;;;79336:3;;;;;:::i;:::-;;;;79298:100;;;;79414:8;79407:15;;;79003:426;;;;:::o;73606:23::-;;;;;;;;;;;;;:::o;79439:164::-;79494:7;79526:9;;;;;;;;;;;79520:15;;:3;:15;;;79512:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;79580:5;:10;79586:3;79580:10;;;;;;;;;;;;;;;:16;;;;;;;;;;;;79573:23;;79439:164;;;:::o;74330:70::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;76511:222::-;76655:39;76670:5;76677:7;76686;76655:14;:39::i;:::-;76704:22;76718:7;76704:13;:22::i;:::-;76511:222;;;:::o;29272:247::-;29451:6;29476:36;;;29469:43;;29272:247;;;;;;;:::o;78269:612::-;78410:17;78430:5;:10;78436:3;78430:10;;;;;;;;;;;;;;;78410:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78472:5;:11;;;78458:25;;:10;:25;;;78450:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;78537:226;;;;;;;;78555:3;78537:226;;;;;;78573:6;78537:226;;;;;;78594:5;:15;;;78537:226;;;;;;78631:15;78537:226;;;;;;78662:6;78537:226;;;;;;78683:10;78537:226;;;;78708:5;:20;;;78537:226;;;;78742:5;:11;;;78537:226;;;;;78524:5;:10;78530:3;78524:10;;;;;;;;;;;;;;;:239;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;78823:5;:20;;;78811:10;78790:3;78778:96;;;78795:6;78803;78845:5;:11;;;78858:15;78778:96;;;;;;;;;:::i;:::-;;;;;;;;78400:481;78269:612;;;;:::o;29047:219::-;29203:6;29228:31;;;29221:38;;29047:219;;;;;;;:::o;25537:146::-;25613:4;25651:25;25636:40;;;:11;:40;;;;25629:47;;25537:146;;;:::o;75531:974::-;75688:7;75660:5;;;;;;;;;;:15;;;75676:5;75683:1;75660:25;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:35;75652:84;;;;;;;;;;;;:::i;:::-;;;;;;;;;75754:5;;;;;;;;;;:22;;;75777:5;75792:4;75754:45;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;75746:82;;;;;;;;;;;;:::i;:::-;;;;;;;;;75838:5;;;;;;;;;;:22;;;75861:5;75876:4;75883:1;75886:7;75838:63;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;75921:27;75951:79;;;;;;;;75973:5;75951:79;;;;;;75992:7;75951:79;;;;;;76013:7;75951:79;;;75921:109;;76040:13;:22;76054:7;76040:22;;;;;;;;;;;;;;;:29;76063:5;76040:29;;;;;;;;;;;;;;;76075:11;76040:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;76161:7;76129:5;:14;76135:7;76129:14;;;;;;;;;;;;;;;:29;;;:39;;;;:::i;:::-;76097:5;:14;76103:7;76097:14;;;;;;;;;;;;;;;:29;;:71;;;;76179:28;76210:9;:18;76220:7;76210:18;;;;;;;;;;;;;;;76179:49;;76239:10;76252:4;76239:17;;76271:8;76266:166;76289:10;:17;;;;76285:1;:21;;;76266:166;;;76347:5;76330:22;;:10;76341:1;76330:13;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:22;;;76326:96;;76379:5;76371:13;;76402:5;;76326:96;76308:3;;;;;:::i;:::-;;;;76266:166;;;;76445:5;76441:57;;;76465:10;76481:5;76465:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;76441:57;75641:864;;;75531:974;;;:::o;76739:715::-;76836:5;:15;76842:8;76836:15;;;;;;;;;;;;;;;:30;;;76808:5;:15;76814:8;76808:15;;;;;;;;;;;;;;;:25;;;:58;76805:632;;;76924:5;;;;;;;;;;:22;;;76955:4;76962:22;76975:8;76962:12;:22::i;:::-;76986:1;76989:5;:15;76995:8;76989:15;;;;;;;;;;;;;;;:30;;;76924:103;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;77101:8;77069:135;;;77127:5;:15;77133:8;77127:15;;;;;;;;;;;;;;;:30;;;77175:15;77069:135;;;;;;;:::i;:::-;;;;;;;;77242:4;77218:5;:15;77224:8;77218:15;;;;;;;;;;;;;;;:21;;;:28;;;;;;;;;;;;;;;;;;77305:26;77316:8;77326:4;77305:10;:26::i;:::-;76805:632;76739:715;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:109::-;1554:7;1594:26;1587:5;1583:38;1572:49;;1518:109;;;:::o;1633:120::-;1705:23;1722:5;1705:23;:::i;:::-;1698:5;1695:34;1685:62;;1743:1;1740;1733:12;1685:62;1633:120;:::o;1759:137::-;1804:5;1842:6;1829:20;1820:29;;1858:32;1884:5;1858:32;:::i;:::-;1759:137;;;;:::o;1902:470::-;1968:6;1976;2025:2;2013:9;2004:7;2000:23;1996:32;1993:119;;;2031:79;;:::i;:::-;1993:119;2151:1;2176:52;2220:7;2211:6;2200:9;2196:22;2176:52;:::i;:::-;2166:62;;2122:116;2277:2;2303:52;2347:7;2338:6;2327:9;2323:22;2303:52;:::i;:::-;2293:62;;2248:117;1902:470;;;;;:::o;2378:126::-;2415:7;2455:42;2448:5;2444:54;2433:65;;2378:126;;;:::o;2510:96::-;2547:7;2576:24;2594:5;2576:24;:::i;:::-;2565:35;;2510:96;;;:::o;2612:122::-;2685:24;2703:5;2685:24;:::i;:::-;2678:5;2675:35;2665:63;;2724:1;2721;2714:12;2665:63;2612:122;:::o;2740:139::-;2786:5;2824:6;2811:20;2802:29;;2840:33;2867:5;2840:33;:::i;:::-;2740:139;;;;:::o;2885:77::-;2922:7;2951:5;2940:16;;2885:77;;;:::o;2968:122::-;3041:24;3059:5;3041:24;:::i;:::-;3034:5;3031:35;3021:63;;3080:1;3077;3070:12;3021:63;2968:122;:::o;3096:139::-;3142:5;3180:6;3167:20;3158:29;;3196:33;3223:5;3196:33;:::i;:::-;3096:139;;;;:::o;3241:619::-;3318:6;3326;3334;3383:2;3371:9;3362:7;3358:23;3354:32;3351:119;;;3389:79;;:::i;:::-;3351:119;3509:1;3534:53;3579:7;3570:6;3559:9;3555:22;3534:53;:::i;:::-;3524:63;;3480:117;3636:2;3662:53;3707:7;3698:6;3687:9;3683:22;3662:53;:::i;:::-;3652:63;;3607:118;3764:2;3790:53;3835:7;3826:6;3815:9;3811:22;3790:53;:::i;:::-;3780:63;;3735:118;3241:619;;;;;:::o;3866:136::-;3955:6;3989:5;3983:12;3973:22;;3866:136;;;:::o;4008:206::-;4129:11;4163:6;4158:3;4151:19;4203:4;4198:3;4194:14;4179:29;;4008:206;;;;:::o;4220:154::-;4309:4;4332:3;4324:11;;4362:4;4357:3;4353:14;4345:22;;4220:154;;;:::o;4380:105::-;4455:23;4472:5;4455:23;:::i;:::-;4450:3;4443:36;4380:105;;:::o;4491:108::-;4568:24;4586:5;4568:24;:::i;:::-;4563:3;4556:37;4491:108;;:::o;4605:97::-;4641:7;4681:14;4674:5;4670:26;4659:37;;4605:97;;;:::o;4708:105::-;4783:23;4800:5;4783:23;:::i;:::-;4778:3;4771:36;4708:105;;:::o;4819:108::-;4896:24;4914:5;4896:24;:::i;:::-;4891:3;4884:37;4819:108;;:::o;4933:99::-;5004:21;5019:5;5004:21;:::i;:::-;4999:3;4992:34;4933:99;;:::o;5098:1551::-;5229:6;5224:3;5220:16;5316:4;5309:5;5305:16;5299:23;5335:61;5390:4;5385:3;5381:14;5367:12;5335:61;:::i;:::-;5246:160;5489:4;5482:5;5478:16;5472:23;5508:63;5565:4;5560:3;5556:14;5542:12;5508:63;:::i;:::-;5416:165;5668:4;5661:5;5657:16;5651:23;5687:61;5742:4;5737:3;5733:14;5719:12;5687:61;:::i;:::-;5591:167;5845:4;5838:5;5834:16;5828:23;5864:61;5919:4;5914:3;5910:14;5896:12;5864:61;:::i;:::-;5768:167;6018:4;6011:5;6007:16;6001:23;6037:63;6094:4;6089:3;6085:14;6071:12;6037:63;:::i;:::-;5945:165;6197:4;6190:5;6186:16;6180:23;6216:63;6273:4;6268:3;6264:14;6250:12;6216:63;:::i;:::-;6120:169;6381:4;6374:5;6370:16;6364:23;6400:63;6457:4;6452:3;6448:14;6434:12;6400:63;:::i;:::-;6299:174;6556:4;6549:5;6545:16;6539:23;6575:57;6626:4;6621:3;6617:14;6603:12;6575:57;:::i;:::-;6483:159;5198:1451;5098:1551;;:::o;6655:269::-;6768:10;6789:90;6875:3;6867:6;6789:90;:::i;:::-;6911:6;6906:3;6902:16;6888:30;;6655:269;;;;:::o;6930:135::-;7022:4;7054;7049:3;7045:14;7037:22;;6930:135;;;:::o;7135:908::-;7298:3;7327:76;7397:5;7327:76;:::i;:::-;7419:108;7520:6;7515:3;7419:108;:::i;:::-;7412:115;;7551:78;7623:5;7551:78;:::i;:::-;7652:7;7683:1;7668:350;7693:6;7690:1;7687:13;7668:350;;;7769:6;7763:13;7796:107;7899:3;7884:13;7796:107;:::i;:::-;7789:114;;7926:82;8001:6;7926:82;:::i;:::-;7916:92;;7728:290;7715:1;7712;7708:9;7703:14;;7668:350;;;7672:14;8034:3;8027:10;;7303:740;;;7135:908;;;;:::o;8049:461::-;8236:4;8274:2;8263:9;8259:18;8251:26;;8323:9;8317:4;8313:20;8309:1;8298:9;8294:17;8287:47;8351:152;8498:4;8489:6;8351:152;:::i;:::-;8343:160;;8049:461;;;;:::o;8516:327::-;8574:6;8623:2;8611:9;8602:7;8598:23;8594:32;8591:119;;;8629:79;;:::i;:::-;8591:119;8749:1;8774:52;8818:7;8809:6;8798:9;8794:22;8774:52;:::i;:::-;8764:62;;8720:116;8516:327;;;;:::o;8849:115::-;8934:23;8951:5;8934:23;:::i;:::-;8929:3;8922:36;8849:115;;:::o;8970:118::-;9057:24;9075:5;9057:24;:::i;:::-;9052:3;9045:37;8970:118;;:::o;9094:115::-;9179:23;9196:5;9179:23;:::i;:::-;9174:3;9167:36;9094:115;;:::o;9215:118::-;9302:24;9320:5;9302:24;:::i;:::-;9297:3;9290:37;9215:118;;:::o;9339:973::-;9616:4;9654:3;9643:9;9639:19;9631:27;;9668:69;9734:1;9723:9;9719:17;9710:6;9668:69;:::i;:::-;9747:72;9815:2;9804:9;9800:18;9791:6;9747:72;:::i;:::-;9829:70;9895:2;9884:9;9880:18;9871:6;9829:70;:::i;:::-;9909;9975:2;9964:9;9960:18;9951:6;9909:70;:::i;:::-;9989:73;10057:3;10046:9;10042:19;10033:6;9989:73;:::i;:::-;10072;10140:3;10129:9;10125:19;10116:6;10072:73;:::i;:::-;10155;10223:3;10212:9;10208:19;10199:6;10155:73;:::i;:::-;10238:67;10300:3;10289:9;10285:19;10276:6;10238:67;:::i;:::-;9339:973;;;;;;;;;;;:::o;10318:472::-;10385:6;10393;10442:2;10430:9;10421:7;10417:23;10413:32;10410:119;;;10448:79;;:::i;:::-;10410:119;10568:1;10593:52;10637:7;10628:6;10617:9;10613:22;10593:52;:::i;:::-;10583:62;;10539:116;10694:2;10720:53;10765:7;10756:6;10745:9;10741:22;10720:53;:::i;:::-;10710:63;;10665:118;10318:472;;;;;:::o;10796:222::-;10889:4;10927:2;10916:9;10912:18;10904:26;;10940:71;11008:1;10997:9;10993:17;10984:6;10940:71;:::i;:::-;10796:222;;;;:::o;11024:218::-;11115:4;11153:2;11142:9;11138:18;11130:26;;11166:69;11232:1;11221:9;11217:17;11208:6;11166:69;:::i;:::-;11024:218;;;;:::o;11248:617::-;11324:6;11332;11340;11389:2;11377:9;11368:7;11364:23;11360:32;11357:119;;;11395:79;;:::i;:::-;11357:119;11515:1;11540:52;11584:7;11575:6;11564:9;11560:22;11540:52;:::i;:::-;11530:62;;11486:116;11641:2;11667:53;11712:7;11703:6;11692:9;11688:22;11667:53;:::i;:::-;11657:63;;11612:118;11769:2;11795:53;11840:7;11831:6;11820:9;11816:22;11795:53;:::i;:::-;11785:63;;11740:118;11248:617;;;;;:::o;11871:438::-;12018:4;12056:2;12045:9;12041:18;12033:26;;12069:71;12137:1;12126:9;12122:17;12113:6;12069:71;:::i;:::-;12150:70;12216:2;12205:9;12201:18;12192:6;12150:70;:::i;:::-;12230:72;12298:2;12287:9;12283:18;12274:6;12230:72;:::i;:::-;11871:438;;;;;;:::o;12315:617::-;12391:6;12399;12407;12456:2;12444:9;12435:7;12431:23;12427:32;12424:119;;;12462:79;;:::i;:::-;12424:119;12582:1;12607:53;12652:7;12643:6;12632:9;12628:22;12607:53;:::i;:::-;12597:63;;12553:117;12709:2;12735:52;12779:7;12770:6;12759:9;12755:22;12735:52;:::i;:::-;12725:62;;12680:117;12836:2;12862:53;12907:7;12898:6;12887:9;12883:22;12862:53;:::i;:::-;12852:63;;12807:118;12315:617;;;;;:::o;12938:117::-;13047:1;13044;13037:12;13061:102;13102:6;13153:2;13149:7;13144:2;13137:5;13133:14;13129:28;13119:38;;13061:102;;;:::o;13169:180::-;13217:77;13214:1;13207:88;13314:4;13311:1;13304:15;13338:4;13335:1;13328:15;13355:281;13438:27;13460:4;13438:27;:::i;:::-;13430:6;13426:40;13568:6;13556:10;13553:22;13532:18;13520:10;13517:34;13514:62;13511:88;;;13579:18;;:::i;:::-;13511:88;13619:10;13615:2;13608:22;13398:238;13355:281;;:::o;13642:129::-;13676:6;13703:20;;:::i;:::-;13693:30;;13732:33;13760:4;13752:6;13732:33;:::i;:::-;13642:129;;;:::o;13777:311::-;13854:4;13944:18;13936:6;13933:30;13930:56;;;13966:18;;:::i;:::-;13930:56;14016:4;14008:6;14004:17;13996:25;;14076:4;14070;14066:15;14058:23;;13777:311;;;:::o;14094:117::-;14203:1;14200;14193:12;14234:710;14330:5;14355:81;14371:64;14428:6;14371:64;:::i;:::-;14355:81;:::i;:::-;14346:90;;14456:5;14485:6;14478:5;14471:21;14519:4;14512:5;14508:16;14501:23;;14572:4;14564:6;14560:17;14552:6;14548:30;14601:3;14593:6;14590:15;14587:122;;;14620:79;;:::i;:::-;14587:122;14735:6;14718:220;14752:6;14747:3;14744:15;14718:220;;;14827:3;14856:37;14889:3;14877:10;14856:37;:::i;:::-;14851:3;14844:50;14923:4;14918:3;14914:14;14907:21;;14794:144;14778:4;14773:3;14769:14;14762:21;;14718:220;;;14722:21;14336:608;;14234:710;;;;;:::o;14967:370::-;15038:5;15087:3;15080:4;15072:6;15068:17;15064:27;15054:122;;15095:79;;:::i;:::-;15054:122;15212:6;15199:20;15237:94;15327:3;15319:6;15312:4;15304:6;15300:17;15237:94;:::i;:::-;15228:103;;15044:293;14967:370;;;;:::o;15343:117::-;15452:1;15449;15442:12;15466:307;15527:4;15617:18;15609:6;15606:30;15603:56;;;15639:18;;:::i;:::-;15603:56;15677:29;15699:6;15677:29;:::i;:::-;15669:37;;15761:4;15755;15751:15;15743:23;;15466:307;;;:::o;15779:146::-;15876:6;15871:3;15866;15853:30;15917:1;15908:6;15903:3;15899:16;15892:27;15779:146;;;:::o;15931:423::-;16008:5;16033:65;16049:48;16090:6;16049:48;:::i;:::-;16033:65;:::i;:::-;16024:74;;16121:6;16114:5;16107:21;16159:4;16152:5;16148:16;16197:3;16188:6;16183:3;16179:16;16176:25;16173:112;;;16204:79;;:::i;:::-;16173:112;16294:54;16341:6;16336:3;16331;16294:54;:::i;:::-;16014:340;15931:423;;;;;:::o;16373:338::-;16428:5;16477:3;16470:4;16462:6;16458:17;16454:27;16444:122;;16485:79;;:::i;:::-;16444:122;16602:6;16589:20;16627:78;16701:3;16693:6;16686:4;16678:6;16674:17;16627:78;:::i;:::-;16618:87;;16434:277;16373:338;;;;:::o;16717:1509::-;16871:6;16879;16887;16895;16903;16952:3;16940:9;16931:7;16927:23;16923:33;16920:120;;;16959:79;;:::i;:::-;16920:120;17079:1;17104:53;17149:7;17140:6;17129:9;17125:22;17104:53;:::i;:::-;17094:63;;17050:117;17206:2;17232:53;17277:7;17268:6;17257:9;17253:22;17232:53;:::i;:::-;17222:63;;17177:118;17362:2;17351:9;17347:18;17334:32;17393:18;17385:6;17382:30;17379:117;;;17415:79;;:::i;:::-;17379:117;17520:78;17590:7;17581:6;17570:9;17566:22;17520:78;:::i;:::-;17510:88;;17305:303;17675:2;17664:9;17660:18;17647:32;17706:18;17698:6;17695:30;17692:117;;;17728:79;;:::i;:::-;17692:117;17833:78;17903:7;17894:6;17883:9;17879:22;17833:78;:::i;:::-;17823:88;;17618:303;17988:3;17977:9;17973:19;17960:33;18020:18;18012:6;18009:30;18006:117;;;18042:79;;:::i;:::-;18006:117;18147:62;18201:7;18192:6;18181:9;18177:22;18147:62;:::i;:::-;18137:72;;17931:288;16717:1509;;;;;;;;:::o;18232:115::-;18317:23;18334:5;18317:23;:::i;:::-;18312:3;18305:36;18232:115;;:::o;18353:218::-;18444:4;18482:2;18471:9;18467:18;18459:26;;18495:69;18561:1;18550:9;18546:17;18537:6;18495:69;:::i;:::-;18353:218;;;;:::o;18577:763::-;18662:6;18670;18678;18686;18735:3;18723:9;18714:7;18710:23;18706:33;18703:120;;;18742:79;;:::i;:::-;18703:120;18862:1;18887:52;18931:7;18922:6;18911:9;18907:22;18887:52;:::i;:::-;18877:62;;18833:116;18988:2;19014:53;19059:7;19050:6;19039:9;19035:22;19014:53;:::i;:::-;19004:63;;18959:118;19116:2;19142:53;19187:7;19178:6;19167:9;19163:22;19142:53;:::i;:::-;19132:63;;19087:118;19244:2;19270:53;19315:7;19306:6;19295:9;19291:22;19270:53;:::i;:::-;19260:63;;19215:118;18577:763;;;;;;;:::o;19346:1089::-;19450:6;19458;19466;19474;19482;19531:3;19519:9;19510:7;19506:23;19502:33;19499:120;;;19538:79;;:::i;:::-;19499:120;19658:1;19683:53;19728:7;19719:6;19708:9;19704:22;19683:53;:::i;:::-;19673:63;;19629:117;19785:2;19811:53;19856:7;19847:6;19836:9;19832:22;19811:53;:::i;:::-;19801:63;;19756:118;19913:2;19939:53;19984:7;19975:6;19964:9;19960:22;19939:53;:::i;:::-;19929:63;;19884:118;20041:2;20067:53;20112:7;20103:6;20092:9;20088:22;20067:53;:::i;:::-;20057:63;;20012:118;20197:3;20186:9;20182:19;20169:33;20229:18;20221:6;20218:30;20215:117;;;20251:79;;:::i;:::-;20215:117;20356:62;20410:7;20401:6;20390:9;20386:22;20356:62;:::i;:::-;20346:72;;20140:288;19346:1089;;;;;;;;:::o;20441:180::-;20489:77;20486:1;20479:88;20586:4;20583:1;20576:15;20610:4;20607:1;20600:15;20627:180;20675:77;20672:1;20665:88;20772:4;20769:1;20762:15;20796:4;20793:1;20786:15;20813:191;20853:3;20872:20;20890:1;20872:20;:::i;:::-;20867:25;;20906:20;20924:1;20906:20;:::i;:::-;20901:25;;20949:1;20946;20942:9;20935:16;;20970:3;20967:1;20964:10;20961:36;;;20977:18;;:::i;:::-;20961:36;20813:191;;;;:::o;21010:::-;21048:3;21071:23;21088:5;21071:23;:::i;:::-;21062:32;;21116:26;21109:5;21106:37;21103:63;;21146:18;;:::i;:::-;21103:63;21193:1;21186:5;21182:13;21175:20;;21010:191;;;:::o;21207:410::-;21247:7;21270:20;21288:1;21270:20;:::i;:::-;21265:25;;21304:20;21322:1;21304:20;:::i;:::-;21299:25;;21359:1;21356;21352:9;21381:30;21399:11;21381:30;:::i;:::-;21370:41;;21560:1;21551:7;21547:15;21544:1;21541:22;21521:1;21514:9;21494:83;21471:139;;21590:18;;:::i;:::-;21471:139;21255:362;21207:410;;;;:::o;21623:180::-;21671:77;21668:1;21661:88;21768:4;21765:1;21758:15;21792:4;21789:1;21782:15;21809:185;21849:1;21866:20;21884:1;21866:20;:::i;:::-;21861:25;;21900:20;21918:1;21900:20;:::i;:::-;21895:25;;21939:1;21929:35;;21944:18;;:::i;:::-;21929:35;21986:1;21983;21979:9;21974:14;;21809:185;;;;:::o;22000:60::-;22028:3;22049:5;22042:12;;22000:60;;;:::o;22066:140::-;22115:9;22148:52;22166:33;22175:23;22192:5;22175:23;:::i;:::-;22166:33;:::i;:::-;22148:52;:::i;:::-;22135:65;;22066:140;;;:::o;22212:129::-;22298:36;22328:5;22298:36;:::i;:::-;22293:3;22286:49;22212:129;;:::o;22347:168::-;22430:11;22464:6;22459:3;22452:19;22504:4;22499:3;22495:14;22480:29;;22347:168;;;;:::o;22521:153::-;22661:5;22657:1;22649:6;22645:14;22638:29;22521:153;:::o;22680:363::-;22821:3;22842:65;22905:1;22900:3;22842:65;:::i;:::-;22835:72;;22916:93;23005:3;22916:93;:::i;:::-;23034:2;23029:3;23025:12;23018:19;;22680:363;;;:::o;23049:857::-;23325:4;23363:3;23352:9;23348:19;23340:27;;23377:71;23445:1;23434:9;23430:17;23421:6;23377:71;:::i;:::-;23458:72;23526:2;23515:9;23511:18;23502:6;23458:72;:::i;:::-;23540:71;23607:2;23596:9;23592:18;23583:6;23540:71;:::i;:::-;23621:72;23689:2;23678:9;23674:18;23665:6;23621:72;:::i;:::-;23741:9;23735:4;23731:20;23725:3;23714:9;23710:19;23703:49;23769:130;23894:4;23769:130;:::i;:::-;23761:138;;23049:857;;;;;;;:::o;23912:541::-;24083:4;24121:3;24110:9;24106:19;24098:27;;24135:71;24203:1;24192:9;24188:17;24179:6;24135:71;:::i;:::-;24216:72;24284:2;24273:9;24269:18;24260:6;24216:72;:::i;:::-;24298:66;24360:2;24349:9;24345:18;24336:6;24298:66;:::i;:::-;24374:72;24442:2;24431:9;24427:18;24418:6;24374:72;:::i;:::-;23912:541;;;;;;;:::o;24459:213::-;24498:3;24517:19;24534:1;24517:19;:::i;:::-;24512:24;;24550:19;24567:1;24550:19;:::i;:::-;24545:24;;24592:1;24589;24585:9;24578:16;;24615:26;24610:3;24607:35;24604:61;;;24645:18;;:::i;:::-;24604:61;24459:213;;;;:::o;24678:169::-;24762:11;24796:6;24791:3;24784:19;24836:4;24831:3;24827:14;24812:29;;24678:169;;;;:::o;24853:177::-;24993:29;24989:1;24981:6;24977:14;24970:53;24853:177;:::o;25036:366::-;25178:3;25199:67;25263:2;25258:3;25199:67;:::i;:::-;25192:74;;25275:93;25364:3;25275:93;:::i;:::-;25393:2;25388:3;25384:12;25377:19;;25036:366;;;:::o;25408:419::-;25574:4;25612:2;25601:9;25597:18;25589:26;;25661:9;25655:4;25651:20;25647:1;25636:9;25632:17;25625:47;25689:131;25815:4;25689:131;:::i;:::-;25681:139;;25408:419;;;:::o;25833:176::-;25973:28;25969:1;25961:6;25957:14;25950:52;25833:176;:::o;26015:366::-;26157:3;26178:67;26242:2;26237:3;26178:67;:::i;:::-;26171:74;;26254:93;26343:3;26254:93;:::i;:::-;26372:2;26367:3;26363:12;26356:19;;26015:366;;;:::o;26387:419::-;26553:4;26591:2;26580:9;26576:18;26568:26;;26640:9;26634:4;26630:20;26626:1;26615:9;26611:17;26604:47;26668:131;26794:4;26668:131;:::i;:::-;26660:139;;26387:419;;;:::o;26812:216::-;26851:4;26871:19;26888:1;26871:19;:::i;:::-;26866:24;;26904:19;26921:1;26904:19;:::i;:::-;26899:24;;26947:1;26944;26940:9;26932:17;;26971:26;26965:4;26962:36;26959:62;;;27001:18;;:::i;:::-;26959:62;26812:216;;;;:::o;27034:173::-;27174:25;27170:1;27162:6;27158:14;27151:49;27034:173;:::o;27213:366::-;27355:3;27376:67;27440:2;27435:3;27376:67;:::i;:::-;27369:74;;27452:93;27541:3;27452:93;:::i;:::-;27570:2;27565:3;27561:12;27554:19;;27213:366;;;:::o;27585:419::-;27751:4;27789:2;27778:9;27774:18;27766:26;;27838:9;27832:4;27828:20;27824:1;27813:9;27809:17;27802:47;27866:131;27992:4;27866:131;:::i;:::-;27858:139;;27585:419;;;:::o;28010:176::-;28150:28;28146:1;28138:6;28134:14;28127:52;28010:176;:::o;28192:366::-;28334:3;28355:67;28419:2;28414:3;28355:67;:::i;:::-;28348:74;;28431:93;28520:3;28431:93;:::i;:::-;28549:2;28544:3;28540:12;28533:19;;28192:366;;;:::o;28564:419::-;28730:4;28768:2;28757:9;28753:18;28745:26;;28817:9;28811:4;28807:20;28803:1;28792:9;28788:17;28781:47;28845:131;28971:4;28845:131;:::i;:::-;28837:139;;28564:419;;;:::o;28989:85::-;29034:7;29063:5;29052:16;;28989:85;;;:::o;29080:158::-;29138:9;29171:61;29189:42;29198:32;29224:5;29198:32;:::i;:::-;29189:42;:::i;:::-;29171:61;:::i;:::-;29158:74;;29080:158;;;:::o;29244:147::-;29339:45;29378:5;29339:45;:::i;:::-;29334:3;29327:58;29244:147;;:::o;29397:348::-;29526:4;29564:2;29553:9;29549:18;29541:26;;29577:71;29645:1;29634:9;29630:17;29621:6;29577:71;:::i;:::-;29658:80;29734:2;29723:9;29719:18;29710:6;29658:80;:::i;:::-;29397:348;;;;;:::o;29751:143::-;29808:5;29839:6;29833:13;29824:22;;29855:33;29882:5;29855:33;:::i;:::-;29751:143;;;;:::o;29900:351::-;29970:6;30019:2;30007:9;29998:7;29994:23;29990:32;29987:119;;;30025:79;;:::i;:::-;29987:119;30145:1;30170:64;30226:7;30217:6;30206:9;30202:22;30170:64;:::i;:::-;30160:74;;30116:128;29900:351;;;;:::o;30257:222::-;30397:34;30393:1;30385:6;30381:14;30374:58;30466:5;30461:2;30453:6;30449:15;30442:30;30257:222;:::o;30485:366::-;30627:3;30648:67;30712:2;30707:3;30648:67;:::i;:::-;30641:74;;30724:93;30813:3;30724:93;:::i;:::-;30842:2;30837:3;30833:12;30826:19;;30485:366;;;:::o;30857:419::-;31023:4;31061:2;31050:9;31046:18;31038:26;;31110:9;31104:4;31100:20;31096:1;31085:9;31081:17;31074:47;31138:131;31264:4;31138:131;:::i;:::-;31130:139;;30857:419;;;:::o;31282:332::-;31403:4;31441:2;31430:9;31426:18;31418:26;;31454:71;31522:1;31511:9;31507:17;31498:6;31454:71;:::i;:::-;31535:72;31603:2;31592:9;31588:18;31579:6;31535:72;:::i;:::-;31282:332;;;;;:::o;31620:116::-;31690:21;31705:5;31690:21;:::i;:::-;31683:5;31680:32;31670:60;;31726:1;31723;31716:12;31670:60;31620:116;:::o;31742:137::-;31796:5;31827:6;31821:13;31812:22;;31843:30;31867:5;31843:30;:::i;:::-;31742:137;;;;:::o;31885:345::-;31952:6;32001:2;31989:9;31980:7;31976:23;31972:32;31969:119;;;32007:79;;:::i;:::-;31969:119;32127:1;32152:61;32205:7;32196:6;32185:9;32181:22;32152:61;:::i;:::-;32142:71;;32098:125;31885:345;;;;:::o;32236:174::-;32376:26;32372:1;32364:6;32360:14;32353:50;32236:174;:::o;32416:366::-;32558:3;32579:67;32643:2;32638:3;32579:67;:::i;:::-;32572:74;;32655:93;32744:3;32655:93;:::i;:::-;32773:2;32768:3;32764:12;32757:19;;32416:366;;;:::o;32788:419::-;32954:4;32992:2;32981:9;32977:18;32969:26;;33041:9;33035:4;33031:20;33027:1;33016:9;33012:17;33005:47;33069:131;33195:4;33069:131;:::i;:::-;33061:139;;32788:419;;;:::o;33213:875::-;33498:4;33536:3;33525:9;33521:19;33513:27;;33550:71;33618:1;33607:9;33603:17;33594:6;33550:71;:::i;:::-;33631:72;33699:2;33688:9;33684:18;33675:6;33631:72;:::i;:::-;33713:80;33789:2;33778:9;33774:18;33765:6;33713:80;:::i;:::-;33803:72;33871:2;33860:9;33856:18;33847:6;33803:72;:::i;:::-;33923:9;33917:4;33913:20;33907:3;33896:9;33892:19;33885:49;33951:130;34076:4;33951:130;:::i;:::-;33943:138;;33213:875;;;;;;;:::o;34094:332::-;34215:4;34253:2;34242:9;34238:18;34230:26;;34266:71;34334:1;34323:9;34319:17;34310:6;34266:71;:::i;:::-;34347:72;34415:2;34404:9;34400:18;34391:6;34347:72;:::i;:::-;34094:332;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2378600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"createFund(address,address,uint256)": "infinite",
								"donate(address,uint96,uint256)": "infinite",
								"fundCount()": "2539",
								"fundDonations(uint96,address,uint256)": "infinite",
								"fundUsers(uint96,uint256)": "5255",
								"funds(uint96)": "infinite",
								"getAllFunds()": "infinite",
								"getFundPayee(uint96)": "5193",
								"getFunds(uint96,uint96)": "infinite",
								"mintDTiket(uint96,uint96)": "infinite",
								"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "infinite",
								"onERC1155Received(address,address,uint256,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "741",
								"updateFund(uint96,address,address,uint256)": "infinite"
							},
							"internal": {
								"createDonation(address,uint96,uint256)": "infinite",
								"validateFunds(uint96)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 73635,
									"end": 73694,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73681,
									"end": 73687,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73678,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73673,
									"end": 73678,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 73673,
									"end": 73687,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73635,
									"end": 73694,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 680,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 568,
									"end": 680,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 621,
									"end": 628,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 650,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 668,
									"end": 673,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 650,
									"end": 674,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 650,
									"end": 674,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 650,
									"end": 674,
									"name": "tag",
									"source": 1,
									"value": "23"
								},
								{
									"begin": 650,
									"end": 674,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 639,
									"end": 674,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 639,
									"end": 674,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 680,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 568,
									"end": 680,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 568,
									"end": 680,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 568,
									"end": 680,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 686,
									"end": 840,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 686,
									"end": 840,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 775,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 809,
									"end": 814,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 775,
									"end": 815,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 775,
									"end": 815,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 775,
									"end": 815,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 775,
									"end": 815,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 768,
									"end": 773,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 765,
									"end": 816,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 755,
									"end": 834,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 755,
									"end": 834,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 827,
									"end": 828,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 820,
									"end": 832,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 755,
									"end": 834,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 755,
									"end": 834,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 686,
									"end": 840,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 686,
									"end": 840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 919,
									"end": 924,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 950,
									"end": 956,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 944,
									"end": 957,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 935,
									"end": 957,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 935,
									"end": 957,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 1009,
									"end": 1014,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 966,
									"end": 1015,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 966,
									"end": 1015,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1021,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 846,
									"end": 1021,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1113,
									"end": 1119,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1162,
									"end": 1164,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1150,
									"end": 1159,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1141,
									"end": 1148,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1137,
									"end": 1160,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1133,
									"end": 1165,
									"name": "SLT",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1168,
									"end": 1247,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 1168,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 1130,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1385,
									"end": 1392,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 1376,
									"end": 1382,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1365,
									"end": 1374,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 1361,
									"end": 1383,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1313,
									"end": 1393,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 1313,
									"end": 1393,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1393,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1303,
									"end": 1393,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1259,
									"end": 1403,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1410,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1027,
									"end": 1410,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 73542,
									"end": 79607,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122062b0b5812d742be69be8b0b3f7f76bae4da0815971b1a0bd355fb42c340ded4664736f6c63430008140033",
									".code": [
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "3F936FF5"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "88B53CED"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "88B53CED"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "DD7D7929"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "3F936FF5"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "6C173D38"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "7A3819CB"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "1C69B464"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "1C69B464"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "1F71F89F"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "2F14670C"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "380EAAF9"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "11C9FB83"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "17444626"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73542,
											"end": 79607,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 28820,
											"end": 29041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28820,
											"end": 29041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 28820,
											"end": 29041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 77460,
											"end": 78263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 77460,
											"end": 78263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 75007,
											"end": 75525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 75007,
											"end": 75525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 78891,
											"end": 78997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 78891,
											"end": 78997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74237,
											"end": 74273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 74237,
											"end": 74273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 74237,
											"end": 74273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 74279,
											"end": 74324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 74279,
											"end": 74324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 74279,
											"end": 74324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 79003,
											"end": 79429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79003,
											"end": 79429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 79003,
											"end": 79429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 73606,
											"end": 73629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 73606,
											"end": 73629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79439,
											"end": 79603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79439,
											"end": 79603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 79439,
											"end": 79603,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 74330,
											"end": 74400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 74330,
											"end": 74400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 74330,
											"end": 74400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 76511,
											"end": 76733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 76511,
											"end": 76733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 29272,
											"end": 29519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29272,
											"end": 29519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29272,
											"end": 29519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78269,
											"end": 78881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "tag",
											"source": 0,
											"value": "79"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 78269,
											"end": 78881,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "tag",
											"source": 0,
											"value": "78"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 29047,
											"end": 29266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 29047,
											"end": 29266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 29047,
											"end": 29266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28922,
											"end": 28926,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 28960,
											"end": 28994,
											"name": "PUSH",
											"source": 0,
											"value": "4E2312E000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28956,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 28994,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 29034,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 29034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28945,
											"end": 29034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 29034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28998,
											"end": 29034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 29022,
											"end": 29033,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 28998,
											"end": 29021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 28998,
											"end": 29034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 28998,
											"end": 29034,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 28998,
											"end": 29034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28945,
											"end": 29034,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 28945,
											"end": 29034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 28938,
											"end": 29034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28938,
											"end": 29034,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 28820,
											"end": 29041,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77533,
											"end": 77555,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77558,
											"end": 77563,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77564,
											"end": 77571,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77558,
											"end": 77572,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77587,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77558,
											"end": 77587,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77558,
											"end": 77587,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77533,
											"end": 77587,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77533,
											"end": 77587,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77627,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77630,
											"end": 77639,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77640,
											"end": 77647,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77630,
											"end": 77648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77597,
											"end": 77648,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77726,
											"end": 77743,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77758,
											"end": 77766,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77769,
											"end": 77770,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77758,
											"end": 77770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77758,
											"end": 77770,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77789,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 77776,
											"end": 77796,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77772,
											"end": 77773,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77772,
											"end": 77796,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77772,
											"end": 77796,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77772,
											"end": 77796,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77857,
											"end": 77858,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77846,
											"end": 77858,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77846,
											"end": 77858,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77881,
											"end": 77889,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77912,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77913,
											"end": 77920,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77899,
											"end": 77921,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77922,
											"end": 77935,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 77936,
											"end": 77937,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 77922,
											"end": 77938,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77922,
											"end": 77938,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77899,
											"end": 77939,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77946,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77946,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77946,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77899,
											"end": 77946,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77895,
											"end": 77896,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77895,
											"end": 77946,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77895,
											"end": 77946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77895,
											"end": 77946,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78004,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78005,
											"end": 78012,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77991,
											"end": 78013,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78014,
											"end": 78027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 78028,
											"end": 78029,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 78014,
											"end": 78030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78014,
											"end": 78030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77991,
											"end": 78031,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78032,
											"end": 78033,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 77991,
											"end": 78034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78034,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78041,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77991,
											"end": 78041,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77991,
											"end": 78041,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 77978,
											"end": 78041,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77978,
											"end": 78041,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 77948,
											"end": 77951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77948,
											"end": 77951,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77876,
											"end": 78060,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78077,
											"end": 78082,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78099,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78077,
											"end": 78099,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78099,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 78108,
											"end": 78112,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 78129,
											"end": 78130,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 78115,
											"end": 78131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78115,
											"end": 78131,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78133,
											"end": 78140,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 78170,
											"end": 78184,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78155,
											"end": 78166,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78143,
											"end": 78152,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 78143,
											"end": 78166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 78143,
											"end": 78166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78142,
											"end": 78184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 78142,
											"end": 78184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78142,
											"end": 78184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78142,
											"end": 78184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 78142,
											"end": 78184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78142,
											"end": 78184,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 78142,
											"end": 78184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 78077,
											"end": 78193,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78077,
											"end": 78193,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 77798,
											"end": 77801,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77798,
											"end": 77801,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77753,
											"end": 78257,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77523,
											"end": 78263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77523,
											"end": 78263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77523,
											"end": 78263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77460,
											"end": 78263,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75129,
											"end": 75139,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75142,
											"end": 75151,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75129,
											"end": 75151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75129,
											"end": 75151,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75192,
											"end": 75195,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75210,
											"end": 75216,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75238,
											"end": 75253,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75276,
											"end": 75291,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75307,
											"end": 75313,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75327,
											"end": 75337,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75351,
											"end": 75352,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75366,
											"end": 75371,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75174,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75166,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75167,
											"end": 75170,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75171,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75161,
											"end": 75381,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75459,
											"end": 75460,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75447,
											"end": 75457,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75426,
											"end": 75429,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "PUSH",
											"source": 0,
											"value": "1E216CC18D3E93F7C7B9A7B3A038093BC655D3D5CBFBB504D67D4376BD02D13F"
										},
										{
											"begin": 75431,
											"end": 75437,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75439,
											"end": 75445,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75462,
											"end": 75467,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75469,
											"end": 75484,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 75414,
											"end": 75485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75414,
											"end": 75485,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 75517,
											"end": 75518,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 75504,
											"end": 75513,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75504,
											"end": 75513,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 75504,
											"end": 75518,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 75504,
											"end": 75518,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75119,
											"end": 75525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75007,
											"end": 75525,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78937,
											"end": 78950,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 78968,
											"end": 78990,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 78977,
											"end": 78978,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78980,
											"end": 78989,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78968,
											"end": 78976,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 78968,
											"end": 78990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78968,
											"end": 78990,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 78968,
											"end": 78990,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78961,
											"end": 78990,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78961,
											"end": 78990,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78891,
											"end": 78997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 74237,
											"end": 74273,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74279,
											"end": 74324,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79074,
											"end": 79087,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79116,
											"end": 79125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79106,
											"end": 79125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79106,
											"end": 79125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79106,
											"end": 79112,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79106,
											"end": 79125,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79106,
											"end": 79125,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79106,
											"end": 79125,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79106,
											"end": 79125,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 79098,
											"end": 79157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 79098,
											"end": 79157,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79187,
											"end": 79193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79175,
											"end": 79193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79175,
											"end": 79193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79175,
											"end": 79183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79175,
											"end": 79193,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79175,
											"end": 79193,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79175,
											"end": 79193,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79175,
											"end": 79193,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 79167,
											"end": 79224,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 79167,
											"end": 79224,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79234,
											"end": 79256,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79279,
											"end": 79287,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79270,
											"end": 79276,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79270,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 79270,
											"end": 79287,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79270,
											"end": 79287,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79270,
											"end": 79287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 79270,
											"end": 79287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79270,
											"end": 79287,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 79270,
											"end": 79287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 79259,
											"end": 79288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 79259,
											"end": 79288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "146"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79259,
											"end": 79288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79234,
											"end": 79288,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79234,
											"end": 79288,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79303,
											"end": 79311,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79314,
											"end": 79322,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 79303,
											"end": 79322,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79303,
											"end": 79322,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79328,
											"end": 79334,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79324,
											"end": 79334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79324,
											"end": 79334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79324,
											"end": 79325,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79324,
											"end": 79334,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79324,
											"end": 79334,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79324,
											"end": 79334,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79384,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79385,
											"end": 79386,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79379,
											"end": 79387,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79362,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79367,
											"end": 79375,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 79363,
											"end": 79364,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79363,
											"end": 79375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 79363,
											"end": 79375,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79363,
											"end": 79375,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79363,
											"end": 79375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 79363,
											"end": 79375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79363,
											"end": 79375,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 79363,
											"end": 79375,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 79354,
											"end": 79376,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79376,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79354,
											"end": 79387,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 79336,
											"end": 79339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79336,
											"end": 79339,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79298,
											"end": 79398,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79414,
											"end": 79422,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79407,
											"end": 79422,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79407,
											"end": 79422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79407,
											"end": 79422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79003,
											"end": 79429,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 73606,
											"end": 73629,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79494,
											"end": 79501,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79526,
											"end": 79535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79520,
											"end": 79535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79520,
											"end": 79535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79520,
											"end": 79523,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 79520,
											"end": 79535,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79520,
											"end": 79535,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79520,
											"end": 79535,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "159"
										},
										{
											"begin": 79512,
											"end": 79563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 79512,
											"end": 79563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79585,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79586,
											"end": 79589,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79580,
											"end": 79590,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 79580,
											"end": 79596,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 79573,
											"end": 79596,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79573,
											"end": 79596,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 79439,
											"end": 79603,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 74330,
											"end": 74400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76655,
											"end": 76694,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 76670,
											"end": 76675,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76677,
											"end": 76684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76686,
											"end": 76693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76655,
											"end": 76669,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 76655,
											"end": 76694,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76655,
											"end": 76694,
											"name": "tag",
											"source": 0,
											"value": "163"
										},
										{
											"begin": 76655,
											"end": 76694,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76704,
											"end": 76726,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 76718,
											"end": 76725,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76704,
											"end": 76717,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 76704,
											"end": 76726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76704,
											"end": 76726,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 76704,
											"end": 76726,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76511,
											"end": 76733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29451,
											"end": 29457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29476,
											"end": 29512,
											"name": "PUSH",
											"source": 0,
											"value": "BC197C81"
										},
										{
											"begin": 29476,
											"end": 29512,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29476,
											"end": 29512,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29469,
											"end": 29512,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29469,
											"end": 29512,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29272,
											"end": 29519,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78430,
											"end": 78435,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78436,
											"end": 78439,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78430,
											"end": 78440,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78410,
											"end": 78440,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78472,
											"end": 78477,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78472,
											"end": 78483,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78472,
											"end": 78483,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78472,
											"end": 78483,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78458,
											"end": 78483,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78458,
											"end": 78483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78458,
											"end": 78468,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 78458,
											"end": 78483,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78458,
											"end": 78483,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78458,
											"end": 78483,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 78450,
											"end": 78514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "tag",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 78450,
											"end": 78514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78555,
											"end": 78558,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78573,
											"end": 78579,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78594,
											"end": 78599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78594,
											"end": 78609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78594,
											"end": 78609,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78594,
											"end": 78609,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78631,
											"end": 78646,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78662,
											"end": 78668,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78683,
											"end": 78693,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78708,
											"end": 78713,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78708,
											"end": 78728,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 78708,
											"end": 78728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78708,
											"end": 78728,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78742,
											"end": 78747,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78742,
											"end": 78753,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 78742,
											"end": 78753,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78742,
											"end": 78753,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78537,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78529,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78530,
											"end": 78533,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78534,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "C"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "A0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78524,
											"end": 78763,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78843,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 78823,
											"end": 78843,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78823,
											"end": 78843,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78811,
											"end": 78821,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 78790,
											"end": 78793,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "PUSH",
											"source": 0,
											"value": "603E97A48F8CADD1E9020BF96470C32853C5D9D8ED30F7CBE961F12AD2A45FA0"
										},
										{
											"begin": 78795,
											"end": 78801,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78803,
											"end": 78809,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 78845,
											"end": 78850,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 78845,
											"end": 78856,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 78845,
											"end": 78856,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 78845,
											"end": 78856,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78858,
											"end": 78873,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 78778,
											"end": 78874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "tag",
											"source": 0,
											"value": "172"
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 78778,
											"end": 78874,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 78400,
											"end": 78881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 78269,
											"end": 78881,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 29203,
											"end": 29209,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 29228,
											"end": 29259,
											"name": "PUSH",
											"source": 0,
											"value": "F23A6E61"
										},
										{
											"begin": 29228,
											"end": 29259,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 29228,
											"end": 29259,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 29221,
											"end": 29259,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 29221,
											"end": 29259,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 29047,
											"end": 29266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25683,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 25537,
											"end": 25683,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25613,
											"end": 25617,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25651,
											"end": 25676,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25636,
											"end": 25647,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25636,
											"end": 25676,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25629,
											"end": 25676,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25629,
											"end": 25676,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25683,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25683,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25683,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25537,
											"end": 25683,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75531,
											"end": 76505,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 75531,
											"end": 76505,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75688,
											"end": 75695,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75660,
											"end": 75665,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75675,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75660,
											"end": 75675,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75675,
											"name": "PUSH",
											"source": 0,
											"value": "FDD58E"
										},
										{
											"begin": 75676,
											"end": 75681,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75683,
											"end": 75684,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 75660,
											"end": 75685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "tag",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 75660,
											"end": 75685,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 75660,
											"end": 75685,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75660,
											"end": 75695,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 75652,
											"end": 75736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "tag",
											"source": 0,
											"value": "182"
										},
										{
											"begin": 75652,
											"end": 75736,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75754,
											"end": 75759,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75776,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75754,
											"end": 75776,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75776,
											"name": "PUSH",
											"source": 0,
											"value": "E985E9C5"
										},
										{
											"begin": 75777,
											"end": 75782,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75792,
											"end": 75796,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 75754,
											"end": 75799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 75754,
											"end": 75799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 75754,
											"end": 75799,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "193"
										},
										{
											"begin": 75746,
											"end": 75828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "tag",
											"source": 0,
											"value": "191"
										},
										{
											"begin": 75746,
											"end": 75828,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75838,
											"end": 75843,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75860,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75838,
											"end": 75860,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75860,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 75861,
											"end": 75866,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75876,
											"end": 75880,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 75883,
											"end": 75884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75886,
											"end": 75893,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 75838,
											"end": 75901,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "tag",
											"source": 0,
											"value": "194"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75838,
											"end": 75901,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75921,
											"end": 75948,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 75973,
											"end": 75978,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 75992,
											"end": 75999,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76013,
											"end": 76020,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 75951,
											"end": 76030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75921,
											"end": 76030,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 75921,
											"end": 76030,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76053,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76054,
											"end": 76061,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76062,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76063,
											"end": 76068,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76069,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76075,
											"end": 76086,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76040,
											"end": 76087,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76161,
											"end": 76168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76134,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76135,
											"end": 76142,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76129,
											"end": 76143,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76158,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76129,
											"end": 76158,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76158,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 76129,
											"end": 76168,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76168,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 76129,
											"end": 76168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76129,
											"end": 76168,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 76129,
											"end": 76168,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76102,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76103,
											"end": 76110,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76097,
											"end": 76111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76126,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76097,
											"end": 76126,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76168,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76168,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76168,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76097,
											"end": 76168,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76179,
											"end": 76207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76210,
											"end": 76219,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76220,
											"end": 76227,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76210,
											"end": 76228,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76179,
											"end": 76228,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76179,
											"end": 76228,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76239,
											"end": 76249,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76252,
											"end": 76256,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76239,
											"end": 76256,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76239,
											"end": 76256,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76271,
											"end": 76279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76289,
											"end": 76299,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76289,
											"end": 76306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76289,
											"end": 76306,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76289,
											"end": 76306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76289,
											"end": 76306,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76285,
											"end": 76286,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76285,
											"end": 76306,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76285,
											"end": 76306,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76285,
											"end": 76306,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76347,
											"end": 76352,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76330,
											"end": 76352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76341,
											"end": 76342,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 76330,
											"end": 76343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76330,
											"end": 76343,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76352,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76330,
											"end": 76352,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76330,
											"end": 76352,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 76326,
											"end": 76422,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76379,
											"end": 76384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76371,
											"end": 76384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76371,
											"end": 76384,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76402,
											"end": 76407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 76402,
											"end": 76407,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76326,
											"end": 76422,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 76326,
											"end": 76422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 76308,
											"end": 76311,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76308,
											"end": 76311,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76266,
											"end": 76432,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76445,
											"end": 76450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76441,
											"end": 76498,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76441,
											"end": 76498,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 76441,
											"end": 76498,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76481,
											"end": 76486,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 76465,
											"end": 76487,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76441,
											"end": 76498,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 76441,
											"end": 76498,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 75641,
											"end": 76505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75641,
											"end": 76505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75641,
											"end": 76505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75531,
											"end": 76505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75531,
											"end": 76505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75531,
											"end": 76505,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 75531,
											"end": 76505,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76739,
											"end": 77454,
											"name": "tag",
											"source": 0,
											"value": "166"
										},
										{
											"begin": 76739,
											"end": 77454,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76841,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76842,
											"end": 76850,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76836,
											"end": 76851,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76866,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76836,
											"end": 76866,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76836,
											"end": 76866,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76813,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76814,
											"end": 76822,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76808,
											"end": 76823,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76833,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 76808,
											"end": 76833,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76833,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76808,
											"end": 76866,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 76805,
											"end": 77437,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76805,
											"end": 77437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76805,
											"end": 77437,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76924,
											"end": 76929,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76946,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76924,
											"end": 76946,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 76946,
											"name": "PUSH",
											"source": 0,
											"value": "F242432A"
										},
										{
											"begin": 76955,
											"end": 76959,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 76962,
											"end": 76984,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76975,
											"end": 76983,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 76962,
											"end": 76974,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 76962,
											"end": 76984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76962,
											"end": 76984,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 76962,
											"end": 76984,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76986,
											"end": 76987,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76989,
											"end": 76994,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76995,
											"end": 77003,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76989,
											"end": 77004,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77019,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 76989,
											"end": 77019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76989,
											"end": 77019,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 76924,
											"end": 77027,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76924,
											"end": 77027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77101,
											"end": 77109,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "PUSH",
											"source": 0,
											"value": "CD79837F8E8F598DE24EF07EA60108DF97918F95CFC31D1D61FF9FA09C240352"
										},
										{
											"begin": 77127,
											"end": 77132,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77133,
											"end": 77141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77127,
											"end": 77142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77157,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 77127,
											"end": 77157,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77127,
											"end": 77157,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77175,
											"end": 77190,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "219"
										},
										{
											"begin": 77069,
											"end": 77204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77069,
											"end": 77204,
											"name": "LOG2",
											"source": 0
										},
										{
											"begin": 77242,
											"end": 77246,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 77218,
											"end": 77223,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77224,
											"end": 77232,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77218,
											"end": 77233,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77239,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 77218,
											"end": 77239,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77239,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 77218,
											"end": 77246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 77305,
											"end": 77331,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 77316,
											"end": 77324,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 77326,
											"end": 77330,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 77305,
											"end": 77315,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 77305,
											"end": 77331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 77305,
											"end": 77331,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 77305,
											"end": 77331,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76805,
											"end": 77437,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 76805,
											"end": 77437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 76739,
											"end": 77454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 76739,
											"end": 77454,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "148"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "100"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 1,
											"value": "303"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "225"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 1,
											"value": "306"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 1,
											"value": "309"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 1,
											"value": "308"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "226"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 1,
											"value": "310"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 1,
											"value": "313"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 1,
											"value": "315"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1627,
											"name": "tag",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1518,
											"end": 1627,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1554,
											"end": 1561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1594,
											"end": 1620,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1587,
											"end": 1592,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1583,
											"end": 1621,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1621,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1621,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1627,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1627,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1627,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1518,
											"end": 1627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1633,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1722,
											"end": 1727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 1705,
											"end": 1728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1705,
											"end": 1728,
											"name": "tag",
											"source": 1,
											"value": "318"
										},
										{
											"begin": 1705,
											"end": 1728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1703,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1729,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1743,
											"end": 1744,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1740,
											"end": 1741,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1733,
											"end": 1745,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "tag",
											"source": 1,
											"value": "319"
										},
										{
											"begin": 1685,
											"end": 1747,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1753,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1633,
											"end": 1753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1896,
											"name": "tag",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 1759,
											"end": 1896,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1804,
											"end": 1809,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1842,
											"end": 1848,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1829,
											"end": 1849,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1820,
											"end": 1849,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 1884,
											"end": 1889,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "230"
										},
										{
											"begin": 1858,
											"end": 1890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "tag",
											"source": 1,
											"value": "321"
										},
										{
											"begin": 1858,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1896,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1896,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1896,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1896,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1968,
											"end": 1974,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1982,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2025,
											"end": 2027,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2013,
											"end": 2022,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2004,
											"end": 2011,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2000,
											"end": 2023,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1996,
											"end": 2028,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2112,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2112,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1993,
											"end": 2112,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 2031,
											"end": 2110,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 2031,
											"end": 2110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2031,
											"end": 2110,
											"name": "tag",
											"source": 1,
											"value": "324"
										},
										{
											"begin": 2031,
											"end": 2110,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2112,
											"name": "tag",
											"source": 1,
											"value": "323"
										},
										{
											"begin": 1993,
											"end": 2112,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2151,
											"end": 2152,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2209,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2196,
											"end": 2218,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2176,
											"end": 2228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "tag",
											"source": 1,
											"value": "325"
										},
										{
											"begin": 2176,
											"end": 2228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2228,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2166,
											"end": 2228,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2122,
											"end": 2238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2277,
											"end": 2279,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2303,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2347,
											"end": 2354,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2338,
											"end": 2344,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2327,
											"end": 2336,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 2323,
											"end": 2345,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2355,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 2303,
											"end": 2355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2355,
											"name": "tag",
											"source": 1,
											"value": "326"
										},
										{
											"begin": 2303,
											"end": 2355,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2355,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2293,
											"end": 2355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2248,
											"end": 2365,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1902,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2504,
											"name": "tag",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2378,
											"end": 2504,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2415,
											"end": 2422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2497,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2448,
											"end": 2453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2444,
											"end": 2498,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2498,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2498,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2504,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2504,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2504,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2378,
											"end": 2504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2606,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2510,
											"end": 2606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2547,
											"end": 2554,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2594,
											"end": 2599,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "232"
										},
										{
											"begin": 2576,
											"end": 2600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "tag",
											"source": 1,
											"value": "329"
										},
										{
											"begin": 2576,
											"end": 2600,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2565,
											"end": 2600,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2606,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2606,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2606,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2510,
											"end": 2606,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2734,
											"name": "tag",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2612,
											"end": 2734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2703,
											"end": 2708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2685,
											"end": 2709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "tag",
											"source": 1,
											"value": "331"
										},
										{
											"begin": 2685,
											"end": 2709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2678,
											"end": 2683,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2675,
											"end": 2710,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2728,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2665,
											"end": 2728,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2724,
											"end": 2725,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2721,
											"end": 2722,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2714,
											"end": 2726,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2665,
											"end": 2728,
											"name": "tag",
											"source": 1,
											"value": "332"
										},
										{
											"begin": 2665,
											"end": 2728,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2734,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2612,
											"end": 2734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "tag",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2786,
											"end": 2791,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2824,
											"end": 2830,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2811,
											"end": 2831,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2802,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2867,
											"end": 2872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "234"
										},
										{
											"begin": 2840,
											"end": 2873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "tag",
											"source": 1,
											"value": "334"
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2740,
											"end": 2879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "tag",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2922,
											"end": 2929,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 2956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2940,
											"end": 2956,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2962,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2885,
											"end": 2962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "tag",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 3059,
											"end": 3064,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 3041,
											"end": 3065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "tag",
											"source": 1,
											"value": "337"
										},
										{
											"begin": 3041,
											"end": 3065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3034,
											"end": 3039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3031,
											"end": 3066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3077,
											"end": 3078,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3070,
											"end": 3082,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "tag",
											"source": 1,
											"value": "338"
										},
										{
											"begin": 3021,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3090,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2968,
											"end": 3090,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "tag",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3142,
											"end": 3147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3180,
											"end": 3186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3167,
											"end": 3187,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3187,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3158,
											"end": 3187,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3223,
											"end": 3228,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 3196,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "tag",
											"source": 1,
											"value": "340"
										},
										{
											"begin": 3196,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3235,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3096,
											"end": 3235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3318,
											"end": 3324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3326,
											"end": 3332,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3334,
											"end": 3340,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3383,
											"end": 3385,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3371,
											"end": 3380,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3362,
											"end": 3369,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3358,
											"end": 3381,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3354,
											"end": 3386,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3470,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3470,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3351,
											"end": 3470,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3389,
											"end": 3468,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 3389,
											"end": 3468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3389,
											"end": 3468,
											"name": "tag",
											"source": 1,
											"value": "343"
										},
										{
											"begin": 3389,
											"end": 3468,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3351,
											"end": 3470,
											"name": "tag",
											"source": 1,
											"value": "342"
										},
										{
											"begin": 3351,
											"end": 3470,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3510,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3534,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3579,
											"end": 3586,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3570,
											"end": 3576,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3559,
											"end": 3568,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3555,
											"end": 3577,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3587,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3534,
											"end": 3587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3534,
											"end": 3587,
											"name": "tag",
											"source": 1,
											"value": "344"
										},
										{
											"begin": 3534,
											"end": 3587,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3524,
											"end": 3587,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3480,
											"end": 3597,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3636,
											"end": 3638,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3662,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3707,
											"end": 3714,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3687,
											"end": 3696,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3683,
											"end": 3705,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 3662,
											"end": 3715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3662,
											"end": 3715,
											"name": "tag",
											"source": 1,
											"value": "345"
										},
										{
											"begin": 3662,
											"end": 3715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3715,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3652,
											"end": 3715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3607,
											"end": 3725,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3764,
											"end": 3766,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3790,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3835,
											"end": 3842,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 3826,
											"end": 3832,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3815,
											"end": 3824,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 3811,
											"end": 3833,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3843,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 3790,
											"end": 3843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3790,
											"end": 3843,
											"name": "tag",
											"source": 1,
											"value": "346"
										},
										{
											"begin": 3790,
											"end": 3843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3780,
											"end": 3843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3735,
											"end": 3853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3241,
											"end": 3860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 4002,
											"name": "tag",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 3866,
											"end": 4002,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3955,
											"end": 3961,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3989,
											"end": 3994,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3983,
											"end": 3995,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3973,
											"end": 3995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 4002,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 4002,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 4002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3866,
											"end": 4002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4214,
											"name": "tag",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 4008,
											"end": 4214,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4129,
											"end": 4140,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4163,
											"end": 4169,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4161,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4151,
											"end": 4170,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4203,
											"end": 4207,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4201,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4194,
											"end": 4208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4179,
											"end": 4208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4214,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4214,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4214,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4008,
											"end": 4214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4374,
											"name": "tag",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 4220,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4309,
											"end": 4313,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4332,
											"end": 4335,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4335,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4324,
											"end": 4335,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4362,
											"end": 4366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4353,
											"end": 4367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4345,
											"end": 4367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4374,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4374,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4374,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4220,
											"end": 4374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4485,
											"name": "tag",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 4380,
											"end": 4485,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4472,
											"end": 4477,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4478,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 4455,
											"end": 4478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4455,
											"end": 4478,
											"name": "tag",
											"source": 1,
											"value": "351"
										},
										{
											"begin": 4455,
											"end": 4478,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4450,
											"end": 4453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4443,
											"end": 4479,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4380,
											"end": 4485,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4599,
											"name": "tag",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 4491,
											"end": 4599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4586,
											"end": 4591,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 4568,
											"end": 4592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4568,
											"end": 4592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4563,
											"end": 4566,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4556,
											"end": 4593,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4599,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4491,
											"end": 4599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4702,
											"name": "tag",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4605,
											"end": 4702,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4641,
											"end": 4648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4681,
											"end": 4695,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFF"
										},
										{
											"begin": 4674,
											"end": 4679,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4696,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4696,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4659,
											"end": 4696,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4702,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4702,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4702,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4605,
											"end": 4702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4813,
											"name": "tag",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 4708,
											"end": 4813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4800,
											"end": 4805,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4806,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 4783,
											"end": 4806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4783,
											"end": 4806,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4783,
											"end": 4806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4778,
											"end": 4781,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4771,
											"end": 4807,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4813,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4708,
											"end": 4813,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4927,
											"name": "tag",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 4819,
											"end": 4927,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4914,
											"end": 4919,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 4896,
											"end": 4920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "tag",
											"source": 1,
											"value": "358"
										},
										{
											"begin": 4896,
											"end": 4920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4891,
											"end": 4894,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4884,
											"end": 4921,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4927,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4819,
											"end": 4927,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 5032,
											"name": "tag",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 4933,
											"end": 5032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5019,
											"end": 5024,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5025,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 5004,
											"end": 5025,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5004,
											"end": 5025,
											"name": "tag",
											"source": 1,
											"value": "360"
										},
										{
											"begin": 5004,
											"end": 5025,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4999,
											"end": 5002,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4992,
											"end": 5026,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 5032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 5032,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4933,
											"end": 5032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 6649,
											"name": "tag",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 5098,
											"end": 6649,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5229,
											"end": 5235,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 5224,
											"end": 5227,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5220,
											"end": 5236,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5316,
											"end": 5320,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5314,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5305,
											"end": 5321,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5299,
											"end": 5322,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 5390,
											"end": 5394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5385,
											"end": 5388,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5381,
											"end": 5395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5367,
											"end": 5379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "242"
										},
										{
											"begin": 5335,
											"end": 5396,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 5335,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5246,
											"end": 5406,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5489,
											"end": 5493,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5482,
											"end": 5487,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5478,
											"end": 5494,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5472,
											"end": 5495,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5565,
											"end": 5569,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5560,
											"end": 5563,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5556,
											"end": 5570,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5542,
											"end": 5554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 5508,
											"end": 5571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 5508,
											"end": 5571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5416,
											"end": 5581,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5668,
											"end": 5672,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5661,
											"end": 5666,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5657,
											"end": 5673,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5651,
											"end": 5674,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 5742,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5737,
											"end": 5740,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5733,
											"end": 5747,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5719,
											"end": 5731,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5687,
											"end": 5748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5687,
											"end": 5748,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 5687,
											"end": 5748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5591,
											"end": 5758,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5845,
											"end": 5849,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5838,
											"end": 5843,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5828,
											"end": 5851,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5919,
											"end": 5923,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5914,
											"end": 5917,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5910,
											"end": 5924,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5896,
											"end": 5908,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5925,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "245"
										},
										{
											"begin": 5864,
											"end": 5925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5864,
											"end": 5925,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 5864,
											"end": 5925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5768,
											"end": 5935,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6018,
											"end": 6022,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6011,
											"end": 6016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6007,
											"end": 6023,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6001,
											"end": 6024,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6094,
											"end": 6098,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6089,
											"end": 6092,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6085,
											"end": 6099,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6071,
											"end": 6083,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6100,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "243"
										},
										{
											"begin": 6037,
											"end": 6100,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6037,
											"end": 6100,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 6037,
											"end": 6100,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5945,
											"end": 6110,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6190,
											"end": 6195,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6186,
											"end": 6202,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6180,
											"end": 6203,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6273,
											"end": 6277,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 6268,
											"end": 6271,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6264,
											"end": 6278,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6250,
											"end": 6262,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6216,
											"end": 6279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6216,
											"end": 6279,
											"name": "tag",
											"source": 1,
											"value": "367"
										},
										{
											"begin": 6216,
											"end": 6279,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6120,
											"end": 6289,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6381,
											"end": 6385,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6374,
											"end": 6379,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6370,
											"end": 6386,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6364,
											"end": 6387,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6457,
											"end": 6461,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 6452,
											"end": 6455,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6448,
											"end": 6462,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6434,
											"end": 6446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "246"
										},
										{
											"begin": 6400,
											"end": 6463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "tag",
											"source": 1,
											"value": "368"
										},
										{
											"begin": 6400,
											"end": 6463,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6556,
											"end": 6560,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6549,
											"end": 6554,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6545,
											"end": 6561,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6539,
											"end": 6562,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 6626,
											"end": 6630,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 6621,
											"end": 6624,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6617,
											"end": 6631,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6603,
											"end": 6615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6632,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "247"
										},
										{
											"begin": 6575,
											"end": 6632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6575,
											"end": 6632,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 6575,
											"end": 6632,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6483,
											"end": 6642,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5198,
											"end": 6649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 6649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 6649,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5098,
											"end": 6649,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6924,
											"name": "tag",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 6655,
											"end": 6924,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6768,
											"end": 6778,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6789,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6875,
											"end": 6878,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6867,
											"end": 6873,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6879,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "248"
										},
										{
											"begin": 6789,
											"end": 6879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6789,
											"end": 6879,
											"name": "tag",
											"source": 1,
											"value": "371"
										},
										{
											"begin": 6789,
											"end": 6879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6911,
											"end": 6917,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 6906,
											"end": 6909,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6902,
											"end": 6918,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6888,
											"end": 6918,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6924,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6924,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6924,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6655,
											"end": 6924,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 7065,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 6930,
											"end": 7065,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7022,
											"end": 7026,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7054,
											"end": 7058,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7049,
											"end": 7052,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7045,
											"end": 7059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7037,
											"end": 7059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 7065,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 7065,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 7065,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6930,
											"end": 7065,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 8043,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 7135,
											"end": 8043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7298,
											"end": 7301,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7327,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7397,
											"end": 7402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7403,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "239"
										},
										{
											"begin": 7327,
											"end": 7403,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7327,
											"end": 7403,
											"name": "tag",
											"source": 1,
											"value": "374"
										},
										{
											"begin": 7327,
											"end": 7403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7520,
											"end": 7526,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7515,
											"end": 7518,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "240"
										},
										{
											"begin": 7419,
											"end": 7527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7419,
											"end": 7527,
											"name": "tag",
											"source": 1,
											"value": "375"
										},
										{
											"begin": 7419,
											"end": 7527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7527,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7412,
											"end": 7527,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7623,
											"end": 7628,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7629,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "241"
										},
										{
											"begin": 7551,
											"end": 7629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7551,
											"end": 7629,
											"name": "tag",
											"source": 1,
											"value": "376"
										},
										{
											"begin": 7551,
											"end": 7629,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7652,
											"end": 7659,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7683,
											"end": 7684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "tag",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7693,
											"end": 7699,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7690,
											"end": 7691,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7687,
											"end": 7700,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7769,
											"end": 7775,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7763,
											"end": 7776,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 7899,
											"end": 7902,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 7884,
											"end": 7897,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7903,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "249"
										},
										{
											"begin": 7796,
											"end": 7903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7796,
											"end": 7903,
											"name": "tag",
											"source": 1,
											"value": "380"
										},
										{
											"begin": 7796,
											"end": 7903,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7903,
											"name": "SWAP8",
											"source": 1
										},
										{
											"begin": 7789,
											"end": 7903,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 8001,
											"end": 8007,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8008,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 7926,
											"end": 8008,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7926,
											"end": 8008,
											"name": "tag",
											"source": 1,
											"value": "381"
										},
										{
											"begin": 7926,
											"end": 8008,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8008,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7916,
											"end": 8008,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7728,
											"end": 8018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7715,
											"end": 7716,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7712,
											"end": 7713,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7708,
											"end": 7717,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7717,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7717,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "377"
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "tag",
											"source": 1,
											"value": "379"
										},
										{
											"begin": 7668,
											"end": 8018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7672,
											"end": 7686,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8034,
											"end": 8037,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8037,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8027,
											"end": 8037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7303,
											"end": 8043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7303,
											"end": 8043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7303,
											"end": 8043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 8043,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 8043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 8043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 8043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7135,
											"end": 8043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8510,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 8049,
											"end": 8510,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8236,
											"end": 8240,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8274,
											"end": 8276,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8272,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8259,
											"end": 8277,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8277,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8251,
											"end": 8277,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8323,
											"end": 8332,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8317,
											"end": 8321,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8313,
											"end": 8333,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8309,
											"end": 8310,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8298,
											"end": 8307,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8294,
											"end": 8311,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8287,
											"end": 8334,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 8498,
											"end": 8502,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8489,
											"end": 8495,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 8351,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8351,
											"end": 8503,
											"name": "tag",
											"source": 1,
											"value": "383"
										},
										{
											"begin": 8351,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8503,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8343,
											"end": 8503,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8510,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8510,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8510,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8049,
											"end": 8510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8843,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8516,
											"end": 8843,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8574,
											"end": 8580,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8623,
											"end": 8625,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8611,
											"end": 8620,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8602,
											"end": 8609,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8598,
											"end": 8621,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8594,
											"end": 8626,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8710,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 8591,
											"end": 8710,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8629,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 8629,
											"end": 8708,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 8629,
											"end": 8708,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8629,
											"end": 8708,
											"name": "tag",
											"source": 1,
											"value": "386"
										},
										{
											"begin": 8629,
											"end": 8708,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8591,
											"end": 8710,
											"name": "tag",
											"source": 1,
											"value": "385"
										},
										{
											"begin": 8591,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8749,
											"end": 8750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8774,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 8818,
											"end": 8825,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8809,
											"end": 8815,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8798,
											"end": 8807,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8794,
											"end": 8816,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8826,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 8774,
											"end": 8826,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8774,
											"end": 8826,
											"name": "tag",
											"source": 1,
											"value": "387"
										},
										{
											"begin": 8774,
											"end": 8826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8764,
											"end": 8826,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8764,
											"end": 8826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8836,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8843,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8843,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8843,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8516,
											"end": 8843,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8964,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 8849,
											"end": 8964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 8951,
											"end": 8956,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 8934,
											"end": 8957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "tag",
											"source": 1,
											"value": "389"
										},
										{
											"begin": 8934,
											"end": 8957,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8929,
											"end": 8932,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8922,
											"end": 8958,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8964,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8849,
											"end": 8964,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9088,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 8970,
											"end": 9088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 9075,
											"end": 9080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 9057,
											"end": 9081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9057,
											"end": 9081,
											"name": "tag",
											"source": 1,
											"value": "391"
										},
										{
											"begin": 9057,
											"end": 9081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9052,
											"end": 9055,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9045,
											"end": 9082,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9209,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9094,
											"end": 9209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 9196,
											"end": 9201,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9202,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "244"
										},
										{
											"begin": 9179,
											"end": 9202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9179,
											"end": 9202,
											"name": "tag",
											"source": 1,
											"value": "393"
										},
										{
											"begin": 9179,
											"end": 9202,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9174,
											"end": 9177,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9167,
											"end": 9203,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9094,
											"end": 9209,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9333,
											"name": "tag",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 9215,
											"end": 9333,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9320,
											"end": 9325,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9326,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 9302,
											"end": 9326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9302,
											"end": 9326,
											"name": "tag",
											"source": 1,
											"value": "395"
										},
										{
											"begin": 9302,
											"end": 9326,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9297,
											"end": 9300,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9290,
											"end": 9327,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9215,
											"end": 9333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9616,
											"end": 9620,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9654,
											"end": 9657,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 9643,
											"end": 9652,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9639,
											"end": 9658,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9658,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9631,
											"end": 9658,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9668,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 9734,
											"end": 9735,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9723,
											"end": 9732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9719,
											"end": 9736,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9710,
											"end": 9716,
											"name": "DUP12",
											"source": 1
										},
										{
											"begin": 9668,
											"end": 9737,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 9668,
											"end": 9737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9668,
											"end": 9737,
											"name": "tag",
											"source": 1,
											"value": "397"
										},
										{
											"begin": 9668,
											"end": 9737,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 9815,
											"end": 9817,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9804,
											"end": 9813,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9800,
											"end": 9818,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9791,
											"end": 9797,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 9747,
											"end": 9819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9747,
											"end": 9819,
											"name": "tag",
											"source": 1,
											"value": "398"
										},
										{
											"begin": 9747,
											"end": 9819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 9895,
											"end": 9897,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9884,
											"end": 9893,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9880,
											"end": 9898,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9871,
											"end": 9877,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9829,
											"end": 9899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9829,
											"end": 9899,
											"name": "tag",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 9829,
											"end": 9899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 9975,
											"end": 9977,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 9964,
											"end": 9973,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9960,
											"end": 9978,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9951,
											"end": 9957,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9979,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 9909,
											"end": 9979,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9909,
											"end": 9979,
											"name": "tag",
											"source": 1,
											"value": "400"
										},
										{
											"begin": 9909,
											"end": 9979,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 10057,
											"end": 10060,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 10046,
											"end": 10055,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10042,
											"end": 10061,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10033,
											"end": 10039,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10062,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 9989,
											"end": 10062,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9989,
											"end": 10062,
											"name": "tag",
											"source": 1,
											"value": "401"
										},
										{
											"begin": 9989,
											"end": 10062,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 10140,
											"end": 10143,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 10129,
											"end": 10138,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10125,
											"end": 10144,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10116,
											"end": 10122,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10145,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10072,
											"end": 10145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10072,
											"end": 10145,
											"name": "tag",
											"source": 1,
											"value": "402"
										},
										{
											"begin": 10072,
											"end": 10145,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 10223,
											"end": 10226,
											"name": "PUSH",
											"source": 1,
											"value": "C0"
										},
										{
											"begin": 10212,
											"end": 10221,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10208,
											"end": 10227,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10199,
											"end": 10205,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 10155,
											"end": 10228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10155,
											"end": 10228,
											"name": "tag",
											"source": 1,
											"value": "403"
										},
										{
											"begin": 10155,
											"end": 10228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 10300,
											"end": 10303,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 10289,
											"end": 10298,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10285,
											"end": 10304,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10276,
											"end": 10282,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10305,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 10238,
											"end": 10305,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10238,
											"end": 10305,
											"name": "tag",
											"source": 1,
											"value": "404"
										},
										{
											"begin": 10238,
											"end": 10305,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "SWAP10",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "SWAP9",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9339,
											"end": 10312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10385,
											"end": 10391,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10393,
											"end": 10399,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10442,
											"end": 10444,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10430,
											"end": 10439,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10421,
											"end": 10428,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10417,
											"end": 10440,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10413,
											"end": 10445,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 10448,
											"end": 10527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "tag",
											"source": 1,
											"value": "407"
										},
										{
											"begin": 10448,
											"end": 10527,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "tag",
											"source": 1,
											"value": "406"
										},
										{
											"begin": 10410,
											"end": 10529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10568,
											"end": 10569,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10593,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 10637,
											"end": 10644,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10628,
											"end": 10634,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10617,
											"end": 10626,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10593,
											"end": 10645,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 10593,
											"end": 10645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10593,
											"end": 10645,
											"name": "tag",
											"source": 1,
											"value": "408"
										},
										{
											"begin": 10593,
											"end": 10645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10645,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10583,
											"end": 10645,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10539,
											"end": 10655,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10694,
											"end": 10696,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10720,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 10765,
											"end": 10772,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10756,
											"end": 10762,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10745,
											"end": 10754,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10741,
											"end": 10763,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10720,
											"end": 10773,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 10720,
											"end": 10773,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10720,
											"end": 10773,
											"name": "tag",
											"source": 1,
											"value": "409"
										},
										{
											"begin": 10720,
											"end": 10773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10710,
											"end": 10773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10710,
											"end": 10773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10665,
											"end": 10783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10318,
											"end": 10790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 11018,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 10796,
											"end": 11018,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10889,
											"end": 10893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10929,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10916,
											"end": 10925,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10912,
											"end": 10930,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10930,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10904,
											"end": 10930,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10940,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 11008,
											"end": 11009,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10997,
											"end": 11006,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10993,
											"end": 11010,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10984,
											"end": 10990,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10940,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 10940,
											"end": 11011,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10940,
											"end": 11011,
											"name": "tag",
											"source": 1,
											"value": "411"
										},
										{
											"begin": 10940,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 11018,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 11018,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 11018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 11018,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10796,
											"end": 11018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11242,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 11024,
											"end": 11242,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11115,
											"end": 11119,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11153,
											"end": 11155,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11142,
											"end": 11151,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11138,
											"end": 11156,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11130,
											"end": 11156,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 11232,
											"end": 11233,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11221,
											"end": 11230,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 11217,
											"end": 11234,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11208,
											"end": 11214,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 11166,
											"end": 11235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11166,
											"end": 11235,
											"name": "tag",
											"source": 1,
											"value": "413"
										},
										{
											"begin": 11166,
											"end": 11235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11242,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11242,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11242,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11024,
											"end": 11242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11324,
											"end": 11330,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11332,
											"end": 11338,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 11340,
											"end": 11346,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11389,
											"end": 11391,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 11377,
											"end": 11386,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 11368,
											"end": 11375,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11364,
											"end": 11387,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 11360,
											"end": 11392,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11476,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11476,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 11357,
											"end": 11476,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 11395,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 11395,
											"end": 11474,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 11395,
											"end": 11474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11395,
											"end": 11474,
											"name": "tag",
											"source": 1,
											"value": "416"
										},
										{
											"begin": 11395,
											"end": 11474,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11357,
											"end": 11476,
											"name": "tag",
											"source": 1,
											"value": "415"
										},
										{
											"begin": 11357,
											"end": 11476,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11515,
											"end": 11516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 11540,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 11584,
											"end": 11591,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11575,
											"end": 11581,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11564,
											"end": 11573,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11560,
											"end": 11582,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11592,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 11540,
											"end": 11592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11540,
											"end": 11592,
											"name": "tag",
											"source": 1,
											"value": "417"
										},
										{
											"begin": 11540,
											"end": 11592,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11592,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11530,
											"end": 11592,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11486,
											"end": 11602,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11641,
											"end": 11643,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 11667,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 11712,
											"end": 11719,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11703,
											"end": 11709,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11692,
											"end": 11701,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11688,
											"end": 11710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11720,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 11667,
											"end": 11720,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11667,
											"end": 11720,
											"name": "tag",
											"source": 1,
											"value": "418"
										},
										{
											"begin": 11667,
											"end": 11720,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11657,
											"end": 11720,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11657,
											"end": 11720,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11612,
											"end": 11730,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11769,
											"end": 11771,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 11795,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 11840,
											"end": 11847,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 11831,
											"end": 11837,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 11820,
											"end": 11829,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 11816,
											"end": 11838,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11848,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 11795,
											"end": 11848,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11795,
											"end": 11848,
											"name": "tag",
											"source": 1,
											"value": "419"
										},
										{
											"begin": 11795,
											"end": 11848,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11785,
											"end": 11848,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 11785,
											"end": 11848,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11740,
											"end": 11858,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 11248,
											"end": 11865,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12018,
											"end": 12022,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12058,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12045,
											"end": 12054,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12041,
											"end": 12059,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12033,
											"end": 12059,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 12033,
											"end": 12059,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 12137,
											"end": 12138,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12126,
											"end": 12135,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12122,
											"end": 12139,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12113,
											"end": 12119,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 12069,
											"end": 12140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12069,
											"end": 12140,
											"name": "tag",
											"source": 1,
											"value": "421"
										},
										{
											"begin": 12069,
											"end": 12140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12150,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 12216,
											"end": 12218,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12205,
											"end": 12214,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12201,
											"end": 12219,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12192,
											"end": 12198,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 12150,
											"end": 12220,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 12150,
											"end": 12220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12150,
											"end": 12220,
											"name": "tag",
											"source": 1,
											"value": "422"
										},
										{
											"begin": 12150,
											"end": 12220,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 12298,
											"end": 12300,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12287,
											"end": 12296,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 12283,
											"end": 12301,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12274,
											"end": 12280,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12302,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 12230,
											"end": 12302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12230,
											"end": 12302,
											"name": "tag",
											"source": 1,
											"value": "423"
										},
										{
											"begin": 12230,
											"end": 12302,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11871,
											"end": 12309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12399,
											"end": 12405,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 12407,
											"end": 12413,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12456,
											"end": 12458,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 12444,
											"end": 12453,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 12435,
											"end": 12442,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12431,
											"end": 12454,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 12427,
											"end": 12459,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 12424,
											"end": 12543,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 12424,
											"end": 12543,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 12424,
											"end": 12543,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 12462,
											"end": 12541,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 12462,
											"end": 12541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12462,
											"end": 12541,
											"name": "tag",
											"source": 1,
											"value": "426"
										},
										{
											"begin": 12462,
											"end": 12541,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12424,
											"end": 12543,
											"name": "tag",
											"source": 1,
											"value": "425"
										},
										{
											"begin": 12424,
											"end": 12543,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12582,
											"end": 12583,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 12607,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 12652,
											"end": 12659,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12643,
											"end": 12649,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12632,
											"end": 12641,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12628,
											"end": 12650,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 12607,
											"end": 12660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12607,
											"end": 12660,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 12607,
											"end": 12660,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12660,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 12597,
											"end": 12660,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12553,
											"end": 12670,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12709,
											"end": 12711,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 12735,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 12779,
											"end": 12786,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12770,
											"end": 12776,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12759,
											"end": 12768,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12755,
											"end": 12777,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 12735,
											"end": 12787,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12735,
											"end": 12787,
											"name": "tag",
											"source": 1,
											"value": "428"
										},
										{
											"begin": 12735,
											"end": 12787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12725,
											"end": 12787,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12725,
											"end": 12787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12680,
											"end": 12797,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12836,
											"end": 12838,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 12907,
											"end": 12914,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 12898,
											"end": 12904,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 12887,
											"end": 12896,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 12883,
											"end": 12905,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 12862,
											"end": 12915,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "tag",
											"source": 1,
											"value": "429"
										},
										{
											"begin": 12862,
											"end": 12915,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12852,
											"end": 12915,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 12852,
											"end": 12915,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12807,
											"end": 12925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 12315,
											"end": 12932,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "tag",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 12938,
											"end": 13055,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13047,
											"end": 13048,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13044,
											"end": 13045,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13037,
											"end": 13049,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13163,
											"name": "tag",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 13061,
											"end": 13163,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13102,
											"end": 13108,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13153,
											"end": 13155,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13149,
											"end": 13156,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 13144,
											"end": 13146,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 13137,
											"end": 13142,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 13133,
											"end": 13147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13129,
											"end": 13157,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13157,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13119,
											"end": 13157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13163,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13163,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13163,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13061,
											"end": 13163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13169,
											"end": 13349,
											"name": "tag",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13169,
											"end": 13349,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13217,
											"end": 13294,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13214,
											"end": 13215,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13207,
											"end": 13295,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13314,
											"end": 13318,
											"name": "PUSH",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 13311,
											"end": 13312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 13304,
											"end": 13319,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13338,
											"end": 13342,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 13335,
											"end": 13336,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13328,
											"end": 13343,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13636,
											"name": "tag",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 13355,
											"end": 13636,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13438,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 13460,
											"end": 13464,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13438,
											"end": 13465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 13438,
											"end": 13465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13438,
											"end": 13465,
											"name": "tag",
											"source": 1,
											"value": "434"
										},
										{
											"begin": 13438,
											"end": 13465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13430,
											"end": 13436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13426,
											"end": 13466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 13568,
											"end": 13574,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13556,
											"end": 13566,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 13553,
											"end": 13575,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 13532,
											"end": 13550,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13520,
											"end": 13530,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13517,
											"end": 13551,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13514,
											"end": 13576,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 13511,
											"end": 13599,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13511,
											"end": 13599,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 13511,
											"end": 13599,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 13579,
											"end": 13597,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13579,
											"end": 13597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13579,
											"end": 13597,
											"name": "tag",
											"source": 1,
											"value": "436"
										},
										{
											"begin": 13579,
											"end": 13597,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13511,
											"end": 13599,
											"name": "tag",
											"source": 1,
											"value": "435"
										},
										{
											"begin": 13511,
											"end": 13599,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13619,
											"end": 13629,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 13615,
											"end": 13617,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 13608,
											"end": 13630,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 13398,
											"end": 13636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13636,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13355,
											"end": 13636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13771,
											"name": "tag",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 13642,
											"end": 13771,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13676,
											"end": 13682,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13703,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 13703,
											"end": 13723,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "221"
										},
										{
											"begin": 13703,
											"end": 13723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13703,
											"end": 13723,
											"name": "tag",
											"source": 1,
											"value": "438"
										},
										{
											"begin": 13703,
											"end": 13723,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13723,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13693,
											"end": 13723,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13732,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 13760,
											"end": 13764,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13752,
											"end": 13758,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13732,
											"end": 13765,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "258"
										},
										{
											"begin": 13732,
											"end": 13765,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13732,
											"end": 13765,
											"name": "tag",
											"source": 1,
											"value": "439"
										},
										{
											"begin": 13732,
											"end": 13765,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13771,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13642,
											"end": 13771,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13777,
											"end": 14088,
											"name": "tag",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 13777,
											"end": 14088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13854,
											"end": 13858,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 13944,
											"end": 13962,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13936,
											"end": 13942,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 13933,
											"end": 13963,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 13930,
											"end": 13986,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 13930,
											"end": 13986,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 13930,
											"end": 13986,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 13966,
											"end": 13984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 13966,
											"end": 13984,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 13966,
											"end": 13984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 13966,
											"end": 13984,
											"name": "tag",
											"source": 1,
											"value": "442"
										},
										{
											"begin": 13966,
											"end": 13984,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 13930,
											"end": 13986,
											"name": "tag",
											"source": 1,
											"value": "441"
										},
										{
											"begin": 13930,
											"end": 13986,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14016,
											"end": 14020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14008,
											"end": 14014,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14004,
											"end": 14021,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 14021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13996,
											"end": 14021,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14076,
											"end": 14080,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14070,
											"end": 14074,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14066,
											"end": 14081,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14058,
											"end": 14081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14058,
											"end": 14081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13777,
											"end": 14088,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 13777,
											"end": 14088,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 13777,
											"end": 14088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 13777,
											"end": 14088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14094,
											"end": 14211,
											"name": "tag",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 14094,
											"end": 14211,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14203,
											"end": 14204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14200,
											"end": 14201,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14193,
											"end": 14205,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "tag",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14330,
											"end": 14335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 14355,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 14371,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 14428,
											"end": 14434,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14371,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "260"
										},
										{
											"begin": 14371,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14371,
											"end": 14435,
											"name": "tag",
											"source": 1,
											"value": "446"
										},
										{
											"begin": 14371,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 14355,
											"end": 14436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14355,
											"end": 14436,
											"name": "tag",
											"source": 1,
											"value": "445"
										},
										{
											"begin": 14355,
											"end": 14436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14346,
											"end": 14436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14346,
											"end": 14436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14456,
											"end": 14461,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14485,
											"end": 14491,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14478,
											"end": 14483,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14471,
											"end": 14492,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14519,
											"end": 14523,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14512,
											"end": 14517,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14508,
											"end": 14524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14501,
											"end": 14524,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14501,
											"end": 14524,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14572,
											"end": 14576,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14564,
											"end": 14570,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14560,
											"end": 14577,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 14552,
											"end": 14558,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14548,
											"end": 14578,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14601,
											"end": 14604,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 14593,
											"end": 14599,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14590,
											"end": 14605,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 14587,
											"end": 14709,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14587,
											"end": 14709,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 14587,
											"end": 14709,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 14620,
											"end": 14699,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "261"
										},
										{
											"begin": 14620,
											"end": 14699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14620,
											"end": 14699,
											"name": "tag",
											"source": 1,
											"value": "448"
										},
										{
											"begin": 14620,
											"end": 14699,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14587,
											"end": 14709,
											"name": "tag",
											"source": 1,
											"value": "447"
										},
										{
											"begin": 14587,
											"end": 14709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14735,
											"end": 14741,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "tag",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14752,
											"end": 14758,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14747,
											"end": 14750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14744,
											"end": 14759,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 14827,
											"end": 14830,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 14889,
											"end": 14892,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 14877,
											"end": 14887,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 14856,
											"end": 14893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "tag",
											"source": 1,
											"value": "452"
										},
										{
											"begin": 14856,
											"end": 14893,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14851,
											"end": 14854,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14844,
											"end": 14894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 14923,
											"end": 14927,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14918,
											"end": 14921,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 14914,
											"end": 14928,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14928,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14907,
											"end": 14928,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14794,
											"end": 14938,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14778,
											"end": 14782,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 14773,
											"end": 14776,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 14769,
											"end": 14783,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14783,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 14762,
											"end": 14783,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "449"
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "tag",
											"source": 1,
											"value": "451"
										},
										{
											"begin": 14718,
											"end": 14938,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 14722,
											"end": 14743,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14336,
											"end": 14944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14336,
											"end": 14944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14234,
											"end": 14944,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 15337,
											"name": "tag",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 14967,
											"end": 15337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15038,
											"end": 15043,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15087,
											"end": 15090,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15080,
											"end": 15084,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 15072,
											"end": 15078,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15068,
											"end": 15085,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15064,
											"end": 15091,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 15054,
											"end": 15176,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 15054,
											"end": 15176,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15095,
											"end": 15174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 15095,
											"end": 15174,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 15095,
											"end": 15174,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15095,
											"end": 15174,
											"name": "tag",
											"source": 1,
											"value": "455"
										},
										{
											"begin": 15095,
											"end": 15174,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15054,
											"end": 15176,
											"name": "tag",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 15054,
											"end": 15176,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15212,
											"end": 15218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15199,
											"end": 15219,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 15237,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 15327,
											"end": 15330,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 15319,
											"end": 15325,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15312,
											"end": 15316,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15304,
											"end": 15310,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 15300,
											"end": 15317,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15237,
											"end": 15331,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "262"
										},
										{
											"begin": 15237,
											"end": 15331,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15237,
											"end": 15331,
											"name": "tag",
											"source": 1,
											"value": "456"
										},
										{
											"begin": 15237,
											"end": 15331,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15228,
											"end": 15331,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15228,
											"end": 15331,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15044,
											"end": 15337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 15337,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 15337,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 15337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 15337,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 14967,
											"end": 15337,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15343,
											"end": 15460,
											"name": "tag",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 15343,
											"end": 15460,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15452,
											"end": 15453,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15449,
											"end": 15450,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 15442,
											"end": 15454,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15773,
											"name": "tag",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 15466,
											"end": 15773,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15527,
											"end": 15531,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15617,
											"end": 15635,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15609,
											"end": 15615,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15606,
											"end": 15636,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15659,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15659,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 15603,
											"end": 15659,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 15639,
											"end": 15657,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "144"
										},
										{
											"begin": 15639,
											"end": 15657,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15639,
											"end": 15657,
											"name": "tag",
											"source": 1,
											"value": "460"
										},
										{
											"begin": 15639,
											"end": 15657,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15603,
											"end": 15659,
											"name": "tag",
											"source": 1,
											"value": "459"
										},
										{
											"begin": 15603,
											"end": 15659,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15677,
											"end": 15706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 15699,
											"end": 15705,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15677,
											"end": 15706,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "257"
										},
										{
											"begin": 15677,
											"end": 15706,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15677,
											"end": 15706,
											"name": "tag",
											"source": 1,
											"value": "461"
										},
										{
											"begin": 15677,
											"end": 15706,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15669,
											"end": 15706,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15669,
											"end": 15706,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15761,
											"end": 15765,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 15755,
											"end": 15759,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15751,
											"end": 15766,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15766,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15743,
											"end": 15766,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15773,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15773,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15773,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15466,
											"end": 15773,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15925,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 15779,
											"end": 15925,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 15876,
											"end": 15882,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 15871,
											"end": 15874,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 15866,
											"end": 15869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15853,
											"end": 15883,
											"name": "CALLDATACOPY",
											"source": 1
										},
										{
											"begin": 15917,
											"end": 15918,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 15908,
											"end": 15914,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15903,
											"end": 15906,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 15899,
											"end": 15915,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 15892,
											"end": 15919,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15925,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15779,
											"end": 15925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "tag",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16008,
											"end": 16013,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16033,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 16049,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 16090,
											"end": 16096,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16097,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "265"
										},
										{
											"begin": 16049,
											"end": 16097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16049,
											"end": 16097,
											"name": "tag",
											"source": 1,
											"value": "465"
										},
										{
											"begin": 16049,
											"end": 16097,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "259"
										},
										{
											"begin": 16033,
											"end": 16098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16033,
											"end": 16098,
											"name": "tag",
											"source": 1,
											"value": "464"
										},
										{
											"begin": 16033,
											"end": 16098,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16024,
											"end": 16098,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16024,
											"end": 16098,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16121,
											"end": 16127,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16114,
											"end": 16119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16107,
											"end": 16128,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 16159,
											"end": 16163,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16152,
											"end": 16157,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16148,
											"end": 16164,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16197,
											"end": 16200,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16188,
											"end": 16194,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16183,
											"end": 16186,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16179,
											"end": 16195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16176,
											"end": 16201,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 16173,
											"end": 16285,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16173,
											"end": 16285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 16173,
											"end": 16285,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16204,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 16204,
											"end": 16283,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "264"
										},
										{
											"begin": 16204,
											"end": 16283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16204,
											"end": 16283,
											"name": "tag",
											"source": 1,
											"value": "467"
										},
										{
											"begin": 16204,
											"end": 16283,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16173,
											"end": 16285,
											"name": "tag",
											"source": 1,
											"value": "466"
										},
										{
											"begin": 16173,
											"end": 16285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 16341,
											"end": 16347,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16336,
											"end": 16339,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16331,
											"end": 16334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16348,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 16294,
											"end": 16348,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16294,
											"end": 16348,
											"name": "tag",
											"source": 1,
											"value": "468"
										},
										{
											"begin": 16294,
											"end": 16348,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16014,
											"end": 16354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 15931,
											"end": 16354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16711,
											"name": "tag",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 16373,
											"end": 16711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16428,
											"end": 16433,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16477,
											"end": 16480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16470,
											"end": 16474,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 16462,
											"end": 16468,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 16458,
											"end": 16475,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16454,
											"end": 16481,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16566,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 16444,
											"end": 16566,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 16485,
											"end": 16564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "256"
										},
										{
											"begin": 16485,
											"end": 16564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16485,
											"end": 16564,
											"name": "tag",
											"source": 1,
											"value": "471"
										},
										{
											"begin": 16485,
											"end": 16564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16444,
											"end": 16566,
											"name": "tag",
											"source": 1,
											"value": "470"
										},
										{
											"begin": 16444,
											"end": 16566,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16602,
											"end": 16608,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 16589,
											"end": 16609,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 16701,
											"end": 16704,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 16693,
											"end": 16699,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 16686,
											"end": 16690,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 16678,
											"end": 16684,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16674,
											"end": 16691,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16705,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "267"
										},
										{
											"begin": 16627,
											"end": 16705,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16627,
											"end": 16705,
											"name": "tag",
											"source": 1,
											"value": "472"
										},
										{
											"begin": 16627,
											"end": 16705,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16618,
											"end": 16705,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16618,
											"end": 16705,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16434,
											"end": 16711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16711,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16711,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16711,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16373,
											"end": 16711,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "tag",
											"source": 1,
											"value": "74"
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16871,
											"end": 16877,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16879,
											"end": 16885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16887,
											"end": 16893,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16895,
											"end": 16901,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 16903,
											"end": 16909,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 16952,
											"end": 16955,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 16940,
											"end": 16949,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 16931,
											"end": 16938,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 16927,
											"end": 16950,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 16923,
											"end": 16956,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 16920,
											"end": 17040,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 16920,
											"end": 17040,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 16920,
											"end": 17040,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 16959,
											"end": 17038,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 16959,
											"end": 17038,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 16959,
											"end": 17038,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 16959,
											"end": 17038,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 16920,
											"end": 17040,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 16920,
											"end": 17040,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17079,
											"end": 17080,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 17104,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 17149,
											"end": 17156,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17140,
											"end": 17146,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17129,
											"end": 17138,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17125,
											"end": 17147,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17157,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17104,
											"end": 17157,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17104,
											"end": 17157,
											"name": "tag",
											"source": 1,
											"value": "476"
										},
										{
											"begin": 17104,
											"end": 17157,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17157,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 17094,
											"end": 17157,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17050,
											"end": 17167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17206,
											"end": 17208,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 17232,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 17277,
											"end": 17284,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17268,
											"end": 17274,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17257,
											"end": 17266,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17253,
											"end": 17275,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17232,
											"end": 17285,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 17232,
											"end": 17285,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17232,
											"end": 17285,
											"name": "tag",
											"source": 1,
											"value": "477"
										},
										{
											"begin": 17232,
											"end": 17285,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17222,
											"end": 17285,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 17222,
											"end": 17285,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17177,
											"end": 17295,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17362,
											"end": 17364,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 17351,
											"end": 17360,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17347,
											"end": 17365,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17334,
											"end": 17366,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17393,
											"end": 17411,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17385,
											"end": 17391,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17382,
											"end": 17412,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17379,
											"end": 17496,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17379,
											"end": 17496,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17379,
											"end": 17496,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17415,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 17415,
											"end": 17494,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 17415,
											"end": 17494,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17415,
											"end": 17494,
											"name": "tag",
											"source": 1,
											"value": "479"
										},
										{
											"begin": 17415,
											"end": 17494,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17379,
											"end": 17496,
											"name": "tag",
											"source": 1,
											"value": "478"
										},
										{
											"begin": 17379,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 17590,
											"end": 17597,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17581,
											"end": 17587,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17570,
											"end": 17579,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17566,
											"end": 17588,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 17598,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 17520,
											"end": 17598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17520,
											"end": 17598,
											"name": "tag",
											"source": 1,
											"value": "480"
										},
										{
											"begin": 17520,
											"end": 17598,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17598,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 17510,
											"end": 17598,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17305,
											"end": 17608,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17675,
											"end": 17677,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 17664,
											"end": 17673,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17660,
											"end": 17678,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17647,
											"end": 17679,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 17706,
											"end": 17724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17698,
											"end": 17704,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 17695,
											"end": 17725,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17809,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17809,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 17692,
											"end": 17809,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 17728,
											"end": 17807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "tag",
											"source": 1,
											"value": "482"
										},
										{
											"begin": 17728,
											"end": 17807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17692,
											"end": 17809,
											"name": "tag",
											"source": 1,
											"value": "481"
										},
										{
											"begin": 17692,
											"end": 17809,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17833,
											"end": 17911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 17903,
											"end": 17910,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 17894,
											"end": 17900,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 17883,
											"end": 17892,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 17879,
											"end": 17901,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17833,
											"end": 17911,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "263"
										},
										{
											"begin": 17833,
											"end": 17911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 17833,
											"end": 17911,
											"name": "tag",
											"source": 1,
											"value": "483"
										},
										{
											"begin": 17833,
											"end": 17911,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 17823,
											"end": 17911,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 17823,
											"end": 17911,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17618,
											"end": 17921,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17988,
											"end": 17991,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 17977,
											"end": 17986,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 17973,
											"end": 17992,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 17960,
											"end": 17993,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 18020,
											"end": 18038,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18012,
											"end": 18018,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18009,
											"end": 18039,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 18006,
											"end": 18123,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18006,
											"end": 18123,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 18006,
											"end": 18123,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18042,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 18042,
											"end": 18121,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 18042,
											"end": 18121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18042,
											"end": 18121,
											"name": "tag",
											"source": 1,
											"value": "485"
										},
										{
											"begin": 18042,
											"end": 18121,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18006,
											"end": 18123,
											"name": "tag",
											"source": 1,
											"value": "484"
										},
										{
											"begin": 18006,
											"end": 18123,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18147,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 18201,
											"end": 18208,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18192,
											"end": 18198,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18181,
											"end": 18190,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 18177,
											"end": 18199,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18147,
											"end": 18209,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 18147,
											"end": 18209,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18147,
											"end": 18209,
											"name": "tag",
											"source": 1,
											"value": "486"
										},
										{
											"begin": 18147,
											"end": 18209,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18137,
											"end": 18209,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18137,
											"end": 18209,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 17931,
											"end": 18219,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 16717,
											"end": 18226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18232,
											"end": 18347,
											"name": "tag",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 18232,
											"end": 18347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18317,
											"end": 18340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 18334,
											"end": 18339,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 18317,
											"end": 18340,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "224"
										},
										{
											"begin": 18317,
											"end": 18340,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18317,
											"end": 18340,
											"name": "tag",
											"source": 1,
											"value": "488"
										},
										{
											"begin": 18317,
											"end": 18340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18312,
											"end": 18315,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18305,
											"end": 18341,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 18232,
											"end": 18347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18232,
											"end": 18347,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18232,
											"end": 18347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18353,
											"end": 18571,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 18353,
											"end": 18571,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18444,
											"end": 18448,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18482,
											"end": 18484,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 18471,
											"end": 18480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18467,
											"end": 18485,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18485,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 18459,
											"end": 18485,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18495,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 18561,
											"end": 18562,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18550,
											"end": 18559,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 18546,
											"end": 18563,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18537,
											"end": 18543,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 18495,
											"end": 18564,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "269"
										},
										{
											"begin": 18495,
											"end": 18564,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18495,
											"end": 18564,
											"name": "tag",
											"source": 1,
											"value": "490"
										},
										{
											"begin": 18495,
											"end": 18564,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18353,
											"end": 18571,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18353,
											"end": 18571,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18353,
											"end": 18571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18353,
											"end": 18571,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18353,
											"end": 18571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "tag",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18662,
											"end": 18668,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18670,
											"end": 18676,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18678,
											"end": 18684,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18686,
											"end": 18692,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 18735,
											"end": 18738,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 18723,
											"end": 18732,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 18714,
											"end": 18721,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18710,
											"end": 18733,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 18706,
											"end": 18739,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18823,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18823,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 18703,
											"end": 18823,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 18742,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 18742,
											"end": 18821,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 18742,
											"end": 18821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18742,
											"end": 18821,
											"name": "tag",
											"source": 1,
											"value": "493"
										},
										{
											"begin": 18742,
											"end": 18821,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18703,
											"end": 18823,
											"name": "tag",
											"source": 1,
											"value": "492"
										},
										{
											"begin": 18703,
											"end": 18823,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18862,
											"end": 18863,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 18887,
											"end": 18939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 18931,
											"end": 18938,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 18922,
											"end": 18928,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 18911,
											"end": 18920,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 18907,
											"end": 18929,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18939,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "231"
										},
										{
											"begin": 18887,
											"end": 18939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 18887,
											"end": 18939,
											"name": "tag",
											"source": 1,
											"value": "494"
										},
										{
											"begin": 18887,
											"end": 18939,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 18877,
											"end": 18939,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18877,
											"end": 18939,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18833,
											"end": 18949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18988,
											"end": 18990,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19014,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 19059,
											"end": 19066,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19050,
											"end": 19056,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19039,
											"end": 19048,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19035,
											"end": 19057,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19014,
											"end": 19067,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 19014,
											"end": 19067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19014,
											"end": 19067,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 19014,
											"end": 19067,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19067,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19004,
											"end": 19067,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18959,
											"end": 19077,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19116,
											"end": 19118,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19142,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 19187,
											"end": 19194,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19178,
											"end": 19184,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19167,
											"end": 19176,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19163,
											"end": 19185,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19142,
											"end": 19195,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 19142,
											"end": 19195,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19142,
											"end": 19195,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 19142,
											"end": 19195,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19195,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19132,
											"end": 19195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19087,
											"end": 19205,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19244,
											"end": 19246,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 19270,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 19315,
											"end": 19322,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 19306,
											"end": 19312,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19295,
											"end": 19304,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19291,
											"end": 19313,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19270,
											"end": 19323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 19270,
											"end": 19323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19270,
											"end": 19323,
											"name": "tag",
											"source": 1,
											"value": "497"
										},
										{
											"begin": 19270,
											"end": 19323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19323,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 19260,
											"end": 19323,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19215,
											"end": 19333,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 18577,
											"end": 19340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19450,
											"end": 19456,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19458,
											"end": 19464,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19466,
											"end": 19472,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19474,
											"end": 19480,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 19482,
											"end": 19488,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19531,
											"end": 19534,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 19519,
											"end": 19528,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 19510,
											"end": 19517,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19506,
											"end": 19529,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 19502,
											"end": 19535,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 19538,
											"end": 19617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 19538,
											"end": 19617,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 19538,
											"end": 19617,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19538,
											"end": 19617,
											"name": "tag",
											"source": 1,
											"value": "500"
										},
										{
											"begin": 19538,
											"end": 19617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "tag",
											"source": 1,
											"value": "499"
										},
										{
											"begin": 19499,
											"end": 19619,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19658,
											"end": 19659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 19683,
											"end": 19736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 19728,
											"end": 19735,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19719,
											"end": 19725,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19708,
											"end": 19717,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19704,
											"end": 19726,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19683,
											"end": 19736,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 19683,
											"end": 19736,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19683,
											"end": 19736,
											"name": "tag",
											"source": 1,
											"value": "501"
										},
										{
											"begin": 19683,
											"end": 19736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19673,
											"end": 19736,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 19673,
											"end": 19736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19629,
											"end": 19746,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19785,
											"end": 19787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 19811,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 19856,
											"end": 19863,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19847,
											"end": 19853,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19836,
											"end": 19845,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19832,
											"end": 19854,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19864,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "235"
										},
										{
											"begin": 19811,
											"end": 19864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19811,
											"end": 19864,
											"name": "tag",
											"source": 1,
											"value": "502"
										},
										{
											"begin": 19811,
											"end": 19864,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19801,
											"end": 19864,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 19801,
											"end": 19864,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19756,
											"end": 19874,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19913,
											"end": 19915,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 19939,
											"end": 19992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 19984,
											"end": 19991,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 19975,
											"end": 19981,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 19964,
											"end": 19973,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 19960,
											"end": 19982,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 19939,
											"end": 19992,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 19939,
											"end": 19992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 19939,
											"end": 19992,
											"name": "tag",
											"source": 1,
											"value": "503"
										},
										{
											"begin": 19939,
											"end": 19992,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 19929,
											"end": 19992,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19929,
											"end": 19992,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19884,
											"end": 20002,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20041,
											"end": 20043,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 20067,
											"end": 20120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 20112,
											"end": 20119,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20103,
											"end": 20109,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20092,
											"end": 20101,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 20088,
											"end": 20110,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20067,
											"end": 20120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "238"
										},
										{
											"begin": 20067,
											"end": 20120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20067,
											"end": 20120,
											"name": "tag",
											"source": 1,
											"value": "504"
										},
										{
											"begin": 20067,
											"end": 20120,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20057,
											"end": 20120,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20057,
											"end": 20120,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20012,
											"end": 20130,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20197,
											"end": 20200,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 20186,
											"end": 20195,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 20182,
											"end": 20201,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20169,
											"end": 20202,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 20229,
											"end": 20247,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20221,
											"end": 20227,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 20218,
											"end": 20248,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20215,
											"end": 20332,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20215,
											"end": 20332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 20215,
											"end": 20332,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20251,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 20251,
											"end": 20330,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "223"
										},
										{
											"begin": 20251,
											"end": 20330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20251,
											"end": 20330,
											"name": "tag",
											"source": 1,
											"value": "506"
										},
										{
											"begin": 20251,
											"end": 20330,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20215,
											"end": 20332,
											"name": "tag",
											"source": 1,
											"value": "505"
										},
										{
											"begin": 20215,
											"end": 20332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20356,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 20410,
											"end": 20417,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 20401,
											"end": 20407,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20390,
											"end": 20399,
											"name": "DUP10",
											"source": 1
										},
										{
											"begin": 20386,
											"end": 20408,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20356,
											"end": 20418,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "268"
										},
										{
											"begin": 20356,
											"end": 20418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20356,
											"end": 20418,
											"name": "tag",
											"source": 1,
											"value": "507"
										},
										{
											"begin": 20356,
											"end": 20418,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20346,
											"end": 20418,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20346,
											"end": 20418,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20140,
											"end": 20428,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 19346,
											"end": 20435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20441,
											"end": 20621,
											"name": "tag",
											"source": 1,
											"value": "102"
										},
										{
											"begin": 20441,
											"end": 20621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20489,
											"end": 20566,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20486,
											"end": 20487,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20479,
											"end": 20567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20586,
											"end": 20590,
											"name": "PUSH",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 20583,
											"end": 20584,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20576,
											"end": 20591,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20610,
											"end": 20614,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20607,
											"end": 20608,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20600,
											"end": 20615,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20627,
											"end": 20807,
											"name": "tag",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 20627,
											"end": 20807,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20675,
											"end": 20752,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 20672,
											"end": 20673,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20665,
											"end": 20753,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20772,
											"end": 20776,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 20769,
											"end": 20770,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 20762,
											"end": 20777,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 20796,
											"end": 20800,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 20793,
											"end": 20794,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20786,
											"end": 20801,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 20813,
											"end": 21004,
											"name": "tag",
											"source": 1,
											"value": "109"
										},
										{
											"begin": 20813,
											"end": 21004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20853,
											"end": 20856,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 20872,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 20890,
											"end": 20891,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20872,
											"end": 20892,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 20872,
											"end": 20892,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20872,
											"end": 20892,
											"name": "tag",
											"source": 1,
											"value": "511"
										},
										{
											"begin": 20872,
											"end": 20892,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 20892,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20867,
											"end": 20892,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20906,
											"end": 20926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 20924,
											"end": 20925,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 20906,
											"end": 20926,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 20906,
											"end": 20926,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20906,
											"end": 20926,
											"name": "tag",
											"source": 1,
											"value": "512"
										},
										{
											"begin": 20906,
											"end": 20926,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 20926,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20901,
											"end": 20926,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20949,
											"end": 20950,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20946,
											"end": 20947,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20942,
											"end": 20951,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 20935,
											"end": 20951,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 20935,
											"end": 20951,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20970,
											"end": 20973,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 20967,
											"end": 20968,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 20964,
											"end": 20974,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 20961,
											"end": 20997,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 20961,
											"end": 20997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 20961,
											"end": 20997,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 20977,
											"end": 20995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 20977,
											"end": 20995,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 20977,
											"end": 20995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 20977,
											"end": 20995,
											"name": "tag",
											"source": 1,
											"value": "514"
										},
										{
											"begin": 20977,
											"end": 20995,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20961,
											"end": 20997,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 20961,
											"end": 20997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 20813,
											"end": 21004,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 20813,
											"end": 21004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 20813,
											"end": 21004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20813,
											"end": 21004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 20813,
											"end": 21004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21010,
											"end": 21201,
											"name": "tag",
											"source": 1,
											"value": "111"
										},
										{
											"begin": 21010,
											"end": 21201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21048,
											"end": 21051,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 21088,
											"end": 21093,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 21071,
											"end": 21094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "tag",
											"source": 1,
											"value": "516"
										},
										{
											"begin": 21071,
											"end": 21094,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21062,
											"end": 21094,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21062,
											"end": 21094,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21116,
											"end": 21142,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 21109,
											"end": 21114,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21106,
											"end": 21143,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 21103,
											"end": 21166,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 21103,
											"end": 21166,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 21146,
											"end": 21164,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "tag",
											"source": 1,
											"value": "518"
										},
										{
											"begin": 21146,
											"end": 21164,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21103,
											"end": 21166,
											"name": "tag",
											"source": 1,
											"value": "517"
										},
										{
											"begin": 21103,
											"end": 21166,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21193,
											"end": 21194,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 21186,
											"end": 21191,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21182,
											"end": 21195,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 21175,
											"end": 21195,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21175,
											"end": 21195,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21010,
											"end": 21201,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21010,
											"end": 21201,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21010,
											"end": 21201,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21010,
											"end": 21201,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21617,
											"name": "tag",
											"source": 1,
											"value": "115"
										},
										{
											"begin": 21207,
											"end": 21617,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21247,
											"end": 21254,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21270,
											"end": 21290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 21288,
											"end": 21289,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21270,
											"end": 21290,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 21270,
											"end": 21290,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21270,
											"end": 21290,
											"name": "tag",
											"source": 1,
											"value": "520"
										},
										{
											"begin": 21270,
											"end": 21290,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21265,
											"end": 21290,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21265,
											"end": 21290,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21304,
											"end": 21324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 21322,
											"end": 21323,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21304,
											"end": 21324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 21304,
											"end": 21324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21304,
											"end": 21324,
											"name": "tag",
											"source": 1,
											"value": "521"
										},
										{
											"begin": 21304,
											"end": 21324,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21299,
											"end": 21324,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21299,
											"end": 21324,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21359,
											"end": 21360,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21356,
											"end": 21357,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21352,
											"end": 21361,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 21381,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 21399,
											"end": 21410,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 21381,
											"end": 21411,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 21381,
											"end": 21411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21381,
											"end": 21411,
											"name": "tag",
											"source": 1,
											"value": "522"
										},
										{
											"begin": 21381,
											"end": 21411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21370,
											"end": 21411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21370,
											"end": 21411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21560,
											"end": 21561,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21551,
											"end": 21558,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21547,
											"end": 21562,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 21544,
											"end": 21545,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 21541,
											"end": 21563,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 21521,
											"end": 21522,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21514,
											"end": 21523,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 21494,
											"end": 21577,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 21471,
											"end": 21610,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 21471,
											"end": 21610,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21590,
											"end": 21608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 21590,
											"end": 21608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 21590,
											"end": 21608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21590,
											"end": 21608,
											"name": "tag",
											"source": 1,
											"value": "524"
										},
										{
											"begin": 21590,
											"end": 21608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21471,
											"end": 21610,
											"name": "tag",
											"source": 1,
											"value": "523"
										},
										{
											"begin": 21471,
											"end": 21610,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21255,
											"end": 21617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21617,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21617,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21617,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21207,
											"end": 21617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21623,
											"end": 21803,
											"name": "tag",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 21623,
											"end": 21803,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21671,
											"end": 21748,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21668,
											"end": 21669,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21661,
											"end": 21749,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21768,
											"end": 21772,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 21765,
											"end": 21766,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 21758,
											"end": 21773,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 21792,
											"end": 21796,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 21789,
											"end": 21790,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21782,
											"end": 21797,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21994,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 21809,
											"end": 21994,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21849,
											"end": 21850,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 21884,
											"end": 21885,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 21866,
											"end": 21886,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "tag",
											"source": 1,
											"value": "527"
										},
										{
											"begin": 21866,
											"end": 21886,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21861,
											"end": 21886,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21861,
											"end": 21886,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21900,
											"end": 21920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 21918,
											"end": 21919,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 21900,
											"end": 21920,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 21900,
											"end": 21920,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21900,
											"end": 21920,
											"name": "tag",
											"source": 1,
											"value": "528"
										},
										{
											"begin": 21900,
											"end": 21920,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21895,
											"end": 21920,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21895,
											"end": 21920,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21939,
											"end": 21940,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21964,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 21929,
											"end": 21964,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 21944,
											"end": 21962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 21944,
											"end": 21962,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "271"
										},
										{
											"begin": 21944,
											"end": 21962,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 21944,
											"end": 21962,
											"name": "tag",
											"source": 1,
											"value": "530"
										},
										{
											"begin": 21944,
											"end": 21962,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21929,
											"end": 21964,
											"name": "tag",
											"source": 1,
											"value": "529"
										},
										{
											"begin": 21929,
											"end": 21964,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 21986,
											"end": 21987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21983,
											"end": 21984,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 21979,
											"end": 21988,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 21974,
											"end": 21988,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 21974,
											"end": 21988,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21994,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21994,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21994,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 21809,
											"end": 21994,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22060,
											"name": "tag",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 22000,
											"end": 22060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22028,
											"end": 22031,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22049,
											"end": 22054,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22042,
											"end": 22054,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22042,
											"end": 22054,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22060,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22000,
											"end": 22060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22066,
											"end": 22206,
											"name": "tag",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 22066,
											"end": 22206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22115,
											"end": 22124,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22148,
											"end": 22200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 22166,
											"end": 22199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 22175,
											"end": 22198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 22192,
											"end": 22197,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22198,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 22175,
											"end": 22198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22175,
											"end": 22198,
											"name": "tag",
											"source": 1,
											"value": "535"
										},
										{
											"begin": 22175,
											"end": 22198,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22166,
											"end": 22199,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 22166,
											"end": 22199,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22166,
											"end": 22199,
											"name": "tag",
											"source": 1,
											"value": "534"
										},
										{
											"begin": 22166,
											"end": 22199,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22148,
											"end": 22200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 22148,
											"end": 22200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22148,
											"end": 22200,
											"name": "tag",
											"source": 1,
											"value": "533"
										},
										{
											"begin": 22148,
											"end": 22200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22135,
											"end": 22200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22135,
											"end": 22200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22066,
											"end": 22206,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22066,
											"end": 22206,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22066,
											"end": 22206,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22066,
											"end": 22206,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22212,
											"end": 22341,
											"name": "tag",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 22212,
											"end": 22341,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22298,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 22328,
											"end": 22333,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 22298,
											"end": 22334,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "273"
										},
										{
											"begin": 22298,
											"end": 22334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22298,
											"end": 22334,
											"name": "tag",
											"source": 1,
											"value": "537"
										},
										{
											"begin": 22298,
											"end": 22334,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22293,
											"end": 22296,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22286,
											"end": 22335,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22212,
											"end": 22341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22212,
											"end": 22341,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22212,
											"end": 22341,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22347,
											"end": 22515,
											"name": "tag",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 22347,
											"end": 22515,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22430,
											"end": 22441,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22464,
											"end": 22470,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22459,
											"end": 22462,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22452,
											"end": 22471,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22504,
											"end": 22508,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 22499,
											"end": 22502,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22495,
											"end": 22509,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22480,
											"end": 22509,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22480,
											"end": 22509,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22347,
											"end": 22515,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 22347,
											"end": 22515,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22347,
											"end": 22515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22347,
											"end": 22515,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22347,
											"end": 22515,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22521,
											"end": 22674,
											"name": "tag",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 22521,
											"end": 22674,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22661,
											"end": 22666,
											"name": "PUSH",
											"source": 1,
											"value": "3078300000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22657,
											"end": 22658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22649,
											"end": 22655,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22645,
											"end": 22659,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 22638,
											"end": 22667,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 22521,
											"end": 22674,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22521,
											"end": 22674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 23043,
											"name": "tag",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 22680,
											"end": 23043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22821,
											"end": 22824,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 22842,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 22905,
											"end": 22906,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 22900,
											"end": 22903,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 22842,
											"end": 22907,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "275"
										},
										{
											"begin": 22842,
											"end": 22907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22842,
											"end": 22907,
											"name": "tag",
											"source": 1,
											"value": "541"
										},
										{
											"begin": 22842,
											"end": 22907,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 22835,
											"end": 22907,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22835,
											"end": 22907,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22916,
											"end": 23009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 23005,
											"end": 23008,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 22916,
											"end": 23009,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "276"
										},
										{
											"begin": 22916,
											"end": 23009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 22916,
											"end": 23009,
											"name": "tag",
											"source": 1,
											"value": "542"
										},
										{
											"begin": 22916,
											"end": 23009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23034,
											"end": 23036,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23029,
											"end": 23032,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23025,
											"end": 23037,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23018,
											"end": 23037,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23018,
											"end": 23037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 23043,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 23043,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 23043,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 22680,
											"end": 23043,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23325,
											"end": 23329,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23363,
											"end": 23366,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 23352,
											"end": 23361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 23348,
											"end": 23367,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23340,
											"end": 23367,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23340,
											"end": 23367,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23377,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 23445,
											"end": 23446,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 23434,
											"end": 23443,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23430,
											"end": 23447,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23421,
											"end": 23427,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 23377,
											"end": 23448,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 23377,
											"end": 23448,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23377,
											"end": 23448,
											"name": "tag",
											"source": 1,
											"value": "544"
										},
										{
											"begin": 23377,
											"end": 23448,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23458,
											"end": 23530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 23526,
											"end": 23528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 23515,
											"end": 23524,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23511,
											"end": 23529,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23502,
											"end": 23508,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 23458,
											"end": 23530,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 23458,
											"end": 23530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23458,
											"end": 23530,
											"name": "tag",
											"source": 1,
											"value": "545"
										},
										{
											"begin": 23458,
											"end": 23530,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 23607,
											"end": 23609,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 23596,
											"end": 23605,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23592,
											"end": 23610,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23583,
											"end": 23589,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "274"
										},
										{
											"begin": 23540,
											"end": 23611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23540,
											"end": 23611,
											"name": "tag",
											"source": 1,
											"value": "546"
										},
										{
											"begin": 23540,
											"end": 23611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23621,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 23689,
											"end": 23691,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 23678,
											"end": 23687,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23674,
											"end": 23692,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23665,
											"end": 23671,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 23621,
											"end": 23693,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 23621,
											"end": 23693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23621,
											"end": 23693,
											"name": "tag",
											"source": 1,
											"value": "547"
										},
										{
											"begin": 23621,
											"end": 23693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23741,
											"end": 23750,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23735,
											"end": 23739,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23731,
											"end": 23751,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 23725,
											"end": 23728,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 23714,
											"end": 23723,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 23710,
											"end": 23729,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 23703,
											"end": 23752,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 23769,
											"end": 23899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 23894,
											"end": 23898,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 23769,
											"end": 23899,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 23769,
											"end": 23899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23769,
											"end": 23899,
											"name": "tag",
											"source": 1,
											"value": "548"
										},
										{
											"begin": 23769,
											"end": 23899,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23899,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 23761,
											"end": 23899,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23049,
											"end": 23906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "tag",
											"source": 1,
											"value": "126"
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24083,
											"end": 24087,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24121,
											"end": 24124,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 24110,
											"end": 24119,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24106,
											"end": 24125,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24098,
											"end": 24125,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24098,
											"end": 24125,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24135,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 24203,
											"end": 24204,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24192,
											"end": 24201,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24188,
											"end": 24205,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24179,
											"end": 24185,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 24135,
											"end": 24206,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 24135,
											"end": 24206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24135,
											"end": 24206,
											"name": "tag",
											"source": 1,
											"value": "550"
										},
										{
											"begin": 24135,
											"end": 24206,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24216,
											"end": 24288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 24284,
											"end": 24286,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24273,
											"end": 24282,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24269,
											"end": 24287,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24260,
											"end": 24266,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 24216,
											"end": 24288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 24216,
											"end": 24288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24216,
											"end": 24288,
											"name": "tag",
											"source": 1,
											"value": "551"
										},
										{
											"begin": 24216,
											"end": 24288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24298,
											"end": 24364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 24360,
											"end": 24362,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 24349,
											"end": 24358,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24345,
											"end": 24363,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24336,
											"end": 24342,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 24298,
											"end": 24364,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "228"
										},
										{
											"begin": 24298,
											"end": 24364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24298,
											"end": 24364,
											"name": "tag",
											"source": 1,
											"value": "552"
										},
										{
											"begin": 24298,
											"end": 24364,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24374,
											"end": 24446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 24442,
											"end": 24444,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 24431,
											"end": 24440,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24427,
											"end": 24445,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24418,
											"end": 24424,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 24374,
											"end": 24446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 24374,
											"end": 24446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24374,
											"end": 24446,
											"name": "tag",
											"source": 1,
											"value": "553"
										},
										{
											"begin": 24374,
											"end": 24446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 23912,
											"end": 24453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24672,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 24459,
											"end": 24672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24498,
											"end": 24501,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24517,
											"end": 24536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 24534,
											"end": 24535,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24517,
											"end": 24536,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 24517,
											"end": 24536,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24517,
											"end": 24536,
											"name": "tag",
											"source": 1,
											"value": "555"
										},
										{
											"begin": 24517,
											"end": 24536,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24512,
											"end": 24536,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24512,
											"end": 24536,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24550,
											"end": 24569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 24567,
											"end": 24568,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 24550,
											"end": 24569,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 24550,
											"end": 24569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24550,
											"end": 24569,
											"name": "tag",
											"source": 1,
											"value": "556"
										},
										{
											"begin": 24550,
											"end": 24569,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24545,
											"end": 24569,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24545,
											"end": 24569,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24592,
											"end": 24593,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24589,
											"end": 24590,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24585,
											"end": 24594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24578,
											"end": 24594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24578,
											"end": 24594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24615,
											"end": 24641,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24610,
											"end": 24613,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 24607,
											"end": 24642,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 24604,
											"end": 24665,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 24604,
											"end": 24665,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 24604,
											"end": 24665,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 24645,
											"end": 24663,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "tag",
											"source": 1,
											"value": "558"
										},
										{
											"begin": 24645,
											"end": 24663,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24604,
											"end": 24665,
											"name": "tag",
											"source": 1,
											"value": "557"
										},
										{
											"begin": 24604,
											"end": 24665,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24672,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24459,
											"end": 24672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24678,
											"end": 24847,
											"name": "tag",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 24678,
											"end": 24847,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24762,
											"end": 24773,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24796,
											"end": 24802,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24791,
											"end": 24794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24784,
											"end": 24803,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24836,
											"end": 24840,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 24831,
											"end": 24834,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24827,
											"end": 24841,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24812,
											"end": 24841,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 24812,
											"end": 24841,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24678,
											"end": 24847,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 24678,
											"end": 24847,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 24678,
											"end": 24847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24678,
											"end": 24847,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24678,
											"end": 24847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 24853,
											"end": 25030,
											"name": "tag",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 24853,
											"end": 25030,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 24993,
											"end": 25022,
											"name": "PUSH",
											"source": 1,
											"value": "4D757374206265205F656E644964203C3D2066756E64436F756E740000000000"
										},
										{
											"begin": 24989,
											"end": 24990,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 24981,
											"end": 24987,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 24977,
											"end": 24991,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 24970,
											"end": 25023,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 24853,
											"end": 25030,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 24853,
											"end": 25030,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25036,
											"end": 25402,
											"name": "tag",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 25036,
											"end": 25402,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25178,
											"end": 25181,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25199,
											"end": 25266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 25263,
											"end": 25265,
											"name": "PUSH",
											"source": 1,
											"value": "1B"
										},
										{
											"begin": 25258,
											"end": 25261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25199,
											"end": 25266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 25199,
											"end": 25266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25199,
											"end": 25266,
											"name": "tag",
											"source": 1,
											"value": "562"
										},
										{
											"begin": 25199,
											"end": 25266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25192,
											"end": 25266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25192,
											"end": 25266,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25275,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 25364,
											"end": 25367,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25275,
											"end": 25368,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "279"
										},
										{
											"begin": 25275,
											"end": 25368,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25275,
											"end": 25368,
											"name": "tag",
											"source": 1,
											"value": "563"
										},
										{
											"begin": 25275,
											"end": 25368,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25393,
											"end": 25395,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25388,
											"end": 25391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25384,
											"end": 25396,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25377,
											"end": 25396,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25377,
											"end": 25396,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25036,
											"end": 25402,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25036,
											"end": 25402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25036,
											"end": 25402,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25036,
											"end": 25402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25408,
											"end": 25827,
											"name": "tag",
											"source": 1,
											"value": "136"
										},
										{
											"begin": 25408,
											"end": 25827,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25574,
											"end": 25578,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25612,
											"end": 25614,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 25601,
											"end": 25610,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25597,
											"end": 25615,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25589,
											"end": 25615,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25589,
											"end": 25615,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25661,
											"end": 25670,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25655,
											"end": 25659,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25651,
											"end": 25671,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 25647,
											"end": 25648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25636,
											"end": 25645,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 25632,
											"end": 25649,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25625,
											"end": 25672,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25689,
											"end": 25820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 25815,
											"end": 25819,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 25689,
											"end": 25820,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "280"
										},
										{
											"begin": 25689,
											"end": 25820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25689,
											"end": 25820,
											"name": "tag",
											"source": 1,
											"value": "565"
										},
										{
											"begin": 25689,
											"end": 25820,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25681,
											"end": 25820,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25681,
											"end": 25820,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25408,
											"end": 25827,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 25408,
											"end": 25827,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 25408,
											"end": 25827,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25408,
											"end": 25827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 25833,
											"end": 26009,
											"name": "tag",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 25833,
											"end": 26009,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 25973,
											"end": 26001,
											"name": "PUSH",
											"source": 1,
											"value": "4D757374206265205F73746172744964203C3D205F656E644964000000000000"
										},
										{
											"begin": 25969,
											"end": 25970,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 25961,
											"end": 25967,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 25957,
											"end": 25971,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 25950,
											"end": 26002,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 25833,
											"end": 26009,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 25833,
											"end": 26009,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26015,
											"end": 26381,
											"name": "tag",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 26015,
											"end": 26381,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26157,
											"end": 26160,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26178,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 26242,
											"end": 26244,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 26237,
											"end": 26240,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26245,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 26178,
											"end": 26245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26178,
											"end": 26245,
											"name": "tag",
											"source": 1,
											"value": "568"
										},
										{
											"begin": 26178,
											"end": 26245,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26171,
											"end": 26245,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26171,
											"end": 26245,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26254,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 26343,
											"end": 26346,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26254,
											"end": 26347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "281"
										},
										{
											"begin": 26254,
											"end": 26347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26254,
											"end": 26347,
											"name": "tag",
											"source": 1,
											"value": "569"
										},
										{
											"begin": 26254,
											"end": 26347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26372,
											"end": 26374,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26367,
											"end": 26370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26363,
											"end": 26375,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26015,
											"end": 26381,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26015,
											"end": 26381,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26015,
											"end": 26381,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26015,
											"end": 26381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26387,
											"end": 26806,
											"name": "tag",
											"source": 1,
											"value": "139"
										},
										{
											"begin": 26387,
											"end": 26806,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26553,
											"end": 26557,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26591,
											"end": 26593,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 26580,
											"end": 26589,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26576,
											"end": 26594,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26568,
											"end": 26594,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26568,
											"end": 26594,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26640,
											"end": 26649,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26634,
											"end": 26638,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26630,
											"end": 26650,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26626,
											"end": 26627,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26615,
											"end": 26624,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26611,
											"end": 26628,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 26604,
											"end": 26651,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 26668,
											"end": 26799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 26794,
											"end": 26798,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26668,
											"end": 26799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "282"
										},
										{
											"begin": 26668,
											"end": 26799,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26668,
											"end": 26799,
											"name": "tag",
											"source": 1,
											"value": "571"
										},
										{
											"begin": 26668,
											"end": 26799,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26660,
											"end": 26799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26660,
											"end": 26799,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26387,
											"end": 26806,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26387,
											"end": 26806,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26387,
											"end": 26806,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26387,
											"end": 26806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 27028,
											"name": "tag",
											"source": 1,
											"value": "141"
										},
										{
											"begin": 26812,
											"end": 27028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26851,
											"end": 26855,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 26871,
											"end": 26890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 26888,
											"end": 26889,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26871,
											"end": 26890,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 26871,
											"end": 26890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26871,
											"end": 26890,
											"name": "tag",
											"source": 1,
											"value": "573"
										},
										{
											"begin": 26871,
											"end": 26890,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26866,
											"end": 26890,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26866,
											"end": 26890,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26904,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 26921,
											"end": 26922,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 26904,
											"end": 26923,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "229"
										},
										{
											"begin": 26904,
											"end": 26923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 26904,
											"end": 26923,
											"name": "tag",
											"source": 1,
											"value": "574"
										},
										{
											"begin": 26904,
											"end": 26923,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26899,
											"end": 26923,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26899,
											"end": 26923,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26947,
											"end": 26948,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26944,
											"end": 26945,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 26940,
											"end": 26949,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 26932,
											"end": 26949,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 26932,
											"end": 26949,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26971,
											"end": 26997,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26965,
											"end": 26969,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 26962,
											"end": 26998,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 26959,
											"end": 27021,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 26959,
											"end": 27021,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 26959,
											"end": 27021,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "270"
										},
										{
											"begin": 27001,
											"end": 27019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "tag",
											"source": 1,
											"value": "576"
										},
										{
											"begin": 27001,
											"end": 27019,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26959,
											"end": 27021,
											"name": "tag",
											"source": 1,
											"value": "575"
										},
										{
											"begin": 26959,
											"end": 27021,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 27028,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 27028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 27028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 27028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 26812,
											"end": 27028,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27034,
											"end": 27207,
											"name": "tag",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 27034,
											"end": 27207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27174,
											"end": 27199,
											"name": "PUSH",
											"source": 1,
											"value": "4D757374206265205F6964203C2066756E64436F756E74000000000000000000"
										},
										{
											"begin": 27170,
											"end": 27171,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27162,
											"end": 27168,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27158,
											"end": 27172,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27151,
											"end": 27200,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27034,
											"end": 27207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27034,
											"end": 27207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27213,
											"end": 27579,
											"name": "tag",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 27213,
											"end": 27579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27355,
											"end": 27358,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27376,
											"end": 27443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 27440,
											"end": 27442,
											"name": "PUSH",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 27435,
											"end": 27438,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27376,
											"end": 27443,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 27376,
											"end": 27443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27376,
											"end": 27443,
											"name": "tag",
											"source": 1,
											"value": "579"
										},
										{
											"begin": 27376,
											"end": 27443,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27369,
											"end": 27443,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27369,
											"end": 27443,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27452,
											"end": 27545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 27541,
											"end": 27544,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27452,
											"end": 27545,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "283"
										},
										{
											"begin": 27452,
											"end": 27545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27452,
											"end": 27545,
											"name": "tag",
											"source": 1,
											"value": "580"
										},
										{
											"begin": 27452,
											"end": 27545,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27570,
											"end": 27572,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27565,
											"end": 27568,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27561,
											"end": 27573,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27554,
											"end": 27573,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27554,
											"end": 27573,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27213,
											"end": 27579,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27213,
											"end": 27579,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27213,
											"end": 27579,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27213,
											"end": 27579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27585,
											"end": 28004,
											"name": "tag",
											"source": 1,
											"value": "159"
										},
										{
											"begin": 27585,
											"end": 28004,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27751,
											"end": 27755,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27789,
											"end": 27791,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 27778,
											"end": 27787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 27774,
											"end": 27792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27766,
											"end": 27792,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27766,
											"end": 27792,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27838,
											"end": 27847,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27832,
											"end": 27836,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27828,
											"end": 27848,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 27824,
											"end": 27825,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 27813,
											"end": 27822,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 27809,
											"end": 27826,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 27802,
											"end": 27849,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 27866,
											"end": 27997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 27992,
											"end": 27996,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 27866,
											"end": 27997,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "284"
										},
										{
											"begin": 27866,
											"end": 27997,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 27866,
											"end": 27997,
											"name": "tag",
											"source": 1,
											"value": "582"
										},
										{
											"begin": 27866,
											"end": 27997,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 27858,
											"end": 27997,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27858,
											"end": 27997,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27585,
											"end": 28004,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 27585,
											"end": 28004,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 27585,
											"end": 28004,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 27585,
											"end": 28004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28010,
											"end": 28186,
											"name": "tag",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 28010,
											"end": 28186,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28150,
											"end": 28178,
											"name": "PUSH",
											"source": 1,
											"value": "46756E6420557064617465206E6F7420617574686F72697A6564000000000000"
										},
										{
											"begin": 28146,
											"end": 28147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28138,
											"end": 28144,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28134,
											"end": 28148,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28127,
											"end": 28179,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28010,
											"end": 28186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28010,
											"end": 28186,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28192,
											"end": 28558,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 28192,
											"end": 28558,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28334,
											"end": 28337,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28355,
											"end": 28422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 28419,
											"end": 28421,
											"name": "PUSH",
											"source": 1,
											"value": "1A"
										},
										{
											"begin": 28414,
											"end": 28417,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28355,
											"end": 28422,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 28355,
											"end": 28422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28355,
											"end": 28422,
											"name": "tag",
											"source": 1,
											"value": "585"
										},
										{
											"begin": 28355,
											"end": 28422,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28348,
											"end": 28422,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28348,
											"end": 28422,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28431,
											"end": 28524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 28520,
											"end": 28523,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28431,
											"end": 28524,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "285"
										},
										{
											"begin": 28431,
											"end": 28524,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28431,
											"end": 28524,
											"name": "tag",
											"source": 1,
											"value": "586"
										},
										{
											"begin": 28431,
											"end": 28524,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28549,
											"end": 28551,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28544,
											"end": 28547,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28540,
											"end": 28552,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28533,
											"end": 28552,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28533,
											"end": 28552,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28192,
											"end": 28558,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28192,
											"end": 28558,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28192,
											"end": 28558,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28192,
											"end": 28558,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28564,
											"end": 28983,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 28564,
											"end": 28983,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28730,
											"end": 28734,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28768,
											"end": 28770,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 28757,
											"end": 28766,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 28753,
											"end": 28771,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28745,
											"end": 28771,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28745,
											"end": 28771,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28817,
											"end": 28826,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28811,
											"end": 28815,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28807,
											"end": 28827,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 28803,
											"end": 28804,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 28792,
											"end": 28801,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 28788,
											"end": 28805,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 28781,
											"end": 28828,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 28845,
											"end": 28976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 28971,
											"end": 28975,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 28845,
											"end": 28976,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 28845,
											"end": 28976,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28845,
											"end": 28976,
											"name": "tag",
											"source": 1,
											"value": "588"
										},
										{
											"begin": 28845,
											"end": 28976,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 28837,
											"end": 28976,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28837,
											"end": 28976,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28564,
											"end": 28983,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28564,
											"end": 28983,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28564,
											"end": 28983,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28564,
											"end": 28983,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 28989,
											"end": 29074,
											"name": "tag",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 28989,
											"end": 29074,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29034,
											"end": 29041,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29063,
											"end": 29068,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29052,
											"end": 29068,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29052,
											"end": 29068,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28989,
											"end": 29074,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 28989,
											"end": 29074,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 28989,
											"end": 29074,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 28989,
											"end": 29074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29080,
											"end": 29238,
											"name": "tag",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 29080,
											"end": 29238,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29138,
											"end": 29147,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29171,
											"end": 29232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 29189,
											"end": 29231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 29198,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 29224,
											"end": 29229,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29198,
											"end": 29230,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "287"
										},
										{
											"begin": 29198,
											"end": 29230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29198,
											"end": 29230,
											"name": "tag",
											"source": 1,
											"value": "593"
										},
										{
											"begin": 29198,
											"end": 29230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29189,
											"end": 29231,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "272"
										},
										{
											"begin": 29189,
											"end": 29231,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29189,
											"end": 29231,
											"name": "tag",
											"source": 1,
											"value": "592"
										},
										{
											"begin": 29189,
											"end": 29231,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29171,
											"end": 29232,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "236"
										},
										{
											"begin": 29171,
											"end": 29232,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29171,
											"end": 29232,
											"name": "tag",
											"source": 1,
											"value": "591"
										},
										{
											"begin": 29171,
											"end": 29232,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29158,
											"end": 29232,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29158,
											"end": 29232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29080,
											"end": 29238,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29080,
											"end": 29238,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29080,
											"end": 29238,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29080,
											"end": 29238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29244,
											"end": 29391,
											"name": "tag",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 29244,
											"end": 29391,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29339,
											"end": 29384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 29378,
											"end": 29383,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29339,
											"end": 29384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "288"
										},
										{
											"begin": 29339,
											"end": 29384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29339,
											"end": 29384,
											"name": "tag",
											"source": 1,
											"value": "595"
										},
										{
											"begin": 29339,
											"end": 29384,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29334,
											"end": 29337,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29327,
											"end": 29385,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 29244,
											"end": 29391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29244,
											"end": 29391,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29244,
											"end": 29391,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29526,
											"end": 29530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29564,
											"end": 29566,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 29553,
											"end": 29562,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29549,
											"end": 29567,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29541,
											"end": 29567,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29541,
											"end": 29567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29577,
											"end": 29648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 29645,
											"end": 29646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29634,
											"end": 29643,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29630,
											"end": 29647,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29621,
											"end": 29627,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 29577,
											"end": 29648,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 29577,
											"end": 29648,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29577,
											"end": 29648,
											"name": "tag",
											"source": 1,
											"value": "597"
										},
										{
											"begin": 29577,
											"end": 29648,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29658,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 29734,
											"end": 29736,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 29723,
											"end": 29732,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 29719,
											"end": 29737,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 29710,
											"end": 29716,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29658,
											"end": 29738,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 29658,
											"end": 29738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29658,
											"end": 29738,
											"name": "tag",
											"source": 1,
											"value": "598"
										},
										{
											"begin": 29658,
											"end": 29738,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29397,
											"end": 29745,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29751,
											"end": 29894,
											"name": "tag",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 29751,
											"end": 29894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29808,
											"end": 29813,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 29839,
											"end": 29845,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29833,
											"end": 29846,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 29824,
											"end": 29846,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 29824,
											"end": 29846,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29855,
											"end": 29888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 29882,
											"end": 29887,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 29855,
											"end": 29888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "237"
										},
										{
											"begin": 29855,
											"end": 29888,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29855,
											"end": 29888,
											"name": "tag",
											"source": 1,
											"value": "600"
										},
										{
											"begin": 29855,
											"end": 29888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29751,
											"end": 29894,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29751,
											"end": 29894,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29751,
											"end": 29894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29751,
											"end": 29894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29751,
											"end": 29894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 29900,
											"end": 30251,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 29900,
											"end": 30251,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29970,
											"end": 29976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30019,
											"end": 30021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30007,
											"end": 30016,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 29998,
											"end": 30005,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 29994,
											"end": 30017,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 29990,
											"end": 30022,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 29987,
											"end": 30106,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 29987,
											"end": 30106,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 29987,
											"end": 30106,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 30025,
											"end": 30104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 30025,
											"end": 30104,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 30025,
											"end": 30104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30025,
											"end": 30104,
											"name": "tag",
											"source": 1,
											"value": "603"
										},
										{
											"begin": 30025,
											"end": 30104,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 29987,
											"end": 30106,
											"name": "tag",
											"source": 1,
											"value": "602"
										},
										{
											"begin": 29987,
											"end": 30106,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30145,
											"end": 30146,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30170,
											"end": 30234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 30226,
											"end": 30233,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 30217,
											"end": 30223,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30206,
											"end": 30215,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 30202,
											"end": 30224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30170,
											"end": 30234,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "290"
										},
										{
											"begin": 30170,
											"end": 30234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30170,
											"end": 30234,
											"name": "tag",
											"source": 1,
											"value": "604"
										},
										{
											"begin": 30170,
											"end": 30234,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30234,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30160,
											"end": 30234,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30116,
											"end": 30244,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29900,
											"end": 30251,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 29900,
											"end": 30251,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 29900,
											"end": 30251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29900,
											"end": 30251,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 29900,
											"end": 30251,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30257,
											"end": 30479,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 30257,
											"end": 30479,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30397,
											"end": 30431,
											"name": "PUSH",
											"source": 1,
											"value": "746F6B656E20616D6F756E74206F662075736572206E6F742073756666696369"
										},
										{
											"begin": 30393,
											"end": 30394,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30385,
											"end": 30391,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30381,
											"end": 30395,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30374,
											"end": 30432,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30466,
											"end": 30471,
											"name": "PUSH",
											"source": 1,
											"value": "656E740000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 30461,
											"end": 30463,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 30453,
											"end": 30459,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30449,
											"end": 30464,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30442,
											"end": 30472,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 30257,
											"end": 30479,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30257,
											"end": 30479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30485,
											"end": 30851,
											"name": "tag",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 30485,
											"end": 30851,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30627,
											"end": 30630,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 30648,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 30712,
											"end": 30714,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 30707,
											"end": 30710,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 30648,
											"end": 30715,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 30648,
											"end": 30715,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30648,
											"end": 30715,
											"name": "tag",
											"source": 1,
											"value": "607"
										},
										{
											"begin": 30648,
											"end": 30715,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30641,
											"end": 30715,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30641,
											"end": 30715,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30724,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 30813,
											"end": 30816,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30724,
											"end": 30817,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 30724,
											"end": 30817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30724,
											"end": 30817,
											"name": "tag",
											"source": 1,
											"value": "608"
										},
										{
											"begin": 30724,
											"end": 30817,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 30842,
											"end": 30844,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 30837,
											"end": 30840,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 30833,
											"end": 30845,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 30826,
											"end": 30845,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30826,
											"end": 30845,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30485,
											"end": 30851,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30485,
											"end": 30851,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30485,
											"end": 30851,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30485,
											"end": 30851,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 30857,
											"end": 31276,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 30857,
											"end": 31276,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31023,
											"end": 31027,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31061,
											"end": 31063,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31050,
											"end": 31059,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31046,
											"end": 31064,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31038,
											"end": 31064,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31038,
											"end": 31064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31110,
											"end": 31119,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31104,
											"end": 31108,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31100,
											"end": 31120,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31096,
											"end": 31097,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31085,
											"end": 31094,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31081,
											"end": 31098,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31074,
											"end": 31121,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 31138,
											"end": 31269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 31264,
											"end": 31268,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31138,
											"end": 31269,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "292"
										},
										{
											"begin": 31138,
											"end": 31269,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31138,
											"end": 31269,
											"name": "tag",
											"source": 1,
											"value": "610"
										},
										{
											"begin": 31138,
											"end": 31269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31130,
											"end": 31269,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31130,
											"end": 31269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30857,
											"end": 31276,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 30857,
											"end": 31276,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 30857,
											"end": 31276,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 30857,
											"end": 31276,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31403,
											"end": 31407,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31441,
											"end": 31443,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 31430,
											"end": 31439,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31426,
											"end": 31444,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31418,
											"end": 31444,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31418,
											"end": 31444,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31454,
											"end": 31525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 31522,
											"end": 31523,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31511,
											"end": 31520,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31507,
											"end": 31524,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31498,
											"end": 31504,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 31454,
											"end": 31525,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 31454,
											"end": 31525,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31454,
											"end": 31525,
											"name": "tag",
											"source": 1,
											"value": "612"
										},
										{
											"begin": 31454,
											"end": 31525,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31535,
											"end": 31607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 31603,
											"end": 31605,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31592,
											"end": 31601,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 31588,
											"end": 31606,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 31579,
											"end": 31585,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31535,
											"end": 31607,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 31535,
											"end": 31607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31535,
											"end": 31607,
											"name": "tag",
											"source": 1,
											"value": "613"
										},
										{
											"begin": 31535,
											"end": 31607,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31282,
											"end": 31614,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31620,
											"end": 31736,
											"name": "tag",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 31620,
											"end": 31736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31690,
											"end": 31711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 31705,
											"end": 31710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31690,
											"end": 31711,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "227"
										},
										{
											"begin": 31690,
											"end": 31711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31690,
											"end": 31711,
											"name": "tag",
											"source": 1,
											"value": "615"
										},
										{
											"begin": 31690,
											"end": 31711,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31683,
											"end": 31688,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31680,
											"end": 31712,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 31670,
											"end": 31730,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 31670,
											"end": 31730,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 31726,
											"end": 31727,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31723,
											"end": 31724,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 31716,
											"end": 31728,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 31670,
											"end": 31730,
											"name": "tag",
											"source": 1,
											"value": "616"
										},
										{
											"begin": 31670,
											"end": 31730,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31620,
											"end": 31736,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31620,
											"end": 31736,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31879,
											"name": "tag",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 31742,
											"end": 31879,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31796,
											"end": 31801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 31827,
											"end": 31833,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31821,
											"end": 31834,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 31812,
											"end": 31834,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 31812,
											"end": 31834,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31843,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 31867,
											"end": 31872,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 31843,
											"end": 31873,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "293"
										},
										{
											"begin": 31843,
											"end": 31873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31843,
											"end": 31873,
											"name": "tag",
											"source": 1,
											"value": "618"
										},
										{
											"begin": 31843,
											"end": 31873,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31879,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31879,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31879,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31742,
											"end": 31879,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 31885,
											"end": 32230,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 31885,
											"end": 32230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31952,
											"end": 31958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32001,
											"end": 32003,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 31989,
											"end": 31998,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 31980,
											"end": 31987,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 31976,
											"end": 31999,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 31972,
											"end": 32004,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 31969,
											"end": 32088,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 31969,
											"end": 32088,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 31969,
											"end": 32088,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 32007,
											"end": 32086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 32007,
											"end": 32086,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "222"
										},
										{
											"begin": 32007,
											"end": 32086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32007,
											"end": 32086,
											"name": "tag",
											"source": 1,
											"value": "621"
										},
										{
											"begin": 32007,
											"end": 32086,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 31969,
											"end": 32088,
											"name": "tag",
											"source": 1,
											"value": "620"
										},
										{
											"begin": 31969,
											"end": 32088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32127,
											"end": 32128,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32152,
											"end": 32213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 32205,
											"end": 32212,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 32196,
											"end": 32202,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32185,
											"end": 32194,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 32181,
											"end": 32203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32152,
											"end": 32213,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "294"
										},
										{
											"begin": 32152,
											"end": 32213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32152,
											"end": 32213,
											"name": "tag",
											"source": 1,
											"value": "622"
										},
										{
											"begin": 32152,
											"end": 32213,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32142,
											"end": 32213,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32142,
											"end": 32213,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32098,
											"end": 32223,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31885,
											"end": 32230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 31885,
											"end": 32230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 31885,
											"end": 32230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31885,
											"end": 32230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 31885,
											"end": 32230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32236,
											"end": 32410,
											"name": "tag",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 32236,
											"end": 32410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32376,
											"end": 32402,
											"name": "PUSH",
											"source": 1,
											"value": "746F6B656E20616C6C6F77616E63652073686F72746167650000000000000000"
										},
										{
											"begin": 32372,
											"end": 32373,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32364,
											"end": 32370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32360,
											"end": 32374,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32353,
											"end": 32403,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 32236,
											"end": 32410,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32236,
											"end": 32410,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32416,
											"end": 32782,
											"name": "tag",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 32416,
											"end": 32782,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32558,
											"end": 32561,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32579,
											"end": 32646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 32643,
											"end": 32645,
											"name": "PUSH",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 32638,
											"end": 32641,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 32579,
											"end": 32646,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "278"
										},
										{
											"begin": 32579,
											"end": 32646,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32579,
											"end": 32646,
											"name": "tag",
											"source": 1,
											"value": "625"
										},
										{
											"begin": 32579,
											"end": 32646,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32572,
											"end": 32646,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32572,
											"end": 32646,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32655,
											"end": 32748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 32744,
											"end": 32747,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32655,
											"end": 32748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "295"
										},
										{
											"begin": 32655,
											"end": 32748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32655,
											"end": 32748,
											"name": "tag",
											"source": 1,
											"value": "626"
										},
										{
											"begin": 32655,
											"end": 32748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32773,
											"end": 32775,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32768,
											"end": 32771,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32764,
											"end": 32776,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32757,
											"end": 32776,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32757,
											"end": 32776,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32416,
											"end": 32782,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32416,
											"end": 32782,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32416,
											"end": 32782,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32416,
											"end": 32782,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 32788,
											"end": 33207,
											"name": "tag",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 32788,
											"end": 33207,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 32954,
											"end": 32958,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 32992,
											"end": 32994,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 32981,
											"end": 32990,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 32977,
											"end": 32995,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 32969,
											"end": 32995,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32969,
											"end": 32995,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33041,
											"end": 33050,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33035,
											"end": 33039,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33031,
											"end": 33051,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33027,
											"end": 33028,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33016,
											"end": 33025,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33012,
											"end": 33029,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33005,
											"end": 33052,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33069,
											"end": 33200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 33195,
											"end": 33199,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33069,
											"end": 33200,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "296"
										},
										{
											"begin": 33069,
											"end": 33200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33069,
											"end": 33200,
											"name": "tag",
											"source": 1,
											"value": "628"
										},
										{
											"begin": 33069,
											"end": 33200,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33061,
											"end": 33200,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33061,
											"end": 33200,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32788,
											"end": 33207,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 32788,
											"end": 33207,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 32788,
											"end": 33207,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 32788,
											"end": 33207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33498,
											"end": 33502,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33536,
											"end": 33539,
											"name": "PUSH",
											"source": 1,
											"value": "A0"
										},
										{
											"begin": 33525,
											"end": 33534,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 33521,
											"end": 33540,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33513,
											"end": 33540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33513,
											"end": 33540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33550,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 33618,
											"end": 33619,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 33607,
											"end": 33616,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33603,
											"end": 33620,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33594,
											"end": 33600,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 33550,
											"end": 33621,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 33550,
											"end": 33621,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33550,
											"end": 33621,
											"name": "tag",
											"source": 1,
											"value": "630"
										},
										{
											"begin": 33550,
											"end": 33621,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 33699,
											"end": 33701,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 33688,
											"end": 33697,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33684,
											"end": 33702,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33675,
											"end": 33681,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33703,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 33631,
											"end": 33703,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33631,
											"end": 33703,
											"name": "tag",
											"source": 1,
											"value": "631"
										},
										{
											"begin": 33631,
											"end": 33703,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33713,
											"end": 33793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 33789,
											"end": 33791,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 33778,
											"end": 33787,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33774,
											"end": 33792,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33765,
											"end": 33771,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 33713,
											"end": 33793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "289"
										},
										{
											"begin": 33713,
											"end": 33793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33713,
											"end": 33793,
											"name": "tag",
											"source": 1,
											"value": "632"
										},
										{
											"begin": 33713,
											"end": 33793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33803,
											"end": 33875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 33871,
											"end": 33873,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 33860,
											"end": 33869,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33856,
											"end": 33874,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33847,
											"end": 33853,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 33803,
											"end": 33875,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 33803,
											"end": 33875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33803,
											"end": 33875,
											"name": "tag",
											"source": 1,
											"value": "633"
										},
										{
											"begin": 33803,
											"end": 33875,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33923,
											"end": 33932,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33917,
											"end": 33921,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33913,
											"end": 33933,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 33907,
											"end": 33910,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 33896,
											"end": 33905,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 33892,
											"end": 33911,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 33885,
											"end": 33934,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 33951,
											"end": 34081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 34076,
											"end": 34080,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 33951,
											"end": 34081,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "277"
										},
										{
											"begin": 33951,
											"end": 34081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 33951,
											"end": 34081,
											"name": "tag",
											"source": 1,
											"value": "634"
										},
										{
											"begin": 33951,
											"end": 34081,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 33943,
											"end": 34081,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 33943,
											"end": 34081,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 33213,
											"end": 34088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "tag",
											"source": 1,
											"value": "219"
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34215,
											"end": 34219,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34253,
											"end": 34255,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 34242,
											"end": 34251,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 34238,
											"end": 34256,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34230,
											"end": 34256,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 34230,
											"end": 34256,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34266,
											"end": 34337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 34334,
											"end": 34335,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 34323,
											"end": 34332,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34319,
											"end": 34336,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34310,
											"end": 34316,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 34266,
											"end": 34337,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 34266,
											"end": 34337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34266,
											"end": 34337,
											"name": "tag",
											"source": 1,
											"value": "636"
										},
										{
											"begin": 34266,
											"end": 34337,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34347,
											"end": 34419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 34415,
											"end": 34417,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 34404,
											"end": 34413,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 34400,
											"end": 34418,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 34391,
											"end": 34397,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 34347,
											"end": 34419,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "255"
										},
										{
											"begin": 34347,
											"end": 34419,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 34347,
											"end": 34419,
											"name": "tag",
											"source": 1,
											"value": "637"
										},
										{
											"begin": 34347,
											"end": 34419,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 34094,
											"end": 34426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"contracts/FundRegistry_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"createFund(address,address,uint256)": "17444626",
							"donate(address,uint96,uint256)": "88b53ced",
							"fundCount()": "3f936ff5",
							"fundDonations(uint96,address,uint256)": "7a3819cb",
							"fundUsers(uint96,uint256)": "2f14670c",
							"funds(uint96)": "1f71f89f",
							"getAllFunds()": "1c69b464",
							"getFundPayee(uint96)": "6c173d38",
							"getFunds(uint96,uint96)": "380eaaf9",
							"mintDTiket(uint96,uint96)": "11c9fb83",
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7",
							"updateFund(uint96,address,address,uint256)": "dd7d7929"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC1155\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"FundId\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"donationAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"FundCompletion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEnd\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"FundCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"isEnd\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"name\":\"FundUpdated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"createFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_fundId\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fundCount\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundDonations\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"fundId\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fundUsers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"\",\"type\":\"uint96\"}],\"name\":\"funds\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"createdAt\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"updatedAt\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEnd\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllFunds\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"createdAt\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"updatedAt\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEnd\",\"type\":\"bool\"}],\"internalType\":\"struct FundRegistry.Fund[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_id\",\"type\":\"uint96\"}],\"name\":\"getFundPayee\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_startId\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_endId\",\"type\":\"uint96\"}],\"name\":\"getFunds\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint48\",\"name\":\"createdAt\",\"type\":\"uint48\"},{\"internalType\":\"uint48\",\"name\":\"updatedAt\",\"type\":\"uint48\"},{\"internalType\":\"address\",\"name\":\"payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"donationAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isEnd\",\"type\":\"bool\"}],\"internalType\":\"struct FundRegistry.Fund[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_fundId\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"totalTicket\",\"type\":\"uint96\"}],\"name\":\"mintDTiket\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_id\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_payee\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"}],\"name\":\"updateFund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"events\":{\"FundCompletion(uint96,uint256,uint256)\":{\"notice\":\"Emitted when a donation has been made\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"FundRegistry\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3424,
								"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
								"label": "token",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(ERC1155)2811"
							},
							{
								"astId": 3426,
								"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
								"label": "fundCount",
								"offset": 20,
								"slot": "0",
								"type": "t_uint96"
							},
							{
								"astId": 3466,
								"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
								"label": "funds",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_uint96,t_struct(Fund)3454_storage)"
							},
							{
								"astId": 3471,
								"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
								"label": "fundUsers",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint96,t_array(t_address)dyn_storage)"
							},
							{
								"astId": 3479,
								"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
								"label": "fundDonations",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_uint96,t_mapping(t_address,t_array(t_struct(Donation)3461_storage)dyn_storage))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Donation)3461_storage)dyn_storage": {
								"base": "t_struct(Donation)3461_storage",
								"encoding": "dynamic_array",
								"label": "struct FundRegistry.Donation[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(ERC1155)2811": {
								"encoding": "inplace",
								"label": "contract ERC1155",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_array(t_struct(Donation)3461_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct FundRegistry.Donation[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Donation)3461_storage)dyn_storage"
							},
							"t_mapping(t_uint96,t_array(t_address)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_uint96",
								"label": "mapping(uint96 => address[])",
								"numberOfBytes": "32",
								"value": "t_array(t_address)dyn_storage"
							},
							"t_mapping(t_uint96,t_mapping(t_address,t_array(t_struct(Donation)3461_storage)dyn_storage))": {
								"encoding": "mapping",
								"key": "t_uint96",
								"label": "mapping(uint96 => mapping(address => struct FundRegistry.Donation[]))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_array(t_struct(Donation)3461_storage)dyn_storage)"
							},
							"t_mapping(t_uint96,t_struct(Fund)3454_storage)": {
								"encoding": "mapping",
								"key": "t_uint96",
								"label": "mapping(uint96 => struct FundRegistry.Fund)",
								"numberOfBytes": "32",
								"value": "t_struct(Fund)3454_storage"
							},
							"t_struct(Donation)3461_storage": {
								"encoding": "inplace",
								"label": "struct FundRegistry.Donation",
								"members": [
									{
										"astId": 3456,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "user",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3458,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "fundId",
										"offset": 20,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 3460,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "amount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Fund)3454_storage": {
								"encoding": "inplace",
								"label": "struct FundRegistry.Fund",
								"members": [
									{
										"astId": 3439,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint96"
									},
									{
										"astId": 3441,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "owner",
										"offset": 12,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 3443,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "createdAt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint48"
									},
									{
										"astId": 3445,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "updatedAt",
										"offset": 6,
										"slot": "1",
										"type": "t_uint48"
									},
									{
										"astId": 3447,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "payee",
										"offset": 12,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3449,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "threshold",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 3451,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "donationAmount",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 3453,
										"contract": "contracts/FundRegistry_flattened.sol:FundRegistry",
										"label": "isEnd",
										"offset": 0,
										"slot": "4",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint48": {
								"encoding": "inplace",
								"label": "uint48",
								"numberOfBytes": "6"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"events": {
							"FundCompletion(uint96,uint256,uint256)": {
								"notice": "Emitted when a donation has been made"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC1155\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC1155Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155MetadataURI": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "uri",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"uri(uint256)": {
								"details": "Returns the URI for token type `id`. If the `\\{id\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"uri(uint256)": "0e89341c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"uri\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the optional ERC1155MetadataExtension interface, as defined in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP].\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the value of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferBatch} event. Requirements: - `ids` and `values` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers a `value` amount of tokens of type `id` from `from` to `to`. WARNING: This function can potentially allow a reentrancy attack when transferring tokens to an untrusted contract, when invoking {onERC1155Received} on the receiver. Ensure to follow the checks-effects-interactions pattern and consider employing reentrancy guards when interacting with untrusted contracts. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `value` amount. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"uri(uint256)\":{\"details\":\"Returns the URI for token type `id`. If the `\\\\{id\\\\}` substring is present in the URI, it must be replaced by clients with the actual token type ID.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC1155MetadataURI\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC1155Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155BatchReceived",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC1155Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.",
						"kind": "dev",
						"methods": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": {
								"details": "Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` (i.e. 0xbc197c81, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"ids": "An array containing ids of each token being transferred (order and length must match values array)",
									"operator": "The address which initiated the batch transfer (i.e. msg.sender)",
									"values": "An array containing amounts of each token being transferred (order and length must match ids array)"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
								}
							},
							"onERC1155Received(address,address,uint256,uint256,bytes)": {
								"details": "Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` (i.e. 0xf23a6e61, or its own function selector).",
								"params": {
									"data": "Additional data with no specified format",
									"from": "The address which previously owned the token",
									"id": "The ID of the token being transferred",
									"operator": "The address which initiated the transfer (i.e. msg.sender)",
									"value": "The amount of tokens being transferred"
								},
								"returns": {
									"_0": "`bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
								}
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
							"onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface that must be implemented by smart contracts in order to receive ERC-1155 token transfers.\",\"kind\":\"dev\",\"methods\":{\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\":{\"details\":\"Handles the receipt of a multiple ERC1155 token types. This function is called at the end of a `safeBatchTransferFrom` after the balances have been updated. NOTE: To accept the transfer(s), this must return `bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` (i.e. 0xbc197c81, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"ids\":\"An array containing ids of each token being transferred (order and length must match values array)\",\"operator\":\"The address which initiated the batch transfer (i.e. msg.sender)\",\"values\":\"An array containing amounts of each token being transferred (order and length must match ids array)\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\\\"))` if transfer is allowed\"}},\"onERC1155Received(address,address,uint256,uint256,bytes)\":{\"details\":\"Handles the receipt of a single ERC1155 token type. This function is called at the end of a `safeTransferFrom` after the balance has been updated. NOTE: To accept the transfer, this must return `bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` (i.e. 0xf23a6e61, or its own function selector).\",\"params\":{\"data\":\"Additional data with no specified format\",\"from\":\"The address which previously owned the token\",\"id\":\"The ID of the token being transferred\",\"operator\":\"The address which initiated the transfer (i.e. msg.sender)\",\"value\":\"The amount of tokens being transferred\"},\"returns\":{\"_0\":\"`bytes4(keccak256(\\\"onERC1155Received(address,address,uint256,uint256,bytes)\\\"))` if transfer is allowed\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC1155Receiver\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC165\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC20\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC20Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC20Metadata\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"IERC721Errors\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FundRegistry_flattened.sol\":262:15176  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundRegistry_flattened.sol\":262:15176  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203095881a2f30d9f5f873ecea3e8a76c8c90ec01b393ff47fc819db874460727a64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203095881a2f30d9f5f873ecea3e8a76c8c90ec01b393ff47fc819db874460727a64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP6 DUP9 BYTE 0x2F ADDRESS 0xD9 CREATE2 0xF8 PUSH20 0xECEA3E8A76C8C90EC01B393FF47FC819DB874460 PUSH19 0x7A64736F6C6343000814003300000000000000 ",
							"sourceMap": "262:14914:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212203095881a2f30d9f5f873ecea3e8a76c8c90ec01b393ff47fc819db874460727a64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS SWAP6 DUP9 BYTE 0x2F ADDRESS 0xD9 CREATE2 0xF8 PUSH20 0xECEA3E8A76C8C90EC01B393FF47FC819DB874460 PUSH19 0x7A64736F6C6343000814003300000000000000 ",
							"sourceMap": "262:14914:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 262,
									"end": 15176,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203095881a2f30d9f5f873ecea3e8a76c8c90ec01b393ff47fc819db874460727a64736f6c63430008140033",
									".code": [
										{
											"begin": 262,
											"end": 15176,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 262,
											"end": 15176,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/FundRegistry_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"Math\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/FundRegistry_flattened.sol\":16448:19133  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/FundRegistry_flattened.sol\":16448:19133  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220e83a891cd394e6064e232dff1996cad0157425bc82f5ab90b82d450155a6869e64736f6c63430008140033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e83a891cd394e6064e232dff1996cad0157425bc82f5ab90b82d450155a6869e64736f6c63430008140033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 GASPRICE DUP10 SHR 0xD3 SWAP5 0xE6 MOD 0x4E 0x23 0x2D SELFDESTRUCT NOT SWAP7 0xCA 0xD0 ISZERO PUSH21 0x25BC82F5AB90B82D450155A6869E64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "16448:2685:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220e83a891cd394e6064e232dff1996cad0157425bc82f5ab90b82d450155a6869e64736f6c63430008140033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE8 GASPRICE DUP10 SHR 0xD3 SWAP5 0xE6 MOD 0x4E 0x23 0x2D SELFDESTRUCT NOT SWAP7 0xCA 0xD0 ISZERO PUSH21 0x25BC82F5AB90B82D450155A6869E64736F6C634300 ADDMOD EQ STOP CALLER ",
							"sourceMap": "16448:2685:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 16448,
									"end": 19133,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e83a891cd394e6064e232dff1996cad0157425bc82f5ab90b82d450155a6869e64736f6c63430008140033",
									".code": [
										{
											"begin": 16448,
											"end": 19133,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16448,
											"end": 19133,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"contracts/FundRegistry_flattened.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundRegistry_flattened.sol\":\"StorageSlot\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FundRegistry_flattened.sol\":{\"keccak256\":\"0x2a27c49d75074b3c8e1b4fb21fc85ebf8ad4d2734f0e66f709abe07f4e79d21f\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8a94b4659847532b9f5d70dc931bc99f654e381deb716606a8bf60eed71750c9\",\"dweb:/ipfs/QmVDThUaX6bELSu2LgMA6C7akBBw4XniM4Qpx7oh9oF96Y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"contracts/FundRegistry_flattened.sol": {
				"ast": {
					"absolutePath": "contracts/FundRegistry_flattened.sol",
					"exportedSymbols": {
						"Arrays": [
							1340
						],
						"Context": [
							1776
						],
						"ERC1155": [
							2811
						],
						"ERC1155Holder": [
							1486
						],
						"ERC165": [
							1372
						],
						"ERC20": [
							3417
						],
						"FundRegistry": [
							4029
						],
						"IERC1155": [
							1606
						],
						"IERC1155Errors": [
							1755
						],
						"IERC1155MetadataURI": [
							1619
						],
						"IERC1155Receiver": [
							1411
						],
						"IERC165": [
							1351
						],
						"IERC20": [
							2888
						],
						"IERC20Errors": [
							1660
						],
						"IERC20Metadata": [
							2911
						],
						"IERC721Errors": [
							1708
						],
						"Math": [
							1053
						],
						"StorageSlot": [
							1162
						]
					},
					"id": 4030,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "162:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "188:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1053,
							"linearizedBaseContracts": [
								1053
							],
							"name": "Math",
							"nameLocation": "270:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "281:50:0",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 5,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "342:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "362:2:0"
									},
									"src": "336:29:0"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 10,
									"members": [
										{
											"id": 6,
											"name": "Floor",
											"nameLocation": "395:5:0",
											"nodeType": "EnumValue",
											"src": "395:5:0"
										},
										{
											"id": 7,
											"name": "Ceil",
											"nameLocation": "438:4:0",
											"nodeType": "EnumValue",
											"src": "438:4:0"
										},
										{
											"id": 8,
											"name": "Trunc",
											"nameLocation": "480:5:0",
											"nodeType": "EnumValue",
											"src": "480:5:0"
										},
										{
											"id": 9,
											"name": "Expand",
											"nameLocation": "510:6:0",
											"nodeType": "EnumValue",
											"src": "510:6:0"
										}
									],
									"name": "Rounding",
									"nameLocation": "376:8:0",
									"nodeType": "EnumDefinition",
									"src": "371:169:0"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "720:140:0",
										"statements": [
											{
												"id": 40,
												"nodeType": "UncheckedBlock",
												"src": "730:124:0",
												"statements": [
													{
														"assignments": [
															23
														],
														"declarations": [
															{
																"constant": false,
																"id": 23,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "762:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 40,
																"src": "754:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 22,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "754:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 27,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 26,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 24,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "766:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 25,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 15,
																"src": "770:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "766:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "754:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 30,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 28,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "789:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 29,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 13,
																"src": "793:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "789:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 35,
														"nodeType": "IfStatement",
														"src": "785:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "804:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 32,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "811:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 33,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "803:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 21,
															"id": 34,
															"nodeType": "Return",
															"src": "796:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 36,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "835:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 37,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "841:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 38,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "834:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 21,
														"id": 39,
														"nodeType": "Return",
														"src": "827:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 11,
										"nodeType": "StructuredDocumentation",
										"src": "546:93:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 42,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "653:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "668:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "660:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 12,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 15,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "679:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "671:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "671:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "659:22:0"
									},
									"returnParameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "705:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 17,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "705:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 20,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 42,
												"src": "711:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 19,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "711:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "704:15:0"
									},
									"scope": 1053,
									"src": "644:216:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "1043:113:0",
										"statements": [
											{
												"id": 68,
												"nodeType": "UncheckedBlock",
												"src": "1053:97:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 47,
																"src": "1081:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 55,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 45,
																"src": "1085:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1081:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 61,
														"nodeType": "IfStatement",
														"src": "1077:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 57,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1096:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 58,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1103:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 59,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1095:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 53,
															"id": 60,
															"nodeType": "Return",
															"src": "1088:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1127:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 65,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 63,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 45,
																		"src": "1133:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 64,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 47,
																		"src": "1137:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1133:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 66,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1126:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 53,
														"id": 67,
														"nodeType": "Return",
														"src": "1119:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "866:96:0",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 70,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "976:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "991:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "983:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1002:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "994:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 46,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "982:22:0"
									},
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1028:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 49,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1028:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "1034:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1034:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1027:15:0"
									},
									"scope": 1053,
									"src": "967:189:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 111,
										"nodeType": "Block",
										"src": "1342:417:0",
										"statements": [
											{
												"id": 110,
												"nodeType": "UncheckedBlock",
												"src": "1352:401:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 84,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 82,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1610:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 83,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1615:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1610:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 89,
														"nodeType": "IfStatement",
														"src": "1606:28:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 85,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1626:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 86,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1632:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 87,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1625:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 81,
															"id": 88,
															"nodeType": "Return",
															"src": "1618:16:0"
														}
													},
													{
														"assignments": [
															91
														],
														"declarations": [
															{
																"constant": false,
																"id": 91,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1656:1:0",
																"nodeType": "VariableDeclaration",
																"scope": 110,
																"src": "1648:9:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 90,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1648:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 95,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 92,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 73,
																"src": "1660:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 93,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1664:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1660:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1648:17:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 100,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 98,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 96,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1683:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 97,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1683:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 99,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 75,
																"src": "1692:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1683:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 105,
														"nodeType": "IfStatement",
														"src": "1679:33:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 101,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1703:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1710:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 103,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1702:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 81,
															"id": 104,
															"nodeType": "Return",
															"src": "1695:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 106,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1734:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 107,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 91,
																	"src": "1740:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 108,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1733:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 81,
														"id": 109,
														"nodeType": "Return",
														"src": "1726:16:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 71,
										"nodeType": "StructuredDocumentation",
										"src": "1162:99:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 112,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1275:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1290:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1282:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 72,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1301:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1293:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1293:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1281:22:0"
									},
									"returnParameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1327:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1327:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 112,
												"src": "1333:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1333:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1326:15:0"
									},
									"scope": 1053,
									"src": "1266:493:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "1946:114:0",
										"statements": [
											{
												"id": 138,
												"nodeType": "UncheckedBlock",
												"src": "1956:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 126,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 124,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "1984:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1984:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 131,
														"nodeType": "IfStatement",
														"src": "1980:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 127,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2000:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2007:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 129,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1999:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 123,
															"id": 130,
															"nodeType": "Return",
															"src": "1992:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 132,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2031:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 133,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 115,
																		"src": "2037:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 134,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 117,
																		"src": "2041:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2037:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 136,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2030:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 123,
														"id": 137,
														"nodeType": "Return",
														"src": "2023:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 113,
										"nodeType": "StructuredDocumentation",
										"src": "1765:100:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1879:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 115,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1894:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1886:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 114,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1905:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1897:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 116,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1885:22:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 120,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1931:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 119,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1931:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 140,
												"src": "1937:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1937:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1930:15:0"
									},
									"scope": 1053,
									"src": "1870:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 167,
										"nodeType": "Block",
										"src": "2257:114:0",
										"statements": [
											{
												"id": 166,
												"nodeType": "UncheckedBlock",
												"src": "2267:98:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 154,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 152,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2295:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 153,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2300:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2295:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 159,
														"nodeType": "IfStatement",
														"src": "2291:29:0",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 155,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2311:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 156,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2318:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 157,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2310:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 151,
															"id": 158,
															"nodeType": "Return",
															"src": "2303:17:0"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 160,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2342:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 161,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 143,
																		"src": "2348:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 162,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 145,
																		"src": "2352:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2348:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 164,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2341:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 151,
														"id": 165,
														"nodeType": "Return",
														"src": "2334:20:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 141,
										"nodeType": "StructuredDocumentation",
										"src": "2066:110:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2190:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 143,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2205:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2197:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 142,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2197:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2216:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2208:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 144,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2208:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2196:22:0"
									},
									"returnParameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 148,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2242:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2242:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "2248:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2248:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2241:15:0"
									},
									"scope": 1053,
									"src": "2181:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "2508:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 178,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "2525:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 179,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 173,
															"src": "2529:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2525:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 182,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 173,
														"src": "2537:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2525:13:0",
													"trueExpression": {
														"id": 181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "2533:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 177,
												"id": 184,
												"nodeType": "Return",
												"src": "2518:20:0"
											}
										]
									},
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "2377:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2450:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2462:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2454:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 170,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2473:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2465:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:22:0"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "2499:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2499:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2498:9:0"
									},
									"scope": 1053,
									"src": "2441:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 203,
										"nodeType": "Block",
										"src": "2683:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 198,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 196,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "2700:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 197,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "2704:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2700:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 200,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 191,
														"src": "2712:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2700:13:0",
													"trueExpression": {
														"id": 199,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2708:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 195,
												"id": 202,
												"nodeType": "Return",
												"src": "2693:20:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "2551:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 204,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2625:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2637:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2629:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2648:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2640:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 190,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2640:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:22:0"
									},
									"returnParameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 204,
												"src": "2674:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2674:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2673:9:0"
									},
									"scope": 1053,
									"src": "2616:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2904:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 214,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 207,
																	"src": "2959:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 215,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 209,
																	"src": "2963:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2959:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 217,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2958:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 223,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 218,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "2969:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 219,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 209,
																		"src": "2973:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2969:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 221,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2968:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2978:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2968:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2958:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 213,
												"id": 225,
												"nodeType": "Return",
												"src": "2951:28:0"
											}
										]
									},
									"documentation": {
										"id": 205,
										"nodeType": "StructuredDocumentation",
										"src": "2726:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2842:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 210,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2858:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2850:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2869:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2861:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 208,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2861:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2849:22:0"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2895:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2895:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:9:0"
									},
									"scope": 1053,
									"src": "2833:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 260,
										"nodeType": "Block",
										"src": "3278:260:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 237,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "3292:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3297:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3292:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 245,
												"nodeType": "IfStatement",
												"src": "3288:127:0",
												"trueBody": {
													"id": 244,
													"nodeType": "Block",
													"src": "3300:115:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 240,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "3399:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 241,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "3403:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3399:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 236,
															"id": 243,
															"nodeType": "Return",
															"src": "3392:12:0"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 248,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 246,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3503:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3508:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3503:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 255,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 252,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 250,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 230,
																			"src": "3517:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 251,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3521:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3517:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 253,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3516:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 254,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "3526:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3516:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3530:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3516:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3503:28:0",
													"trueExpression": {
														"hexValue": "30",
														"id": 249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3512:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 236,
												"id": 259,
												"nodeType": "Return",
												"src": "3496:35:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2992:210:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 261,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3216:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3232:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3224:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3243:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3235:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3235:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3223:22:0"
									},
									"returnParameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 261,
												"src": "3269:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 234,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3269:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3268:9:0"
									},
									"scope": 1053,
									"src": "3207:331:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 386,
										"nodeType": "Block",
										"src": "3960:4018:0",
										"statements": [
											{
												"id": 385,
												"nodeType": "UncheckedBlock",
												"src": "3970:4002:0",
												"statements": [
													{
														"assignments": [
															274
														],
														"declarations": [
															{
																"constant": false,
																"id": 274,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4299:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4291:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 273,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4291:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 278,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 277,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 275,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "4307:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 276,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 266,
																"src": "4311:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4307:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4291:21:0"
													},
													{
														"assignments": [
															280
														],
														"declarations": [
															{
																"constant": false,
																"id": 280,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4379:5:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "4371:13:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 279,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4371:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 281,
														"nodeType": "VariableDeclarationStatement",
														"src": "4371:13:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "4451:122:0",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "4469:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "4486:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "4489:1:0"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "4496:1:0",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nodeType": "YulIdentifier",
																					"src": "4492:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4492:6:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "4479:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4479:20:0"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nodeType": "YulTypedName",
																			"src": "4473:2:0",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "4516:43:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4533:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4537:5:0"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nodeType": "YulIdentifier",
																					"src": "4529:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4529:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nodeType": "YulIdentifier",
																						"src": "4548:2:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "4552:5:0"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nodeType": "YulIdentifier",
																					"src": "4545:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "4545:13:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4525:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4525:34:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "4516:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "4537:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "4552:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "4516:5:0",
																"valueSize": 1
															},
															{
																"declaration": 264,
																"isOffset": false,
																"isSlot": false,
																"src": "4486:1:0",
																"valueSize": 1
															},
															{
																"declaration": 266,
																"isOffset": false,
																"isSlot": false,
																"src": "4489:1:0",
																"valueSize": 1
															}
														],
														"id": 282,
														"nodeType": "InlineAssembly",
														"src": "4442:131:0"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 285,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 283,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "4654:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 284,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4663:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4654:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 291,
														"nodeType": "IfStatement",
														"src": "4650:368:0",
														"trueBody": {
															"id": 290,
															"nodeType": "Block",
															"src": "4666:352:0",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 288,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 286,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 274,
																			"src": "4984:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 287,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "4992:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4984:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 272,
																	"id": 289,
																	"nodeType": "Return",
																	"src": "4977:26:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 292,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "5124:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 293,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 280,
																"src": "5139:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5124:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 299,
														"nodeType": "IfStatement",
														"src": "5120:88:0",
														"trueBody": {
															"id": 298,
															"nodeType": "Block",
															"src": "5146:62:0",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 295,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 5,
																			"src": "5171:20:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 296,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5171:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 297,
																	"nodeType": "RevertStatement",
																	"src": "5164:29:0"
																}
															]
														}
													},
													{
														"assignments": [
															301
														],
														"declarations": [
															{
																"constant": false,
																"id": 301,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5471:9:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "5463:17:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 300,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5463:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 302,
														"nodeType": "VariableDeclarationStatement",
														"src": "5463:17:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "5503:291:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "5572:38:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nodeType": "YulIdentifier",
																				"src": "5592:1:0"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5595:1:0"
																			},
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "5598:11:0"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nodeType": "YulIdentifier",
																			"src": "5585:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5585:25:0"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nodeType": "YulIdentifier",
																			"src": "5572:9:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5692:41:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nodeType": "YulIdentifier",
																				"src": "5705:5:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nodeType": "YulIdentifier",
																						"src": "5715:9:0"
																					},
																					{
																						"name": "prod0",
																						"nodeType": "YulIdentifier",
																						"src": "5726:5:0"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nodeType": "YulIdentifier",
																					"src": "5712:2:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "5712:20:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5701:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5701:32:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nodeType": "YulIdentifier",
																			"src": "5692:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "5750:30:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "5763:5:0"
																			},
																			{
																				"name": "remainder",
																				"nodeType": "YulIdentifier",
																				"src": "5770:9:0"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5759:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5759:21:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "5750:5:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "5598:11:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5726:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5750:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "5763:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "5692:5:0",
																"valueSize": 1
															},
															{
																"declaration": 280,
																"isOffset": false,
																"isSlot": false,
																"src": "5705:5:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5572:9:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5715:9:0",
																"valueSize": 1
															},
															{
																"declaration": 301,
																"isOffset": false,
																"isSlot": false,
																"src": "5770:9:0",
																"valueSize": 1
															},
															{
																"declaration": 264,
																"isOffset": false,
																"isSlot": false,
																"src": "5592:1:0",
																"valueSize": 1
															},
															{
																"declaration": 266,
																"isOffset": false,
																"isSlot": false,
																"src": "5595:1:0",
																"valueSize": 1
															}
														],
														"id": 303,
														"nodeType": "InlineAssembly",
														"src": "5494:300:0"
													},
													{
														"assignments": [
															305
														],
														"declarations": [
															{
																"constant": false,
																"id": 305,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "6006:4:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "5998:12:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 304,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5998:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 312,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 306,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 268,
																"src": "6013:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6028:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 308,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "6032:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6028:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 310,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6027:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6013:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5998:46:0"
													},
													{
														"AST": {
															"nodeType": "YulBlock",
															"src": "6067:362:0",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6132:37:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nodeType": "YulIdentifier",
																				"src": "6151:11:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6164:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6147:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6147:22:0"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nodeType": "YulIdentifier",
																			"src": "6132:11:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6236:25:0",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nodeType": "YulIdentifier",
																				"src": "6249:5:0"
																			},
																			{
																				"name": "twos",
																				"nodeType": "YulIdentifier",
																				"src": "6256:4:0"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nodeType": "YulIdentifier",
																			"src": "6245:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6245:16:0"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nodeType": "YulIdentifier",
																			"src": "6236:5:0"
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "6376:39:0",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "6396:1:0",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nodeType": "YulIdentifier",
																								"src": "6399:4:0"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "6392:3:0"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6392:12:0"
																					},
																					{
																						"name": "twos",
																						"nodeType": "YulIdentifier",
																						"src": "6406:4:0"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "6388:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6388:23:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6413:1:0",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6384:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6384:31:0"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nodeType": "YulIdentifier",
																			"src": "6376:4:0"
																		}
																	]
																}
															]
														},
														"evmVersion": "shanghai",
														"externalReferences": [
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "6132:11:0",
																"valueSize": 1
															},
															{
																"declaration": 268,
																"isOffset": false,
																"isSlot": false,
																"src": "6151:11:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "6236:5:0",
																"valueSize": 1
															},
															{
																"declaration": 274,
																"isOffset": false,
																"isSlot": false,
																"src": "6249:5:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6164:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6256:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6376:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6399:4:0",
																"valueSize": 1
															},
															{
																"declaration": 305,
																"isOffset": false,
																"isSlot": false,
																"src": "6406:4:0",
																"valueSize": 1
															}
														],
														"id": 313,
														"nodeType": "InlineAssembly",
														"src": "6058:371:0"
													},
													{
														"expression": {
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 314,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 274,
																"src": "6495:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 315,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 280,
																	"src": "6504:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 316,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "6512:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6504:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6495:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 319,
														"nodeType": "ExpressionStatement",
														"src": "6495:21:0"
													},
													{
														"assignments": [
															321
														],
														"declarations": [
															{
																"constant": false,
																"id": 321,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6842:7:0",
																"nodeType": "VariableDeclaration",
																"scope": 385,
																"src": "6834:15:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6834:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 328,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 324,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 322,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6853:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 323,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 268,
																			"src": "6857:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6853:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 325,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6852:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 326,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6872:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6852:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6834:39:0"
													},
													{
														"expression": {
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 329,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7090:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 330,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7101:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 333,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 331,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7105:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 332,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7119:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7105:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7101:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7090:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 336,
														"nodeType": "ExpressionStatement",
														"src": "7090:36:0"
													},
													{
														"expression": {
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 337,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7159:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7170:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 341,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 339,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7174:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 340,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7188:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7174:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7170:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7159:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 344,
														"nodeType": "ExpressionStatement",
														"src": "7159:36:0"
													},
													{
														"expression": {
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 345,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7229:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 350,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 346,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7240:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 349,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 347,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7244:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 348,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7258:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7244:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7240:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7229:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 352,
														"nodeType": "ExpressionStatement",
														"src": "7229:36:0"
													},
													{
														"expression": {
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 353,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7299:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 354,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7310:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 357,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 355,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7314:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 356,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7328:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7314:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7310:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7299:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 360,
														"nodeType": "ExpressionStatement",
														"src": "7299:36:0"
													},
													{
														"expression": {
															"id": 367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 361,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7369:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7380:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 365,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 363,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7384:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 364,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7398:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7384:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7380:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7369:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 368,
														"nodeType": "ExpressionStatement",
														"src": "7369:36:0"
													},
													{
														"expression": {
															"id": 375,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 369,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 321,
																"src": "7440:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 374,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7451:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 371,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 268,
																		"src": "7455:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 372,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 321,
																		"src": "7469:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7455:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7451:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7440:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 376,
														"nodeType": "ExpressionStatement",
														"src": "7440:36:0"
													},
													{
														"expression": {
															"id": 381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 377,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7910:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 378,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 274,
																	"src": "7919:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 379,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 321,
																	"src": "7927:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7919:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7910:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 382,
														"nodeType": "ExpressionStatement",
														"src": "7910:24:0"
													},
													{
														"expression": {
															"id": 383,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "7955:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 272,
														"id": 384,
														"nodeType": "Return",
														"src": "7948:13:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "3544:313:0",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 387,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3871:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 269,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3886:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3878:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3897:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3889:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3889:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 268,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3908:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3900:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 267,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3900:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3877:43:0"
									},
									"returnParameters": {
										"id": 272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3952:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3944:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 270,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3944:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3943:16:0"
									},
									"scope": 1053,
									"src": "3862:4116:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 429,
										"nodeType": "Block",
										"src": "8220:192:0",
										"statements": [
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8238:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 429,
														"src": "8230:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 402,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8230:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 409,
												"initialValue": {
													"arguments": [
														{
															"id": 405,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 390,
															"src": "8254:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 406,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "8257:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 407,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 394,
															"src": "8260:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 404,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															387,
															430
														],
														"referencedDeclaration": 387,
														"src": "8247:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8247:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8230:42:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 411,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 397,
																"src": "8303:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$10",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$10",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 410,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1052,
															"src": "8286:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8286:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 414,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "8323:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 415,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 392,
																	"src": "8326:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 416,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 394,
																	"src": "8329:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 413,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8316:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 417,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8316:25:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8344:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8316:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8286:59:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 426,
												"nodeType": "IfStatement",
												"src": "8282:101:0",
												"trueBody": {
													"id": 425,
													"nodeType": "Block",
													"src": "8347:36:0",
													"statements": [
														{
															"expression": {
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 421,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 403,
																	"src": "8361:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 422,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8371:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8361:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 424,
															"nodeType": "ExpressionStatement",
															"src": "8361:11:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 427,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 403,
													"src": "8399:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 401,
												"id": 428,
												"nodeType": "Return",
												"src": "8392:13:0"
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "7984:121:0",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 430,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8119:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8134:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8126:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8126:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8145:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8137:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8137:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 394,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8156:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8148:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 393,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8148:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8178:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8169:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 396,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 395,
														"name": "Rounding",
														"nameLocations": [
															"8169:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "8169:8:0"
													},
													"referencedDeclaration": 10,
													"src": "8169:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8125:62:0"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 400,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "8211:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 399,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8210:9:0"
									},
									"scope": 1053,
									"src": "8110:302:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 541,
										"nodeType": "Block",
										"src": "8703:1585:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 438,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "8717:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 439,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8722:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8717:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 444,
												"nodeType": "IfStatement",
												"src": "8713:45:0",
												"trueBody": {
													"id": 443,
													"nodeType": "Block",
													"src": "8725:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8746:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 437,
															"id": 442,
															"nodeType": "Return",
															"src": "8739:8:0"
														}
													]
												}
											},
											{
												"assignments": [
													446
												],
												"declarations": [
													{
														"constant": false,
														"id": 446,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9445:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 541,
														"src": "9437:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 455,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9454:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 452,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 449,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 433,
																			"src": "9465:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 448,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			709,
																			744
																		],
																		"referencedDeclaration": 709,
																		"src": "9460:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9460:7:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 451,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9471:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9460:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 453,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9459:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9454:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9437:36:0"
											},
											{
												"id": 540,
												"nodeType": "UncheckedBlock",
												"src": "9874:408:0",
												"statements": [
													{
														"expression": {
															"id": 465,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 456,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9898:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 461,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 457,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9908:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 460,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 458,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9917:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 459,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9921:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9917:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9908:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 462,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9907:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 463,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9932:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9907:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9898:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 466,
														"nodeType": "ExpressionStatement",
														"src": "9898:35:0"
													},
													{
														"expression": {
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 467,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9947:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 468,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "9957:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 471,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 469,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "9966:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 470,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "9970:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9966:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9957:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 473,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9956:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9981:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9956:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9947:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 477,
														"nodeType": "ExpressionStatement",
														"src": "9947:35:0"
													},
													{
														"expression": {
															"id": 487,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 478,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "9996:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 483,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 479,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10006:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 482,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 480,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10015:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 481,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10019:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10015:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10006:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 484,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10005:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 485,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10030:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10005:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9996:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 488,
														"nodeType": "ExpressionStatement",
														"src": "9996:35:0"
													},
													{
														"expression": {
															"id": 498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 489,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10045:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 494,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 490,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10055:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 493,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 491,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10064:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 492,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10068:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10064:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10055:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 495,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10054:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10079:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10054:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10045:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 499,
														"nodeType": "ExpressionStatement",
														"src": "10045:35:0"
													},
													{
														"expression": {
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 500,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10094:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 508,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 505,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 501,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10104:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 504,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 502,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10113:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 503,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10117:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10113:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10104:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 506,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10103:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 507,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10128:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10103:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10094:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 510,
														"nodeType": "ExpressionStatement",
														"src": "10094:35:0"
													},
													{
														"expression": {
															"id": 520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 511,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10143:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 519,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 516,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 512,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10153:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 515,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 513,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10162:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 514,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10166:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10162:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10153:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 517,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10152:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10177:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10152:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10143:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 521,
														"nodeType": "ExpressionStatement",
														"src": "10143:35:0"
													},
													{
														"expression": {
															"id": 531,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 522,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 446,
																"src": "10192:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 530,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 527,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 523,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 446,
																				"src": "10202:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 526,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 524,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 433,
																					"src": "10211:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 525,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 446,
																					"src": "10215:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10211:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10202:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 528,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10201:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10226:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10201:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10192:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 532,
														"nodeType": "ExpressionStatement",
														"src": "10192:35:0"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 534,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "10252:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 537,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 535,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 433,
																		"src": "10260:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 536,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 446,
																		"src": "10264:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10260:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 533,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 204,
																"src": "10248:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 538,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10248:23:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 437,
														"id": 539,
														"nodeType": "Return",
														"src": "10241:30:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "8418:223:0",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 542,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8655:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 434,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8668:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8660:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8660:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8659:11:0"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 542,
												"src": "8694:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 435,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8694:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8693:9:0"
									},
									"scope": 1053,
									"src": "8646:1642:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 576,
										"nodeType": "Block",
										"src": "10464:164:0",
										"statements": [
											{
												"id": 575,
												"nodeType": "UncheckedBlock",
												"src": "10474:148:0",
												"statements": [
													{
														"assignments": [
															554
														],
														"declarations": [
															{
																"constant": false,
																"id": 554,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10506:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 575,
																"src": "10498:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 553,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10498:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 558,
														"initialValue": {
															"arguments": [
																{
																	"id": 556,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 545,
																	"src": "10520:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 555,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	542,
																	577
																],
																"referencedDeclaration": 542,
																"src": "10515:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10515:7:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10498:24:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 559,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 554,
																"src": "10543:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 561,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 548,
																						"src": "10570:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 560,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "10553:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10553:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 567,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 565,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 563,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 554,
																						"src": "10583:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 564,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 554,
																						"src": "10592:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10583:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 566,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 545,
																					"src": "10601:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10583:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10553:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 570,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10609:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 571,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10553:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 569,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10605:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 572,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10552:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10543:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 552,
														"id": 574,
														"nodeType": "Return",
														"src": "10536:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 543,
										"nodeType": "StructuredDocumentation",
										"src": "10294:89:0",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10397:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10410:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10402:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10402:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10422:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10413:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 547,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 546,
														"name": "Rounding",
														"nameLocations": [
															"10413:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "10413:8:0"
													},
													"referencedDeclaration": 10,
													"src": "10413:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10401:30:0"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 577,
												"src": "10455:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10454:9:0"
									},
									"scope": 1053,
									"src": "10388:240:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 708,
										"nodeType": "Block",
										"src": "10819:922:0",
										"statements": [
											{
												"assignments": [
													586
												],
												"declarations": [
													{
														"constant": false,
														"id": 586,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10837:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 708,
														"src": "10829:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 585,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10829:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 588,
												"initialValue": {
													"hexValue": "30",
													"id": 587,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10846:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10829:18:0"
											},
											{
												"id": 705,
												"nodeType": "UncheckedBlock",
												"src": "10857:855:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 591,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 589,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "10885:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 590,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10894:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10885:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10900:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10885:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 603,
														"nodeType": "IfStatement",
														"src": "10881:99:0",
														"trueBody": {
															"id": 602,
															"nodeType": "Block",
															"src": "10903:77:0",
															"statements": [
																{
																	"expression": {
																		"id": 596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 594,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "10921:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10931:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10921:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 597,
																	"nodeType": "ExpressionStatement",
																	"src": "10921:13:0"
																},
																{
																	"expression": {
																		"id": 600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 598,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "10952:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10962:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10952:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 601,
																	"nodeType": "ExpressionStatement",
																	"src": "10952:13:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 608,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 606,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 604,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "10997:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11006:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10997:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11011:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10997:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 618,
														"nodeType": "IfStatement",
														"src": "10993:96:0",
														"trueBody": {
															"id": 617,
															"nodeType": "Block",
															"src": "11014:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 611,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 609,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11032:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11042:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11032:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 612,
																	"nodeType": "ExpressionStatement",
																	"src": "11032:12:0"
																},
																{
																	"expression": {
																		"id": 615,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 613,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11062:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 614,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11072:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11062:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 616,
																	"nodeType": "ExpressionStatement",
																	"src": "11062:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 619,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11106:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 620,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11115:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11106:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11120:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11106:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 633,
														"nodeType": "IfStatement",
														"src": "11102:96:0",
														"trueBody": {
															"id": 632,
															"nodeType": "Block",
															"src": "11123:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 624,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11141:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 625,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11151:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11141:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 627,
																	"nodeType": "ExpressionStatement",
																	"src": "11141:12:0"
																},
																{
																	"expression": {
																		"id": 630,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 628,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11171:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 629,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11181:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11171:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 631,
																	"nodeType": "ExpressionStatement",
																	"src": "11171:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 634,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11215:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11224:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11215:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11229:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11215:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 648,
														"nodeType": "IfStatement",
														"src": "11211:96:0",
														"trueBody": {
															"id": 647,
															"nodeType": "Block",
															"src": "11232:75:0",
															"statements": [
																{
																	"expression": {
																		"id": 641,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 639,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11250:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 640,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11260:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11250:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 642,
																	"nodeType": "ExpressionStatement",
																	"src": "11250:12:0"
																},
																{
																	"expression": {
																		"id": 645,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 643,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11280:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 644,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11290:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11280:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 646,
																	"nodeType": "ExpressionStatement",
																	"src": "11280:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 651,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 649,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11324:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 650,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11333:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11324:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 652,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11337:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11324:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 663,
														"nodeType": "IfStatement",
														"src": "11320:93:0",
														"trueBody": {
															"id": 662,
															"nodeType": "Block",
															"src": "11340:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 656,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 654,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11358:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 655,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11368:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11358:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 657,
																	"nodeType": "ExpressionStatement",
																	"src": "11358:11:0"
																},
																{
																	"expression": {
																		"id": 660,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 658,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11387:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 659,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11397:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11387:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 661,
																	"nodeType": "ExpressionStatement",
																	"src": "11387:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 668,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 664,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11430:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11439:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11430:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 667,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11443:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11430:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 678,
														"nodeType": "IfStatement",
														"src": "11426:93:0",
														"trueBody": {
															"id": 677,
															"nodeType": "Block",
															"src": "11446:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 671,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 669,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11464:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 670,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11474:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11464:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 672,
																	"nodeType": "ExpressionStatement",
																	"src": "11464:11:0"
																},
																{
																	"expression": {
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 673,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11493:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 674,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11503:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11493:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 676,
																	"nodeType": "ExpressionStatement",
																	"src": "11493:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 681,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 679,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11536:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11545:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 682,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11549:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11536:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 693,
														"nodeType": "IfStatement",
														"src": "11532:93:0",
														"trueBody": {
															"id": 692,
															"nodeType": "Block",
															"src": "11552:73:0",
															"statements": [
																{
																	"expression": {
																		"id": 686,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 684,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 580,
																			"src": "11570:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 685,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11580:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11570:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 687,
																	"nodeType": "ExpressionStatement",
																	"src": "11570:11:0"
																},
																{
																	"expression": {
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 688,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11599:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 689,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11609:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11599:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 691,
																	"nodeType": "ExpressionStatement",
																	"src": "11599:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 694,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 580,
																	"src": "11642:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 695,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11651:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11642:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11655:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11642:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 704,
														"nodeType": "IfStatement",
														"src": "11638:64:0",
														"trueBody": {
															"id": 703,
															"nodeType": "Block",
															"src": "11658:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 701,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 699,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 586,
																			"src": "11676:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 700,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11686:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11676:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 702,
																	"nodeType": "ExpressionStatement",
																	"src": "11676:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 706,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 586,
													"src": "11728:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 584,
												"id": 707,
												"nodeType": "Return",
												"src": "11721:13:0"
											}
										]
									},
									"documentation": {
										"id": 578,
										"nodeType": "StructuredDocumentation",
										"src": "10634:119:0",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 709,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10767:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10780:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10772:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10771:15:0"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 709,
												"src": "10810:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 582,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10810:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10809:9:0"
									},
									"scope": 1053,
									"src": "10758:983:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 743,
										"nodeType": "Block",
										"src": "11974:168:0",
										"statements": [
											{
												"id": 742,
												"nodeType": "UncheckedBlock",
												"src": "11984:152:0",
												"statements": [
													{
														"assignments": [
															721
														],
														"declarations": [
															{
																"constant": false,
																"id": 721,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12016:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 742,
																"src": "12008:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 720,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12008:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 725,
														"initialValue": {
															"arguments": [
																{
																	"id": 723,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "12030:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 722,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	709,
																	744
																],
																"referencedDeclaration": 709,
																"src": "12025:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12025:11:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12008:28:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 740,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 726,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "12057:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 735,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 728,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 715,
																						"src": "12084:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 727,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "12067:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12067:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 734,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 732,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 730,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12097:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 731,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 721,
																						"src": "12102:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12097:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 733,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 712,
																					"src": "12111:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12097:19:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12067:49:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 737,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12123:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12067:57:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12119:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 739,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12066:59:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12057:68:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 719,
														"id": 741,
														"nodeType": "Return",
														"src": "12050:75:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 710,
										"nodeType": "StructuredDocumentation",
										"src": "11747:142:0",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 744,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11903:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11916:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11908:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11908:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11932:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11923:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 714,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 713,
														"name": "Rounding",
														"nameLocations": [
															"11923:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "11923:8:0"
													},
													"referencedDeclaration": 10,
													"src": "11923:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11907:34:0"
									},
									"returnParameters": {
										"id": 719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 744,
												"src": "11965:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11965:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11964:9:0"
									},
									"scope": 1053,
									"src": "11894:248:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 872,
										"nodeType": "Block",
										"src": "12335:854:0",
										"statements": [
											{
												"assignments": [
													753
												],
												"declarations": [
													{
														"constant": false,
														"id": 753,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12353:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 872,
														"src": "12345:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 752,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12345:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 755,
												"initialValue": {
													"hexValue": "30",
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12362:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12345:18:0"
											},
											{
												"id": 869,
												"nodeType": "UncheckedBlock",
												"src": "12373:787:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 760,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 756,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12401:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 757,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12410:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 758,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12416:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12410:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12401:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 772,
														"nodeType": "IfStatement",
														"src": "12397:103:0",
														"trueBody": {
															"id": 771,
															"nodeType": "Block",
															"src": "12420:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 761,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12438:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 764,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 762,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12447:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 763,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12453:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12447:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12438:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 766,
																	"nodeType": "ExpressionStatement",
																	"src": "12438:17:0"
																},
																{
																	"expression": {
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 767,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12473:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12483:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12473:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 770,
																	"nodeType": "ExpressionStatement",
																	"src": "12473:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 777,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 773,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12517:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 776,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12526:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 775,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12532:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12526:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12517:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 789,
														"nodeType": "IfStatement",
														"src": "12513:103:0",
														"trueBody": {
															"id": 788,
															"nodeType": "Block",
															"src": "12536:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 778,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12554:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 781,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 779,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12563:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 780,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12569:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12563:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12554:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 783,
																	"nodeType": "ExpressionStatement",
																	"src": "12554:17:0"
																},
																{
																	"expression": {
																		"id": 786,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 784,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12589:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 785,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12599:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12589:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 787,
																	"nodeType": "ExpressionStatement",
																	"src": "12589:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 790,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12633:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 791,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12642:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 792,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12648:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12642:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12633:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 806,
														"nodeType": "IfStatement",
														"src": "12629:103:0",
														"trueBody": {
															"id": 805,
															"nodeType": "Block",
															"src": "12652:80:0",
															"statements": [
																{
																	"expression": {
																		"id": 799,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 795,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12670:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 798,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12679:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12685:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12679:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12670:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 800,
																	"nodeType": "ExpressionStatement",
																	"src": "12670:17:0"
																},
																{
																	"expression": {
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 801,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12705:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 802,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12715:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12705:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 804,
																	"nodeType": "ExpressionStatement",
																	"src": "12705:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 811,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 807,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12749:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 810,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 808,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12758:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 809,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12764:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12758:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12749:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 823,
														"nodeType": "IfStatement",
														"src": "12745:100:0",
														"trueBody": {
															"id": 822,
															"nodeType": "Block",
															"src": "12767:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 812,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12785:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 813,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12794:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 814,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12800:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12794:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12785:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 817,
																	"nodeType": "ExpressionStatement",
																	"src": "12785:16:0"
																},
																{
																	"expression": {
																		"id": 820,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 818,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12819:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 819,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12829:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12819:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 821,
																	"nodeType": "ExpressionStatement",
																	"src": "12819:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 828,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 824,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12862:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 827,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12871:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 826,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12877:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12871:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12862:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 840,
														"nodeType": "IfStatement",
														"src": "12858:100:0",
														"trueBody": {
															"id": 839,
															"nodeType": "Block",
															"src": "12880:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 829,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "12898:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 830,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12907:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 831,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12913:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12907:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12898:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 834,
																	"nodeType": "ExpressionStatement",
																	"src": "12898:16:0"
																},
																{
																	"expression": {
																		"id": 837,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 835,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "12932:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 836,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12942:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12932:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 838,
																	"nodeType": "ExpressionStatement",
																	"src": "12932:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 845,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 841,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "12975:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 844,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 842,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12984:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 843,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12990:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12984:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12975:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 857,
														"nodeType": "IfStatement",
														"src": "12971:100:0",
														"trueBody": {
															"id": 856,
															"nodeType": "Block",
															"src": "12993:78:0",
															"statements": [
																{
																	"expression": {
																		"id": 850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 846,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 747,
																			"src": "13011:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 847,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13020:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 848,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "13026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "13020:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "13011:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 851,
																	"nodeType": "ExpressionStatement",
																	"src": "13011:16:0"
																},
																{
																	"expression": {
																		"id": 854,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 852,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "13045:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 853,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13055:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "13045:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 855,
																	"nodeType": "ExpressionStatement",
																	"src": "13045:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 858,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 747,
																"src": "13088:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 861,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 859,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13097:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 860,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13103:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13097:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13088:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 868,
														"nodeType": "IfStatement",
														"src": "13084:66:0",
														"trueBody": {
															"id": 867,
															"nodeType": "Block",
															"src": "13106:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 863,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 753,
																			"src": "13124:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 864,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13134:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13124:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 866,
																	"nodeType": "ExpressionStatement",
																	"src": "13124:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 870,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 753,
													"src": "13176:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 751,
												"id": 871,
												"nodeType": "Return",
												"src": "13169:13:0"
											}
										]
									},
									"documentation": {
										"id": 745,
										"nodeType": "StructuredDocumentation",
										"src": "12148:120:0",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 873,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12282:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 747,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12296:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "12288:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 746,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12288:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12287:15:0"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "12326:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12326:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12325:9:0"
									},
									"scope": 1053,
									"src": "12273:916:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 907,
										"nodeType": "Block",
										"src": "13424:170:0",
										"statements": [
											{
												"id": 906,
												"nodeType": "UncheckedBlock",
												"src": "13434:154:0",
												"statements": [
													{
														"assignments": [
															885
														],
														"declarations": [
															{
																"constant": false,
																"id": 885,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13466:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 906,
																"src": "13458:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 884,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13458:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 889,
														"initialValue": {
															"arguments": [
																{
																	"id": 887,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 876,
																	"src": "13481:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 886,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	873,
																	908
																],
																"referencedDeclaration": 873,
																"src": "13475:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 888,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13475:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13458:29:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 890,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 885,
																"src": "13508:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 899,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 892,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 879,
																						"src": "13535:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 891,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "13518:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 893,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13518:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 898,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 896,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 894,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13548:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 895,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 885,
																						"src": "13554:6:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13548:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 897,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 876,
																					"src": "13563:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13548:20:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13518:50:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 901,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13575:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13518:58:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13571:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 903,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13517:60:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13508:69:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 883,
														"id": 905,
														"nodeType": "Return",
														"src": "13501:76:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "13195:143:0",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 908,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13352:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13366:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13358:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13358:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13382:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13373:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 878,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 877,
														"name": "Rounding",
														"nameLocations": [
															"13373:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "13373:8:0"
													},
													"referencedDeclaration": 10,
													"src": "13373:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13357:34:0"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 908,
												"src": "13415:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13414:9:0"
									},
									"scope": 1053,
									"src": "13343:251:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "13914:600:0",
										"statements": [
											{
												"assignments": [
													917
												],
												"declarations": [
													{
														"constant": false,
														"id": 917,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13932:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "13924:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 916,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 919,
												"initialValue": {
													"hexValue": "30",
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13941:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13924:18:0"
											},
											{
												"id": 991,
												"nodeType": "UncheckedBlock",
												"src": "13952:533:0",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 924,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 920,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "13980:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 921,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13989:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13980:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 923,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13995:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13980:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 934,
														"nodeType": "IfStatement",
														"src": "13976:98:0",
														"trueBody": {
															"id": 933,
															"nodeType": "Block",
															"src": "13998:76:0",
															"statements": [
																{
																	"expression": {
																		"id": 927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 925,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14016:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 926,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14026:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "14016:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 928,
																	"nodeType": "ExpressionStatement",
																	"src": "14016:13:0"
																},
																{
																	"expression": {
																		"id": 931,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 929,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14047:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 930,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14057:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14047:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 932,
																	"nodeType": "ExpressionStatement",
																	"src": "14047:12:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 937,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 935,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14091:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 936,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14100:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14091:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 938,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14105:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14091:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 949,
														"nodeType": "IfStatement",
														"src": "14087:95:0",
														"trueBody": {
															"id": 948,
															"nodeType": "Block",
															"src": "14108:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 942,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 940,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14126:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14136:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14126:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 943,
																	"nodeType": "ExpressionStatement",
																	"src": "14126:12:0"
																},
																{
																	"expression": {
																		"id": 946,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 944,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14156:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 945,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14166:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14156:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 947,
																	"nodeType": "ExpressionStatement",
																	"src": "14156:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 952,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 950,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14199:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 951,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14208:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14199:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14213:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14199:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 964,
														"nodeType": "IfStatement",
														"src": "14195:95:0",
														"trueBody": {
															"id": 963,
															"nodeType": "Block",
															"src": "14216:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 957,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 955,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14234:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 956,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14244:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14234:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 958,
																	"nodeType": "ExpressionStatement",
																	"src": "14234:12:0"
																},
																{
																	"expression": {
																		"id": 961,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 959,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14264:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 960,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14274:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14264:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 962,
																	"nodeType": "ExpressionStatement",
																	"src": "14264:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 969,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 967,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 965,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14307:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 966,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14316:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14307:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14321:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14307:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 979,
														"nodeType": "IfStatement",
														"src": "14303:95:0",
														"trueBody": {
															"id": 978,
															"nodeType": "Block",
															"src": "14324:74:0",
															"statements": [
																{
																	"expression": {
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 970,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 911,
																			"src": "14342:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14352:2:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14342:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 973,
																	"nodeType": "ExpressionStatement",
																	"src": "14342:12:0"
																},
																{
																	"expression": {
																		"id": 976,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 974,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14372:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 975,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14382:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14372:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 977,
																	"nodeType": "ExpressionStatement",
																	"src": "14372:11:0"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 982,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 980,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 911,
																	"src": "14415:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 981,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14424:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14415:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 983,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14428:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14415:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 990,
														"nodeType": "IfStatement",
														"src": "14411:64:0",
														"trueBody": {
															"id": 989,
															"nodeType": "Block",
															"src": "14431:44:0",
															"statements": [
																{
																	"expression": {
																		"id": 987,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 985,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 917,
																			"src": "14449:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 986,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14459:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14449:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 988,
																	"nodeType": "ExpressionStatement",
																	"src": "14449:11:0"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 992,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 917,
													"src": "14501:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 915,
												"id": 993,
												"nodeType": "Return",
												"src": "14494:13:0"
											}
										]
									},
									"documentation": {
										"id": 909,
										"nodeType": "StructuredDocumentation",
										"src": "13600:246:0",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13860:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13875:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "13867:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13866:15:0"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 995,
												"src": "13905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13904:9:0"
									},
									"scope": 1053,
									"src": "13851:663:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1032,
										"nodeType": "Block",
										"src": "14751:177:0",
										"statements": [
											{
												"id": 1031,
												"nodeType": "UncheckedBlock",
												"src": "14761:161:0",
												"statements": [
													{
														"assignments": [
															1007
														],
														"declarations": [
															{
																"constant": false,
																"id": 1007,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14793:6:0",
																"nodeType": "VariableDeclaration",
																"scope": 1031,
																"src": "14785:14:0",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1006,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14785:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1011,
														"initialValue": {
															"arguments": [
																{
																	"id": 1009,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 998,
																	"src": "14809:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1008,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	995,
																	1033
																],
																"referencedDeclaration": 995,
																"src": "14802:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1010,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14802:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14785:30:0"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1029,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1012,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1007,
																"src": "14836:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1024,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1014,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1001,
																						"src": "14863:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$10",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1013,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1052,
																					"src": "14846:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$10_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1015,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14846:26:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1023,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1021,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1016,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14876:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1019,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1017,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1007,
																									"src": "14882:6:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1018,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14892:1:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14882:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1020,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14881:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14876:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1022,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 998,
																					"src": "14897:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14876:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14846:56:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1026,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14909:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1027,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14846:64:0",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1025,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14905:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1028,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14845:66:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14836:75:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1005,
														"id": 1030,
														"nodeType": "Return",
														"src": "14829:82:0"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "14520:144:0",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14678:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14693:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14685:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 997,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1001,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14709:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14700:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1000,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 999,
														"name": "Rounding",
														"nameLocations": [
															"14700:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "14700:8:0"
													},
													"referencedDeclaration": 10,
													"src": "14700:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14684:34:0"
									},
									"returnParameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1033,
												"src": "14742:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1003,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14742:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14741:9:0"
									},
									"scope": 1053,
									"src": "14669:259:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1051,
										"nodeType": "Block",
										"src": "15126:48:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 1049,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 1047,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1044,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1037,
																	"src": "15149:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$10",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$10",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15143:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 1042,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15143:5:0",
																	"typeDescriptions": {}
																}
															},
															"id": 1045,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15143:15:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 1046,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15161:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15143:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 1048,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15143:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1041,
												"id": 1050,
												"nodeType": "Return",
												"src": "15136:31:0"
											}
										]
									},
									"documentation": {
										"id": 1034,
										"nodeType": "StructuredDocumentation",
										"src": "14934:113:0",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 1052,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15061:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1037,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15087:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "15078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$10",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1036,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1035,
														"name": "Rounding",
														"nameLocations": [
															"15078:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 10,
														"src": "15078:8:0"
													},
													"referencedDeclaration": 10,
													"src": "15078:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$10",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15077:19:0"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1052,
												"src": "15120:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1039,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15120:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15119:6:0"
									},
									"scope": 1053,
									"src": "15052:122:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4030,
							"src": "262:14914:0",
							"usedErrors": [
								5
							],
							"usedEvents": []
						},
						{
							"id": 1054,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "15396:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1055,
								"nodeType": "StructuredDocumentation",
								"src": "15422:1025:0",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1162,
							"linearizedBaseContracts": [
								1162
							],
							"name": "StorageSlot",
							"nameLocation": "16456:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1058,
									"members": [
										{
											"constant": false,
											"id": 1057,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "16511:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1058,
											"src": "16503:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1056,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "16503:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "16481:11:0",
									"nodeType": "StructDefinition",
									"scope": 1162,
									"src": "16474:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1061,
									"members": [
										{
											"constant": false,
											"id": 1060,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "16563:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1061,
											"src": "16558:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1059,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "16558:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "16536:11:0",
									"nodeType": "StructDefinition",
									"scope": 1162,
									"src": "16529:46:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1064,
									"members": [
										{
											"constant": false,
											"id": 1063,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "16618:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1064,
											"src": "16610:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1062,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "16610:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "16588:11:0",
									"nodeType": "StructDefinition",
									"scope": 1162,
									"src": "16581:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1067,
									"members": [
										{
											"constant": false,
											"id": 1066,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "16673:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1067,
											"src": "16665:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1065,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "16665:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "16643:11:0",
									"nodeType": "StructDefinition",
									"scope": 1162,
									"src": "16636:49:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1070,
									"members": [
										{
											"constant": false,
											"id": 1069,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "16726:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1070,
											"src": "16719:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1068,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "16719:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "16698:10:0",
									"nodeType": "StructDefinition",
									"scope": 1162,
									"src": "16691:47:0",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1073,
									"members": [
										{
											"constant": false,
											"id": 1072,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "16777:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 1073,
											"src": "16771:11:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1071,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "16771:5:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "16751:9:0",
									"nodeType": "StructDefinition",
									"scope": 1162,
									"src": "16744:45:0",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1083,
										"nodeType": "Block",
										"src": "16971:106:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17033:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17047:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "17057:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "17047:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1080,
														"isOffset": false,
														"isSlot": true,
														"src": "17047:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1076,
														"isOffset": false,
														"isSlot": false,
														"src": "17057:4:0",
														"valueSize": 1
													}
												],
												"id": 1082,
												"nodeType": "InlineAssembly",
												"src": "17024:47:0"
											}
										]
									},
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "16795:87:0",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1084,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "16896:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "16919:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "16911:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16911:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16910:14:0"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1080,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "16968:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1084,
												"src": "16948:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1058_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1079,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1078,
														"name": "AddressSlot",
														"nameLocations": [
															"16948:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1058,
														"src": "16948:11:0"
													},
													"referencedDeclaration": 1058,
													"src": "16948:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1058_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16947:23:0"
									},
									"scope": 1162,
									"src": "16887:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "17259:106:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17321:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17335:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "17345:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "17335:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1091,
														"isOffset": false,
														"isSlot": true,
														"src": "17335:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1087,
														"isOffset": false,
														"isSlot": false,
														"src": "17345:4:0",
														"valueSize": 1
													}
												],
												"id": 1093,
												"nodeType": "InlineAssembly",
												"src": "17312:47:0"
											}
										]
									},
									"documentation": {
										"id": 1085,
										"nodeType": "StructuredDocumentation",
										"src": "17083:87:0",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "17184:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "17207:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "17199:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1086,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17199:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17198:14:0"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "17256:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "17236:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1061_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1090,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1089,
														"name": "BooleanSlot",
														"nameLocations": [
															"17236:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1061,
														"src": "17236:11:0"
													},
													"referencedDeclaration": 1061,
													"src": "17236:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1061_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17235:23:0"
									},
									"scope": 1162,
									"src": "17175:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1105,
										"nodeType": "Block",
										"src": "17547:106:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17609:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17623:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "17633:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "17623:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1102,
														"isOffset": false,
														"isSlot": true,
														"src": "17623:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1098,
														"isOffset": false,
														"isSlot": false,
														"src": "17633:4:0",
														"valueSize": 1
													}
												],
												"id": 1104,
												"nodeType": "InlineAssembly",
												"src": "17600:47:0"
											}
										]
									},
									"documentation": {
										"id": 1096,
										"nodeType": "StructuredDocumentation",
										"src": "17371:87:0",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1106,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "17472:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "17495:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "17487:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1097,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17486:14:0"
									},
									"returnParameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "17544:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1106,
												"src": "17524:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1064_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1101,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1100,
														"name": "Bytes32Slot",
														"nameLocations": [
															"17524:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1064,
														"src": "17524:11:0"
													},
													"referencedDeclaration": 1064,
													"src": "17524:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1064_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17523:23:0"
									},
									"scope": 1162,
									"src": "17463:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "17835:106:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "17897:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "17911:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "17921:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "17911:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1113,
														"isOffset": false,
														"isSlot": true,
														"src": "17911:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1109,
														"isOffset": false,
														"isSlot": false,
														"src": "17921:4:0",
														"valueSize": 1
													}
												],
												"id": 1115,
												"nodeType": "InlineAssembly",
												"src": "17888:47:0"
											}
										]
									},
									"documentation": {
										"id": 1107,
										"nodeType": "StructuredDocumentation",
										"src": "17659:87:0",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "17760:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "17783:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "17775:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1108,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "17775:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17774:14:0"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "17832:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "17812:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1112,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1111,
														"name": "Uint256Slot",
														"nameLocations": [
															"17812:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1067,
														"src": "17812:11:0"
													},
													"referencedDeclaration": 1067,
													"src": "17812:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17811:23:0"
									},
									"scope": 1162,
									"src": "17751:190:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1127,
										"nodeType": "Block",
										"src": "18120:106:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18182:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18196:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "18206:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "18196:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1124,
														"isOffset": false,
														"isSlot": true,
														"src": "18196:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1120,
														"isOffset": false,
														"isSlot": false,
														"src": "18206:4:0",
														"valueSize": 1
													}
												],
												"id": 1126,
												"nodeType": "InlineAssembly",
												"src": "18173:47:0"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "17947:86:0",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "18047:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "18069:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "18061:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1119,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18061:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18060:14:0"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1124,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "18117:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1128,
												"src": "18098:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1070_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1123,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1122,
														"name": "StringSlot",
														"nameLocations": [
															"18098:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1070,
														"src": "18098:10:0"
													},
													"referencedDeclaration": 1070,
													"src": "18098:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1070_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18097:22:0"
									},
									"scope": 1162,
									"src": "18038:188:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1138,
										"nodeType": "Block",
										"src": "18428:112:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18490:44:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18504:20:0",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "18514:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "18504:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1135,
														"isOffset": false,
														"isSlot": true,
														"src": "18504:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1131,
														"isOffset": false,
														"isSlot": true,
														"src": "18514:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1137,
												"nodeType": "InlineAssembly",
												"src": "18481:53:0"
											}
										]
									},
									"documentation": {
										"id": 1129,
										"nodeType": "StructuredDocumentation",
										"src": "18232:101:0",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1139,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "18347:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "18376:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "18361:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1130,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18361:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18360:22:0"
									},
									"returnParameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "18425:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1139,
												"src": "18406:20:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1070_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1134,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1133,
														"name": "StringSlot",
														"nameLocations": [
															"18406:10:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1070,
														"src": "18406:10:0"
													},
													"referencedDeclaration": 1070,
													"src": "18406:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1070_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18405:22:0"
									},
									"scope": 1162,
									"src": "18338:202:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1149,
										"nodeType": "Block",
										"src": "18716:106:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "18778:38:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "18792:14:0",
															"value": {
																"name": "slot",
																"nodeType": "YulIdentifier",
																"src": "18802:4:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "18792:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1146,
														"isOffset": false,
														"isSlot": true,
														"src": "18792:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1142,
														"isOffset": false,
														"isSlot": false,
														"src": "18802:4:0",
														"valueSize": 1
													}
												],
												"id": 1148,
												"nodeType": "InlineAssembly",
												"src": "18769:47:0"
											}
										]
									},
									"documentation": {
										"id": 1140,
										"nodeType": "StructuredDocumentation",
										"src": "18546:85:0",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "18645:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "18666:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "18658:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1141,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "18658:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18657:14:0"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "18713:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "18695:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1073_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1145,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1144,
														"name": "BytesSlot",
														"nameLocations": [
															"18695:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "18695:9:0"
													},
													"referencedDeclaration": 1073,
													"src": "18695:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1073_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18694:21:0"
									},
									"scope": 1162,
									"src": "18636:186:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1160,
										"nodeType": "Block",
										"src": "19019:112:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "19081:44:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "19095:20:0",
															"value": {
																"name": "store.slot",
																"nodeType": "YulIdentifier",
																"src": "19105:10:0"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nodeType": "YulIdentifier",
																	"src": "19095:6:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1157,
														"isOffset": false,
														"isSlot": true,
														"src": "19095:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1153,
														"isOffset": false,
														"isSlot": true,
														"src": "19105:10:0",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1159,
												"nodeType": "InlineAssembly",
												"src": "19072:53:0"
											}
										]
									},
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "18828:99:0",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1161,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "18941:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "18968:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "18954:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1152,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "18954:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18953:21:0"
									},
									"returnParameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "19016:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 1161,
												"src": "18998:19:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1073_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1156,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1155,
														"name": "BytesSlot",
														"nameLocations": [
															"18998:9:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1073,
														"src": "18998:9:0"
													},
													"referencedDeclaration": 1073,
													"src": "18998:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1073_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18997:21:0"
									},
									"scope": 1162,
									"src": "18932:199:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4030,
							"src": "16448:2685:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1163,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "19255:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Arrays",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1164,
								"nodeType": "StructuredDocumentation",
								"src": "19283:63:0",
								"text": " @dev Collection of functions related to array types."
							},
							"fullyImplemented": true,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "Arrays",
							"nameLocation": "19355:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1167,
									"libraryName": {
										"id": 1165,
										"name": "StorageSlot",
										"nameLocations": [
											"19374:11:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1162,
										"src": "19374:11:0"
									},
									"nodeType": "UsingForDirective",
									"src": "19368:30:0",
									"typeName": {
										"id": 1166,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "19390:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									}
								},
								{
									"body": {
										"id": 1249,
										"nodeType": "Block",
										"src": "19914:834:0",
										"statements": [
											{
												"assignments": [
													1179
												],
												"declarations": [
													{
														"constant": false,
														"id": 1179,
														"mutability": "mutable",
														"name": "low",
														"nameLocation": "19932:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "19924:11:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1178,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19924:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1181,
												"initialValue": {
													"hexValue": "30",
													"id": 1180,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19938:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19924:15:0"
											},
											{
												"assignments": [
													1183
												],
												"declarations": [
													{
														"constant": false,
														"id": 1183,
														"mutability": "mutable",
														"name": "high",
														"nameLocation": "19957:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1249,
														"src": "19949:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1182,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "19949:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1186,
												"initialValue": {
													"expression": {
														"id": 1184,
														"name": "array",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1171,
														"src": "19964:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
															"typeString": "uint256[] storage pointer"
														}
													},
													"id": 1185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "19970:6:0",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "19964:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "19949:27:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1187,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "19991:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1188,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "19999:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "19991:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1193,
												"nodeType": "IfStatement",
												"src": "19987:48:0",
												"trueBody": {
													"id": 1192,
													"nodeType": "Block",
													"src": "20002:33:0",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "20023:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1177,
															"id": 1191,
															"nodeType": "Return",
															"src": "20016:8:0"
														}
													]
												}
											},
											{
												"body": {
													"id": 1225,
													"nodeType": "Block",
													"src": "20064:423:0",
													"statements": [
														{
															"assignments": [
																1198
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1198,
																	"mutability": "mutable",
																	"name": "mid",
																	"nameLocation": "20086:3:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 1225,
																	"src": "20078:11:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1197,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "20078:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 1204,
															"initialValue": {
																"arguments": [
																	{
																		"id": 1201,
																		"name": "low",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1179,
																		"src": "20105:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 1202,
																		"name": "high",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1183,
																		"src": "20110:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 1199,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1053,
																		"src": "20092:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1053_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 1200,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20097:7:0",
																	"memberName": "average",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 227,
																	"src": "20092:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256,uint256) pure returns (uint256)"
																	}
																},
																"id": 1203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20092:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "20078:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1211,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 1206,
																				"name": "array",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1171,
																				"src": "20353:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				}
																			},
																			{
																				"id": 1207,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "20360:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																					"typeString": "uint256[] storage pointer"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 1205,
																			"name": "unsafeAccess",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				1271,
																				1292,
																				1313
																			],
																			"referencedDeclaration": 1313,
																			"src": "20340:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1067_storage_ptr_$",
																				"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																			}
																		},
																		"id": 1208,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "20340:24:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
																			"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																		}
																	},
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "20365:5:0",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1066,
																	"src": "20340:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"id": 1210,
																	"name": "element",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1173,
																	"src": "20373:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "20340:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 1223,
																"nodeType": "Block",
																"src": "20431:46:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1221,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1217,
																				"name": "low",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1179,
																				"src": "20449:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1220,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1218,
																					"name": "mid",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1198,
																					"src": "20455:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"hexValue": "31",
																					"id": 1219,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "20461:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_1_by_1",
																						"typeString": "int_const 1"
																					},
																					"value": "1"
																				},
																				"src": "20455:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20449:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1222,
																		"nodeType": "ExpressionStatement",
																		"src": "20449:13:0"
																	}
																]
															},
															"id": 1224,
															"nodeType": "IfStatement",
															"src": "20336:141:0",
															"trueBody": {
																"id": 1216,
																"nodeType": "Block",
																"src": "20382:43:0",
																"statements": [
																	{
																		"expression": {
																			"id": 1214,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 1212,
																				"name": "high",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1183,
																				"src": "20400:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 1213,
																				"name": "mid",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1198,
																				"src": "20407:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "20400:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 1215,
																		"nodeType": "ExpressionStatement",
																		"src": "20400:10:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1194,
														"name": "low",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "20052:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1195,
														"name": "high",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1183,
														"src": "20058:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "20052:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1226,
												"nodeType": "WhileStatement",
												"src": "20045:442:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1227,
															"name": "low",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1179,
															"src": "20604:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "20610:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "20604:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1231,
																		"name": "array",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1171,
																		"src": "20628:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1234,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1232,
																			"name": "low",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1179,
																			"src": "20635:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1233,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "20641:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "20635:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[] storage pointer"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1230,
																	"name": "unsafeAccess",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		1271,
																		1292,
																		1313
																	],
																	"referencedDeclaration": 1313,
																	"src": "20615:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$_t_struct$_Uint256Slot_$1067_storage_ptr_$",
																		"typeString": "function (uint256[] storage pointer,uint256) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
																	}
																},
																"id": 1235,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20615:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
																	"typeString": "struct StorageSlot.Uint256Slot storage pointer"
																}
															},
															"id": 1236,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "20644:5:0",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1066,
															"src": "20615:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 1237,
															"name": "element",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "20653:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "20615:45:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "20604:56:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1247,
													"nodeType": "Block",
													"src": "20707:35:0",
													"statements": [
														{
															"expression": {
																"id": 1245,
																"name": "low",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1179,
																"src": "20728:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1177,
															"id": 1246,
															"nodeType": "Return",
															"src": "20721:10:0"
														}
													]
												},
												"id": 1248,
												"nodeType": "IfStatement",
												"src": "20600:142:0",
												"trueBody": {
													"id": 1244,
													"nodeType": "Block",
													"src": "20662:39:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1242,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1240,
																	"name": "low",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1179,
																	"src": "20683:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1241,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "20689:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "20683:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1177,
															"id": 1243,
															"nodeType": "Return",
															"src": "20676:14:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "19404:407:0",
										"text": " @dev Searches a sorted `array` and returns the first index that contains\n a value greater or equal to `element`. If no such index exists (i.e. all\n values in the array are strictly less than `element`), the array length is\n returned. Time complexity O(log n).\n `array` is expected to be sorted in ascending order, and to contain no\n repeated elements."
									},
									"id": 1250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "findUpperBound",
									"nameLocation": "19825:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "array",
												"nameLocation": "19858:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "19840:23:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1169,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "19840:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1170,
													"nodeType": "ArrayTypeName",
													"src": "19840:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "element",
												"nameLocation": "19873:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "19865:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19865:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19839:42:0"
									},
									"returnParameters": {
										"id": 1177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1176,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1250,
												"src": "19905:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19905:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19904:9:0"
									},
									"scope": 1340,
									"src": "19816:932:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "21064:459:0",
										"statements": [
											{
												"assignments": [
													1263
												],
												"declarations": [
													{
														"constant": false,
														"id": 1263,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "21082:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1270,
														"src": "21074:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1262,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21074:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1264,
												"nodeType": "VariableDeclarationStatement",
												"src": "21074:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "21387:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "21408:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "21411:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "21401:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "21401:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "21401:19:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "21433:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21455:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "21458:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "21445:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "21445:18:0"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "21465:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "21441:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "21441:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "21433:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1254,
														"isOffset": false,
														"isSlot": true,
														"src": "21411:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1256,
														"isOffset": false,
														"isSlot": false,
														"src": "21465:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1263,
														"isOffset": false,
														"isSlot": false,
														"src": "21433:4:0",
														"valueSize": 1
													}
												],
												"id": 1265,
												"nodeType": "InlineAssembly",
												"src": "21378:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1266,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1263,
															"src": "21495:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1267,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "21500:14:0",
														"memberName": "getAddressSlot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1084,
														"src": "21495:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1058_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21495:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1058_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot storage pointer"
													}
												},
												"functionReturnParameters": 1261,
												"id": 1269,
												"nodeType": "Return",
												"src": "21488:28:0"
											}
										]
									},
									"documentation": {
										"id": 1251,
										"nodeType": "StructuredDocumentation",
										"src": "20754:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "20959:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "20990:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "20972:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1252,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "20972:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1253,
													"nodeType": "ArrayTypeName",
													"src": "20972:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "21003:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "20995:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20995:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20971:36:0"
									},
									"returnParameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "21031:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1058_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1259,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1258,
														"name": "StorageSlot.AddressSlot",
														"nameLocations": [
															"21031:11:0",
															"21043:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1058,
														"src": "21031:23:0"
													},
													"referencedDeclaration": 1058,
													"src": "21031:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1058_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21030:33:0"
									},
									"scope": 1340,
									"src": "20950:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "21839:459:0",
										"statements": [
											{
												"assignments": [
													1284
												],
												"declarations": [
													{
														"constant": false,
														"id": 1284,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "21857:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "21849:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1283,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "21849:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1285,
												"nodeType": "VariableDeclarationStatement",
												"src": "21849:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22162:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22183:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "22186:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22176:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22176:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22176:19:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22208:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22230:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "22233:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "22220:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22220:18:0"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "22240:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22216:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22216:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "22208:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1275,
														"isOffset": false,
														"isSlot": true,
														"src": "22186:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1277,
														"isOffset": false,
														"isSlot": false,
														"src": "22240:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1284,
														"isOffset": false,
														"isSlot": false,
														"src": "22208:4:0",
														"valueSize": 1
													}
												],
												"id": 1286,
												"nodeType": "InlineAssembly",
												"src": "22153:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1287,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "22270:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "22275:14:0",
														"memberName": "getBytes32Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1106,
														"src": "22270:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Bytes32Slot_$1064_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Bytes32Slot storage pointer)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22270:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1064_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot storage pointer"
													}
												},
												"functionReturnParameters": 1282,
												"id": 1290,
												"nodeType": "Return",
												"src": "22263:28:0"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "21529:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "21734:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1275,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "21765:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "21747:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												},
												"typeName": {
													"baseType": {
														"id": 1273,
														"name": "bytes32",
														"nodeType": "ElementaryTypeName",
														"src": "21747:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"id": 1274,
													"nodeType": "ArrayTypeName",
													"src": "21747:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
														"typeString": "bytes32[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "21778:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "21770:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21770:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21746:36:0"
									},
									"returnParameters": {
										"id": 1282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "21806:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1064_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1280,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1279,
														"name": "StorageSlot.Bytes32Slot",
														"nameLocations": [
															"21806:11:0",
															"21818:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1064,
														"src": "21806:23:0"
													},
													"referencedDeclaration": 1064,
													"src": "21806:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1064_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21805:33:0"
									},
									"scope": 1340,
									"src": "21725:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1312,
										"nodeType": "Block",
										"src": "22614:459:0",
										"statements": [
											{
												"assignments": [
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "slot",
														"nameLocation": "22632:4:0",
														"nodeType": "VariableDeclaration",
														"scope": 1312,
														"src": "22624:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 1304,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "22624:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1306,
												"nodeType": "VariableDeclarationStatement",
												"src": "22624:12:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "22937:92:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "22958:1:0",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "arr.slot",
																		"nodeType": "YulIdentifier",
																		"src": "22961:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "22951:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22951:19:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "22951:19:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "22983:36:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23005:1:0",
																				"type": "",
																				"value": "0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "23008:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "keccak256",
																			"nodeType": "YulIdentifier",
																			"src": "22995:9:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "22995:18:0"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "23015:3:0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "22991:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "22991:28:0"
															},
															"variableNames": [
																{
																	"name": "slot",
																	"nodeType": "YulIdentifier",
																	"src": "22983:4:0"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1296,
														"isOffset": false,
														"isSlot": true,
														"src": "22961:8:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1298,
														"isOffset": false,
														"isSlot": false,
														"src": "23015:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1305,
														"isOffset": false,
														"isSlot": false,
														"src": "22983:4:0",
														"valueSize": 1
													}
												],
												"id": 1307,
												"nodeType": "InlineAssembly",
												"src": "22928:101:0"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 1308,
															"name": "slot",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "23045:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "23050:14:0",
														"memberName": "getUint256Slot",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1117,
														"src": "23045:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_Uint256Slot_$1067_storage_ptr_$attached_to$_t_bytes32_$",
															"typeString": "function (bytes32) pure returns (struct StorageSlot.Uint256Slot storage pointer)"
														}
													},
													"id": 1310,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23045:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot storage pointer"
													}
												},
												"functionReturnParameters": 1303,
												"id": 1311,
												"nodeType": "Return",
												"src": "23038:28:0"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "22304:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1313,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeAccess",
									"nameLocation": "22509:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1296,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "22540:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "22522:21:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1294,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "22522:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1295,
													"nodeType": "ArrayTypeName",
													"src": "22522:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1298,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "22553:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "22545:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22521:36:0"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1302,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1313,
												"src": "22581:31:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1301,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1300,
														"name": "StorageSlot.Uint256Slot",
														"nameLocations": [
															"22581:11:0",
															"22593:11:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1067,
														"src": "22581:23:0"
													},
													"referencedDeclaration": 1067,
													"src": "22581:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1067_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22580:33:0"
									},
									"scope": 1340,
									"src": "22500:573:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1325,
										"nodeType": "Block",
										"src": "23374:98:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23393:73:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23407:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "23428:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23433:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23424:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23424:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "23444:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23449:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "23440:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23440:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23420:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23420:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23414:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23414:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "23407:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1317,
														"isOffset": false,
														"isSlot": false,
														"src": "23428:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1319,
														"isOffset": false,
														"isSlot": false,
														"src": "23444:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1322,
														"isOffset": false,
														"isSlot": false,
														"src": "23407:3:0",
														"valueSize": 1
													}
												],
												"id": 1324,
												"nodeType": "InlineAssembly",
												"src": "23384:82:0"
											}
										]
									},
									"documentation": {
										"id": 1314,
										"nodeType": "StructuredDocumentation",
										"src": "23079:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "23284:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "23320:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "23303:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1315,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "23303:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1316,
													"nodeType": "ArrayTypeName",
													"src": "23303:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "23333:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "23325:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1318,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23325:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23302:35:0"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "23369:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1326,
												"src": "23361:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1321,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23360:13:0"
									},
									"scope": 1340,
									"src": "23275:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1338,
										"nodeType": "Block",
										"src": "23773:98:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "23792:73:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "23806:49:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "arr",
																						"nodeType": "YulIdentifier",
																						"src": "23827:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23832:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "23823:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23823:14:0"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nodeType": "YulIdentifier",
																						"src": "23843:3:0"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "23848:4:0",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nodeType": "YulIdentifier",
																					"src": "23839:3:0"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "23839:14:0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "23819:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "23819:35:0"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "23813:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "23813:42:0"
															},
															"variableNames": [
																{
																	"name": "res",
																	"nodeType": "YulIdentifier",
																	"src": "23806:3:0"
																}
															]
														}
													]
												},
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 1330,
														"isOffset": false,
														"isSlot": false,
														"src": "23827:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1332,
														"isOffset": false,
														"isSlot": false,
														"src": "23843:3:0",
														"valueSize": 1
													},
													{
														"declaration": 1335,
														"isOffset": false,
														"isSlot": false,
														"src": "23806:3:0",
														"valueSize": 1
													}
												],
												"id": 1337,
												"nodeType": "InlineAssembly",
												"src": "23783:82:0"
											}
										]
									},
									"documentation": {
										"id": 1327,
										"nodeType": "StructuredDocumentation",
										"src": "23478:191:0",
										"text": " @dev Access an array in an \"unsafe\" way. Skips solidity \"index-out-of-range\" check.\n WARNING: Only use if you are certain `pos` is lower than the array length."
									},
									"id": 1339,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsafeMemoryAccess",
									"nameLocation": "23683:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1333,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "arr",
												"nameLocation": "23719:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "23702:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1328,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "23702:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1329,
													"nodeType": "ArrayTypeName",
													"src": "23702:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1332,
												"mutability": "mutable",
												"name": "pos",
												"nameLocation": "23732:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "23724:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23701:35:0"
									},
									"returnParameters": {
										"id": 1336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "res",
												"nameLocation": "23768:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "23760:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23760:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23759:13:0"
									},
									"scope": 1340,
									"src": "23674:197:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 4030,
							"src": "19347:4526:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1341,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "24025:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1342,
								"nodeType": "StructuredDocumentation",
								"src": "24051:279:0",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1351,
							"linearizedBaseContracts": [
								1351
							],
							"name": "IERC165",
							"nameLocation": "24341:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1343,
										"nodeType": "StructuredDocumentation",
										"src": "24355:340:0",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1350,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "24709:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "24734:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "24727:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1344,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "24727:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24726:20:0"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "24770:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1347,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "24770:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24769:6:0"
									},
									"scope": 1351,
									"src": "24700:76:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4030,
							"src": "24331:447:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1352,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "24928:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1354,
										"name": "IERC165",
										"nameLocations": [
											"25462:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "25462:7:0"
									},
									"id": 1355,
									"nodeType": "InheritanceSpecifier",
									"src": "25462:7:0"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1353,
								"nodeType": "StructuredDocumentation",
								"src": "24955:478:0",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1372,
							"linearizedBaseContracts": [
								1372,
								1351
							],
							"name": "ERC165",
							"nameLocation": "25452:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1350
									],
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "25619:64:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1363,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "25636:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1365,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1351,
																	"src": "25656:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1351_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1351_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1364,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "25651:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "25651:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1351",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1367,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "25665:11:0",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "25651:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "25636:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1362,
												"id": 1369,
												"nodeType": "Return",
												"src": "25629:47:0"
											}
										]
									},
									"documentation": {
										"id": 1356,
										"nodeType": "StructuredDocumentation",
										"src": "25476:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "25546:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1358,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "25571:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "25564:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "25564:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25563:20:0"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "25613:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "25613:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25612:6:0"
									},
									"scope": 1372,
									"src": "25537:146:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 4030,
							"src": "25434:251:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1373,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "25843:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1375,
										"name": "IERC165",
										"nameLocations": [
											"26019:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "26019:7:0"
									},
									"id": 1376,
									"nodeType": "InheritanceSpecifier",
									"src": "26019:7:0"
								}
							],
							"canonicalName": "IERC1155Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1374,
								"nodeType": "StructuredDocumentation",
								"src": "25870:118:0",
								"text": " @dev Interface that must be implemented by smart contracts in order to receive\n ERC-1155 token transfers."
							},
							"fullyImplemented": false,
							"id": 1411,
							"linearizedBaseContracts": [
								1411,
								1351
							],
							"name": "IERC1155Receiver",
							"nameLocation": "25999:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1377,
										"nodeType": "StructuredDocumentation",
										"src": "26033:826:0",
										"text": " @dev Handles the receipt of a single ERC1155 token type. This function is\n called at the end of a `safeTransferFrom` after the balance has been updated.\n NOTE: To accept the transfer, this must return\n `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))`\n (i.e. 0xf23a6e61, or its own function selector).\n @param operator The address which initiated the transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param id The ID of the token being transferred\n @param value The amount of tokens being transferred\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155Received(address,address,uint256,uint256,bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "f23a6e61",
									"id": 1392,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "26873:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1379,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "26908:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "26900:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1378,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26900:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1381,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26934:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "26926:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26926:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "26956:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "26948:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26976:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "26968:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26968:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1387,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "27006:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "26991:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1386,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26991:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26890:126:0"
									},
									"returnParameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1392,
												"src": "27035:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1389,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "27035:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27034:8:0"
									},
									"scope": 1411,
									"src": "26864:179:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1393,
										"nodeType": "StructuredDocumentation",
										"src": "27049:994:0",
										"text": " @dev Handles the receipt of a multiple ERC1155 token types. This function\n is called at the end of a `safeBatchTransferFrom` after the balances have\n been updated.\n NOTE: To accept the transfer(s), this must return\n `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))`\n (i.e. 0xbc197c81, or its own function selector).\n @param operator The address which initiated the batch transfer (i.e. msg.sender)\n @param from The address which previously owned the token\n @param ids An array containing ids of each token being transferred (order and length must match values array)\n @param values An array containing amounts of each token being transferred (order and length must match ids array)\n @param data Additional data with no specified format\n @return `bytes4(keccak256(\"onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)\"))` if transfer is allowed"
									},
									"functionSelector": "bc197c81",
									"id": 1410,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "28057:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1395,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "28097:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "28089:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28089:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28123:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "28115:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28115:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "28156:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "28137:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1398,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28137:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1399,
													"nodeType": "ArrayTypeName",
													"src": "28137:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "28188:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "28169:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1401,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "28169:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1402,
													"nodeType": "ArrayTypeName",
													"src": "28169:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "28219:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "28204:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1404,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28079:150:0"
									},
									"returnParameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1410,
												"src": "28248:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28248:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28247:8:0"
									},
									"scope": 1411,
									"src": "28048:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4030,
							"src": "25989:2269:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1412,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "28422:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1414,
										"name": "ERC165",
										"nameLocations": [
											"28728:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1372,
										"src": "28728:6:0"
									},
									"id": 1415,
									"nodeType": "InheritanceSpecifier",
									"src": "28728:6:0"
								},
								{
									"baseName": {
										"id": 1416,
										"name": "IERC1155Receiver",
										"nameLocations": [
											"28736:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1411,
										"src": "28736:16:0"
									},
									"id": 1417,
									"nodeType": "InheritanceSpecifier",
									"src": "28736:16:0"
								}
							],
							"canonicalName": "ERC1155Holder",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1413,
								"nodeType": "StructuredDocumentation",
								"src": "28450:242:0",
								"text": " @dev Simple implementation of `IERC1155Receiver` that will allow a contract to hold ERC1155 tokens.\n IMPORTANT: When inheriting this contract, you must include a way to use the received tokens, otherwise they will be\n stuck."
							},
							"fullyImplemented": true,
							"id": 1486,
							"linearizedBaseContracts": [
								1486,
								1411,
								1372,
								1351
							],
							"name": "ERC1155Holder",
							"nameLocation": "28711:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										1350,
										1371
									],
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "28928:113:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 1433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1428,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1420,
															"src": "28945:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 1430,
																		"name": "IERC1155Receiver",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1411,
																		"src": "28965:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																			"typeString": "type(contract IERC1155Receiver)"
																		}
																	],
																	"id": 1429,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "28960:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1431,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28960:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155Receiver_$1411",
																	"typeString": "type(contract IERC1155Receiver)"
																}
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "28983:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "28960:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "28945:49:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1436,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1420,
																"src": "29022:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1434,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "28998:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155Holder_$1486_$",
																	"typeString": "type(contract super ERC1155Holder)"
																}
															},
															"id": 1435,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "29004:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1371,
															"src": "28998:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1437,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28998:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "28945:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1427,
												"id": 1439,
												"nodeType": "Return",
												"src": "28938:96:0"
											}
										]
									},
									"documentation": {
										"id": 1418,
										"nodeType": "StructuredDocumentation",
										"src": "28759:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "28829:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1424,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1422,
												"name": "ERC165",
												"nameLocations": [
													"28896:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1372,
												"src": "28896:6:0"
											},
											{
												"id": 1423,
												"name": "IERC165",
												"nameLocations": [
													"28904:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1351,
												"src": "28904:7:0"
											}
										],
										"src": "28887:25:0"
									},
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1420,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "28854:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "28847:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1419,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "28847:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28846:20:0"
									},
									"returnParameters": {
										"id": 1427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1426,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "28922:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1425,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28922:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28921:6:0"
									},
									"scope": 1486,
									"src": "28820:221:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1392
									],
									"body": {
										"id": 1461,
										"nodeType": "Block",
										"src": "29211:55:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1457,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "29228:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$1486",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 1458,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29233:17:0",
														"memberName": "onERC1155Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1462,
														"src": "29228:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "29251:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "29228:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1456,
												"id": 1460,
												"nodeType": "Return",
												"src": "29221:38:0"
											}
										]
									},
									"functionSelector": "f23a6e61",
									"id": 1462,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155Received",
									"nameLocation": "29056:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1453,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29185:8:0"
									},
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1443,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29083:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1442,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29083:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29100:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29100:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29117:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29134:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1448,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29134:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29151:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1450,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29151:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29073:96:0"
									},
									"returnParameters": {
										"id": 1456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1455,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1462,
												"src": "29203:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1454,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29203:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29202:8:0"
									},
									"scope": 1486,
									"src": "29047:219:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1410
									],
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "29459:60:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 1480,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "29476:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155Holder_$1486",
																"typeString": "contract ERC1155Holder"
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "29481:22:0",
														"memberName": "onERC1155BatchReceived",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1485,
														"src": "29476:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "29504:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "29476:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 1479,
												"id": 1483,
												"nodeType": "Return",
												"src": "29469:43:0"
											}
										]
									},
									"functionSelector": "bc197c81",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC1155BatchReceived",
									"nameLocation": "29281:22:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1476,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "29433:8:0"
									},
									"parameters": {
										"id": 1475,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1464,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "29313:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1463,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29313:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "29330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29330:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "29347:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1467,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29347:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1468,
													"nodeType": "ArrayTypeName",
													"src": "29347:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "29373:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1470,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "29373:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1471,
													"nodeType": "ArrayTypeName",
													"src": "29373:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1474,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "29399:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1473,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "29399:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29303:114:0"
									},
									"returnParameters": {
										"id": 1479,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1478,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1485,
												"src": "29451:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1477,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "29451:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29450:8:0"
									},
									"scope": 1486,
									"src": "29272:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 4030,
							"src": "28693:828:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1487,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "29663:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1489,
										"name": "IERC165",
										"nameLocations": [
											"29848:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1351,
										"src": "29848:7:0"
									},
									"id": 1490,
									"nodeType": "InheritanceSpecifier",
									"src": "29848:7:0"
								}
							],
							"canonicalName": "IERC1155",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1488,
								"nodeType": "StructuredDocumentation",
								"src": "29690:135:0",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP]."
							},
							"fullyImplemented": false,
							"id": 1606,
							"linearizedBaseContracts": [
								1606,
								1351
							],
							"name": "IERC1155",
							"nameLocation": "29836:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1491,
										"nodeType": "StructuredDocumentation",
										"src": "29862:125:0",
										"text": " @dev Emitted when `value` amount of tokens of type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 1503,
									"name": "TransferSingle",
									"nameLocation": "29998:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1493,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "30029:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "30013:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30013:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30055:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "30039:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30039:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30077:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "30061:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30061:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1499,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "30089:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "30081:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30081:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1501,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30101:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1503,
												"src": "30093:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "30093:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30012:95:0"
									},
									"src": "29992:116:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1504,
										"nodeType": "StructuredDocumentation",
										"src": "30114:144:0",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 1518,
									"name": "TransferBatch",
									"nameLocation": "30269:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "30308:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "30292:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30292:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "30342:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "30326:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1507,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30326:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1510,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "30372:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "30356:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1509,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30356:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1513,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "30394:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "30384:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1511,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30384:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1512,
													"nodeType": "ArrayTypeName",
													"src": "30384:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1516,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "30417:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1518,
												"src": "30407:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1514,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "30407:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1515,
													"nodeType": "ArrayTypeName",
													"src": "30407:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30282:147:0"
									},
									"src": "30263:167:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1519,
										"nodeType": "StructuredDocumentation",
										"src": "30436:147:0",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1527,
									"name": "ApprovalForAll",
									"nameLocation": "30594:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "30625:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "30609:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30609:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "30650:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "30634:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "30634:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1525,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "30665:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1527,
												"src": "30660:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1524,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "30660:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30608:66:0"
									},
									"src": "30588:87:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1528,
										"nodeType": "StructuredDocumentation",
										"src": "30681:343:0",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 1534,
									"name": "URI",
									"nameLocation": "31035:3:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1530,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31046:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "31039:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1529,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "31039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1532,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "31069:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1534,
												"src": "31053:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31053:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31038:34:0"
									},
									"src": "31029:44:0"
								},
								{
									"documentation": {
										"id": 1535,
										"nodeType": "StructuredDocumentation",
										"src": "31079:172:0",
										"text": " @dev Returns the value of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 1544,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "31265:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1537,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "31283:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "31275:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1536,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31275:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1539,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "31300:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "31292:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31292:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31274:29:0"
									},
									"returnParameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1544,
												"src": "31327:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "31327:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31326:9:0"
									},
									"scope": 1606,
									"src": "31256:80:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1545,
										"nodeType": "StructuredDocumentation",
										"src": "31342:188:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1557,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "31544:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "31587:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "31568:27:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1546,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "31568:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1547,
													"nodeType": "ArrayTypeName",
													"src": "31568:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "31624:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "31605:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1549,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "31605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1550,
													"nodeType": "ArrayTypeName",
													"src": "31605:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31558:75:0"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "31657:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1553,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "31657:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1554,
													"nodeType": "ArrayTypeName",
													"src": "31657:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31656:18:0"
									},
									"scope": 1606,
									"src": "31535:140:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "31681:248:0",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "31943:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "31969:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "31961:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1559,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "31961:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "31984:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1565,
												"src": "31979:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "31979:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31960:33:0"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32002:0:0"
									},
									"scope": 1606,
									"src": "31934:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1566,
										"nodeType": "StructuredDocumentation",
										"src": "32009:135:0",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "32158:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1568,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "32183:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "32175:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1567,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32175:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1570,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "32200:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "32192:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32192:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32174:35:0"
									},
									"returnParameters": {
										"id": 1574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1575,
												"src": "32233:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1572,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "32233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32232:6:0"
									},
									"scope": 1606,
									"src": "32149:90:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1576,
										"nodeType": "StructuredDocumentation",
										"src": "32245:910:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155Received} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1589,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "33169:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1578,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "33194:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "33186:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "33208:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "33200:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "33200:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1582,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "33220:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "33212:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33212:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1584,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33232:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "33224:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1583,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "33224:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "33254:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "33239:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1585,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "33239:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33185:74:0"
									},
									"returnParameters": {
										"id": 1588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "33268:0:0"
									},
									"scope": 1606,
									"src": "33160:109:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "33275:744:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n WARNING: This function can potentially allow a reentrancy attack when transferring tokens\n to an untrusted contract, when invoking {onERC1155BatchReceived} on the receiver.\n Ensure to follow the checks-effects-interactions pattern and consider employing\n reentrancy guards when interacting with untrusted contracts.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "34033:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1603,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "34072:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "34064:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34064:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34094:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "34086:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34086:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1597,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "34125:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "34106:22:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1595,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1596,
													"nodeType": "ArrayTypeName",
													"src": "34106:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1600,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "34157:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "34138:25:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1598,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "34138:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1599,
													"nodeType": "ArrayTypeName",
													"src": "34138:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1602,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "34188:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1605,
												"src": "34173:19:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1601,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34173:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34054:144:0"
									},
									"returnParameters": {
										"id": 1604,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34207:0:0"
									},
									"scope": 1606,
									"src": "34024:184:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4030,
							"src": "29826:4384:0",
							"usedErrors": [],
							"usedEvents": [
								1503,
								1518,
								1527,
								1534
							]
						},
						{
							"id": 1607,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "34396:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1609,
										"name": "IERC1155",
										"nameLocations": [
											"34621:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1606,
										"src": "34621:8:0"
									},
									"id": 1610,
									"nodeType": "InheritanceSpecifier",
									"src": "34621:8:0"
								}
							],
							"canonicalName": "IERC1155MetadataURI",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1608,
								"nodeType": "StructuredDocumentation",
								"src": "34423:164:0",
								"text": " @dev Interface of the optional ERC1155MetadataExtension interface, as defined\n in the https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[EIP]."
							},
							"fullyImplemented": false,
							"id": 1619,
							"linearizedBaseContracts": [
								1619,
								1606,
								1351
							],
							"name": "IERC1155MetadataURI",
							"nameLocation": "34598:19:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1611,
										"nodeType": "StructuredDocumentation",
										"src": "34636:192:0",
										"text": " @dev Returns the URI for token type `id`.\n If the `\\{id\\}` substring is present in the URI, it must be replaced by\n clients with the actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1618,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "34842:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1614,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1613,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "34854:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "34846:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1612,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34846:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34845:12:0"
									},
									"returnParameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1618,
												"src": "34881:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1615,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "34881:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34880:15:0"
									},
									"scope": 1619,
									"src": "34833:63:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4030,
							"src": "34588:310:0",
							"usedErrors": [],
							"usedEvents": [
								1503,
								1518,
								1527,
								1534
							]
						},
						{
							"id": 1620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "35045:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1621,
								"nodeType": "StructuredDocumentation",
								"src": "35071:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 1660,
							"linearizedBaseContracts": [
								1660
							],
							"name": "IERC20Errors",
							"nameLocation": "35221:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1622,
										"nodeType": "StructuredDocumentation",
										"src": "35240:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 1630,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "35560:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1624,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "35593:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "35585:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35585:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1626,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "35609:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "35601:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "35626:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1630,
												"src": "35618:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1627,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35618:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35584:49:0"
									},
									"src": "35554:80:0"
								},
								{
									"documentation": {
										"id": 1631,
										"nodeType": "StructuredDocumentation",
										"src": "35640:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 1635,
									"name": "ERC20InvalidSender",
									"nameLocation": "35803:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1633,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "35830:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1635,
												"src": "35822:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1632,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35822:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35821:16:0"
									},
									"src": "35797:41:0"
								},
								{
									"documentation": {
										"id": 1636,
										"nodeType": "StructuredDocumentation",
										"src": "35844:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 1640,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "36014:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1638,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "36043:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1640,
												"src": "36035:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1637,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36035:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36034:18:0"
									},
									"src": "36008:45:0"
								},
								{
									"documentation": {
										"id": 1641,
										"nodeType": "StructuredDocumentation",
										"src": "36059:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 1649,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "36415:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1648,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36450:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "36442:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1642,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36442:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "36467:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "36459:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1644,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1647,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "36486:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "36478:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1646,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36478:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36441:52:0"
									},
									"src": "36409:85:0"
								},
								{
									"documentation": {
										"id": 1650,
										"nodeType": "StructuredDocumentation",
										"src": "36500:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 1654,
									"name": "ERC20InvalidApprover",
									"nameLocation": "36685:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1653,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1652,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "36714:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1654,
												"src": "36706:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1651,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36706:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36705:18:0"
									},
									"src": "36679:45:0"
								},
								{
									"documentation": {
										"id": 1655,
										"nodeType": "StructuredDocumentation",
										"src": "36730:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 1659,
									"name": "ERC20InvalidSpender",
									"nameLocation": "36936:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "36964:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1659,
												"src": "36956:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36956:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36955:17:0"
									},
									"src": "36930:43:0"
								}
							],
							"scope": 4030,
							"src": "35211:1764:0",
							"usedErrors": [
								1630,
								1635,
								1640,
								1649,
								1654,
								1659
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1661,
								"nodeType": "StructuredDocumentation",
								"src": "36977:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 1708,
							"linearizedBaseContracts": [
								1708
							],
							"name": "IERC721Errors",
							"nameLocation": "37129:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1662,
										"nodeType": "StructuredDocumentation",
										"src": "37149:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 1666,
									"name": "ERC721InvalidOwner",
									"nameLocation": "37379:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1665,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1664,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37406:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1666,
												"src": "37398:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1663,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37398:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37397:15:0"
									},
									"src": "37373:40:0"
								},
								{
									"documentation": {
										"id": 1667,
										"nodeType": "StructuredDocumentation",
										"src": "37419:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 1671,
									"name": "ERC721NonexistentToken",
									"nameLocation": "37562:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37593:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "37585:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37585:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37584:17:0"
									},
									"src": "37556:46:0"
								},
								{
									"documentation": {
										"id": 1672,
										"nodeType": "StructuredDocumentation",
										"src": "37608:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 1680,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "37908:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "37937:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "37929:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1673,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37929:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1676,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37953:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "37945:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1675,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37945:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "37970:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "37962:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "37962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37928:48:0"
									},
									"src": "37902:75:0"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "37983:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 1685,
									"name": "ERC721InvalidSender",
									"nameLocation": "38146:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "38174:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "38166:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38166:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38165:16:0"
									},
									"src": "38140:42:0"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "38188:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 1690,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "38358:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "38388:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1690,
												"src": "38380:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38380:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38379:18:0"
									},
									"src": "38352:46:0"
								},
								{
									"documentation": {
										"id": 1691,
										"nodeType": "StructuredDocumentation",
										"src": "38404:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 1697,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "38662:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1696,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "38697:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "38689:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1692,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38689:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1695,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "38715:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1697,
												"src": "38707:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1694,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "38707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38688:35:0"
									},
									"src": "38656:68:0"
								},
								{
									"documentation": {
										"id": 1698,
										"nodeType": "StructuredDocumentation",
										"src": "38730:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 1702,
									"name": "ERC721InvalidApprover",
									"nameLocation": "38915:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1700,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "38945:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1702,
												"src": "38937:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "38937:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "38936:18:0"
									},
									"src": "38909:46:0"
								},
								{
									"documentation": {
										"id": 1703,
										"nodeType": "StructuredDocumentation",
										"src": "38961:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 1707,
									"name": "ERC721InvalidOperator",
									"nameLocation": "39169:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1705,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "39199:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1707,
												"src": "39191:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39191:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39190:18:0"
									},
									"src": "39163:46:0"
								}
							],
							"scope": 4030,
							"src": "37119:2092:0",
							"usedErrors": [
								1666,
								1671,
								1680,
								1685,
								1690,
								1697,
								1702,
								1707
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1709,
								"nodeType": "StructuredDocumentation",
								"src": "39213:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 1755,
							"linearizedBaseContracts": [
								1755
							],
							"name": "IERC1155Errors",
							"nameLocation": "39367:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1710,
										"nodeType": "StructuredDocumentation",
										"src": "39388:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 1720,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "39760:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "39795:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "39787:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "39787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "39811:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "39803:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39803:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "39828:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "39820:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1715,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39820:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1718,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "39844:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1720,
												"src": "39836:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "39836:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "39786:66:0"
									},
									"src": "39754:99:0"
								},
								{
									"documentation": {
										"id": 1721,
										"nodeType": "StructuredDocumentation",
										"src": "39859:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 1725,
									"name": "ERC1155InvalidSender",
									"nameLocation": "40022:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "40051:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 1725,
												"src": "40043:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40043:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40042:16:0"
									},
									"src": "40016:43:0"
								},
								{
									"documentation": {
										"id": 1726,
										"nodeType": "StructuredDocumentation",
										"src": "40065:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 1730,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "40235:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1728,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "40266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1730,
												"src": "40258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40257:18:0"
									},
									"src": "40229:47:0"
								},
								{
									"documentation": {
										"id": 1731,
										"nodeType": "StructuredDocumentation",
										"src": "40282:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 1737,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "40549:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "40586:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "40578:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40578:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1735,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "40604:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 1737,
												"src": "40596:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40596:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40577:33:0"
									},
									"src": "40543:68:0"
								},
								{
									"documentation": {
										"id": 1738,
										"nodeType": "StructuredDocumentation",
										"src": "40617:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 1742,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "40802:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1740,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "40833:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1742,
												"src": "40825:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "40825:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40824:18:0"
									},
									"src": "40796:47:0"
								},
								{
									"documentation": {
										"id": 1743,
										"nodeType": "StructuredDocumentation",
										"src": "40849:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 1747,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "41057:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1745,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "41088:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1747,
												"src": "41080:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1744,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41080:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41079:18:0"
									},
									"src": "41051:47:0"
								},
								{
									"documentation": {
										"id": 1748,
										"nodeType": "StructuredDocumentation",
										"src": "41104:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 1754,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "41395:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1750,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "41429:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "41421:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41421:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "41448:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "41440:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1751,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "41440:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41420:41:0"
									},
									"src": "41389:73:0"
								}
							],
							"scope": 4030,
							"src": "39357:2107:0",
							"usedErrors": [
								1720,
								1725,
								1730,
								1737,
								1742,
								1747,
								1754
							],
							"usedEvents": []
						},
						{
							"id": 1756,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "41588:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1757,
								"nodeType": "StructuredDocumentation",
								"src": "41614:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1776,
							"linearizedBaseContracts": [
								1776
							],
							"name": "Context",
							"nameLocation": "42129:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1765,
										"nodeType": "Block",
										"src": "42205:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1762,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "42222:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "42226:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "42222:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1761,
												"id": 1764,
												"nodeType": "Return",
												"src": "42215:17:0"
											}
										]
									},
									"id": 1766,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "42152:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42162:2:0"
									},
									"returnParameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1766,
												"src": "42196:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42196:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42195:9:0"
									},
									"scope": 1776,
									"src": "42143:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1774,
										"nodeType": "Block",
										"src": "42312:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1771,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "42329:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1772,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "42333:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "42329:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1773,
												"nodeType": "Return",
												"src": "42322:15:0"
											}
										]
									},
									"id": 1775,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "42254:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42262:2:0"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1775,
												"src": "42296:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1768,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "42296:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42295:16:0"
									},
									"scope": 1776,
									"src": "42245:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 4030,
							"src": "42111:235:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"id": 1777,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "42486:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1779,
										"name": "Context",
										"nameLocations": [
											"42733:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1776,
										"src": "42733:7:0"
									},
									"id": 1780,
									"nodeType": "InheritanceSpecifier",
									"src": "42733:7:0"
								},
								{
									"baseName": {
										"id": 1781,
										"name": "ERC165",
										"nameLocations": [
											"42742:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1372,
										"src": "42742:6:0"
									},
									"id": 1782,
									"nodeType": "InheritanceSpecifier",
									"src": "42742:6:0"
								},
								{
									"baseName": {
										"id": 1783,
										"name": "IERC1155",
										"nameLocations": [
											"42750:8:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1606,
										"src": "42750:8:0"
									},
									"id": 1784,
									"nodeType": "InheritanceSpecifier",
									"src": "42750:8:0"
								},
								{
									"baseName": {
										"id": 1785,
										"name": "IERC1155MetadataURI",
										"nameLocations": [
											"42760:19:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1619,
										"src": "42760:19:0"
									},
									"id": 1786,
									"nodeType": "InheritanceSpecifier",
									"src": "42760:19:0"
								},
								{
									"baseName": {
										"id": 1787,
										"name": "IERC1155Errors",
										"nameLocations": [
											"42781:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1755,
										"src": "42781:14:0"
									},
									"id": 1788,
									"nodeType": "InheritanceSpecifier",
									"src": "42781:14:0"
								}
							],
							"canonicalName": "ERC1155",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1778,
								"nodeType": "StructuredDocumentation",
								"src": "42519:184:0",
								"text": " @dev Implementation of the basic standard multi-token.\n See https://eips.ethereum.org/EIPS/eip-1155\n Originally based on code by Enjin: https://github.com/enjin/erc-1155"
							},
							"fullyImplemented": true,
							"id": 2811,
							"linearizedBaseContracts": [
								2811,
								1755,
								1619,
								1606,
								1372,
								1351,
								1776
							],
							"name": "ERC1155",
							"nameLocation": "42722:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1792,
									"libraryName": {
										"id": 1789,
										"name": "Arrays",
										"nameLocations": [
											"42808:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "42808:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "42802:27:0",
									"typeName": {
										"baseType": {
											"id": 1790,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "42819:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 1791,
										"nodeType": "ArrayTypeName",
										"src": "42819:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									}
								},
								{
									"global": false,
									"id": 1796,
									"libraryName": {
										"id": 1793,
										"name": "Arrays",
										"nameLocations": [
											"42840:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "42840:6:0"
									},
									"nodeType": "UsingForDirective",
									"src": "42834:27:0",
									"typeName": {
										"baseType": {
											"id": 1794,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "42851:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1795,
										"nodeType": "ArrayTypeName",
										"src": "42851:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									}
								},
								{
									"constant": false,
									"id": 1802,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "42934:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 2811,
									"src": "42867:76:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(uint256 => mapping(address => uint256))"
									},
									"typeName": {
										"id": 1801,
										"keyName": "id",
										"keyNameLocation": "42883:2:0",
										"keyType": {
											"id": 1797,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "42875:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "42867:58:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(uint256 => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1800,
											"keyName": "account",
											"keyNameLocation": "42905:7:0",
											"keyType": {
												"id": 1798,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "42897:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "42889:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1799,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "42916:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1808,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "43020:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 2811,
									"src": "42950:88:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 1807,
										"keyName": "account",
										"keyNameLocation": "42966:7:0",
										"keyType": {
											"id": 1803,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "42958:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "42950:61:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1806,
											"keyName": "operator",
											"keyNameLocation": "42993:8:0",
											"keyType": {
												"id": 1804,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "42985:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "42977:33:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 1805,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "43005:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1810,
									"mutability": "mutable",
									"name": "_uri",
									"nameLocation": "43174:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 2811,
									"src": "43159:19:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 1809,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "43159:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1820,
										"nodeType": "Block",
										"src": "43260:30:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1817,
															"name": "uri_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1813,
															"src": "43278:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1816,
														"name": "_setURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2434,
														"src": "43270:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (string memory)"
														}
													},
													"id": 1818,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "43270:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1819,
												"nodeType": "ExpressionStatement",
												"src": "43270:13:0"
											}
										]
									},
									"documentation": {
										"id": 1811,
										"nodeType": "StructuredDocumentation",
										"src": "43185:38:0",
										"text": " @dev See {_setURI}."
									},
									"id": 1821,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "uri_",
												"nameLocation": "43254:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 1821,
												"src": "43240:18:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1812,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "43240:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43239:20:0"
									},
									"returnParameters": {
										"id": 1815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "43260:0:0"
									},
									"scope": 2811,
									"src": "43228:62:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1350,
										1371
									],
									"body": {
										"id": 1851,
										"nodeType": "Block",
										"src": "43465:197:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1849,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1844,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1832,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "43494:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1834,
																			"name": "IERC1155",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1606,
																			"src": "43514:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1606_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155_$1606_$",
																				"typeString": "type(contract IERC1155)"
																			}
																		],
																		"id": 1833,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "43509:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1835,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43509:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155_$1606",
																		"typeString": "type(contract IERC1155)"
																	}
																},
																"id": 1836,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "43524:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "43509:26:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "43494:41:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 1843,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1838,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "43551:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1840,
																			"name": "IERC1155MetadataURI",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1619,
																			"src": "43571:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1619_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_contract$_IERC1155MetadataURI_$1619_$",
																				"typeString": "type(contract IERC1155MetadataURI)"
																			}
																		],
																		"id": 1839,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "43566:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 1841,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "43566:25:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_contract$_IERC1155MetadataURI_$1619",
																		"typeString": "type(contract IERC1155MetadataURI)"
																	}
																},
																"id": 1842,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "43592:11:0",
																"memberName": "interfaceId",
																"nodeType": "MemberAccess",
																"src": "43566:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"src": "43551:52:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "43494:109:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 1847,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1824,
																"src": "43643:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 1845,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "43619:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_ERC1155_$2811_$",
																	"typeString": "type(contract super ERC1155)"
																}
															},
															"id": 1846,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "43625:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1371,
															"src": "43619:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 1848,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "43619:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "43494:161:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1850,
												"nodeType": "Return",
												"src": "43475:180:0"
											}
										]
									},
									"documentation": {
										"id": 1822,
										"nodeType": "StructuredDocumentation",
										"src": "43296:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1852,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "43366:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1828,
										"nodeType": "OverrideSpecifier",
										"overrides": [
											{
												"id": 1826,
												"name": "ERC165",
												"nameLocations": [
													"43433:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1372,
												"src": "43433:6:0"
											},
											{
												"id": 1827,
												"name": "IERC165",
												"nameLocations": [
													"43441:7:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1351,
												"src": "43441:7:0"
											}
										],
										"src": "43424:25:0"
									},
									"parameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "43391:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "43384:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1823,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "43384:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43383:20:0"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1852,
												"src": "43459:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1829,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "43459:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "43458:6:0"
									},
									"scope": 2811,
									"src": "43357:305:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1618
									],
									"body": {
										"id": 1862,
										"nodeType": "Block",
										"src": "44136:28:0",
										"statements": [
											{
												"expression": {
													"id": 1860,
													"name": "_uri",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1810,
													"src": "44153:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 1859,
												"id": 1861,
												"nodeType": "Return",
												"src": "44146:11:0"
											}
										]
									},
									"documentation": {
										"id": 1853,
										"nodeType": "StructuredDocumentation",
										"src": "43668:388:0",
										"text": " @dev See {IERC1155MetadataURI-uri}.\n This implementation returns the same URI for *all* token types. It relies\n on the token type ID substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n Clients calling this function must replace the `\\{id\\}` substring with the\n actual token type ID."
									},
									"functionSelector": "0e89341c",
									"id": 1863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "uri",
									"nameLocation": "44070:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1856,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1855,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "44074:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44074:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44073:18:0"
									},
									"returnParameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "44121:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "44121:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44120:15:0"
									},
									"scope": 2811,
									"src": "44061:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1544
									],
									"body": {
										"id": 1879,
										"nodeType": "Block",
										"src": "44310:46:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1873,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1802,
															"src": "44327:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(uint256 => mapping(address => uint256))"
															}
														},
														"id": 1875,
														"indexExpression": {
															"id": 1874,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1868,
															"src": "44337:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "44327:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1877,
													"indexExpression": {
														"id": 1876,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "44341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "44327:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1872,
												"id": 1878,
												"nodeType": "Return",
												"src": "44320:29:0"
											}
										]
									},
									"documentation": {
										"id": 1864,
										"nodeType": "StructuredDocumentation",
										"src": "44170:49:0",
										"text": " @dev See {IERC1155-balanceOf}."
									},
									"functionSelector": "00fdd58e",
									"id": 1880,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "44233:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1866,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "44251:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "44243:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "44243:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1868,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "44268:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "44260:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1867,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44260:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44242:29:0"
									},
									"returnParameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1880,
												"src": "44301:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "44301:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44300:9:0"
									},
									"scope": 2811,
									"src": "44224:132:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1557
									],
									"body": {
										"id": 1949,
										"nodeType": "Block",
										"src": "44655:410:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1893,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "44669:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1894,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44678:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "44669:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 1895,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1887,
															"src": "44688:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 1896,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44692:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "44688:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44669:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1906,
												"nodeType": "IfStatement",
												"src": "44665:121:0",
												"trueBody": {
													"id": 1905,
													"nodeType": "Block",
													"src": "44700:86:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1899,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1887,
																			"src": "44747:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 1900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "44751:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "44747:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 1901,
																			"name": "accounts",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1884,
																			"src": "44759:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 1902,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "44768:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "44759:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1898,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "44721:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 1903,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "44721:54:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1904,
															"nodeType": "RevertStatement",
															"src": "44714:61:0"
														}
													]
												}
											},
											{
												"assignments": [
													1911
												],
												"declarations": [
													{
														"constant": false,
														"id": 1911,
														"mutability": "mutable",
														"name": "batchBalances",
														"nameLocation": "44813:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 1949,
														"src": "44796:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 1909,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "44796:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1910,
															"nodeType": "ArrayTypeName",
															"src": "44796:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1918,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1915,
																"name": "accounts",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1884,
																"src": "44843:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "44852:6:0",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "44843:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "44829:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (uint256[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 1912,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "44833:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1913,
															"nodeType": "ArrayTypeName",
															"src": "44833:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														}
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "44829:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "44796:63:0"
											},
											{
												"body": {
													"id": 1945,
													"nodeType": "Block",
													"src": "44916:112:0",
													"statements": [
														{
															"expression": {
																"id": 1943,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 1930,
																		"name": "batchBalances",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1911,
																		"src": "44930:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 1932,
																	"indexExpression": {
																		"id": 1931,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1920,
																		"src": "44944:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "44930:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 1936,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1920,
																					"src": "44987:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1934,
																					"name": "accounts",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1884,
																					"src": "44959:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																						"typeString": "address[] memory"
																					}
																				},
																				"id": 1935,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "44968:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1339,
																				"src": "44959:27:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$_t_address_$attached_to$_t_array$_t_address_$dyn_memory_ptr_$",
																					"typeString": "function (address[] memory,uint256) pure returns (address)"
																				}
																			},
																			"id": 1937,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44959:30:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [
																				{
																					"id": 1940,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1920,
																					"src": "45014:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 1938,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1887,
																					"src": "44991:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 1939,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "44995:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1326,
																				"src": "44991:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1941,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "44991:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1933,
																		"name": "balanceOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1880,
																		"src": "44949:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (address,uint256) view returns (uint256)"
																		}
																	},
																	"id": 1942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "44949:68:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "44930:87:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1944,
															"nodeType": "ExpressionStatement",
															"src": "44930:87:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1923,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1920,
														"src": "44890:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 1924,
															"name": "accounts",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "44894:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 1925,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "44903:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "44894:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "44890:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1946,
												"initializationExpression": {
													"assignments": [
														1920
													],
													"declarations": [
														{
															"constant": false,
															"id": 1920,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "44883:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 1946,
															"src": "44875:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 1919,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "44875:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 1922,
													"initialValue": {
														"hexValue": "30",
														"id": 1921,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "44887:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "44875:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 1928,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "44911:3:0",
														"subExpression": {
															"id": 1927,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1920,
															"src": "44913:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1929,
													"nodeType": "ExpressionStatement",
													"src": "44911:3:0"
												},
												"nodeType": "ForStatement",
												"src": "44870:158:0"
											},
											{
												"expression": {
													"id": 1947,
													"name": "batchBalances",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1911,
													"src": "45045:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
														"typeString": "uint256[] memory"
													}
												},
												"functionReturnParameters": 1892,
												"id": 1948,
												"nodeType": "Return",
												"src": "45038:20:0"
											}
										]
									},
									"documentation": {
										"id": 1881,
										"nodeType": "StructuredDocumentation",
										"src": "44362:146:0",
										"text": " @dev See {IERC1155-balanceOfBatch}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 1950,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "44522:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "44563:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "44546:25:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 1882,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "44546:7:0",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 1883,
													"nodeType": "ArrayTypeName",
													"src": "44546:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "44598:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "44581:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1885,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "44581:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1886,
													"nodeType": "ArrayTypeName",
													"src": "44581:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44536:71:0"
									},
									"returnParameters": {
										"id": 1892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1891,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1950,
												"src": "44637:16:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1889,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "44637:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1890,
													"nodeType": "ArrayTypeName",
													"src": "44637:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44636:18:0"
									},
									"scope": 2811,
									"src": "44513:552:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1565
									],
									"body": {
										"id": 1965,
										"nodeType": "Block",
										"src": "45208:69:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1959,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1766,
																"src": "45237:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45237:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1961,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1953,
															"src": "45251:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1962,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1955,
															"src": "45261:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1958,
														"name": "_setApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2656,
														"src": "45218:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 1963,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45218:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1964,
												"nodeType": "ExpressionStatement",
												"src": "45218:52:0"
											}
										]
									},
									"documentation": {
										"id": 1951,
										"nodeType": "StructuredDocumentation",
										"src": "45071:57:0",
										"text": " @dev See {IERC1155-setApprovalForAll}."
									},
									"functionSelector": "a22cb465",
									"id": 1966,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "45142:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "45168:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "45160:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1952,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45160:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "45183:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1966,
												"src": "45178:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1954,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45178:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45159:33:0"
									},
									"returnParameters": {
										"id": 1957,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45208:0:0"
									},
									"scope": 2811,
									"src": "45133:144:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1575
									],
									"body": {
										"id": 1982,
										"nodeType": "Block",
										"src": "45440:61:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 1976,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "45457:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 1978,
														"indexExpression": {
															"id": 1977,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1969,
															"src": "45476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "45457:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 1980,
													"indexExpression": {
														"id": 1979,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1971,
														"src": "45485:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "45457:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1975,
												"id": 1981,
												"nodeType": "Return",
												"src": "45450:44:0"
											}
										]
									},
									"documentation": {
										"id": 1967,
										"nodeType": "StructuredDocumentation",
										"src": "45283:56:0",
										"text": " @dev See {IERC1155-isApprovedForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1983,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "45353:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "45378:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "45370:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1968,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45370:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "45395:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "45387:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1970,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45387:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45369:35:0"
									},
									"returnParameters": {
										"id": 1975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1974,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1983,
												"src": "45434:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1973,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "45434:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45433:6:0"
									},
									"scope": 2811,
									"src": "45344:157:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1589
									],
									"body": {
										"id": 2026,
										"nodeType": "Block",
										"src": "45681:238:0",
										"statements": [
											{
												"assignments": [
													1998
												],
												"declarations": [
													{
														"constant": false,
														"id": 1998,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "45699:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2026,
														"src": "45691:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1997,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "45691:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2001,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1999,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "45708:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2000,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45708:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "45691:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2004,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2002,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "45734:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2003,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "45742:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "45734:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "45752:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 2006,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1986,
																	"src": "45770:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2007,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "45776:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2005,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "45753:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2008,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "45753:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "45734:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2017,
												"nodeType": "IfStatement",
												"src": "45730:129:0",
												"trueBody": {
													"id": 2016,
													"nodeType": "Block",
													"src": "45785:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2012,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1998,
																		"src": "45835:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2013,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1986,
																		"src": "45843:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2011,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "45806:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "45806:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2015,
															"nodeType": "RevertStatement",
															"src": "45799:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2019,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1986,
															"src": "45886:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2020,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "45892:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2021,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1990,
															"src": "45896:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2022,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1992,
															"src": "45900:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2023,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1994,
															"src": "45907:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2018,
														"name": "_safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2368,
														"src": "45868:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory)"
														}
													},
													"id": 2024,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "45868:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2025,
												"nodeType": "ExpressionStatement",
												"src": "45868:44:0"
											}
										]
									},
									"documentation": {
										"id": 1984,
										"nodeType": "StructuredDocumentation",
										"src": "45507:56:0",
										"text": " @dev See {IERC1155-safeTransferFrom}."
									},
									"functionSelector": "f242432a",
									"id": 2027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "45577:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "45602:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "45594:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1988,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "45616:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "45608:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1987,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "45608:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1990,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "45628:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "45620:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1989,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "45640:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "45632:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "45632:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "45660:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2027,
												"src": "45647:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1993,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "45647:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "45593:72:0"
									},
									"returnParameters": {
										"id": 1996,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "45681:0:0"
									},
									"scope": 2811,
									"src": "45568:351:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1605
									],
									"body": {
										"id": 2072,
										"nodeType": "Block",
										"src": "46175:245:0",
										"statements": [
											{
												"assignments": [
													2044
												],
												"declarations": [
													{
														"constant": false,
														"id": 2044,
														"mutability": "mutable",
														"name": "sender",
														"nameLocation": "46193:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2072,
														"src": "46185:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2043,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "46185:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2047,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2045,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "46202:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46202:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "46185:29:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 2056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 2050,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2048,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "46228:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 2049,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2044,
															"src": "46236:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "46228:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "46246:31:0",
														"subExpression": {
															"arguments": [
																{
																	"id": 2052,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2030,
																	"src": "46264:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2053,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2044,
																	"src": "46270:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2051,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1983,
																"src": "46247:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 2054,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "46247:30:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "46228:49:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2063,
												"nodeType": "IfStatement",
												"src": "46224:129:0",
												"trueBody": {
													"id": 2062,
													"nodeType": "Block",
													"src": "46279:74:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2058,
																		"name": "sender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2044,
																		"src": "46329:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2059,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2030,
																		"src": "46337:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2057,
																	"name": "ERC1155MissingApprovalForAll",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1737,
																	"src": "46300:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (address,address) pure"
																	}
																},
																"id": 2060,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "46300:42:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2061,
															"nodeType": "RevertStatement",
															"src": "46293:49:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2065,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "46385:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2066,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "46391:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2067,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2035,
															"src": "46395:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2068,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2038,
															"src": "46400:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2069,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2040,
															"src": "46408:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2064,
														"name": "_safeBatchTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2423,
														"src": "46362:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2070,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "46362:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2071,
												"nodeType": "ExpressionStatement",
												"src": "46362:51:0"
											}
										]
									},
									"documentation": {
										"id": 2028,
										"nodeType": "StructuredDocumentation",
										"src": "45925:61:0",
										"text": " @dev See {IERC1155-safeBatchTransferFrom}."
									},
									"functionSelector": "2eb2c2d6",
									"id": 2073,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "46000:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2041,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "46039:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "46031:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46031:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "46061:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "46053:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "46053:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "46090:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "46073:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2033,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "46073:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2034,
													"nodeType": "ArrayTypeName",
													"src": "46073:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "46120:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "46103:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2036,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "46103:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2037,
													"nodeType": "ArrayTypeName",
													"src": "46103:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2040,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "46149:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2073,
												"src": "46136:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2039,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "46136:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "46021:138:0"
									},
									"returnParameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "46175:0:0"
									},
									"scope": 2811,
									"src": "45991:429:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "47228:1174:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2091,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2087,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "47242:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2088,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47246:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47242:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 2089,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2084,
															"src": "47256:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2090,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47263:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47256:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47242:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2100,
												"nodeType": "IfStatement",
												"src": "47238:117:0",
												"trueBody": {
													"id": 2099,
													"nodeType": "Block",
													"src": "47271:84:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2093,
																			"name": "ids",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2081,
																			"src": "47318:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "47322:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "47318:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 2095,
																			"name": "values",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2084,
																			"src": "47330:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																				"typeString": "uint256[] memory"
																			}
																		},
																		"id": 2096,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "47337:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "47330:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2092,
																	"name": "ERC1155InvalidArrayLength",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "47292:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256) pure"
																	}
																},
																"id": 2097,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47292:52:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2098,
															"nodeType": "RevertStatement",
															"src": "47285:59:0"
														}
													]
												}
											},
											{
												"assignments": [
													2102
												],
												"declarations": [
													{
														"constant": false,
														"id": 2102,
														"mutability": "mutable",
														"name": "operator",
														"nameLocation": "47373:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 2225,
														"src": "47365:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2101,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "47365:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2105,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2103,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "47384:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 2104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "47384:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "47365:31:0"
											},
											{
												"body": {
													"id": 2186,
													"nodeType": "Block",
													"src": "47448:650:0",
													"statements": [
														{
															"assignments": [
																2118
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2118,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "47470:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2186,
																	"src": "47462:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2117,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "47462:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2123,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2121,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "47498:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2119,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "47475:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2120,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47479:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1326,
																	"src": "47475:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47475:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "47462:38:0"
														},
														{
															"assignments": [
																2125
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2125,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "47522:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2186,
																	"src": "47514:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2124,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "47514:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2130,
															"initialValue": {
																"arguments": [
																	{
																		"id": 2128,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2107,
																		"src": "47556:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2126,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "47530:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "47537:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1326,
																	"src": "47530:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2129,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "47530:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "47514:44:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2131,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2076,
																	"src": "47577:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2134,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "47593:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "47585:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2132,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "47585:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2135,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "47585:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "47577:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2169,
															"nodeType": "IfStatement",
															"src": "47573:420:0",
															"trueBody": {
																"id": 2168,
																"nodeType": "Block",
																"src": "47597:396:0",
																"statements": [
																	{
																		"assignments": [
																			2138
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2138,
																				"mutability": "mutable",
																				"name": "fromBalance",
																				"nameLocation": "47623:11:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2168,
																				"src": "47615:19:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2137,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "47615:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2144,
																		"initialValue": {
																			"baseExpression": {
																				"baseExpression": {
																					"id": 2139,
																					"name": "_balances",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1802,
																					"src": "47637:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(uint256 => mapping(address => uint256))"
																					}
																				},
																				"id": 2141,
																				"indexExpression": {
																					"id": 2140,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2118,
																					"src": "47647:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "47637:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 2143,
																			"indexExpression": {
																				"id": 2142,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2076,
																				"src": "47651:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "47637:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "47615:41:0"
																	},
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2147,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 2145,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2138,
																				"src": "47678:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<",
																			"rightExpression": {
																				"id": 2146,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2125,
																				"src": "47692:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "47678:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2156,
																		"nodeType": "IfStatement",
																		"src": "47674:129:0",
																		"trueBody": {
																			"id": 2155,
																			"nodeType": "Block",
																			"src": "47699:104:0",
																			"statements": [
																				{
																					"errorCall": {
																						"arguments": [
																							{
																								"id": 2149,
																								"name": "from",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2076,
																								"src": "47755:4:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 2150,
																								"name": "fromBalance",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2138,
																								"src": "47761:11:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2151,
																								"name": "value",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2125,
																								"src": "47774:5:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 2152,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2118,
																								"src": "47781:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							],
																							"id": 2148,
																							"name": "ERC1155InsufficientBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1720,
																							"src": "47728:26:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																								"typeString": "function (address,uint256,uint256,uint256) pure"
																							}
																						},
																						"id": 2153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "47728:56:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2154,
																					"nodeType": "RevertStatement",
																					"src": "47721:63:0"
																				}
																			]
																		}
																	},
																	{
																		"id": 2167,
																		"nodeType": "UncheckedBlock",
																		"src": "47820:159:0",
																		"statements": [
																			{
																				"expression": {
																					"id": 2165,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftHandSide": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 2157,
																								"name": "_balances",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1802,
																								"src": "47919:9:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																									"typeString": "mapping(uint256 => mapping(address => uint256))"
																								}
																							},
																							"id": 2160,
																							"indexExpression": {
																								"id": 2158,
																								"name": "id",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2118,
																								"src": "47929:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "47919:13:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 2161,
																						"indexExpression": {
																							"id": 2159,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2076,
																							"src": "47933:4:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "47919:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "Assignment",
																					"operator": "=",
																					"rightHandSide": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2164,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 2162,
																							"name": "fromBalance",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2138,
																							"src": "47941:11:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "-",
																						"rightExpression": {
																							"id": 2163,
																							"name": "value",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2125,
																							"src": "47955:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "47941:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "47919:41:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"id": 2166,
																				"nodeType": "ExpressionStatement",
																				"src": "47919:41:0"
																			}
																		]
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2175,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2170,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2078,
																	"src": "48011:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 2173,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "48025:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 2172,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "48017:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2171,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "48017:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2174,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "48017:10:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "48011:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2185,
															"nodeType": "IfStatement",
															"src": "48007:81:0",
															"trueBody": {
																"id": 2184,
																"nodeType": "Block",
																"src": "48029:59:0",
																"statements": [
																	{
																		"expression": {
																			"id": 2182,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"baseExpression": {
																						"id": 2176,
																						"name": "_balances",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1802,
																						"src": "48047:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_uint256_$_$",
																							"typeString": "mapping(uint256 => mapping(address => uint256))"
																						}
																					},
																					"id": 2179,
																					"indexExpression": {
																						"id": 2177,
																						"name": "id",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2118,
																						"src": "48057:2:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "48047:13:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																						"typeString": "mapping(address => uint256)"
																					}
																				},
																				"id": 2180,
																				"indexExpression": {
																					"id": 2178,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2078,
																					"src": "48061:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "48047:17:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"id": 2181,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2125,
																				"src": "48068:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "48047:26:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2183,
																		"nodeType": "ExpressionStatement",
																		"src": "48047:26:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2110,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2107,
														"src": "47427:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2111,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "47431:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "47435:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "47431:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "47427:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2187,
												"initializationExpression": {
													"assignments": [
														2107
													],
													"declarations": [
														{
															"constant": false,
															"id": 2107,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "47420:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 2187,
															"src": "47412:9:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2106,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "47412:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2109,
													"initialValue": {
														"hexValue": "30",
														"id": 2108,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "47424:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "47412:13:0"
												},
												"loopExpression": {
													"expression": {
														"id": 2115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": true,
														"src": "47443:3:0",
														"subExpression": {
															"id": 2114,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2107,
															"src": "47445:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2116,
													"nodeType": "ExpressionStatement",
													"src": "47443:3:0"
												},
												"nodeType": "ForStatement",
												"src": "47407:691:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2188,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2081,
															"src": "48112:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2189,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "48116:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "48112:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2190,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "48126:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "48112:15:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2223,
													"nodeType": "Block",
													"src": "48320:76:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2216,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "48353:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2217,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "48363:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2218,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "48369:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2219,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "48373:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2220,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "48378:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	],
																	"id": 2215,
																	"name": "TransferBatch",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1518,
																	"src": "48339:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,address,uint256[] memory,uint256[] memory)"
																	}
																},
																"id": 2221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48339:46:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2222,
															"nodeType": "EmitStatement",
															"src": "48334:51:0"
														}
													]
												},
												"id": 2224,
												"nodeType": "IfStatement",
												"src": "48108:288:0",
												"trueBody": {
													"id": 2214,
													"nodeType": "Block",
													"src": "48129:185:0",
													"statements": [
														{
															"assignments": [
																2193
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2193,
																	"mutability": "mutable",
																	"name": "id",
																	"nameLocation": "48151:2:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2214,
																	"src": "48143:10:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2192,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "48143:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2198,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "48179:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2194,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2081,
																		"src": "48156:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2195,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "48160:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1326,
																	"src": "48156:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2197,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48156:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "48143:38:0"
														},
														{
															"assignments": [
																2200
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2200,
																	"mutability": "mutable",
																	"name": "value",
																	"nameLocation": "48203:5:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2214,
																	"src": "48195:13:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2199,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "48195:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2205,
															"initialValue": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "48237:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 2201,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2084,
																		"src": "48211:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "48218:18:0",
																	"memberName": "unsafeMemoryAccess",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1326,
																	"src": "48211:25:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																	}
																},
																"id": 2204,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48211:28:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "48195:44:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2207,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2102,
																		"src": "48273:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2208,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2076,
																		"src": "48283:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2209,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2078,
																		"src": "48289:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2210,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2193,
																		"src": "48293:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2211,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2200,
																		"src": "48297:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2206,
																	"name": "TransferSingle",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1503,
																	"src": "48258:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,address,uint256,uint256)"
																	}
																},
																"id": 2212,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "48258:45:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2213,
															"nodeType": "EmitStatement",
															"src": "48253:50:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2074,
										"nodeType": "StructuredDocumentation",
										"src": "46426:690:0",
										"text": " @dev Transfers a `value` amount of tokens of type `id` from `from` to `to`. Will mint (or burn) if `from`\n (or `to`) is the zero address.\n Emits a {TransferSingle} event if the arrays contain one element, and {TransferBatch} otherwise.\n Requirements:\n - If `to` refers to a smart contract, it must implement either {IERC1155Receiver-onERC1155Received}\n   or {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\n - `ids` and `values` must have the same length.\n NOTE: The ERC-1155 acceptance check is not performed in this function. See {_updateWithAcceptanceCheck} instead."
									},
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "47130:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2076,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "47146:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "47138:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2075,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47138:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "47160:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "47152:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "47152:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2081,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "47181:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "47164:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2079,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47164:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2080,
													"nodeType": "ArrayTypeName",
													"src": "47164:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "47203:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "47186:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2082,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "47186:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2083,
													"nodeType": "ArrayTypeName",
													"src": "47186:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "47137:73:0"
									},
									"returnParameters": {
										"id": 2086,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "47228:0:0"
									},
									"scope": 2811,
									"src": "47121:1281:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2301,
										"nodeType": "Block",
										"src": "49172:499:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2243,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2229,
															"src": "49190:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2244,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2231,
															"src": "49196:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2245,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "49200:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2246,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "49205:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														],
														"id": 2242,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2226,
														"src": "49182:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "49182:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "49182:30:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2249,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2231,
														"src": "49226:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2252,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "49240:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "49232:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2250,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "49232:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2253,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "49232:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "49226:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2300,
												"nodeType": "IfStatement",
												"src": "49222:443:0",
												"trueBody": {
													"id": 2299,
													"nodeType": "Block",
													"src": "49244:421:0",
													"statements": [
														{
															"assignments": [
																2256
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2256,
																	"mutability": "mutable",
																	"name": "operator",
																	"nameLocation": "49266:8:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 2299,
																	"src": "49258:16:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	"typeName": {
																		"id": 2255,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "49258:7:0",
																		"stateMutability": "nonpayable",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2259,
															"initialValue": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2257,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1766,
																	"src": "49277:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 2258,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "49277:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "49258:31:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2260,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2234,
																		"src": "49307:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	"id": 2261,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "49311:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "49307:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2262,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "49321:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "49307:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 2297,
																"nodeType": "Block",
																"src": "49548:107:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2289,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2256,
																					"src": "49602:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2290,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2229,
																					"src": "49612:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2291,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2231,
																					"src": "49618:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2292,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "49622:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2293,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2237,
																					"src": "49627:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				{
																					"id": 2294,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2239,
																					"src": "49635:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2288,
																				"name": "_doSafeBatchTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2794,
																				"src": "49566:35:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256[] memory,uint256[] memory,bytes memory)"
																				}
																			},
																			"id": 2295,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49566:74:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2296,
																		"nodeType": "ExpressionStatement",
																		"src": "49566:74:0"
																	}
																]
															},
															"id": 2298,
															"nodeType": "IfStatement",
															"src": "49303:352:0",
															"trueBody": {
																"id": 2287,
																"nodeType": "Block",
																"src": "49324:218:0",
																"statements": [
																	{
																		"assignments": [
																			2265
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2265,
																				"mutability": "mutable",
																				"name": "id",
																				"nameLocation": "49350:2:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2287,
																				"src": "49342:10:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2264,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "49342:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2270,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "49378:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2266,
																					"name": "ids",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2234,
																					"src": "49355:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2267,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "49359:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1326,
																				"src": "49355:22:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2269,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49355:25:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "49342:38:0"
																	},
																	{
																		"assignments": [
																			2272
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 2272,
																				"mutability": "mutable",
																				"name": "value",
																				"nameLocation": "49406:5:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2287,
																				"src": "49398:13:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 2271,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "49398:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 2277,
																		"initialValue": {
																			"arguments": [
																				{
																					"hexValue": "30",
																					"id": 2275,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "49440:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"expression": {
																					"id": 2273,
																					"name": "values",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2237,
																					"src": "49414:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "49421:18:0",
																				"memberName": "unsafeMemoryAccess",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1326,
																				"src": "49414:25:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$returns$_t_uint256_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
																					"typeString": "function (uint256[] memory,uint256) pure returns (uint256)"
																				}
																			},
																			"id": 2276,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49414:28:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "VariableDeclarationStatement",
																		"src": "49398:44:0"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 2279,
																					"name": "operator",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2256,
																					"src": "49491:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2280,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2229,
																					"src": "49501:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2281,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2231,
																					"src": "49507:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2282,
																					"name": "id",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2265,
																					"src": "49511:2:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2283,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2272,
																					"src": "49515:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 2284,
																					"name": "data",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2239,
																					"src": "49522:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_bytes_memory_ptr",
																						"typeString": "bytes memory"
																					}
																				],
																				"id": 2278,
																				"name": "_doSafeTransferAcceptanceCheck",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2724,
																				"src": "49460:30:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																					"typeString": "function (address,address,address,uint256,uint256,bytes memory)"
																				}
																			},
																			"id": 2285,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "49460:67:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2286,
																		"nodeType": "ExpressionStatement",
																		"src": "49460:67:0"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2227,
										"nodeType": "StructuredDocumentation",
										"src": "48408:568:0",
										"text": " @dev Version of {_update} that performs the token acceptance check by calling\n {IERC1155Receiver-onERC1155Received} or {IERC1155Receiver-onERC1155BatchReceived} on the receiver address if it\n contains code (eg. is a smart contract at the moment of execution).\n IMPORTANT: Overriding this function is discouraged because it poses a reentrancy risk from the receiver. So any\n update to the contract state after this function would break the check-effect-interaction pattern. Consider\n overriding {_update} instead."
									},
									"id": 2302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_updateWithAcceptanceCheck",
									"nameLocation": "48990:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2229,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "49034:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "49026:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2231,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "49056:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "49048:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2230,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "49048:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "49085:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "49068:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2232,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49068:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2233,
													"nodeType": "ArrayTypeName",
													"src": "49068:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "49115:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "49098:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2235,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "49098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2236,
													"nodeType": "ArrayTypeName",
													"src": "49098:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "49144:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2302,
												"src": "49131:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2238,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "49131:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "49016:138:0"
									},
									"returnParameters": {
										"id": 2241,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "49172:0:0"
									},
									"scope": 2811,
									"src": "48981:690:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "50236:355:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2316,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "50250:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50264:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50256:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2317,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50256:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2320,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50256:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50250:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2330,
												"nodeType": "IfStatement",
												"src": "50246:88:0",
												"trueBody": {
													"id": 2329,
													"nodeType": "Block",
													"src": "50268:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2325,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50320:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50312:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2323,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50312:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50312:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2322,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "50289:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50289:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2328,
															"nodeType": "RevertStatement",
															"src": "50282:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2331,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2305,
														"src": "50347:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2334,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "50363:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2333,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "50355:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2332,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "50355:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "50355:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "50347:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2345,
												"nodeType": "IfStatement",
												"src": "50343:88:0",
												"trueBody": {
													"id": 2344,
													"nodeType": "Block",
													"src": "50367:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2340,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "50417:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2339,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "50409:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2338,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "50409:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2341,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "50409:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2337,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "50388:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "50388:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2343,
															"nodeType": "RevertStatement",
															"src": "50381:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2350,
													2353
												],
												"declarations": [
													{
														"constant": false,
														"id": 2350,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "50458:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "50441:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2348,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "50441:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2349,
															"nodeType": "ArrayTypeName",
															"src": "50441:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2353,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "50480:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "50463:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2351,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "50463:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2352,
															"nodeType": "ArrayTypeName",
															"src": "50463:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2358,
												"initialValue": {
													"arguments": [
														{
															"id": 2355,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2309,
															"src": "50509:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2356,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2311,
															"src": "50513:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2354,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "50490:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2357,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50490:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "50440:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2360,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2305,
															"src": "50556:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2361,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2307,
															"src": "50562:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2362,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2350,
															"src": "50566:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2363,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2353,
															"src": "50571:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2364,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2313,
															"src": "50579:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2359,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "50529:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "50529:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "50529:55:0"
											}
										]
									},
									"documentation": {
										"id": 2303,
										"nodeType": "StructuredDocumentation",
										"src": "49677:446:0",
										"text": " @dev Transfers a `value` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - `from` must have a balance of tokens of type `id` of at least `value` amount.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeTransferFrom",
									"nameLocation": "50137:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2305,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "50163:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "50155:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50155:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "50177:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "50169:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "50169:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2309,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "50189:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "50181:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50181:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2311,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "50201:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "50193:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "50193:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2313,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "50221:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "50208:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2312,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "50208:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "50154:72:0"
									},
									"returnParameters": {
										"id": 2315,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "50236:0:0"
									},
									"scope": 2811,
									"src": "50128:463:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2422,
										"nodeType": "Block",
										"src": "51171:266:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2384,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2373,
														"src": "51185:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2387,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51199:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51191:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2385,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51191:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51191:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51185:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2398,
												"nodeType": "IfStatement",
												"src": "51181:88:0",
												"trueBody": {
													"id": 2397,
													"nodeType": "Block",
													"src": "51203:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2393,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51255:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "51247:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2391,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "51247:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2394,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51247:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2390,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "51224:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2395,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51224:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2396,
															"nodeType": "RevertStatement",
															"src": "51217:41:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2399,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2371,
														"src": "51282:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2402,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "51298:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2401,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "51290:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2400,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "51290:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2403,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "51290:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "51282:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2413,
												"nodeType": "IfStatement",
												"src": "51278:88:0",
												"trueBody": {
													"id": 2412,
													"nodeType": "Block",
													"src": "51302:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "51352:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2407,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "51344:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2406,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "51344:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2409,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "51344:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2405,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "51323:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "51323:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2411,
															"nodeType": "RevertStatement",
															"src": "51316:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2415,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2371,
															"src": "51402:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2416,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "51408:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2417,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2376,
															"src": "51412:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2418,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2379,
															"src": "51417:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2419,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2381,
															"src": "51425:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2414,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "51375:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2420,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "51375:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2421,
												"nodeType": "ExpressionStatement",
												"src": "51375:55:0"
											}
										]
									},
									"documentation": {
										"id": 2369,
										"nodeType": "StructuredDocumentation",
										"src": "50597:390:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value.\n - `ids` and `values` must have the same length."
									},
									"id": 2423,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeBatchTransferFrom",
									"nameLocation": "51001:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "51041:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "51033:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51033:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "51063:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "51055:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "51055:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2376,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "51092:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "51075:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2374,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51075:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2375,
													"nodeType": "ArrayTypeName",
													"src": "51075:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2379,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "51122:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "51105:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2377,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "51105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2378,
													"nodeType": "ArrayTypeName",
													"src": "51105:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2381,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "51151:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2423,
												"src": "51138:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2380,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "51138:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "51023:138:0"
									},
									"returnParameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "51171:0:0"
									},
									"scope": 2811,
									"src": "50992:445:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2433,
										"nodeType": "Block",
										"src": "52315:30:0",
										"statements": [
											{
												"expression": {
													"id": 2431,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2429,
														"name": "_uri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1810,
														"src": "52325:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2430,
														"name": "newuri",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2426,
														"src": "52332:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "52325:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2432,
												"nodeType": "ExpressionStatement",
												"src": "52325:13:0"
											}
										]
									},
									"documentation": {
										"id": 2424,
										"nodeType": "StructuredDocumentation",
										"src": "51443:811:0",
										"text": " @dev Sets a new URI for all token types, by relying on the token type ID\n substitution mechanism\n https://eips.ethereum.org/EIPS/eip-1155#metadata[defined in the EIP].\n By this mechanism, any occurrence of the `\\{id\\}` substring in either the\n URI or any of the values in the JSON file at said URI will be replaced by\n clients with the token type ID.\n For example, the `https://token-cdn-domain/\\{id\\}.json` URI would be\n interpreted by clients as\n `https://token-cdn-domain/000000000000000000000000000000000000000000000000000000000004cce0.json`\n for token type ID 0x4cce0.\n See {uri}.\n Because these URIs cannot be meaningfully represented by the {URI} event,\n this function emits no events."
									},
									"id": 2434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setURI",
									"nameLocation": "52268:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2426,
												"mutability": "mutable",
												"name": "newuri",
												"nameLocation": "52290:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2434,
												"src": "52276:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2425,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "52276:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52275:22:0"
									},
									"returnParameters": {
										"id": 2428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52315:0:0"
									},
									"scope": 2811,
									"src": "52259:86:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2485,
										"nodeType": "Block",
										"src": "52805:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2446,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2437,
														"src": "52819:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2449,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "52833:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2448,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "52825:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2447,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "52825:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2450,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "52825:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "52819:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2460,
												"nodeType": "IfStatement",
												"src": "52815:88:0",
												"trueBody": {
													"id": 2459,
													"nodeType": "Block",
													"src": "52837:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2455,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "52889:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2454,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "52881:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2453,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "52881:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2456,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "52881:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2452,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "52858:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2457,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "52858:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2458,
															"nodeType": "RevertStatement",
															"src": "52851:41:0"
														}
													]
												}
											},
											{
												"assignments": [
													2465,
													2468
												],
												"declarations": [
													{
														"constant": false,
														"id": 2465,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "52930:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "52913:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2463,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52913:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2464,
															"nodeType": "ArrayTypeName",
															"src": "52913:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2468,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "52952:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2485,
														"src": "52935:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2466,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "52935:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2467,
															"nodeType": "ArrayTypeName",
															"src": "52935:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2473,
												"initialValue": {
													"arguments": [
														{
															"id": 2470,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2439,
															"src": "52981:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2471,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2441,
															"src": "52985:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2469,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "52962:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2472,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "52962:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "52912:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2477,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53036:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2476,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53028:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2475,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53028:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2478,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53028:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2479,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2437,
															"src": "53040:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2480,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2465,
															"src": "53044:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2481,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2468,
															"src": "53049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2482,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2443,
															"src": "53057:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2474,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "53001:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2483,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53001:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2484,
												"nodeType": "ExpressionStatement",
												"src": "53001:61:0"
											}
										]
									},
									"documentation": {
										"id": 2435,
										"nodeType": "StructuredDocumentation",
										"src": "52351:367:0",
										"text": " @dev Creates a `value` amount of tokens of type `id`, and assigns them to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"id": 2486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "52732:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2444,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2437,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "52746:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "52738:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2436,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "52738:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2439,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "52758:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "52750:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "52770:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "52762:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "52762:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2443,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "52790:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2486,
												"src": "52777:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2442,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "52777:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "52737:58:0"
									},
									"returnParameters": {
										"id": 2445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "52805:0:0"
									},
									"scope": 2811,
									"src": "52723:346:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2526,
										"nodeType": "Block",
										"src": "53607:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2500,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2489,
														"src": "53621:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2503,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "53635:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2502,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "53627:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2501,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "53627:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "53627:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "53621:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2514,
												"nodeType": "IfStatement",
												"src": "53617:88:0",
												"trueBody": {
													"id": 2513,
													"nodeType": "Block",
													"src": "53639:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2509,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "53691:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "53683:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2507,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "53683:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2510,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "53683:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2506,
																	"name": "ERC1155InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1730,
																	"src": "53660:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "53660:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2512,
															"nodeType": "RevertStatement",
															"src": "53653:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2518,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "53749:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2517,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "53741:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2516,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "53741:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2519,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "53741:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2520,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "53753:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2521,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2492,
															"src": "53757:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2522,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2495,
															"src": "53762:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2523,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2497,
															"src": "53770:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 2515,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "53714:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2524,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "53714:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2525,
												"nodeType": "ExpressionStatement",
												"src": "53714:61:0"
											}
										]
									},
									"documentation": {
										"id": 2487,
										"nodeType": "StructuredDocumentation",
										"src": "53075:420:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_mint}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `values` must have the same length.\n - `to` cannot be the zero address.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"id": 2527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintBatch",
									"nameLocation": "53509:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2489,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "53528:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "53520:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "53520:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2492,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "53549:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "53532:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2490,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53532:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2491,
													"nodeType": "ArrayTypeName",
													"src": "53532:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2495,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "53571:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "53554:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2493,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "53554:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2494,
													"nodeType": "ArrayTypeName",
													"src": "53554:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "53592:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2527,
												"src": "53579:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2496,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "53579:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "53519:78:0"
									},
									"returnParameters": {
										"id": 2499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "53607:0:0"
									},
									"scope": 2811,
									"src": "53500:282:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "54141:264:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2537,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2530,
														"src": "54155:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2540,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54171:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2539,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54163:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2538,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54163:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2541,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54163:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54155:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2551,
												"nodeType": "IfStatement",
												"src": "54151:88:0",
												"trueBody": {
													"id": 2550,
													"nodeType": "Block",
													"src": "54175:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2546,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54225:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2545,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54217:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2544,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54217:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54217:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2543,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "54196:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54196:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2549,
															"nodeType": "RevertStatement",
															"src": "54189:39:0"
														}
													]
												}
											},
											{
												"assignments": [
													2556,
													2559
												],
												"declarations": [
													{
														"constant": false,
														"id": 2556,
														"mutability": "mutable",
														"name": "ids",
														"nameLocation": "54266:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 2576,
														"src": "54249:20:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2554,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54249:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2555,
															"nodeType": "ArrayTypeName",
															"src": "54249:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 2559,
														"mutability": "mutable",
														"name": "values",
														"nameLocation": "54288:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 2576,
														"src": "54271:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
															"typeString": "uint256[]"
														},
														"typeName": {
															"baseType": {
																"id": 2557,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "54271:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2558,
															"nodeType": "ArrayTypeName",
															"src": "54271:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																"typeString": "uint256[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2564,
												"initialValue": {
													"arguments": [
														{
															"id": 2561,
															"name": "id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2532,
															"src": "54317:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2562,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2534,
															"src": "54321:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2560,
														"name": "_asSingletonArrays",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2810,
														"src": "54298:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (uint256[] memory,uint256[] memory)"
														}
													},
													"id": 2563,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54298:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
														"typeString": "tuple(uint256[] memory,uint256[] memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "54248:79:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2566,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2530,
															"src": "54364:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2569,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54378:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2568,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "54370:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2567,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "54370:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54370:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2556,
															"src": "54382:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2572,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2559,
															"src": "54387:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "54395:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2565,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "54337:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54337:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "ExpressionStatement",
												"src": "54337:61:0"
											}
										]
									},
									"documentation": {
										"id": 2528,
										"nodeType": "StructuredDocumentation",
										"src": "53788:283:0",
										"text": " @dev Destroys a `value` amount of tokens of type `id` from `from`\n Emits a {TransferSingle} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`."
									},
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "54085:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2530,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54099:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "54091:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2529,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54091:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2532,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "54113:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "54105:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2531,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54105:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2534,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "54125:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "54117:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "54117:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54090:41:0"
									},
									"returnParameters": {
										"id": 2536,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54141:0:0"
									},
									"scope": 2811,
									"src": "54076:329:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2615,
										"nodeType": "Block",
										"src": "54851:175:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2594,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2589,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2580,
														"src": "54865:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "54881:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2591,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "54873:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2590,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "54873:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2593,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "54873:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "54865:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2603,
												"nodeType": "IfStatement",
												"src": "54861:88:0",
												"trueBody": {
													"id": 2602,
													"nodeType": "Block",
													"src": "54885:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "54935:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2597,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "54927:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2596,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "54927:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2599,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "54927:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2595,
																	"name": "ERC1155InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1725,
																	"src": "54906:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "54906:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2601,
															"nodeType": "RevertStatement",
															"src": "54899:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2605,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2580,
															"src": "54985:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 2608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "54999:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2607,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "54991:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2606,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "54991:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 2609,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "54991:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2610,
															"name": "ids",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2583,
															"src": "55003:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"id": 2611,
															"name": "values",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2586,
															"src": "55008:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														{
															"hexValue": "",
															"id": 2612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "55016:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 2604,
														"name": "_updateWithAcceptanceCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2302,
														"src": "54958:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory)"
														}
													},
													"id": 2613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "54958:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2614,
												"nodeType": "ExpressionStatement",
												"src": "54958:61:0"
											}
										]
									},
									"documentation": {
										"id": 2578,
										"nodeType": "StructuredDocumentation",
										"src": "54411:345:0",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {_burn}.\n Emits a {TransferBatch} event.\n Requirements:\n - `from` cannot be the zero address.\n - `from` must have at least `value` amount of tokens of type `id`.\n - `ids` and `values` must have the same length."
									},
									"id": 2616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burnBatch",
									"nameLocation": "54770:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2580,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "54789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "54781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2579,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "54781:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2583,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "54812:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "54795:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2581,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "54795:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2582,
													"nodeType": "ArrayTypeName",
													"src": "54795:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2586,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "54834:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2616,
												"src": "54817:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2584,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "54817:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2585,
													"nodeType": "ArrayTypeName",
													"src": "54817:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "54780:61:0"
									},
									"returnParameters": {
										"id": 2588,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "54851:0:0"
									},
									"scope": 2811,
									"src": "54761:265:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2655,
										"nodeType": "Block",
										"src": "55338:222:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 2631,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2626,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2621,
														"src": "55352:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 2629,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "55372:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 2628,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "55364:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 2627,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "55364:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 2630,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "55364:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "55352:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2640,
												"nodeType": "IfStatement",
												"src": "55348:94:0",
												"trueBody": {
													"id": 2639,
													"nodeType": "Block",
													"src": "55376:66:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 2635,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "55428:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 2634,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "55420:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 2633,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "55420:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 2636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55420:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 2632,
																	"name": "ERC1155InvalidOperator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1747,
																	"src": "55397:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 2637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55397:34:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2638,
															"nodeType": "RevertStatement",
															"src": "55390:41:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2641,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1808,
																"src": "55451:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 2644,
															"indexExpression": {
																"id": 2642,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2619,
																"src": "55470:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "55451:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2645,
														"indexExpression": {
															"id": 2643,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "55477:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "55451:35:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2646,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2623,
														"src": "55489:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "55451:46:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2648,
												"nodeType": "ExpressionStatement",
												"src": "55451:46:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2650,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2619,
															"src": "55527:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2651,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2621,
															"src": "55534:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2652,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2623,
															"src": "55544:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 2649,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1527,
														"src": "55512:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 2653,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "55512:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2654,
												"nodeType": "EmitStatement",
												"src": "55507:46:0"
											}
										]
									},
									"documentation": {
										"id": 2617,
										"nodeType": "StructuredDocumentation",
										"src": "55032:208:0",
										"text": " @dev Approve `operator` to operate on all of `owner` tokens\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the zero address."
									},
									"id": 2656,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setApprovalForAll",
									"nameLocation": "55254:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2619,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "55281:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "55273:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2621,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55296:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "55288:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2620,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55288:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2623,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "55311:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2656,
												"src": "55306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "55306:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55272:48:0"
									},
									"returnParameters": {
										"id": 2625,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55338:0:0"
									},
									"scope": 2811,
									"src": "55245:315:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2723,
										"nodeType": "Block",
										"src": "55930:782:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2676,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2672,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2663,
																"src": "55944:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2673,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "55947:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "55944:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2674,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "55952:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "55944:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2675,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "55961:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "55944:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2722,
												"nodeType": "IfStatement",
												"src": "55940:766:0",
												"trueBody": {
													"id": 2721,
													"nodeType": "Block",
													"src": "55964:742:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2701,
																		"nodeType": "Block",
																		"src": "56080:206:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2694,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2690,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2688,
																						"src": "56102:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2691,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1411,
																								"src": "56114:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 2692,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "56131:17:0",
																							"memberName": "onERC1155Received",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1392,
																							"src": "56114:34:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155Received(address,address,uint256,uint256,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2693,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "56149:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "56114:43:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "56102:55:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2700,
																				"nodeType": "IfStatement",
																				"src": "56098:174:0",
																				"trueBody": {
																					"id": 2699,
																					"nodeType": "Block",
																					"src": "56159:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2696,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2663,
																										"src": "56250:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2695,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1730,
																									"src": "56227:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2697,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56227:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2698,
																							"nodeType": "RevertStatement",
																							"src": "56220:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2702,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2689,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2688,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "56070:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2702,
																				"src": "56063:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2687,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "56063:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56062:17:0"
																	},
																	"src": "56054:232:0"
																},
																{
																	"block": {
																		"id": 2718,
																		"nodeType": "Block",
																		"src": "56315:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2709,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2706,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2704,
																							"src": "56337:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2707,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "56344:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "56337:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2708,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "56354:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "56337:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2716,
																					"nodeType": "Block",
																					"src": "56492:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "56578:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "56615:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "56619:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "56611:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "56611:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "56634:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "56628:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "56628:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "56604:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "56604:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "56604:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2704,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56619:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2704,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "56634:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2715,
																							"nodeType": "InlineAssembly",
																							"src": "56569:95:0"
																						}
																					]
																				},
																				"id": 2717,
																				"nodeType": "IfStatement",
																				"src": "56333:349:0",
																				"trueBody": {
																					"id": 2714,
																					"nodeType": "Block",
																					"src": "56357:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2711,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2663,
																										"src": "56464:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2710,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1730,
																									"src": "56441:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2712,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "56441:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2713,
																							"nodeType": "RevertStatement",
																							"src": "56434:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2719,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2705,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2704,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "56307:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2719,
																				"src": "56294:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2703,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "56294:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "56293:21:0"
																	},
																	"src": "56287:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 2681,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2659,
																		"src": "56021:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2682,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2661,
																		"src": "56031:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2683,
																		"name": "id",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2665,
																		"src": "56037:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2684,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2667,
																		"src": "56041:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2685,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2669,
																		"src": "56048:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2678,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2663,
																				"src": "55999:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2677,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "55982:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2679,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "55982:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1411",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2680,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "56003:17:0",
																	"memberName": "onERC1155Received",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1392,
																	"src": "55982:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2686,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "55982:71:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2720,
															"nodeType": "TryStatement",
															"src": "55978:718:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2657,
										"nodeType": "StructuredDocumentation",
										"src": "55566:167:0",
										"text": " @dev Performs an acceptance check by calling {IERC1155-onERC1155Received} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 2724,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeTransferAcceptanceCheck",
									"nameLocation": "55747:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2659,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "55795:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "55787:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2658,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55787:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2661,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "55821:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "55813:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2660,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55813:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2663,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "55843:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "55835:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2662,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "55835:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "55863:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "55855:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2664,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55855:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2667,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "55883:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "55875:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2666,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "55875:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2669,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "55911:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2724,
												"src": "55898:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2668,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "55898:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "55777:144:0"
									},
									"returnParameters": {
										"id": 2671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "55930:0:0"
									},
									"scope": 2811,
									"src": "55738:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2793,
										"nodeType": "Block",
										"src": "57117:824:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 2742,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2731,
																"src": "57131:2:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2743,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "57134:4:0",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "57131:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 2744,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "57139:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "57131:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2745,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "57148:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "57131:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2792,
												"nodeType": "IfStatement",
												"src": "57127:808:0",
												"trueBody": {
													"id": 2791,
													"nodeType": "Block",
													"src": "57151:784:0",
													"statements": [
														{
															"clauses": [
																{
																	"block": {
																		"id": 2771,
																		"nodeType": "Block",
																		"src": "57304:211:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					},
																					"id": 2764,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 2760,
																						"name": "response",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2758,
																						"src": "57326:8:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"expression": {
																							"expression": {
																								"id": 2761,
																								"name": "IERC1155Receiver",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1411,
																								"src": "57338:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																									"typeString": "type(contract IERC1155Receiver)"
																								}
																							},
																							"id": 2762,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberLocation": "57355:22:0",
																							"memberName": "onERC1155BatchReceived",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 1410,
																							"src": "57338:39:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_array$_t_uint256_$dyn_calldata_ptr_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
																								"typeString": "function IERC1155Receiver.onERC1155BatchReceived(address,address,uint256[] calldata,uint256[] calldata,bytes calldata) returns (bytes4)"
																							}
																						},
																						"id": 2763,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"memberLocation": "57378:8:0",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "57338:48:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					},
																					"src": "57326:60:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 2770,
																				"nodeType": "IfStatement",
																				"src": "57322:179:0",
																				"trueBody": {
																					"id": 2769,
																					"nodeType": "Block",
																					"src": "57388:113:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2766,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2731,
																										"src": "57479:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2765,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1730,
																									"src": "57456:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2767,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "57456:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2768,
																							"nodeType": "RevertStatement",
																							"src": "57449:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2772,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2759,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2758,
																				"mutability": "mutable",
																				"name": "response",
																				"nameLocation": "57281:8:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2772,
																				"src": "57274:15:0",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				},
																				"typeName": {
																					"id": 2757,
																					"name": "bytes4",
																					"nodeType": "ElementaryTypeName",
																					"src": "57274:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "57256:47:0"
																	},
																	"src": "57248:267:0"
																},
																{
																	"block": {
																		"id": 2788,
																		"nodeType": "Block",
																		"src": "57544:381:0",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2779,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2776,
																							"name": "reason",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2774,
																							"src": "57566:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						},
																						"id": 2777,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "57573:6:0",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "57566:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "==",
																					"rightExpression": {
																						"hexValue": "30",
																						"id": 2778,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "57583:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					},
																					"src": "57566:18:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"falseBody": {
																					"id": 2786,
																					"nodeType": "Block",
																					"src": "57721:190:0",
																					"statements": [
																						{
																							"AST": {
																								"nodeType": "YulBlock",
																								"src": "57807:86:0",
																								"statements": [
																									{
																										"expression": {
																											"arguments": [
																												{
																													"arguments": [
																														{
																															"kind": "number",
																															"nodeType": "YulLiteral",
																															"src": "57844:2:0",
																															"type": "",
																															"value": "32"
																														},
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "57848:6:0"
																														}
																													],
																													"functionName": {
																														"name": "add",
																														"nodeType": "YulIdentifier",
																														"src": "57840:3:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "57840:15:0"
																												},
																												{
																													"arguments": [
																														{
																															"name": "reason",
																															"nodeType": "YulIdentifier",
																															"src": "57863:6:0"
																														}
																													],
																													"functionName": {
																														"name": "mload",
																														"nodeType": "YulIdentifier",
																														"src": "57857:5:0"
																													},
																													"nodeType": "YulFunctionCall",
																													"src": "57857:13:0"
																												}
																											],
																											"functionName": {
																												"name": "revert",
																												"nodeType": "YulIdentifier",
																												"src": "57833:6:0"
																											},
																											"nodeType": "YulFunctionCall",
																											"src": "57833:38:0"
																										},
																										"nodeType": "YulExpressionStatement",
																										"src": "57833:38:0"
																									}
																								]
																							},
																							"documentation": "@solidity memory-safe-assembly",
																							"evmVersion": "shanghai",
																							"externalReferences": [
																								{
																									"declaration": 2774,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "57848:6:0",
																									"valueSize": 1
																								},
																								{
																									"declaration": 2774,
																									"isOffset": false,
																									"isSlot": false,
																									"src": "57863:6:0",
																									"valueSize": 1
																								}
																							],
																							"id": 2785,
																							"nodeType": "InlineAssembly",
																							"src": "57798:95:0"
																						}
																					]
																				},
																				"id": 2787,
																				"nodeType": "IfStatement",
																				"src": "57562:349:0",
																				"trueBody": {
																					"id": 2784,
																					"nodeType": "Block",
																					"src": "57586:129:0",
																					"statements": [
																						{
																							"errorCall": {
																								"arguments": [
																									{
																										"id": 2781,
																										"name": "to",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 2731,
																										"src": "57693:2:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									],
																									"id": 2780,
																									"name": "ERC1155InvalidReceiver",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1730,
																									"src": "57670:22:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																										"typeString": "function (address) pure"
																									}
																								},
																								"id": 2782,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "57670:26:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 2783,
																							"nodeType": "RevertStatement",
																							"src": "57663:33:0"
																						}
																					]
																				}
																			}
																		]
																	},
																	"errorName": "",
																	"id": 2789,
																	"nodeType": "TryCatchClause",
																	"parameters": {
																		"id": 2775,
																		"nodeType": "ParameterList",
																		"parameters": [
																			{
																				"constant": false,
																				"id": 2774,
																				"mutability": "mutable",
																				"name": "reason",
																				"nameLocation": "57536:6:0",
																				"nodeType": "VariableDeclaration",
																				"scope": 2789,
																				"src": "57523:19:0",
																				"stateVariable": false,
																				"storageLocation": "memory",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes"
																				},
																				"typeName": {
																					"id": 2773,
																					"name": "bytes",
																					"nodeType": "ElementaryTypeName",
																					"src": "57523:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes_storage_ptr",
																						"typeString": "bytes"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"src": "57522:21:0"
																	},
																	"src": "57516:409:0"
																}
															],
															"externalCall": {
																"arguments": [
																	{
																		"id": 2751,
																		"name": "operator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2727,
																		"src": "57213:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2752,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2729,
																		"src": "57223:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2753,
																		"name": "ids",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2734,
																		"src": "57229:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2754,
																		"name": "values",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2737,
																		"src": "57234:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		}
																	},
																	{
																		"id": 2755,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2739,
																		"src": "57242:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																			"typeString": "uint256[] memory"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 2748,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2731,
																				"src": "57186:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 2747,
																			"name": "IERC1155Receiver",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1411,
																			"src": "57169:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC1155Receiver_$1411_$",
																				"typeString": "type(contract IERC1155Receiver)"
																			}
																		},
																		"id": 2749,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "57169:20:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC1155Receiver_$1411",
																			"typeString": "contract IERC1155Receiver"
																		}
																	},
																	"id": 2750,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "57190:22:0",
																	"memberName": "onERC1155BatchReceived",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1410,
																	"src": "57169:43:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																		"typeString": "function (address,address,uint256[] memory,uint256[] memory,bytes memory) external returns (bytes4)"
																	}
																},
																"id": 2756,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "57169:78:0",
																"tryCall": true,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"id": 2790,
															"nodeType": "TryStatement",
															"src": "57165:760:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2725,
										"nodeType": "StructuredDocumentation",
										"src": "56718:177:0",
										"text": " @dev Performs a batch acceptance check by calling {IERC1155-onERC1155BatchReceived} on the `to` address\n if it contains code at the moment of execution."
									},
									"id": 2794,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_doSafeBatchTransferAcceptanceCheck",
									"nameLocation": "56909:35:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2727,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "56962:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "56954:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2726,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56954:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2729,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "56988:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "56980:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "56980:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2731,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "57010:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "57002:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "57002:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2734,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "57039:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "57022:20:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2732,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57022:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2733,
													"nodeType": "ArrayTypeName",
													"src": "57022:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2737,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "57069:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "57052:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2735,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "57052:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2736,
													"nodeType": "ArrayTypeName",
													"src": "57052:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2739,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "57098:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2794,
												"src": "57085:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2738,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "57085:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "56944:164:0"
									},
									"returnParameters": {
										"id": 2741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "57117:0:0"
									},
									"scope": 2811,
									"src": "56900:1041:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 2809,
										"nodeType": "Block",
										"src": "58215:691:0",
										"statements": [
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "58277:623:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "58335:21:0",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58351:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "58345:5:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58345:11:0"
															},
															"variableNames": [
																{
																	"name": "array1",
																	"nodeType": "YulIdentifier",
																	"src": "58335:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "58413:6:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58421:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "58406:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58406:17:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "58406:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array1",
																				"nodeType": "YulIdentifier",
																				"src": "58544:6:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58552:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "58540:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58540:17:0"
																	},
																	{
																		"name": "element1",
																		"nodeType": "YulIdentifier",
																		"src": "58559:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "58533:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58533:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "58533:35:0"
														},
														{
															"nodeType": "YulAssignment",
															"src": "58659:27:0",
															"value": {
																"arguments": [
																	{
																		"name": "array1",
																		"nodeType": "YulIdentifier",
																		"src": "58673:6:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58681:4:0",
																		"type": "",
																		"value": "0x40"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "58669:3:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58669:17:0"
															},
															"variableNames": [
																{
																	"name": "array2",
																	"nodeType": "YulIdentifier",
																	"src": "58659:6:0"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array2",
																		"nodeType": "YulIdentifier",
																		"src": "58706:6:0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58714:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "58699:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58699:17:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "58699:17:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "58740:6:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58748:4:0",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "58736:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58736:17:0"
																	},
																	{
																		"name": "element2",
																		"nodeType": "YulIdentifier",
																		"src": "58755:8:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "58729:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58729:35:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "58729:35:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "58866:4:0",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"arguments": [
																			{
																				"name": "array2",
																				"nodeType": "YulIdentifier",
																				"src": "58876:6:0"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "58884:4:0",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "58872:3:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "58872:17:0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "58859:6:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "58859:31:0"
															},
															"nodeType": "YulExpressionStatement",
															"src": "58859:31:0"
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "shanghai",
												"externalReferences": [
													{
														"declaration": 2803,
														"isOffset": false,
														"isSlot": false,
														"src": "58335:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2803,
														"isOffset": false,
														"isSlot": false,
														"src": "58413:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2803,
														"isOffset": false,
														"isSlot": false,
														"src": "58544:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2803,
														"isOffset": false,
														"isSlot": false,
														"src": "58673:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2806,
														"isOffset": false,
														"isSlot": false,
														"src": "58659:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2806,
														"isOffset": false,
														"isSlot": false,
														"src": "58706:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2806,
														"isOffset": false,
														"isSlot": false,
														"src": "58740:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2806,
														"isOffset": false,
														"isSlot": false,
														"src": "58876:6:0",
														"valueSize": 1
													},
													{
														"declaration": 2797,
														"isOffset": false,
														"isSlot": false,
														"src": "58559:8:0",
														"valueSize": 1
													},
													{
														"declaration": 2799,
														"isOffset": false,
														"isSlot": false,
														"src": "58755:8:0",
														"valueSize": 1
													}
												],
												"id": 2808,
												"nodeType": "InlineAssembly",
												"src": "58268:632:0"
											}
										]
									},
									"documentation": {
										"id": 2795,
										"nodeType": "StructuredDocumentation",
										"src": "57947:105:0",
										"text": " @dev Creates an array in memory with only one value for each of the elements provided."
									},
									"id": 2810,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_asSingletonArrays",
									"nameLocation": "58066:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2800,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2797,
												"mutability": "mutable",
												"name": "element1",
												"nameLocation": "58102:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "58094:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58094:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2799,
												"mutability": "mutable",
												"name": "element2",
												"nameLocation": "58128:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "58120:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2798,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "58120:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58084:58:0"
									},
									"returnParameters": {
										"id": 2807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2803,
												"mutability": "mutable",
												"name": "array1",
												"nameLocation": "58182:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "58165:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2801,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58165:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2802,
													"nodeType": "ArrayTypeName",
													"src": "58165:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2806,
												"mutability": "mutable",
												"name": "array2",
												"nameLocation": "58207:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 2810,
												"src": "58190:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2804,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "58190:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2805,
													"nodeType": "ArrayTypeName",
													"src": "58190:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "58164:50:0"
									},
									"scope": 2811,
									"src": "58057:849:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 4030,
							"src": "42704:16204:0",
							"usedErrors": [
								1720,
								1725,
								1730,
								1737,
								1742,
								1747,
								1754
							],
							"usedEvents": [
								1503,
								1518,
								1527,
								1534
							]
						},
						{
							"id": 2812,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "59042:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2813,
								"nodeType": "StructuredDocumentation",
								"src": "59068:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 2888,
							"linearizedBaseContracts": [
								2888
							],
							"name": "IERC20",
							"nameLocation": "59149:6:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 2814,
										"nodeType": "StructuredDocumentation",
										"src": "59162:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 2822,
									"name": "Transfer",
									"nameLocation": "59331:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2816,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "59356:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "59340:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59340:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2818,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "59378:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "59362:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59362:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2820,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "59390:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2822,
												"src": "59382:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2819,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59382:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59339:57:0"
									},
									"src": "59325:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2823,
										"nodeType": "StructuredDocumentation",
										"src": "59403:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 2831,
									"name": "Approval",
									"nameLocation": "59562:8:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2825,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "59587:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "59571:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59571:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2827,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "59610:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "59594:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2826,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59594:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2829,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "59627:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2831,
												"src": "59619:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59570:63:0"
									},
									"src": "59556:78:0"
								},
								{
									"documentation": {
										"id": 2832,
										"nodeType": "StructuredDocumentation",
										"src": "59640:65:0",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 2837,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "59719:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2833,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "59730:2:0"
									},
									"returnParameters": {
										"id": 2836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2835,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2837,
												"src": "59756:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2834,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59756:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59755:9:0"
									},
									"scope": 2888,
									"src": "59710:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2838,
										"nodeType": "StructuredDocumentation",
										"src": "59771:71:0",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 2845,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "59856:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2841,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2840,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "59874:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "59866:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2839,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "59866:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59865:17:0"
									},
									"returnParameters": {
										"id": 2844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2843,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2845,
												"src": "59906:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2842,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "59906:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "59905:9:0"
									},
									"scope": 2888,
									"src": "59847:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2846,
										"nodeType": "StructuredDocumentation",
										"src": "59921:213:0",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 2855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "60148:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2851,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2848,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "60165:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "60157:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60157:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2850,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "60177:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "60169:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2849,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60169:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60156:27:0"
									},
									"returnParameters": {
										"id": 2854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "60202:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2852,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "60202:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60201:6:0"
									},
									"scope": 2888,
									"src": "60139:69:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2856,
										"nodeType": "StructuredDocumentation",
										"src": "60214:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 2865,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "60492:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "60510:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "60502:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60502:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2860,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "60525:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "60517:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2859,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "60517:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60501:32:0"
									},
									"returnParameters": {
										"id": 2864,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2863,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2865,
												"src": "60557:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2862,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "60557:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "60556:9:0"
									},
									"scope": 2888,
									"src": "60483:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2866,
										"nodeType": "StructuredDocumentation",
										"src": "60572:667:0",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 2875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "61253:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "61269:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "61261:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61261:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "61286:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "61278:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61278:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61260:32:0"
									},
									"returnParameters": {
										"id": 2874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2875,
												"src": "61311:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "61311:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61310:6:0"
									},
									"scope": 2888,
									"src": "61244:73:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2876,
										"nodeType": "StructuredDocumentation",
										"src": "61323:297:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 2887,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "61634:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2878,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "61655:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "61647:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61647:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2880,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "61669:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "61661:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2879,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "61661:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2882,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "61681:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "61673:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "61673:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61646:41:0"
									},
									"returnParameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2887,
												"src": "61706:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2884,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "61706:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "61705:6:0"
									},
									"scope": 2888,
									"src": "61625:87:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4030,
							"src": "59139:2575:0",
							"usedErrors": [],
							"usedEvents": [
								2822,
								2831
							]
						},
						{
							"id": 2889,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "61886:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2891,
										"name": "IERC20",
										"nameLocations": [
											"62028:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2888,
										"src": "62028:6:0"
									},
									"id": 2892,
									"nodeType": "InheritanceSpecifier",
									"src": "62028:6:0"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2890,
								"nodeType": "StructuredDocumentation",
								"src": "61913:86:0",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 2911,
							"linearizedBaseContracts": [
								2911,
								2888
							],
							"name": "IERC20Metadata",
							"nameLocation": "62010:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2893,
										"nodeType": "StructuredDocumentation",
										"src": "62041:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2898,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "62109:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2894,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62113:2:0"
									},
									"returnParameters": {
										"id": 2897,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2896,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2898,
												"src": "62139:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2895,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "62139:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62138:15:0"
									},
									"scope": 2911,
									"src": "62100:54:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2899,
										"nodeType": "StructuredDocumentation",
										"src": "62160:56:0",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 2904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "62230:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62236:2:0"
									},
									"returnParameters": {
										"id": 2903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2902,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2904,
												"src": "62262:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2901,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "62262:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62261:15:0"
									},
									"scope": 2911,
									"src": "62221:56:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2905,
										"nodeType": "StructuredDocumentation",
										"src": "62283:65:0",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 2910,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "62362:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "62370:2:0"
									},
									"returnParameters": {
										"id": 2909,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2908,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2910,
												"src": "62396:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2907,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "62396:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "62395:7:0"
									},
									"scope": 2911,
									"src": "62353:50:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4030,
							"src": "62000:405:0",
							"usedErrors": [],
							"usedEvents": [
								2822,
								2831
							]
						},
						{
							"id": 2912,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "62537:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 2914,
										"name": "Context",
										"nameLocations": [
											"63647:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1776,
										"src": "63647:7:0"
									},
									"id": 2915,
									"nodeType": "InheritanceSpecifier",
									"src": "63647:7:0"
								},
								{
									"baseName": {
										"id": 2916,
										"name": "IERC20",
										"nameLocations": [
											"63656:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2888,
										"src": "63656:6:0"
									},
									"id": 2917,
									"nodeType": "InheritanceSpecifier",
									"src": "63656:6:0"
								},
								{
									"baseName": {
										"id": 2918,
										"name": "IERC20Metadata",
										"nameLocations": [
											"63664:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2911,
										"src": "63664:14:0"
									},
									"id": 2919,
									"nodeType": "InheritanceSpecifier",
									"src": "63664:14:0"
								},
								{
									"baseName": {
										"id": 2920,
										"name": "IERC20Errors",
										"nameLocations": [
											"63680:12:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1660,
										"src": "63680:12:0"
									},
									"id": 2921,
									"nodeType": "InheritanceSpecifier",
									"src": "63680:12:0"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2913,
								"nodeType": "StructuredDocumentation",
								"src": "62567:1052:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 3417,
							"linearizedBaseContracts": [
								3417,
								1660,
								2911,
								2888,
								1776
							],
							"name": "ERC20",
							"nameLocation": "63638:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 2925,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "63743:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 3417,
									"src": "63699:53:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 2924,
										"keyName": "account",
										"keyNameLocation": "63715:7:0",
										"keyType": {
											"id": 2922,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "63707:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "63699:35:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2923,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "63726:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2931,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "63831:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 3417,
									"src": "63759:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 2930,
										"keyName": "account",
										"keyNameLocation": "63775:7:0",
										"keyType": {
											"id": 2926,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "63767:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "63759:63:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2929,
											"keyName": "spender",
											"keyNameLocation": "63802:7:0",
											"keyType": {
												"id": 2927,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "63794:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "63786:35:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2928,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "63813:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2933,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "63865:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 3417,
									"src": "63849:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2932,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "63849:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2935,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "63899:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 3417,
									"src": "63884:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2934,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "63884:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 2937,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "63925:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 3417,
									"src": "63910:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 2936,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "63910:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 2953,
										"nodeType": "Block",
										"src": "64171:57:0",
										"statements": [
											{
												"expression": {
													"id": 2947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2945,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2935,
														"src": "64181:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2946,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2940,
														"src": "64189:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "64181:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2948,
												"nodeType": "ExpressionStatement",
												"src": "64181:13:0"
											},
											{
												"expression": {
													"id": 2951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2949,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2937,
														"src": "64204:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2950,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2942,
														"src": "64214:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "64204:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 2952,
												"nodeType": "ExpressionStatement",
												"src": "64204:17:0"
											}
										]
									},
									"documentation": {
										"id": 2938,
										"nodeType": "StructuredDocumentation",
										"src": "63939:171:0",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 2954,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2940,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "64141:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "64127:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2939,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "64127:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "64162:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 2954,
												"src": "64148:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2941,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "64148:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64126:44:0"
									},
									"returnParameters": {
										"id": 2944,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64171:0:0"
									},
									"scope": 3417,
									"src": "64115:113:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2898
									],
									"body": {
										"id": 2962,
										"nodeType": "Block",
										"src": "64353:29:0",
										"statements": [
											{
												"expression": {
													"id": 2960,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2935,
													"src": "64370:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2959,
												"id": 2961,
												"nodeType": "Return",
												"src": "64363:12:0"
											}
										]
									},
									"documentation": {
										"id": 2955,
										"nodeType": "StructuredDocumentation",
										"src": "64234:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 2963,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "64302:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64306:2:0"
									},
									"returnParameters": {
										"id": 2959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2958,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2963,
												"src": "64338:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2957,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "64338:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64337:15:0"
									},
									"scope": 3417,
									"src": "64293:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2904
									],
									"body": {
										"id": 2971,
										"nodeType": "Block",
										"src": "64557:31:0",
										"statements": [
											{
												"expression": {
													"id": 2969,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2937,
													"src": "64574:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 2968,
												"id": 2970,
												"nodeType": "Return",
												"src": "64567:14:0"
											}
										]
									},
									"documentation": {
										"id": 2964,
										"nodeType": "StructuredDocumentation",
										"src": "64388:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 2972,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "64504:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "64510:2:0"
									},
									"returnParameters": {
										"id": 2968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2967,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2972,
												"src": "64542:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "64542:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "64541:15:0"
									},
									"scope": 3417,
									"src": "64495:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2910
									],
									"body": {
										"id": 2980,
										"nodeType": "Block",
										"src": "65277:26:0",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 2978,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "65294:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 2977,
												"id": 2979,
												"nodeType": "Return",
												"src": "65287:9:0"
											}
										]
									},
									"documentation": {
										"id": 2973,
										"nodeType": "StructuredDocumentation",
										"src": "64594:622:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 2981,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "65230:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65238:2:0"
									},
									"returnParameters": {
										"id": 2977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2976,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2981,
												"src": "65270:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2975,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "65270:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65269:7:0"
									},
									"scope": 3417,
									"src": "65221:82:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2837
									],
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "65424:36:0",
										"statements": [
											{
												"expression": {
													"id": 2987,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2933,
													"src": "65441:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2986,
												"id": 2988,
												"nodeType": "Return",
												"src": "65434:19:0"
											}
										]
									},
									"documentation": {
										"id": 2982,
										"nodeType": "StructuredDocumentation",
										"src": "65309:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "65372:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2983,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "65383:2:0"
									},
									"returnParameters": {
										"id": 2986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2985,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "65415:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2984,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65415:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65414:9:0"
									},
									"scope": 3417,
									"src": "65363:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2845
									],
									"body": {
										"id": 3002,
										"nodeType": "Block",
										"src": "65592:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 2998,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2925,
														"src": "65609:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3000,
													"indexExpression": {
														"id": 2999,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2993,
														"src": "65619:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "65609:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2997,
												"id": 3001,
												"nodeType": "Return",
												"src": "65602:25:0"
											}
										]
									},
									"documentation": {
										"id": 2991,
										"nodeType": "StructuredDocumentation",
										"src": "65466:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 3003,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "65527:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2993,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "65545:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "65537:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2992,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65537:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65536:17:0"
									},
									"returnParameters": {
										"id": 2997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2996,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3003,
												"src": "65583:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2995,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65582:9:0"
									},
									"scope": 3417,
									"src": "65518:116:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2855
									],
									"body": {
										"id": 3026,
										"nodeType": "Block",
										"src": "65904:103:0",
										"statements": [
											{
												"assignments": [
													3014
												],
												"declarations": [
													{
														"constant": false,
														"id": 3014,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "65922:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3026,
														"src": "65914:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3013,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "65914:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3017,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3015,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "65930:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65930:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "65914:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3019,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3014,
															"src": "65962:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3020,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3006,
															"src": "65969:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3021,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3008,
															"src": "65973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3018,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "65952:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3022,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "65952:27:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3023,
												"nodeType": "ExpressionStatement",
												"src": "65952:27:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3024,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "65996:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3012,
												"id": 3025,
												"nodeType": "Return",
												"src": "65989:11:0"
											}
										]
									},
									"documentation": {
										"id": 3004,
										"nodeType": "StructuredDocumentation",
										"src": "65640:184:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 3027,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "65838:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3006,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "65855:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "65847:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3005,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "65847:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3008,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "65867:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "65859:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3007,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "65859:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65846:27:0"
									},
									"returnParameters": {
										"id": 3012,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3011,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3027,
												"src": "65898:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3010,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "65898:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "65897:6:0"
									},
									"scope": 3417,
									"src": "65829:178:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2865
									],
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "66154:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 3037,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2931,
															"src": "66171:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 3039,
														"indexExpression": {
															"id": 3038,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3030,
															"src": "66183:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "66171:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 3041,
													"indexExpression": {
														"id": 3040,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3032,
														"src": "66190:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "66171:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3036,
												"id": 3042,
												"nodeType": "Return",
												"src": "66164:34:0"
											}
										]
									},
									"documentation": {
										"id": 3028,
										"nodeType": "StructuredDocumentation",
										"src": "66013:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "66074:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3030,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "66092:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "66084:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66084:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3032,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "66107:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "66099:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3031,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66099:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66083:32:0"
									},
									"returnParameters": {
										"id": 3036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "66145:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3034,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66145:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66144:9:0"
									},
									"scope": 3417,
									"src": "66065:140:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2875
									],
									"body": {
										"id": 3067,
										"nodeType": "Block",
										"src": "66591:107:0",
										"statements": [
											{
												"assignments": [
													3055
												],
												"declarations": [
													{
														"constant": false,
														"id": 3055,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "66609:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3067,
														"src": "66601:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3054,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "66601:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3058,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3056,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "66617:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66617:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "66601:28:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3060,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3055,
															"src": "66648:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3061,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3047,
															"src": "66655:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3062,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3049,
															"src": "66664:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3059,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3308,
															3368
														],
														"referencedDeclaration": 3308,
														"src": "66639:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "66639:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3064,
												"nodeType": "ExpressionStatement",
												"src": "66639:31:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3065,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "66687:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3053,
												"id": 3066,
												"nodeType": "Return",
												"src": "66680:11:0"
											}
										]
									},
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "66211:296:0",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 3068,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "66521:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "66537:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "66529:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3046,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "66529:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3049,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "66554:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "66546:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3048,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "66546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66528:32:0"
									},
									"returnParameters": {
										"id": 3053,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3052,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3068,
												"src": "66585:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3051,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "66585:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "66584:6:0"
									},
									"scope": 3417,
									"src": "66512:186:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2887
									],
									"body": {
										"id": 3099,
										"nodeType": "Block",
										"src": "67351:151:0",
										"statements": [
											{
												"assignments": [
													3081
												],
												"declarations": [
													{
														"constant": false,
														"id": 3081,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "67369:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 3099,
														"src": "67361:15:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 3080,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "67361:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3084,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 3082,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "67379:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67379:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "67361:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3086,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "67417:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3087,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3081,
															"src": "67423:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3088,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3075,
															"src": "67432:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3085,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3416,
														"src": "67401:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3089,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67401:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3090,
												"nodeType": "ExpressionStatement",
												"src": "67401:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3092,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3071,
															"src": "67458:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3093,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3073,
															"src": "67464:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3094,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3075,
															"src": "67468:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3091,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3147,
														"src": "67448:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3095,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "67448:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3096,
												"nodeType": "ExpressionStatement",
												"src": "67448:26:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 3097,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "67491:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 3079,
												"id": 3098,
												"nodeType": "Return",
												"src": "67484:11:0"
											}
										]
									},
									"documentation": {
										"id": 3069,
										"nodeType": "StructuredDocumentation",
										"src": "66704:549:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 3100,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "67267:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3076,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3071,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "67288:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "67280:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3070,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67280:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "67302:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "67294:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3072,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67294:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3075,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67314:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "67306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3074,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67306:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67279:41:0"
									},
									"returnParameters": {
										"id": 3079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3078,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3100,
												"src": "67345:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3077,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "67345:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67344:6:0"
									},
									"scope": 3417,
									"src": "67258:244:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3146,
										"nodeType": "Block",
										"src": "67944:231:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3110,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3103,
														"src": "67958:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3113,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "67974:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3112,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "67966:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3111,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "67966:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "67966:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "67958:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3124,
												"nodeType": "IfStatement",
												"src": "67954:86:0",
												"trueBody": {
													"id": 3123,
													"nodeType": "Block",
													"src": "67978:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3119,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "68026:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3118,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "68018:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3117,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "68018:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "68018:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3116,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "67999:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3121,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "67999:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3122,
															"nodeType": "RevertStatement",
															"src": "67992:37:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3125,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3105,
														"src": "68053:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3128,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68067:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3126,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68059:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68059:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "68053:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3139,
												"nodeType": "IfStatement",
												"src": "68049:86:0",
												"trueBody": {
													"id": 3138,
													"nodeType": "Block",
													"src": "68071:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3134,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "68121:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3133,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "68113:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3132,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "68113:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "68113:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3131,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "68092:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3136,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "68092:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3137,
															"nodeType": "RevertStatement",
															"src": "68085:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3141,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3103,
															"src": "68152:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3142,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3105,
															"src": "68158:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3143,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3107,
															"src": "68162:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3140,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "68144:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "68144:24:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3145,
												"nodeType": "ExpressionStatement",
												"src": "68144:24:0"
											}
										]
									},
									"documentation": {
										"id": 3101,
										"nodeType": "StructuredDocumentation",
										"src": "67508:362:0",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "67884:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3103,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "67902:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "67894:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3102,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67894:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3105,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "67916:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "67908:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67908:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3107,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "67928:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3147,
												"src": "67920:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3106,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "67920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "67893:41:0"
									},
									"returnParameters": {
										"id": 3109,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "67944:0:0"
									},
									"scope": 3417,
									"src": "67875:300:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3223,
										"nodeType": "Block",
										"src": "68565:1032:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3157,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3150,
														"src": "68579:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "68595:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "68587:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3158,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "68587:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "68587:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "68579:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3194,
													"nodeType": "Block",
													"src": "68753:362:0",
													"statements": [
														{
															"assignments": [
																3169
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 3169,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "68775:11:0",
																	"nodeType": "VariableDeclaration",
																	"scope": 3194,
																	"src": "68767:19:0",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 3168,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "68767:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 3173,
															"initialValue": {
																"baseExpression": {
																	"id": 3170,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2925,
																	"src": "68789:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 3172,
																"indexExpression": {
																	"id": 3171,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3150,
																	"src": "68799:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "68789:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "68767:37:0"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3176,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3174,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3169,
																	"src": "68822:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3175,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "68836:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "68822:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3184,
															"nodeType": "IfStatement",
															"src": "68818:115:0",
															"trueBody": {
																"id": 3183,
																"nodeType": "Block",
																"src": "68843:90:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3178,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3150,
																					"src": "68893:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3179,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3169,
																					"src": "68899:11:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3180,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3154,
																					"src": "68912:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3177,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1630,
																				"src": "68868:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3181,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "68868:50:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3182,
																		"nodeType": "RevertStatement",
																		"src": "68861:57:0"
																	}
																]
															}
														},
														{
															"id": 3193,
															"nodeType": "UncheckedBlock",
															"src": "68946:159:0",
															"statements": [
																{
																	"expression": {
																		"id": 3191,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3185,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "69053:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3187,
																			"indexExpression": {
																				"id": 3186,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3150,
																				"src": "69063:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "69053:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 3190,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 3188,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3169,
																				"src": "69071:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 3189,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3154,
																				"src": "69085:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "69071:19:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "69053:37:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3192,
																	"nodeType": "ExpressionStatement",
																	"src": "69053:37:0"
																}
															]
														}
													]
												},
												"id": 3195,
												"nodeType": "IfStatement",
												"src": "68575:540:0",
												"trueBody": {
													"id": 3167,
													"nodeType": "Block",
													"src": "68599:148:0",
													"statements": [
														{
															"expression": {
																"id": 3165,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3163,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2933,
																	"src": "68715:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 3164,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3154,
																	"src": "68731:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "68715:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3166,
															"nodeType": "ExpressionStatement",
															"src": "68715:21:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3196,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3152,
														"src": "69129:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3199,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "69143:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3198,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "69135:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3197,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "69135:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3200,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "69135:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "69129:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 3215,
													"nodeType": "Block",
													"src": "69344:206:0",
													"statements": [
														{
															"id": 3214,
															"nodeType": "UncheckedBlock",
															"src": "69358:182:0",
															"statements": [
																{
																	"expression": {
																		"id": 3212,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 3208,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2925,
																				"src": "69503:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 3210,
																			"indexExpression": {
																				"id": 3209,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3152,
																				"src": "69513:2:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "69503:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 3211,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "69520:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "69503:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3213,
																	"nodeType": "ExpressionStatement",
																	"src": "69503:22:0"
																}
															]
														}
													]
												},
												"id": 3216,
												"nodeType": "IfStatement",
												"src": "69125:425:0",
												"trueBody": {
													"id": 3207,
													"nodeType": "Block",
													"src": "69147:191:0",
													"statements": [
														{
															"id": 3206,
															"nodeType": "UncheckedBlock",
															"src": "69161:167:0",
															"statements": [
																{
																	"expression": {
																		"id": 3204,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 3202,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2933,
																			"src": "69292:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 3203,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3154,
																			"src": "69308:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "69292:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 3205,
																	"nodeType": "ExpressionStatement",
																	"src": "69292:21:0"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3218,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3150,
															"src": "69574:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3219,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3152,
															"src": "69580:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3220,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3154,
															"src": "69584:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3217,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2822,
														"src": "69565:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3221,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "69565:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3222,
												"nodeType": "EmitStatement",
												"src": "69560:30:0"
											}
										]
									},
									"documentation": {
										"id": 3148,
										"nodeType": "StructuredDocumentation",
										"src": "68181:304:0",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 3224,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "68499:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3150,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "68515:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "68507:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68507:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3152,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "68529:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "68521:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "68521:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "68541:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3224,
												"src": "68533:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3153,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "68533:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "68506:41:0"
									},
									"returnParameters": {
										"id": 3156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "68565:0:0"
									},
									"scope": 3417,
									"src": "68490:1107:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3256,
										"nodeType": "Block",
										"src": "69996:152:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3237,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3232,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3227,
														"src": "70010:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3235,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "70029:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3234,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "70021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3233,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "70021:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3236,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "70021:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "70010:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3246,
												"nodeType": "IfStatement",
												"src": "70006:91:0",
												"trueBody": {
													"id": 3245,
													"nodeType": "Block",
													"src": "70033:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3241,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "70083:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "70075:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3239,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "70075:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "70075:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3238,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "70054:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70054:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3244,
															"nodeType": "RevertStatement",
															"src": "70047:39:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "70122:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "70114:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3248,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "70114:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "70114:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3252,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3227,
															"src": "70126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3253,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3229,
															"src": "70135:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3247,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "70106:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70106:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3255,
												"nodeType": "ExpressionStatement",
												"src": "70106:35:0"
											}
										]
									},
									"documentation": {
										"id": 3225,
										"nodeType": "StructuredDocumentation",
										"src": "69603:332:0",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 3257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "69949:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3227,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "69963:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "69955:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "69955:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "69980:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3257,
												"src": "69972:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3228,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "69972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "69954:32:0"
									},
									"returnParameters": {
										"id": 3231,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "69996:0:0"
									},
									"scope": 3417,
									"src": "69940:208:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3289,
										"nodeType": "Block",
										"src": "70522:150:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3265,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3260,
														"src": "70536:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "70555:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "70547:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3266,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "70547:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3269,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "70547:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "70536:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3279,
												"nodeType": "IfStatement",
												"src": "70532:89:0",
												"trueBody": {
													"id": 3278,
													"nodeType": "Block",
													"src": "70559:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3274,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "70607:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "70599:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3272,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "70599:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3275,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "70599:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3271,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1635,
																	"src": "70580:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3276,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "70580:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3277,
															"nodeType": "RevertStatement",
															"src": "70573:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3281,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3260,
															"src": "70638:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 3284,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "70655:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 3283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "70647:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3282,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "70647:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3285,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "70647:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3286,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3262,
															"src": "70659:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3280,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3224,
														"src": "70630:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 3287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "70630:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3288,
												"nodeType": "ExpressionStatement",
												"src": "70630:35:0"
											}
										]
									},
									"documentation": {
										"id": 3258,
										"nodeType": "StructuredDocumentation",
										"src": "70154:307:0",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 3290,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "70475:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3260,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "70489:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "70481:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "70481:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3262,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "70506:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3290,
												"src": "70498:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "70498:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "70480:32:0"
									},
									"returnParameters": {
										"id": 3264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "70522:0:0"
									},
									"scope": 3417,
									"src": "70466:206:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3307,
										"nodeType": "Block",
										"src": "71282:54:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3301,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3293,
															"src": "71301:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3302,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3295,
															"src": "71308:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3303,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3297,
															"src": "71317:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 3304,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "71324:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 3300,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															3308,
															3368
														],
														"referencedDeclaration": 3368,
														"src": "71292:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 3305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "71292:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3306,
												"nodeType": "ExpressionStatement",
												"src": "71292:37:0"
											}
										]
									},
									"documentation": {
										"id": 3291,
										"nodeType": "StructuredDocumentation",
										"src": "70678:525:0",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 3308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "71217:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3293,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "71234:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "71226:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71226:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3295,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "71249:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "71241:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "71241:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3297,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "71266:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3308,
												"src": "71258:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3296,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "71258:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "71225:47:0"
									},
									"returnParameters": {
										"id": 3299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "71282:0:0"
									},
									"scope": 3417,
									"src": "71208:128:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3367,
										"nodeType": "Block",
										"src": "72266:334:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3325,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3320,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3311,
														"src": "72280:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3321,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3324,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72280:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3334,
												"nodeType": "IfStatement",
												"src": "72276:89:0",
												"trueBody": {
													"id": 3333,
													"nodeType": "Block",
													"src": "72301:64:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3329,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "72351:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "72343:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3327,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "72343:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3330,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "72343:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3326,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1654,
																	"src": "72322:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3331,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72322:32:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3332,
															"nodeType": "RevertStatement",
															"src": "72315:39:0"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 3340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3335,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3313,
														"src": "72378:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 3338,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "72397:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 3337,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "72389:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 3336,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "72389:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 3339,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "72389:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "72378:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3349,
												"nodeType": "IfStatement",
												"src": "72374:90:0",
												"trueBody": {
													"id": 3348,
													"nodeType": "Block",
													"src": "72401:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 3344,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "72450:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 3343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "72442:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3342,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "72442:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3345,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "72442:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 3341,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1659,
																	"src": "72422:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 3346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72422:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3347,
															"nodeType": "RevertStatement",
															"src": "72415:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"id": 3356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 3350,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2931,
																"src": "72473:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 3353,
															"indexExpression": {
																"id": 3351,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3311,
																"src": "72485:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "72473:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 3354,
														"indexExpression": {
															"id": 3352,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3313,
															"src": "72492:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "72473:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3355,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3315,
														"src": "72503:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "72473:35:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3357,
												"nodeType": "ExpressionStatement",
												"src": "72473:35:0"
											},
											{
												"condition": {
													"id": 3358,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3317,
													"src": "72522:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3366,
												"nodeType": "IfStatement",
												"src": "72518:76:0",
												"trueBody": {
													"id": 3365,
													"nodeType": "Block",
													"src": "72533:61:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3360,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3311,
																		"src": "72561:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3361,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3313,
																		"src": "72568:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3362,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3315,
																		"src": "72577:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3359,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2831,
																	"src": "72552:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 3363,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "72552:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3364,
															"nodeType": "EmitStatement",
															"src": "72547:36:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3309,
										"nodeType": "StructuredDocumentation",
										"src": "71342:821:0",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 3368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "72177:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "72194:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "72186:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72186:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "72209:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "72201:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72201:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3315,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "72226:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "72218:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72218:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3317,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "72238:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3368,
												"src": "72233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "72233:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72185:63:0"
									},
									"returnParameters": {
										"id": 3319,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72266:0:0"
									},
									"scope": 3417,
									"src": "72168:432:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3415,
										"nodeType": "Block",
										"src": "72971:388:0",
										"statements": [
											{
												"assignments": [
													3379
												],
												"declarations": [
													{
														"constant": false,
														"id": 3379,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "72989:16:0",
														"nodeType": "VariableDeclaration",
														"scope": 3415,
														"src": "72981:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3378,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "72981:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3384,
												"initialValue": {
													"arguments": [
														{
															"id": 3381,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3371,
															"src": "73018:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3382,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3373,
															"src": "73025:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 3380,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3044,
														"src": "73008:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 3383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "73008:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "72981:52:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3385,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3379,
														"src": "73047:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 3388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "73072:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 3387,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "73072:7:0",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 3386,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "73067:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 3389,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "73067:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 3390,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "73081:3:0",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "73067:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "73047:37:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3414,
												"nodeType": "IfStatement",
												"src": "73043:310:0",
												"trueBody": {
													"id": 3413,
													"nodeType": "Block",
													"src": "73086:267:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3394,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3392,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3379,
																	"src": "73104:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 3393,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3375,
																	"src": "73123:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "73104:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3402,
															"nodeType": "IfStatement",
															"src": "73100:130:0",
															"trueBody": {
																"id": 3401,
																"nodeType": "Block",
																"src": "73130:100:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 3396,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3373,
																					"src": "73182:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 3397,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3379,
																					"src": "73191:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 3398,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "73209:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 3395,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1649,
																				"src": "73155:26:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 3399,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "73155:60:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 3400,
																		"nodeType": "RevertStatement",
																		"src": "73148:67:0"
																	}
																]
															}
														},
														{
															"id": 3412,
															"nodeType": "UncheckedBlock",
															"src": "73243:100:0",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 3404,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3371,
																				"src": "73280:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 3405,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3373,
																				"src": "73287:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 3408,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 3406,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3379,
																					"src": "73296:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 3407,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 3375,
																					"src": "73315:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "73296:24:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 3409,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "73322:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 3403,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				3308,
																				3368
																			],
																			"referencedDeclaration": 3368,
																			"src": "73271:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 3410,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "73271:57:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 3411,
																	"nodeType": "ExpressionStatement",
																	"src": "73271:57:0"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3369,
										"nodeType": "StructuredDocumentation",
										"src": "72606:271:0",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 3416,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "72891:15:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3371,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "72915:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "72907:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72907:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3373,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "72930:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "72922:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3372,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "72922:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3375,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "72947:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3416,
												"src": "72939:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "72939:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "72906:47:0"
									},
									"returnParameters": {
										"id": 3377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "72971:0:0"
									},
									"scope": 3417,
									"src": "72882:477:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 4030,
							"src": "63620:9741:0",
							"usedErrors": [
								1630,
								1635,
								1640,
								1649,
								1654,
								1659
							],
							"usedEvents": [
								2822,
								2831
							]
						},
						{
							"id": 3418,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "73401:23:0"
						},
						{
							"id": 3419,
							"literals": [
								"abicoder",
								"v2"
							],
							"nodeType": "PragmaDirective",
							"src": "73425:19:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3420,
										"name": "ERC1155Holder",
										"nameLocations": [
											"73567:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1486,
										"src": "73567:13:0"
									},
									"id": 3421,
									"nodeType": "InheritanceSpecifier",
									"src": "73567:13:0"
								}
							],
							"canonicalName": "FundRegistry",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 4029,
							"linearizedBaseContracts": [
								4029,
								1486,
								1411,
								1372,
								1351
							],
							"name": "FundRegistry",
							"nameLocation": "73551:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3424,
									"mutability": "mutable",
									"name": "token",
									"nameLocation": "73595:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 4029,
									"src": "73587:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_ERC1155_$2811",
										"typeString": "contract ERC1155"
									},
									"typeName": {
										"id": 3423,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3422,
											"name": "ERC1155",
											"nameLocations": [
												"73587:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 2811,
											"src": "73587:7:0"
										},
										"referencedDeclaration": 2811,
										"src": "73587:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC1155_$2811",
											"typeString": "contract ERC1155"
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "3f936ff5",
									"id": 3426,
									"mutability": "mutable",
									"name": "fundCount",
									"nameLocation": "73620:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 4029,
									"src": "73606:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint96",
										"typeString": "uint96"
									},
									"typeName": {
										"id": 3425,
										"name": "uint96",
										"nodeType": "ElementaryTypeName",
										"src": "73606:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint96",
											"typeString": "uint96"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 3436,
										"nodeType": "Block",
										"src": "73663:31:0",
										"statements": [
											{
												"expression": {
													"id": 3434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3432,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3424,
														"src": "73673:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC1155_$2811",
															"typeString": "contract ERC1155"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 3433,
														"name": "_token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3429,
														"src": "73681:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_ERC1155_$2811",
															"typeString": "contract ERC1155"
														}
													},
													"src": "73673:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC1155_$2811",
														"typeString": "contract ERC1155"
													}
												},
												"id": 3435,
												"nodeType": "ExpressionStatement",
												"src": "73673:14:0"
											}
										]
									},
									"id": 3437,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3429,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "73655:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3437,
												"src": "73647:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_ERC1155_$2811",
													"typeString": "contract ERC1155"
												},
												"typeName": {
													"id": 3428,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3427,
														"name": "ERC1155",
														"nameLocations": [
															"73647:7:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2811,
														"src": "73647:7:0"
													},
													"referencedDeclaration": 2811,
													"src": "73647:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_ERC1155_$2811",
														"typeString": "contract ERC1155"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "73646:16:0"
									},
									"returnParameters": {
										"id": 3431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "73663:0:0"
									},
									"scope": 4029,
									"src": "73635:59:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"canonicalName": "FundRegistry.Fund",
									"id": 3454,
									"members": [
										{
											"constant": false,
											"id": 3439,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "73728:2:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73721:9:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 3438,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "73721:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3441,
											"mutability": "mutable",
											"name": "owner",
											"nameLocation": "73748:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73740:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3440,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "73740:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3443,
											"mutability": "mutable",
											"name": "createdAt",
											"nameLocation": "73814:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73807:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3442,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "73807:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3445,
											"mutability": "mutable",
											"name": "updatedAt",
											"nameLocation": "73840:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73833:16:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint48",
												"typeString": "uint48"
											},
											"typeName": {
												"id": 3444,
												"name": "uint48",
												"nodeType": "ElementaryTypeName",
												"src": "73833:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3447,
											"mutability": "mutable",
											"name": "payee",
											"nameLocation": "73867:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73859:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3446,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "73859:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3449,
											"mutability": "mutable",
											"name": "threshold",
											"nameLocation": "73917:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73909:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3448,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "73909:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3451,
											"mutability": "mutable",
											"name": "donationAmount",
											"nameLocation": "73971:14:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "73963:22:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3450,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "73963:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3453,
											"mutability": "mutable",
											"name": "isEnd",
											"nameLocation": "74030:5:0",
											"nodeType": "VariableDeclaration",
											"scope": 3454,
											"src": "74025:10:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 3452,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "74025:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Fund",
									"nameLocation": "73706:4:0",
									"nodeType": "StructDefinition",
									"scope": 4029,
									"src": "73699:433:0",
									"visibility": "public"
								},
								{
									"canonicalName": "FundRegistry.Donation",
									"id": 3461,
									"members": [
										{
											"constant": false,
											"id": 3456,
											"mutability": "mutable",
											"name": "user",
											"nameLocation": "74172:4:0",
											"nodeType": "VariableDeclaration",
											"scope": 3461,
											"src": "74164:12:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3455,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "74164:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3458,
											"mutability": "mutable",
											"name": "fundId",
											"nameLocation": "74193:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 3461,
											"src": "74186:13:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 3457,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "74186:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3460,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "74217:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 3461,
											"src": "74209:14:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 3459,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "74209:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Donation",
									"nameLocation": "74145:8:0",
									"nodeType": "StructDefinition",
									"scope": 4029,
									"src": "74138:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "1f71f89f",
									"id": 3466,
									"mutability": "mutable",
									"name": "funds",
									"nameLocation": "74268:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 4029,
									"src": "74237:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
										"typeString": "mapping(uint96 => struct FundRegistry.Fund)"
									},
									"typeName": {
										"id": 3465,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3462,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "74245:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										},
										"nodeType": "Mapping",
										"src": "74237:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
											"typeString": "mapping(uint96 => struct FundRegistry.Fund)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3464,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3463,
												"name": "Fund",
												"nameLocations": [
													"74255:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3454,
												"src": "74255:4:0"
											},
											"referencedDeclaration": 3454,
											"src": "74255:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Fund_$3454_storage_ptr",
												"typeString": "struct FundRegistry.Fund"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2f14670c",
									"id": 3471,
									"mutability": "mutable",
									"name": "fundUsers",
									"nameLocation": "74315:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 4029,
									"src": "74279:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint96_$_t_array$_t_address_$dyn_storage_$",
										"typeString": "mapping(uint96 => address[])"
									},
									"typeName": {
										"id": 3470,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3467,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "74287:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										},
										"nodeType": "Mapping",
										"src": "74279:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint96_$_t_array$_t_address_$dyn_storage_$",
											"typeString": "mapping(uint96 => address[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 3468,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "74297:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"id": 3469,
											"nodeType": "ArrayTypeName",
											"src": "74297:9:0",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "7a3819cb",
									"id": 3479,
									"mutability": "mutable",
									"name": "fundDonations",
									"nameLocation": "74387:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 4029,
									"src": "74330:70:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$_$",
										"typeString": "mapping(uint96 => mapping(address => struct FundRegistry.Donation[]))"
									},
									"typeName": {
										"id": 3478,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3472,
											"name": "uint96",
											"nodeType": "ElementaryTypeName",
											"src": "74338:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											}
										},
										"nodeType": "Mapping",
										"src": "74330:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$_$",
											"typeString": "mapping(uint96 => mapping(address => struct FundRegistry.Donation[]))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3477,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 3473,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "74356:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "74348:30:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$",
												"typeString": "mapping(address => struct FundRegistry.Donation[])"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"baseType": {
													"id": 3475,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 3474,
														"name": "Donation",
														"nameLocations": [
															"74367:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3461,
														"src": "74367:8:0"
													},
													"referencedDeclaration": 3461,
													"src": "74367:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Donation_$3461_storage_ptr",
														"typeString": "struct FundRegistry.Donation"
													}
												},
												"id": 3476,
												"nodeType": "ArrayTypeName",
												"src": "74367:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_ptr",
													"typeString": "struct FundRegistry.Donation[]"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "1e216cc18d3e93f7c7b9a7b3a038093bc655d3d5cbfbb504d67d4376bd02d13f",
									"id": 3495,
									"name": "FundCreated",
									"nameLocation": "74415:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3494,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3481,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "74451:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74436:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3480,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "74436:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3483,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "74471:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74463:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74463:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3485,
												"indexed": false,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "74495:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74487:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74487:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3487,
												"indexed": true,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "74527:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74511:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74511:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3489,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "74563:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74547:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3488,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3491,
												"indexed": false,
												"mutability": "mutable",
												"name": "isEnd",
												"nameLocation": "74585:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74580:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3490,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "74580:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3493,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "74605:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3495,
												"src": "74600:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3492,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "74600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74426:189:0"
									},
									"src": "74409:207:0"
								},
								{
									"anonymous": false,
									"eventSelector": "603e97a48f8cadd1e9020bf96470c32853c5d9d8ed30f7cbe961f12ad2a45fa0",
									"id": 3511,
									"name": "FundUpdated",
									"nameLocation": "74627:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3497,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "74663:2:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74648:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3496,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "74648:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3499,
												"indexed": false,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "74684:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74676:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74676:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3501,
												"indexed": false,
												"mutability": "mutable",
												"name": "payee",
												"nameLocation": "74708:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74700:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "74700:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3503,
												"indexed": true,
												"mutability": "mutable",
												"name": "threshold",
												"nameLocation": "74740:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74724:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74724:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3505,
												"indexed": true,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "74776:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74760:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74760:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3507,
												"indexed": false,
												"mutability": "mutable",
												"name": "isEnd",
												"nameLocation": "74798:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74793:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 3506,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "74793:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3509,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "74819:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3511,
												"src": "74814:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3508,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "74814:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74638:191:0"
									},
									"src": "74621:209:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3512,
										"nodeType": "StructuredDocumentation",
										"src": "74835:49:0",
										"text": "@notice Emitted when a donation has been made"
									},
									"eventSelector": "cd79837f8e8f598de24ef07ea60108df97918f95cfc31d1d61ff9fa09c240352",
									"id": 3520,
									"name": "FundCompletion",
									"nameLocation": "74895:14:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3514,
												"indexed": true,
												"mutability": "mutable",
												"name": "FundId",
												"nameLocation": "74934:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3520,
												"src": "74919:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3513,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "74919:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3516,
												"indexed": false,
												"mutability": "mutable",
												"name": "donationAmount",
												"nameLocation": "74958:14:0",
												"nodeType": "VariableDeclaration",
												"scope": 3520,
												"src": "74950:22:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3515,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74950:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3518,
												"indexed": false,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "74990:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 3520,
												"src": "74982:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3517,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "74982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "74909:91:0"
									},
									"src": "74889:112:0"
								},
								{
									"body": {
										"id": 3571,
										"nodeType": "Block",
										"src": "75119:406:0",
										"statements": [
											{
												"assignments": [
													3530
												],
												"declarations": [
													{
														"constant": false,
														"id": 3530,
														"mutability": "mutable",
														"name": "_id",
														"nameLocation": "75136:3:0",
														"nodeType": "VariableDeclaration",
														"scope": 3571,
														"src": "75129:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														},
														"typeName": {
															"id": 3529,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "75129:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3532,
												"initialValue": {
													"id": 3531,
													"name": "fundCount",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3426,
													"src": "75142:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "75129:22:0"
											},
											{
												"expression": {
													"id": 3554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3533,
															"name": "funds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "75161:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
															}
														},
														"id": 3535,
														"indexExpression": {
															"id": 3534,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3530,
															"src": "75167:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "75161:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_storage",
															"typeString": "struct FundRegistry.Fund storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3537,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3530,
																"src": "75192:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 3538,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3522,
																"src": "75210:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3541,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "75238:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3542,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "75244:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "75238:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "75231:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3539,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "75231:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3543,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75231:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3546,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "75276:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3547,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "75282:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "75276:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3545,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "75269:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3544,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "75269:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3548,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75269:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															{
																"id": 3549,
																"name": "_payee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3524,
																"src": "75307:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3550,
																"name": "_threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3526,
																"src": "75327:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "30",
																"id": 3551,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75351:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "66616c7365",
																"id": 3552,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "75366:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3536,
															"name": "Fund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "75174:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Fund_$3454_storage_ptr_$",
																"typeString": "type(struct FundRegistry.Fund storage pointer)"
															}
														},
														"id": 3553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "75174:207:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
															"typeString": "struct FundRegistry.Fund memory"
														}
													},
													"src": "75161:220:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fund_$3454_storage",
														"typeString": "struct FundRegistry.Fund storage ref"
													}
												},
												"id": 3555,
												"nodeType": "ExpressionStatement",
												"src": "75161:220:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3557,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3530,
															"src": "75426:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 3558,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3522,
															"src": "75431:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3559,
															"name": "_payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3524,
															"src": "75439:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3560,
															"name": "_threshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3526,
															"src": "75447:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "30",
															"id": 3561,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75459:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"hexValue": "66616c7365",
															"id": 3562,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75462:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														},
														{
															"expression": {
																"id": 3563,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "75469:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3564,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "75475:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "75469:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3556,
														"name": "FundCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3495,
														"src": "75414:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (uint96,address,address,uint256,uint256,bool,uint256)"
														}
													},
													"id": 3565,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75414:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3566,
												"nodeType": "EmitStatement",
												"src": "75409:76:0"
											},
											{
												"expression": {
													"id": 3569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3567,
														"name": "fundCount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3426,
														"src": "75504:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 3568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "75517:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "75504:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 3570,
												"nodeType": "ExpressionStatement",
												"src": "75504:14:0"
											}
										]
									},
									"functionSelector": "17444626",
									"id": 3572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createFund",
									"nameLocation": "75016:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3522,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "75044:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "75036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3524,
												"mutability": "mutable",
												"name": "_payee",
												"nameLocation": "75068:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "75060:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3526,
												"mutability": "mutable",
												"name": "_threshold",
												"nameLocation": "75092:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3572,
												"src": "75084:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75084:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75026:82:0"
									},
									"returnParameters": {
										"id": 3528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75119:0:0"
									},
									"scope": 4029,
									"src": "75007:518:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3694,
										"nodeType": "Block",
										"src": "75641:864:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 3588,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 3584,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3574,
																		"src": "75676:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 3585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "75683:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"expression": {
																		"id": 3582,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3424,
																		"src": "75660:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC1155_$2811",
																			"typeString": "contract ERC1155"
																		}
																	},
																	"id": 3583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "75666:9:0",
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1880,
																	"src": "75660:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view external returns (uint256)"
																	}
																},
																"id": 3586,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "75660:25:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 3587,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3578,
																"src": "75688:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "75660:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20616d6f756e74206f662075736572206e6f742073756666696369656e74",
															"id": 3589,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75697:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb",
																"typeString": "literal_string \"token amount of user not sufficient\""
															},
															"value": "token amount of user not sufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6fa61cf96df3b71f169c994c6903be799e9f2c830cb7cf043aeac62b8c7062fb",
																"typeString": "literal_string \"token amount of user not sufficient\""
															}
														],
														"id": 3581,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "75652:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3590,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75652:84:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3591,
												"nodeType": "ExpressionStatement",
												"src": "75652:84:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 3595,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3574,
																	"src": "75777:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 3598,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "75792:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_FundRegistry_$4029",
																				"typeString": "contract FundRegistry"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_FundRegistry_$4029",
																				"typeString": "contract FundRegistry"
																			}
																		],
																		"id": 3597,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "75784:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 3596,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "75784:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 3599,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "75784:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 3593,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3424,
																	"src": "75754:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC1155_$2811",
																		"typeString": "contract ERC1155"
																	}
																},
																"id": 3594,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "75760:16:0",
																"memberName": "isApprovedForAll",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1983,
																"src": "75754:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view external returns (bool)"
																}
															},
															"id": 3600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75754:45:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "746f6b656e20616c6c6f77616e63652073686f7274616765",
															"id": 3601,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75801:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc",
																"typeString": "literal_string \"token allowance shortage\""
															},
															"value": "token allowance shortage"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_55589554793692837f7a718104d20c4e92186457af87acf83d93e0a8604a16cc",
																"typeString": "literal_string \"token allowance shortage\""
															}
														],
														"id": 3592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "75746:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3602,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75746:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3603,
												"nodeType": "ExpressionStatement",
												"src": "75746:82:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3607,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3574,
															"src": "75861:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 3610,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "75876:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_FundRegistry_$4029",
																		"typeString": "contract FundRegistry"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_FundRegistry_$4029",
																		"typeString": "contract FundRegistry"
																	}
																],
																"id": 3609,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "75868:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 3608,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "75868:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 3611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "75868:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "30",
															"id": 3612,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75883:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3613,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3578,
															"src": "75886:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "307830",
															"id": 3614,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "75895:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																"typeString": "literal_string \"0x0\""
															},
															"value": "0x0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																"typeString": "literal_string \"0x0\""
															}
														],
														"expression": {
															"id": 3604,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3424,
															"src": "75838:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC1155_$2811",
																"typeString": "contract ERC1155"
															}
														},
														"id": 3606,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "75844:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2027,
														"src": "75838:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,bytes memory) external"
														}
													},
													"id": 3615,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75838:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3616,
												"nodeType": "ExpressionStatement",
												"src": "75838:63:0"
											},
											{
												"assignments": [
													3619
												],
												"declarations": [
													{
														"constant": false,
														"id": 3619,
														"mutability": "mutable",
														"name": "newDonation",
														"nameLocation": "75937:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 3694,
														"src": "75921:27:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Donation_$3461_memory_ptr",
															"typeString": "struct FundRegistry.Donation"
														},
														"typeName": {
															"id": 3618,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3617,
																"name": "Donation",
																"nameLocations": [
																	"75921:8:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3461,
																"src": "75921:8:0"
															},
															"referencedDeclaration": 3461,
															"src": "75921:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$3461_storage_ptr",
																"typeString": "struct FundRegistry.Donation"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3625,
												"initialValue": {
													"arguments": [
														{
															"id": 3621,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3574,
															"src": "75973:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3622,
															"name": "_fundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3576,
															"src": "75992:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 3623,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3578,
															"src": "76013:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3620,
														"name": "Donation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3461,
														"src": "75951:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Donation_$3461_storage_ptr_$",
															"typeString": "type(struct FundRegistry.Donation storage pointer)"
														}
													},
													"id": 3624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "75951:79:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Donation_$3461_memory_ptr",
														"typeString": "struct FundRegistry.Donation memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "75921:109:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3632,
															"name": "newDonation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3619,
															"src": "76075:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$3461_memory_ptr",
																"typeString": "struct FundRegistry.Donation memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Donation_$3461_memory_ptr",
																"typeString": "struct FundRegistry.Donation memory"
															}
														],
														"expression": {
															"baseExpression": {
																"baseExpression": {
																	"id": 3626,
																	"name": "fundDonations",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3479,
																	"src": "76040:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$_$",
																		"typeString": "mapping(uint96 => mapping(address => struct FundRegistry.Donation storage ref[] storage ref))"
																	}
																},
																"id": 3629,
																"indexExpression": {
																	"id": 3627,
																	"name": "_fundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "76054:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "76040:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct FundRegistry.Donation storage ref[] storage ref)"
																}
															},
															"id": 3630,
															"indexExpression": {
																"id": 3628,
																"name": "_user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3574,
																"src": "76063:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "76040:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Donation_$3461_storage_$dyn_storage",
																"typeString": "struct FundRegistry.Donation storage ref[] storage ref"
															}
														},
														"id": 3631,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "76070:4:0",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "76040:34:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_ptr_$_t_struct$_Donation_$3461_storage_$returns$__$attached_to$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct FundRegistry.Donation storage ref[] storage pointer,struct FundRegistry.Donation storage ref)"
														}
													},
													"id": 3633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76040:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3634,
												"nodeType": "ExpressionStatement",
												"src": "76040:47:0"
											},
											{
												"expression": {
													"id": 3645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 3635,
																"name": "funds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3466,
																"src": "76097:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																	"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																}
															},
															"id": 3637,
															"indexExpression": {
																"id": 3636,
																"name": "_fundId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3576,
																"src": "76103:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "76097:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fund_$3454_storage",
																"typeString": "struct FundRegistry.Fund storage ref"
															}
														},
														"id": 3638,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "76112:14:0",
														"memberName": "donationAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3451,
														"src": "76097:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 3644,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"baseExpression": {
																	"id": 3639,
																	"name": "funds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3466,
																	"src": "76129:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																		"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																	}
																},
																"id": 3641,
																"indexExpression": {
																	"id": 3640,
																	"name": "_fundId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3576,
																	"src": "76135:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "76129:14:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fund_$3454_storage",
																	"typeString": "struct FundRegistry.Fund storage ref"
																}
															},
															"id": 3642,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "76144:14:0",
															"memberName": "donationAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3451,
															"src": "76129:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 3643,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3578,
															"src": "76161:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "76129:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76097:71:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 3646,
												"nodeType": "ExpressionStatement",
												"src": "76097:71:0"
											},
											{
												"assignments": [
													3651
												],
												"declarations": [
													{
														"constant": false,
														"id": 3651,
														"mutability": "mutable",
														"name": "_fundUsers",
														"nameLocation": "76197:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 3694,
														"src": "76179:28:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3649,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "76179:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3650,
															"nodeType": "ArrayTypeName",
															"src": "76179:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3655,
												"initialValue": {
													"baseExpression": {
														"id": 3652,
														"name": "fundUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3471,
														"src": "76210:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint96_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint96 => address[] storage ref)"
														}
													},
													"id": 3654,
													"indexExpression": {
														"id": 3653,
														"name": "_fundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3576,
														"src": "76220:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "76210:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76179:49:0"
											},
											{
												"assignments": [
													3657
												],
												"declarations": [
													{
														"constant": false,
														"id": 3657,
														"mutability": "mutable",
														"name": "isAdd",
														"nameLocation": "76244:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3694,
														"src": "76239:10:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 3656,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "76239:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3659,
												"initialValue": {
													"hexValue": "74727565",
													"id": 3658,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "76252:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "76239:17:0"
											},
											{
												"body": {
													"id": 3683,
													"nodeType": "Block",
													"src": "76312:120:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 3675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 3671,
																		"name": "_fundUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3651,
																		"src": "76330:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 3673,
																	"indexExpression": {
																		"id": 3672,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3661,
																		"src": "76341:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "76330:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 3674,
																	"name": "_user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3574,
																	"src": "76347:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "76330:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3682,
															"nodeType": "IfStatement",
															"src": "76326:96:0",
															"trueBody": {
																"id": 3681,
																"nodeType": "Block",
																"src": "76353:69:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3678,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3676,
																				"name": "isAdd",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3657,
																				"src": "76371:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "66616c7365",
																				"id": 3677,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "76379:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			},
																			"src": "76371:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 3679,
																		"nodeType": "ExpressionStatement",
																		"src": "76371:13:0"
																	},
																	{
																		"id": 3680,
																		"nodeType": "Break",
																		"src": "76402:5:0"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3664,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3661,
														"src": "76285:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3665,
															"name": "_fundUsers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3651,
															"src": "76289:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[] storage pointer"
															}
														},
														"id": 3666,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "76300:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "76289:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76285:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3684,
												"initializationExpression": {
													"assignments": [
														3661
													],
													"declarations": [
														{
															"constant": false,
															"id": 3661,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "76278:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3684,
															"src": "76271:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"typeName": {
																"id": 3660,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "76271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3663,
													"initialValue": {
														"hexValue": "30",
														"id": 3662,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "76282:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "76271:12:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3669,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "76308:3:0",
														"subExpression": {
															"id": 3668,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3661,
															"src": "76308:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"id": 3670,
													"nodeType": "ExpressionStatement",
													"src": "76308:3:0"
												},
												"nodeType": "ForStatement",
												"src": "76266:166:0"
											},
											{
												"condition": {
													"id": 3685,
													"name": "isAdd",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3657,
													"src": "76445:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3693,
												"nodeType": "IfStatement",
												"src": "76441:57:0",
												"trueBody": {
													"id": 3692,
													"nodeType": "Block",
													"src": "76451:47:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3689,
																		"name": "_user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3574,
																		"src": "76481:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"id": 3686,
																		"name": "_fundUsers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3651,
																		"src": "76465:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[] storage pointer"
																		}
																	},
																	"id": 3688,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "76476:4:0",
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"src": "76465:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																		"typeString": "function (address[] storage pointer,address)"
																	}
																},
																"id": 3690,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76465:22:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3691,
															"nodeType": "ExpressionStatement",
															"src": "76465:22:0"
														}
													]
												}
											}
										]
									},
									"id": 3695,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createDonation",
									"nameLocation": "75540:14:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3574,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "75572:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3695,
												"src": "75564:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3573,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "75564:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3576,
												"mutability": "mutable",
												"name": "_fundId",
												"nameLocation": "75594:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3695,
												"src": "75587:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3575,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "75587:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3578,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "75619:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3695,
												"src": "75611:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "75611:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "75554:78:0"
									},
									"returnParameters": {
										"id": 3580,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "75641:0:0"
									},
									"scope": 4029,
									"src": "75531:974:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3714,
										"nodeType": "Block",
										"src": "76614:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 3705,
															"name": "_user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3697,
															"src": "76670:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3706,
															"name": "_fundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3699,
															"src": "76677:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 3707,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3701,
															"src": "76686:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3704,
														"name": "createDonation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3695,
														"src": "76655:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint96_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint96,uint256)"
														}
													},
													"id": 3708,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76655:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3709,
												"nodeType": "ExpressionStatement",
												"src": "76655:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3711,
															"name": "_fundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3699,
															"src": "76718:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3710,
														"name": "validateFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3772,
														"src": "76704:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint96_$returns$__$",
															"typeString": "function (uint96)"
														}
													},
													"id": 3712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "76704:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3713,
												"nodeType": "ExpressionStatement",
												"src": "76704:22:0"
											}
										]
									},
									"functionSelector": "88b53ced",
									"id": 3715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "donate",
									"nameLocation": "76520:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3702,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3697,
												"mutability": "mutable",
												"name": "_user",
												"nameLocation": "76544:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "76536:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "76536:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3699,
												"mutability": "mutable",
												"name": "_fundId",
												"nameLocation": "76566:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "76559:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3698,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "76559:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3701,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "76591:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3715,
												"src": "76583:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3700,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "76583:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76526:78:0"
									},
									"returnParameters": {
										"id": 3703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76614:0:0"
									},
									"scope": 4029,
									"src": "76511:222:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3771,
										"nodeType": "Block",
										"src": "76787:667:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 3720,
																"name": "funds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3466,
																"src": "76808:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																	"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																}
															},
															"id": 3722,
															"indexExpression": {
																"id": 3721,
																"name": "_fundIdx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3717,
																"src": "76814:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "76808:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fund_$3454_storage",
																"typeString": "struct FundRegistry.Fund storage ref"
															}
														},
														"id": 3723,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "76824:9:0",
														"memberName": "threshold",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3449,
														"src": "76808:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 3724,
																"name": "funds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3466,
																"src": "76836:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																	"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																}
															},
															"id": 3726,
															"indexExpression": {
																"id": 3725,
																"name": "_fundIdx",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3717,
																"src": "76842:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "76836:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fund_$3454_storage",
																"typeString": "struct FundRegistry.Fund storage ref"
															}
														},
														"id": 3727,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "76852:14:0",
														"memberName": "donationAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3451,
														"src": "76836:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "76808:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3770,
												"nodeType": "IfStatement",
												"src": "76805:632:0",
												"trueBody": {
													"id": 3769,
													"nodeType": "Block",
													"src": "76868:569:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3734,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "76955:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FundRegistry_$4029",
																					"typeString": "contract FundRegistry"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FundRegistry_$4029",
																					"typeString": "contract FundRegistry"
																				}
																			],
																			"id": 3733,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "76947:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3732,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "76947:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3735,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76947:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 3737,
																				"name": "_fundIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3717,
																				"src": "76975:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			],
																			"id": 3736,
																			"name": "getFundPayee",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4028,
																			"src": "76962:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_uint96_$returns$_t_address_$",
																				"typeString": "function (uint96) view returns (address)"
																			}
																		},
																		"id": 3738,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "76962:22:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"hexValue": "30",
																		"id": 3739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "76986:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3740,
																				"name": "funds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3466,
																				"src": "76989:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																					"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																				}
																			},
																			"id": 3742,
																			"indexExpression": {
																				"id": 3741,
																				"name": "_fundIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3717,
																				"src": "76995:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "76989:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Fund_$3454_storage",
																				"typeString": "struct FundRegistry.Fund storage ref"
																			}
																		},
																		"id": 3743,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "77005:14:0",
																		"memberName": "donationAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3451,
																		"src": "76989:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "307830",
																		"id": 3744,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "77021:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																			"typeString": "literal_string \"0x0\""
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																			"typeString": "literal_string \"0x0\""
																		}
																	],
																	"expression": {
																		"id": 3729,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3424,
																		"src": "76924:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC1155_$2811",
																			"typeString": "contract ERC1155"
																		}
																	},
																	"id": 3731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "76930:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2027,
																	"src": "76924:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 3745,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "76924:103:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3746,
															"nodeType": "ExpressionStatement",
															"src": "76924:103:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 3748,
																		"name": "_fundIdx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3717,
																		"src": "77101:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"expression": {
																			"baseExpression": {
																				"id": 3749,
																				"name": "funds",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3466,
																				"src": "77127:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																					"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																				}
																			},
																			"id": 3751,
																			"indexExpression": {
																				"id": 3750,
																				"name": "_fundIdx",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3717,
																				"src": "77133:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "77127:15:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Fund_$3454_storage",
																				"typeString": "struct FundRegistry.Fund storage ref"
																			}
																		},
																		"id": 3752,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "77143:14:0",
																		"memberName": "donationAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 3451,
																		"src": "77127:30:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"expression": {
																			"id": 3753,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "77175:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3754,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "77181:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "77175:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3747,
																	"name": "FundCompletion",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3520,
																	"src": "77069:14:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint96,uint256,uint256)"
																	}
																},
																"id": 3755,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "77069:135:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3756,
															"nodeType": "EmitStatement",
															"src": "77064:140:0"
														},
														{
															"expression": {
																"id": 3762,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 3757,
																			"name": "funds",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3466,
																			"src": "77218:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																				"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																			}
																		},
																		"id": 3759,
																		"indexExpression": {
																			"id": 3758,
																			"name": "_fundIdx",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3717,
																			"src": "77224:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "77218:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Fund_$3454_storage",
																			"typeString": "struct FundRegistry.Fund storage ref"
																		}
																	},
																	"id": 3760,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "77234:5:0",
																	"memberName": "isEnd",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 3453,
																	"src": "77218:21:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 3761,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "77242:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "77218:28:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3763,
															"nodeType": "ExpressionStatement",
															"src": "77218:28:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 3765,
																		"name": "_fundIdx",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3717,
																		"src": "77316:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"hexValue": "31303030",
																		"id": 3766,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "77326:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		},
																		"value": "1000"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_rational_1000_by_1",
																			"typeString": "int_const 1000"
																		}
																	],
																	"id": 3764,
																	"name": "mintDTiket",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3868,
																	"src": "77305:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_uint96_$_t_uint96_$returns$__$",
																		"typeString": "function (uint96,uint96)"
																	}
																},
																"id": 3767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "77305:26:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3768,
															"nodeType": "ExpressionStatement",
															"src": "77305:26:0"
														}
													]
												}
											}
										]
									},
									"id": 3772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "validateFunds",
									"nameLocation": "76748:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3718,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3717,
												"mutability": "mutable",
												"name": "_fundIdx",
												"nameLocation": "76769:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 3772,
												"src": "76762:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3716,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "76762:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "76761:17:0"
									},
									"returnParameters": {
										"id": 3719,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "76787:0:0"
									},
									"scope": 4029,
									"src": "76739:715:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 3867,
										"nodeType": "Block",
										"src": "77523:740:0",
										"statements": [
											{
												"assignments": [
													3780
												],
												"declarations": [
													{
														"constant": false,
														"id": 3780,
														"mutability": "mutable",
														"name": "donationAmount",
														"nameLocation": "77541:14:0",
														"nodeType": "VariableDeclaration",
														"scope": 3867,
														"src": "77533:22:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3779,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "77533:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3785,
												"initialValue": {
													"expression": {
														"baseExpression": {
															"id": 3781,
															"name": "funds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "77558:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
															}
														},
														"id": 3783,
														"indexExpression": {
															"id": 3782,
															"name": "_fundId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3774,
															"src": "77564:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "77558:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_storage",
															"typeString": "struct FundRegistry.Fund storage ref"
														}
													},
													"id": 3784,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "77573:14:0",
													"memberName": "donationAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3451,
													"src": "77558:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "77533:54:0"
											},
											{
												"assignments": [
													3790
												],
												"declarations": [
													{
														"constant": false,
														"id": 3790,
														"mutability": "mutable",
														"name": "userAddresses",
														"nameLocation": "77614:13:0",
														"nodeType": "VariableDeclaration",
														"scope": 3867,
														"src": "77597:30:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
															"typeString": "address[]"
														},
														"typeName": {
															"baseType": {
																"id": 3788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "77597:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 3789,
															"nodeType": "ArrayTypeName",
															"src": "77597:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																"typeString": "address[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3794,
												"initialValue": {
													"baseExpression": {
														"id": 3791,
														"name": "fundUsers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3471,
														"src": "77630:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint96_$_t_array$_t_address_$dyn_storage_$",
															"typeString": "mapping(uint96 => address[] storage ref)"
														}
													},
													"id": 3793,
													"indexExpression": {
														"id": 3792,
														"name": "_fundId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3774,
														"src": "77640:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "77630:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage",
														"typeString": "address[] storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "77597:51:0"
											},
											{
												"assignments": [
													3796
												],
												"declarations": [
													{
														"constant": false,
														"id": 3796,
														"mutability": "mutable",
														"name": "userTotal",
														"nameLocation": "77734:9:0",
														"nodeType": "VariableDeclaration",
														"scope": 3867,
														"src": "77726:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 3795,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "77726:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3797,
												"nodeType": "VariableDeclarationStatement",
												"src": "77726:17:0"
											},
											{
												"body": {
													"id": 3865,
													"nodeType": "Block",
													"src": "77802:455:0",
													"statements": [
														{
															"expression": {
																"id": 3811,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 3809,
																	"name": "userTotal",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3796,
																	"src": "77846:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "30",
																	"id": 3810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "77857:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "77846:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 3812,
															"nodeType": "ExpressionStatement",
															"src": "77846:12:0"
														},
														{
															"body": {
																"id": 3843,
																"nodeType": "Block",
																"src": "77952:108:0",
																"statements": [
																	{
																		"expression": {
																			"id": 3841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 3830,
																				"name": "userTotal",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3796,
																				"src": "77978:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"baseExpression": {
																						"baseExpression": {
																							"baseExpression": {
																								"id": 3831,
																								"name": "fundDonations",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3479,
																								"src": "77991:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$_$",
																									"typeString": "mapping(uint96 => mapping(address => struct FundRegistry.Donation storage ref[] storage ref))"
																								}
																							},
																							"id": 3833,
																							"indexExpression": {
																								"id": 3832,
																								"name": "_fundId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3774,
																								"src": "78005:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint96",
																									"typeString": "uint96"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "77991:22:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$",
																								"typeString": "mapping(address => struct FundRegistry.Donation storage ref[] storage ref)"
																							}
																						},
																						"id": 3837,
																						"indexExpression": {
																							"baseExpression": {
																								"id": 3834,
																								"name": "userAddresses",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3790,
																								"src": "78014:13:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																									"typeString": "address[] memory"
																								}
																							},
																							"id": 3836,
																							"indexExpression": {
																								"id": 3835,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 3799,
																								"src": "78028:1:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint96",
																									"typeString": "uint96"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "78014:16:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "77991:40:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_array$_t_struct$_Donation_$3461_storage_$dyn_storage",
																							"typeString": "struct FundRegistry.Donation storage ref[] storage ref"
																						}
																					},
																					"id": 3839,
																					"indexExpression": {
																						"id": 3838,
																						"name": "k",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3814,
																						"src": "78032:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint96",
																							"typeString": "uint96"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "77991:43:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Donation_$3461_storage",
																						"typeString": "struct FundRegistry.Donation storage ref"
																					}
																				},
																				"id": 3840,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "78035:6:0",
																				"memberName": "amount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 3460,
																				"src": "77991:50:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "77978:63:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 3842,
																		"nodeType": "ExpressionStatement",
																		"src": "77978:63:0"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 3826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 3817,
																	"name": "k",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3814,
																	"src": "77895:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"baseExpression": {
																			"baseExpression": {
																				"id": 3818,
																				"name": "fundDonations",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3479,
																				"src": "77899:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint96_$_t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$_$",
																					"typeString": "mapping(uint96 => mapping(address => struct FundRegistry.Donation storage ref[] storage ref))"
																				}
																			},
																			"id": 3820,
																			"indexExpression": {
																				"id": 3819,
																				"name": "_fundId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3774,
																				"src": "77913:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "77899:22:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Donation_$3461_storage_$dyn_storage_$",
																				"typeString": "mapping(address => struct FundRegistry.Donation storage ref[] storage ref)"
																			}
																		},
																		"id": 3824,
																		"indexExpression": {
																			"baseExpression": {
																				"id": 3821,
																				"name": "userAddresses",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3790,
																				"src": "77922:13:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																					"typeString": "address[] memory"
																				}
																			},
																			"id": 3823,
																			"indexExpression": {
																				"id": 3822,
																				"name": "j",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 3799,
																				"src": "77936:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint96",
																					"typeString": "uint96"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "77922:16:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "77899:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Donation_$3461_storage_$dyn_storage",
																			"typeString": "struct FundRegistry.Donation storage ref[] storage ref"
																		}
																	},
																	"id": 3825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "77940:6:0",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "77899:47:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "77895:51:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 3844,
															"initializationExpression": {
																"assignments": [
																	3814
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 3814,
																		"mutability": "mutable",
																		"name": "k",
																		"nameLocation": "77888:1:0",
																		"nodeType": "VariableDeclaration",
																		"scope": 3844,
																		"src": "77881:8:0",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"typeName": {
																			"id": 3813,
																			"name": "uint96",
																			"nodeType": "ElementaryTypeName",
																			"src": "77881:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 3816,
																"initialValue": {
																	"hexValue": "30",
																	"id": 3815,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "77892:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "77881:12:0"
															},
															"loopExpression": {
																"expression": {
																	"id": 3828,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "77948:3:0",
																	"subExpression": {
																		"id": 3827,
																		"name": "k",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3814,
																		"src": "77948:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint96",
																		"typeString": "uint96"
																	}
																},
																"id": 3829,
																"nodeType": "ExpressionStatement",
																"src": "77948:3:0"
															},
															"nodeType": "ForStatement",
															"src": "77876:184:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 3850,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "78108:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_FundRegistry_$4029",
																					"typeString": "contract FundRegistry"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_FundRegistry_$4029",
																					"typeString": "contract FundRegistry"
																				}
																			],
																			"id": 3849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "78100:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 3848,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "78100:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 3851,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "78100:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"baseExpression": {
																			"id": 3852,
																			"name": "userAddresses",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3790,
																			"src": "78115:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																				"typeString": "address[] memory"
																			}
																		},
																		"id": 3854,
																		"indexExpression": {
																			"id": 3853,
																			"name": "j",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3799,
																			"src": "78129:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "78115:16:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 3855,
																		"name": "_fundId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3774,
																		"src": "78133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 3861,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 3858,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 3856,
																						"name": "userTotal",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3796,
																						"src": "78143:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 3857,
																						"name": "totalTicket",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 3776,
																						"src": "78155:11:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint96",
																							"typeString": "uint96"
																						}
																					},
																					"src": "78143:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 3859,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "78142:25:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 3860,
																			"name": "donationAmount",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3780,
																			"src": "78170:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "78142:42:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"hexValue": "307830",
																		"id": 3862,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "78186:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																			"typeString": "literal_string \"0x0\""
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_77b7d82d931e1a403db0240b08c0716665eec4664af617c457918e4a67bc1810",
																			"typeString": "literal_string \"0x0\""
																		}
																	],
																	"expression": {
																		"id": 3845,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3424,
																		"src": "78077:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_ERC1155_$2811",
																			"typeString": "contract ERC1155"
																		}
																	},
																	"id": 3847,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "78083:16:0",
																	"memberName": "safeTransferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2027,
																	"src": "78077:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (address,address,uint256,uint256,bytes memory) external"
																	}
																},
																"id": 3863,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78077:116:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 3864,
															"nodeType": "ExpressionStatement",
															"src": "78077:116:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3802,
														"name": "j",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3799,
														"src": "77772:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 3803,
															"name": "userAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3790,
															"src": "77776:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																"typeString": "address[] memory"
															}
														},
														"id": 3804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "77790:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "77776:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "77772:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3866,
												"initializationExpression": {
													"assignments": [
														3799
													],
													"declarations": [
														{
															"constant": false,
															"id": 3799,
															"mutability": "mutable",
															"name": "j",
															"nameLocation": "77765:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 3866,
															"src": "77758:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"typeName": {
																"id": 3798,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "77758:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3801,
													"initialValue": {
														"hexValue": "30",
														"id": 3800,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "77769:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "77758:12:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "77798:3:0",
														"subExpression": {
															"id": 3806,
															"name": "j",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3799,
															"src": "77798:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"id": 3808,
													"nodeType": "ExpressionStatement",
													"src": "77798:3:0"
												},
												"nodeType": "ForStatement",
												"src": "77753:504:0"
											}
										]
									},
									"functionSelector": "11c9fb83",
									"id": 3868,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mintDTiket",
									"nameLocation": "77469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3774,
												"mutability": "mutable",
												"name": "_fundId",
												"nameLocation": "77487:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "77480:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3773,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "77480:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3776,
												"mutability": "mutable",
												"name": "totalTicket",
												"nameLocation": "77503:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 3868,
												"src": "77496:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3775,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "77496:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "77479:36:0"
									},
									"returnParameters": {
										"id": 3778,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77523:0:0"
									},
									"scope": 4029,
									"src": "77460:803:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 3930,
										"nodeType": "Block",
										"src": "78400:481:0",
										"statements": [
											{
												"assignments": [
													3881
												],
												"declarations": [
													{
														"constant": false,
														"id": 3881,
														"mutability": "mutable",
														"name": "_fund",
														"nameLocation": "78422:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 3930,
														"src": "78410:17:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
															"typeString": "struct FundRegistry.Fund"
														},
														"typeName": {
															"id": 3880,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 3879,
																"name": "Fund",
																"nameLocations": [
																	"78410:4:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3454,
																"src": "78410:4:0"
															},
															"referencedDeclaration": 3454,
															"src": "78410:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Fund_$3454_storage_ptr",
																"typeString": "struct FundRegistry.Fund"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3885,
												"initialValue": {
													"baseExpression": {
														"id": 3882,
														"name": "funds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3466,
														"src": "78430:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
															"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
														}
													},
													"id": 3884,
													"indexExpression": {
														"id": 3883,
														"name": "_id",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3870,
														"src": "78436:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "78430:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fund_$3454_storage",
														"typeString": "struct FundRegistry.Fund storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "78410:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 3891,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 3887,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "78458:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 3888,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "78462:6:0",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "78458:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 3889,
																	"name": "_fund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3881,
																	"src": "78472:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																		"typeString": "struct FundRegistry.Fund memory"
																	}
																},
																"id": 3890,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "78478:5:0",
																"memberName": "owner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3441,
																"src": "78472:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "78458:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "46756e6420557064617465206e6f7420617574686f72697a6564",
															"id": 3892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "78485:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49",
																"typeString": "literal_string \"Fund Update not authorized\""
															},
															"value": "Fund Update not authorized"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c079fafe3b513171c4ed764f320f4d2bdbf16ba98115bafeb4af6f3ae1dc3b49",
																"typeString": "literal_string \"Fund Update not authorized\""
															}
														],
														"id": 3886,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "78450:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78450:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3894,
												"nodeType": "ExpressionStatement",
												"src": "78450:64:0"
											},
											{
												"expression": {
													"id": 3915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 3895,
															"name": "funds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "78524:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
															}
														},
														"id": 3897,
														"indexExpression": {
															"id": 3896,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3870,
															"src": "78530:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "78524:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_storage",
															"typeString": "struct FundRegistry.Fund storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3899,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3870,
																"src": "78555:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															{
																"id": 3900,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3872,
																"src": "78573:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"expression": {
																	"id": 3901,
																	"name": "_fund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3881,
																	"src": "78594:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																		"typeString": "struct FundRegistry.Fund memory"
																	}
																},
																"id": 3902,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "78600:9:0",
																"memberName": "createdAt",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3443,
																"src": "78594:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															{
																"arguments": [
																	{
																		"expression": {
																			"id": 3905,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "78631:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 3906,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "78637:9:0",
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "78631:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3904,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "78624:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 3903,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "78624:6:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 3907,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "78624:23:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																}
															},
															{
																"id": 3908,
																"name": "_payee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3874,
																"src": "78662:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 3909,
																"name": "_threshold",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3876,
																"src": "78683:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3910,
																	"name": "_fund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3881,
																	"src": "78708:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																		"typeString": "struct FundRegistry.Fund memory"
																	}
																},
																"id": 3911,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "78714:14:0",
																"memberName": "donationAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3451,
																"src": "78708:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 3912,
																	"name": "_fund",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 3881,
																	"src": "78742:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																		"typeString": "struct FundRegistry.Fund memory"
																	}
																},
																"id": 3913,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "78748:5:0",
																"memberName": "isEnd",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3453,
																"src": "78742:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																{
																	"typeIdentifier": "t_uint48",
																	"typeString": "uint48"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															],
															"id": 3898,
															"name": "Fund",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3454,
															"src": "78537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Fund_$3454_storage_ptr_$",
																"typeString": "type(struct FundRegistry.Fund storage pointer)"
															}
														},
														"id": 3914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "78537:226:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
															"typeString": "struct FundRegistry.Fund memory"
														}
													},
													"src": "78524:239:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Fund_$3454_storage",
														"typeString": "struct FundRegistry.Fund storage ref"
													}
												},
												"id": 3916,
												"nodeType": "ExpressionStatement",
												"src": "78524:239:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 3918,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3870,
															"src": "78790:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														{
															"id": 3919,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3872,
															"src": "78795:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3920,
															"name": "_payee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3874,
															"src": "78803:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 3921,
															"name": "_threshold",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3876,
															"src": "78811:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3922,
																"name": "_fund",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3881,
																"src": "78823:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																	"typeString": "struct FundRegistry.Fund memory"
																}
															},
															"id": 3923,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "78829:14:0",
															"memberName": "donationAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3451,
															"src": "78823:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 3924,
																"name": "_fund",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3881,
																"src": "78845:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																	"typeString": "struct FundRegistry.Fund memory"
																}
															},
															"id": 3925,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "78851:5:0",
															"memberName": "isEnd",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3453,
															"src": "78845:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"expression": {
																"id": 3926,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "78858:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 3927,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "78864:9:0",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "78858:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3917,
														"name": "FundUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3511,
														"src": "78778:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint96_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bool_$_t_uint256_$returns$__$",
															"typeString": "function (uint96,address,address,uint256,uint256,bool,uint256)"
														}
													},
													"id": 3928,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78778:96:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3929,
												"nodeType": "EmitStatement",
												"src": "78773:101:0"
											}
										]
									},
									"functionSelector": "dd7d7929",
									"id": 3931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateFund",
									"nameLocation": "78278:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3870,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "78305:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 3931,
												"src": "78298:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3869,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "78298:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3872,
												"mutability": "mutable",
												"name": "_owner",
												"nameLocation": "78326:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3931,
												"src": "78318:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78318:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3874,
												"mutability": "mutable",
												"name": "_payee",
												"nameLocation": "78350:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 3931,
												"src": "78342:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "78342:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3876,
												"mutability": "mutable",
												"name": "_threshold",
												"nameLocation": "78374:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 3931,
												"src": "78366:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "78366:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78288:102:0"
									},
									"returnParameters": {
										"id": 3878,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78400:0:0"
									},
									"scope": 4029,
									"src": "78269:612:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 3943,
										"nodeType": "Block",
										"src": "78951:46:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "30",
															"id": 3939,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "78977:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"id": 3940,
															"name": "fundCount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3426,
															"src": "78980:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3938,
														"name": "getFunds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4008,
														"src": "78968:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint96_$_t_uint96_$returns$_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint96,uint96) view returns (struct FundRegistry.Fund memory[] memory)"
														}
													},
													"id": 3941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "78968:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct FundRegistry.Fund memory[] memory"
													}
												},
												"functionReturnParameters": 3937,
												"id": 3942,
												"nodeType": "Return",
												"src": "78961:29:0"
											}
										]
									},
									"functionSelector": "1c69b464",
									"id": 3944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAllFunds",
									"nameLocation": "78900:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "78911:2:0"
									},
									"returnParameters": {
										"id": 3937,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3936,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3944,
												"src": "78937:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct FundRegistry.Fund[]"
												},
												"typeName": {
													"baseType": {
														"id": 3934,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3933,
															"name": "Fund",
															"nameLocations": [
																"78937:4:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3454,
															"src": "78937:4:0"
														},
														"referencedDeclaration": 3454,
														"src": "78937:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_storage_ptr",
															"typeString": "struct FundRegistry.Fund"
														}
													},
													"id": 3935,
													"nodeType": "ArrayTypeName",
													"src": "78937:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Fund_$3454_storage_$dyn_storage_ptr",
														"typeString": "struct FundRegistry.Fund[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "78936:15:0"
									},
									"scope": 4029,
									"src": "78891:106:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4007,
										"nodeType": "Block",
										"src": "79088:341:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 3958,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3956,
																"name": "_endId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3948,
																"src": "79106:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3957,
																"name": "fundCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3426,
																"src": "79116:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "79106:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206265205f656e644964203c3d2066756e64436f756e74",
															"id": 3959,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "79127:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388",
																"typeString": "literal_string \"Must be _endId <= fundCount\""
															},
															"value": "Must be _endId <= fundCount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e32fc28fc8fd98f6510c72d67ef18c23487b2549b96546927be86adbe2011388",
																"typeString": "literal_string \"Must be _endId <= fundCount\""
															}
														],
														"id": 3955,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "79098:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3960,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79098:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3961,
												"nodeType": "ExpressionStatement",
												"src": "79098:59:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 3965,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3963,
																"name": "_startId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3946,
																"src": "79175:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 3964,
																"name": "_endId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3948,
																"src": "79187:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "79175:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206265205f73746172744964203c3d205f656e644964",
															"id": 3966,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "79195:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08",
																"typeString": "literal_string \"Must be _startId <= _endId\""
															},
															"value": "Must be _startId <= _endId"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_66b0a4ec64b6021895bf7c4bf30ab0c25bc3cead633d636a062745ef91ac5f08",
																"typeString": "literal_string \"Must be _startId <= _endId\""
															}
														],
														"id": 3962,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "79167:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 3967,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79167:57:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 3968,
												"nodeType": "ExpressionStatement",
												"src": "79167:57:0"
											},
											{
												"assignments": [
													3973
												],
												"declarations": [
													{
														"constant": false,
														"id": 3973,
														"mutability": "mutable",
														"name": "fundList",
														"nameLocation": "79248:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 4007,
														"src": "79234:22:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
															"typeString": "struct FundRegistry.Fund[]"
														},
														"typeName": {
															"baseType": {
																"id": 3971,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3970,
																	"name": "Fund",
																	"nameLocations": [
																		"79234:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3454,
																	"src": "79234:4:0"
																},
																"referencedDeclaration": 3454,
																"src": "79234:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fund_$3454_storage_ptr",
																	"typeString": "struct FundRegistry.Fund"
																}
															},
															"id": 3972,
															"nodeType": "ArrayTypeName",
															"src": "79234:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Fund_$3454_storage_$dyn_storage_ptr",
																"typeString": "struct FundRegistry.Fund[]"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 3982,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 3980,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 3978,
																"name": "_endId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3948,
																"src": "79270:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 3979,
																"name": "_startId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3946,
																"src": "79279:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "79270:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														],
														"id": 3977,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "79259:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct FundRegistry.Fund memory[] memory)"
														},
														"typeName": {
															"baseType": {
																"id": 3975,
																"nodeType": "UserDefinedTypeName",
																"pathNode": {
																	"id": 3974,
																	"name": "Fund",
																	"nameLocations": [
																		"79263:4:0"
																	],
																	"nodeType": "IdentifierPath",
																	"referencedDeclaration": 3454,
																	"src": "79263:4:0"
																},
																"referencedDeclaration": 3454,
																"src": "79263:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fund_$3454_storage_ptr",
																	"typeString": "struct FundRegistry.Fund"
																}
															},
															"id": 3976,
															"nodeType": "ArrayTypeName",
															"src": "79263:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Fund_$3454_storage_$dyn_storage_ptr",
																"typeString": "struct FundRegistry.Fund[]"
															}
														}
													},
													"id": 3981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79259:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct FundRegistry.Fund memory[] memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "79234:54:0"
											},
											{
												"body": {
													"id": 4003,
													"nodeType": "Block",
													"src": "79340:58:0",
													"statements": [
														{
															"expression": {
																"id": 4001,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 3993,
																		"name": "fundList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3973,
																		"src": "79354:8:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
																			"typeString": "struct FundRegistry.Fund memory[] memory"
																		}
																	},
																	"id": 3997,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		},
																		"id": 3996,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 3994,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3984,
																			"src": "79363:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 3995,
																			"name": "_startId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 3946,
																			"src": "79367:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint96",
																				"typeString": "uint96"
																			}
																		},
																		"src": "79363:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "79354:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																		"typeString": "struct FundRegistry.Fund memory"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 3998,
																		"name": "funds",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3466,
																		"src": "79379:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																			"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
																		}
																	},
																	"id": 4000,
																	"indexExpression": {
																		"id": 3999,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3984,
																		"src": "79385:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint96",
																			"typeString": "uint96"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "79379:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Fund_$3454_storage",
																		"typeString": "struct FundRegistry.Fund storage ref"
																	}
																},
																"src": "79354:33:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Fund_$3454_memory_ptr",
																	"typeString": "struct FundRegistry.Fund memory"
																}
															},
															"id": 4002,
															"nodeType": "ExpressionStatement",
															"src": "79354:33:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													},
													"id": 3989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3987,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3984,
														"src": "79324:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 3988,
														"name": "_endId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3948,
														"src": "79328:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "79324:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4004,
												"initializationExpression": {
													"assignments": [
														3984
													],
													"declarations": [
														{
															"constant": false,
															"id": 3984,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "79310:1:0",
															"nodeType": "VariableDeclaration",
															"scope": 4004,
															"src": "79303:8:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"typeName": {
																"id": 3983,
																"name": "uint96",
																"nodeType": "ElementaryTypeName",
																"src": "79303:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 3986,
													"initialValue": {
														"id": 3985,
														"name": "_startId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3946,
														"src": "79314:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "79303:19:0"
												},
												"loopExpression": {
													"expression": {
														"id": 3991,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "79336:3:0",
														"subExpression": {
															"id": 3990,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3984,
															"src": "79336:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"id": 3992,
													"nodeType": "ExpressionStatement",
													"src": "79336:3:0"
												},
												"nodeType": "ForStatement",
												"src": "79298:100:0"
											},
											{
												"expression": {
													"id": 4005,
													"name": "fundList",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3973,
													"src": "79414:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
														"typeString": "struct FundRegistry.Fund memory[] memory"
													}
												},
												"functionReturnParameters": 3954,
												"id": 4006,
												"nodeType": "Return",
												"src": "79407:15:0"
											}
										]
									},
									"functionSelector": "380eaaf9",
									"id": 4008,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFunds",
									"nameLocation": "79012:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3946,
												"mutability": "mutable",
												"name": "_startId",
												"nameLocation": "79028:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 4008,
												"src": "79021:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3945,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "79021:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3948,
												"mutability": "mutable",
												"name": "_endId",
												"nameLocation": "79045:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 4008,
												"src": "79038:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 3947,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "79038:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79020:32:0"
									},
									"returnParameters": {
										"id": 3954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3953,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4008,
												"src": "79074:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_struct$_Fund_$3454_memory_ptr_$dyn_memory_ptr",
													"typeString": "struct FundRegistry.Fund[]"
												},
												"typeName": {
													"baseType": {
														"id": 3951,
														"nodeType": "UserDefinedTypeName",
														"pathNode": {
															"id": 3950,
															"name": "Fund",
															"nameLocations": [
																"79074:4:0"
															],
															"nodeType": "IdentifierPath",
															"referencedDeclaration": 3454,
															"src": "79074:4:0"
														},
														"referencedDeclaration": 3454,
														"src": "79074:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_storage_ptr",
															"typeString": "struct FundRegistry.Fund"
														}
													},
													"id": 3952,
													"nodeType": "ArrayTypeName",
													"src": "79074:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_struct$_Fund_$3454_storage_$dyn_storage_ptr",
														"typeString": "struct FundRegistry.Fund[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79073:15:0"
									},
									"scope": 4029,
									"src": "79003:426:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4027,
										"nodeType": "Block",
										"src": "79502:101:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															},
															"id": 4018,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4016,
																"name": "_id",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4010,
																"src": "79520:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 4017,
																"name": "fundCount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3426,
																"src": "79526:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															},
															"src": "79520:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4d757374206265205f6964203c2066756e64436f756e74",
															"id": 4019,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "79537:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496",
																"typeString": "literal_string \"Must be _id < fundCount\""
															},
															"value": "Must be _id < fundCount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ae4862f248526eeefe0ba4ac0c5638b2692e86579d4f71e4cc0a4204b3621496",
																"typeString": "literal_string \"Must be _id < fundCount\""
															}
														],
														"id": 4015,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "79512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 4020,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "79512:51:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4021,
												"nodeType": "ExpressionStatement",
												"src": "79512:51:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 4022,
															"name": "funds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3466,
															"src": "79580:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint96_$_t_struct$_Fund_$3454_storage_$",
																"typeString": "mapping(uint96 => struct FundRegistry.Fund storage ref)"
															}
														},
														"id": 4024,
														"indexExpression": {
															"id": 4023,
															"name": "_id",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4010,
															"src": "79586:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint96",
																"typeString": "uint96"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "79580:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Fund_$3454_storage",
															"typeString": "struct FundRegistry.Fund storage ref"
														}
													},
													"id": 4025,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "79591:5:0",
													"memberName": "payee",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3447,
													"src": "79580:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 4014,
												"id": 4026,
												"nodeType": "Return",
												"src": "79573:23:0"
											}
										]
									},
									"functionSelector": "6c173d38",
									"id": 4028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getFundPayee",
									"nameLocation": "79448:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4010,
												"mutability": "mutable",
												"name": "_id",
												"nameLocation": "79468:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 4028,
												"src": "79461:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 4009,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "79461:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79460:12:0"
									},
									"returnParameters": {
										"id": 4014,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4013,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4028,
												"src": "79494:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "79494:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "79493:9:0"
									},
									"scope": 4029,
									"src": "79439:164:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 4030,
							"src": "73542:6065:0",
							"usedErrors": [],
							"usedEvents": [
								3495,
								3511,
								3520
							]
						}
					],
					"src": "162:79445:0"
				},
				"id": 0
			}
		}
	}
}